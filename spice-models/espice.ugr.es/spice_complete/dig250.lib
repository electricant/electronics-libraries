*  Digital Library: 74AS250 -
* ----------------------------------------------------------- 74AS250 ------
*  1-Of-16 Data Generators/Multiplexers With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-289 to 2-292
*  bss    3/23/94
*
.SUBCKT 74AS250  GBAR A B C D E0 E1 E2 E3 E4 E5 E6 E7 E8 E9
+     E10 E11 E12 E13 E14 E15 W
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(20,1) DPWR DGND
+     A B C D E0 E1 E2 E3 E4 E5 E6 E7 E8 E9 E10 E11 E12 E13 E14 E15
+     W_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     dbar = {~D}
+     e0o = {E0 & abar & bbar & cbar & dbar}
+     e1o = {E1 & A & bbar & cbar & dbar}
+     e2o = {E2 & abar & B & cbar & dbar}
+     e3o = {E3 & A & B & cbar & dbar}
+     e4o = {E4 & abar & bbar & C & dbar}
+     e5o = {E5 & A & bbar & C & dbar}
+     e6o = {E6 & abar & B & C & dbar}
+     e7o = {E7 & A & B & C & dbar}
+     e8o = {E8 & abar & bbar & cbar & D}
+     e9o = {E9 & A & bbar & cbar & D}
+     e10o = {E10 & abar & B & cbar & D}
+     e11o = {E11 & A & B & cbar & D}
+     e12o = {E12 & abar & bbar & C & D}
+     e13o = {E13 & A & bbar & C & D}
+     e14o = {E14 & abar & B & C & D}
+     e15o = {E15 & A & B & C & D}
+     W_O = {~(e0o | e1o | e2o | e3o | e4o | e5o | e6o | e7o | e8o |
+           e9o | e10o | e11o | e12o | e13o | e14o | e15o)}

U2DLY PINDLY(1,1,20) DWPR DGND
+     W_O
+     GBAR
+     A B C D E0 E1 E2 E3 E4 E5 E6 E7 E8 E9 E10 E11 E12 E13 E14 E15
+     W
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(E0,0) | CHANGED(E1,0) | CHANGED(E2,0) | CHANGED(E3,0) |
+          CHANGED(E4,0) | CHANGED(E5,0) | CHANGED(E6,0) | CHANGED(E7,0) |
+          CHANGED(E8,0) | CHANGED(E9,0) | CHANGED(E10,0) | CHANGED(E11,0) |
+          CHANGED(E12,0) | CHANGED(E13,0) | CHANGED(E14,0) | CHANGED(E15,0)}
+     SELECT = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0) | CHANGED(D,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     W = {
+       CASE(
+         SELECT & TRN_LH, DELAY(4ns,-1,13ns),
+         SELECT & TRN_HL, DELAY(4ns,-1,10ns),
+         DATA & TRN_LH, DELAY(3ns,-1,8ns),
+         DATA & TRN_HL, DELAY(2ns,-1,6ns),
+         TRN_ZH, DELAY(2ns,-1,7ns),
+         TRN_ZL, DELAY(4ns,-1,20ns),
+         TRN_HZ, DELAY(2ns,-1,6ns),
+         TRN_LZ, DELAY(2ns,-1,6ns),
+         DELAY(5ns,-1,21ns))}

.ENDS 74AS250
*
*
* ----------------------------------------------------------- 74251 ------
*  Data Selectors/Multiplexers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-715 to 2-722
*  bss    3/23/94
*
.SUBCKT 74251  GBAR A B C D0 D1 D2 D3 D4 D5 D6 D7 Y W
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     GBAR A B C D0 D1 D2 D3 D4 D5 D6 D7
+     Y_O W_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     g = {~GBAR}
+     d0o = {D0 & abar & bbar & cbar & g}
+     d1o = {D1 & A & bbar & cbar & g}
+     d2o = {D2 & abar & B & cbar & g}
+     d3o = {D3 & A & B & cbar & g}
+     d4o = {D4 & abar & bbar & C & g}
+     d5o = {D5 & A & bbar & C & g}
+     d6o = {D6 & abar & B & C & g}
+     d7o = {D7 & A & B & C & g}
+     W_O = {~(d0o | d1o | d2o | d3o | d4o | d5o | d6o | d7o)}
+     Y_O = {~W_O}

U2DLY PINDLY(2,1,11) DPWR DGND
+     Y_O W_O
+     GBAR
+     A B C D0 D1 D2 D3 D4 D5 D6 D7
+     Y W
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+         CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+     SELECT = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,29ns,45ns),
+         SELECT & TRN_HL, DELAY(-1,28ns,45ns),
+         TRN_ZH, DELAY(-1,17ns,27ns),
+         TRN_ZL, DELAY(-1,26ns,40ns),
+         DATA & TRN_LH, DELAY(-1,17ns,28ns),
+         DATA & TRN_HL, DELAY(-1,18ns,28ns),
+         TRN_HZ, DELAY(-1,5ns,8ns),
+         TRN_LZ, DELAY(-1,15ns,23ns),
+         DELAY(-1,30ns,46ns))}
+
+     W = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,20ns,33ns),
+         SELECT & TRN_HL, DELAY(-1,21ns,33ns),
+         TRN_ZH, DELAY(-1,17ns,27ns),
+         TRN_ZL, DELAY(-1,24ns,40ns),
+         DATA & TRN_LH, DELAY(-1,10ns,15ns),
+         DATA & TRN_HL, DELAY(-1,9ns,15ns),
+         TRN_HZ, DELAY(-1,5ns,8ns),
+         TRN_LZ, DELAY(-1,15ns,23ns),
+         DELAY(-1,25ns,41ns))}

.ENDS 74251
*
*
* ----------------------------------------------------------- 74AC251 ------
*  8-Input Multiplexer With Tri-State Output
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-142 to 4-147
*  bss    3/24/94
*
.SUBCKT 74AC251  OEBAR S0 S1 S2 I0 I1 I2 I3 I4 I5 I6 I7 Z ZBAR
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     OEBAR S0 S1 S2 I0 I1 I2 I3 I4 I5 I6 I7
+     Z_O ZBAR_O
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     s2bar = {~S2}
+     oe = {~OEBAR}
+     i0o = {I0 & s0bar & s1bar & s2bar & oe}
+     i1o = {I1 & S0 & s1bar & s2bar & oe}
+     i2o = {I2 & s0bar & S1 & s2bar & oe}
+     i3o = {I3 & S0 & S1 & s2bar & oe}
+     i4o = {I4 & s0bar & s1bar & S2 & oe}
+     i5o = {I5 & S0 & s1bar & S2 & oe}
+     i6o = {I6 & s0bar & S1 & S2 & oe}
+     i7o = {I7 & S0 & S1 & S2 & oe}
+     ZBAR_O = {~(i0o | i1o | i2o | i3o | i4o | i5o | i6o | i7o)}
+     Z_O = {~ZBAR_O}

U2DLY PINDLY(2,1,11) DPWR DGND
+     Z_O ZBAR_O
+     OEBAR
+     S0 S1 S2 I0 I1 I2 I3 I4 I5 I6 I7
+     Z ZBAR
+     IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(I0,0) | CHANGED(I1,0) | CHANGED(I2,0) | CHANGED(I3,0) |
+         CHANGED(I4,0) | CHANGED(I5,0) | CHANGED(I6,0) | CHANGED(I7,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     Z ZBAR = {
+       CASE(
+         SELECT & TRN_LH, DELAY(1.5ns,8.5ns,12.5ns),
+         SELECT & TRN_HL, DELAY(1.5ns,8ns,12.5ns),
+         TRN_ZH, DELAY(1.5ns,5.5ns,8ns),
+         TRN_ZL, DELAY(1.5ns,5.5ns,8ns),
+         DATA & TRN_LH, DELAY(1.5ns,7ns,10ns),
+         DATA & TRN_HL, DELAY(1.5ns,6.5ns,10ns),
+         TRN_HZ, DELAY(1.5ns,7ns,9.5ns),
+         TRN_LZ, DELAY(1.5ns,5.5ns,8ns),
+         DELAY(2.5ns,9.5ns,13.5ns))}

.ENDS 74AC251
*
*
* ----------------------------------------------------------- 74ACT251 ------
*  8-Input Multiplexer With Tri-State Output
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-142 to 4-147
*  bss    3/24/94
*
.SUBCKT 74ACT251  OEBAR S0 S1 S2 I0 I1 I2 I3 I4 I5 I6 I7 Z ZBAR
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     OEBAR S0 S1 S2 I0 I1 I2 I3 I4 I5 I6 I7
+     Z_O ZBAR_O
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     s2bar = {~S2}
+     oe = {~OEBAR}
+     i0o = {I0 & s0bar & s1bar & s2bar & oe}
+     i1o = {I1 & S0 & s1bar & s2bar & oe}
+     i2o = {I2 & s0bar & S1 & s2bar & oe}
+     i3o = {I3 & S0 & S1 & s2bar & oe}
+     i4o = {I4 & s0bar & s1bar & S2 & oe}
+     i5o = {I5 & S0 & s1bar & S2 & oe}
+     i6o = {I6 & s0bar & S1 & S2 & oe}
+     i7o = {I7 & S0 & S1 & S2 & oe}
+     ZBAR_O = {~(i0o | i1o | i2o | i3o | i4o | i5o | i6o | i7o)}
+     Z_O = {~ZBAR_O}

U2DLY PINDLY(2,1,11) DPWR DGND
+     Z_O ZBAR_O
+     OEBAR
+     S0 S1 S2 I0 I1 I2 I3 I4 I5 I6 I7
+     Z ZBAR
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(I0,0) | CHANGED(I1,0) | CHANGED(I2,0) | CHANGED(I3,0) |
+         CHANGED(I4,0) | CHANGED(I5,0) | CHANGED(I6,0) | CHANGED(I7,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     Z ZBAR = {
+       CASE(
+         SELECT & TRN_LH, DELAY(2.5ns,7ns,15.5ns),
+         SELECT & TRN_HL, DELAY(2.5ns,7.5ns,16.5ns),
+         TRN_ZH, DELAY(1.5ns,5ns,8.5ns),
+         TRN_ZL, DELAY(1.5ns,4.5ns,8.5ns),
+         DATA & TRN_LH, DELAY(2.5ns,5.5ns,12ns),
+         DATA & TRN_HL, DELAY(2.5ns,6.5ns,12.5ns),
+         TRN_HZ, DELAY(2ns,6ns,12ns),
+         TRN_LZ, DELAY(3ns,4.5ns,8.5ns),
+         DELAY(4ns,8.5ns,17.5ns))}

.ENDS 74ACT251
*
*
* ----------------------------------------------------------- 74ALS251 ------
*  1-Of-8 Data Selectors/Multiplexers With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-293 to 2-298
*  bss    3/24/94
*
.SUBCKT 74ALS251  GBAR A B C D0 D1 D2 D3 D4 D5 D6 D7 Y W
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     GBAR A B C D0 D1 D2 D3 D4 D5 D6 D7
+     Y_O W_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     g = {~GBAR}
+     d0o = {D0 & abar & bbar & cbar & g}
+     d1o = {D1 & A & bbar & cbar & g}
+     d2o = {D2 & abar & B & cbar & g}
+     d3o = {D3 & A & B & cbar & g}
+     d4o = {D4 & abar & bbar & C & g}
+     d5o = {D5 & A & bbar & C & g}
+     d6o = {D6 & abar & B & C & g}
+     d7o = {D7 & A & B & C & g}
+     W_O = {~(d0o | d1o | d2o | d3o | d4o | d5o | d6o | d7o)}
+     Y_O = {~W_O}

U2DLY PINDLY(2,1,11) DPWR DGND
+     Y_O W_O
+     GBAR
+     A B C D0 D1 D2 D3 D4 D5 D6 D7
+     Y W
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+         CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+     SELECT = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(5ns,-1,18ns),
+         SELECT & TRN_HL, DELAY(8ns,-1,24ns),
+         TRN_ZH, DELAY(3ns,-1,15ns),
+         TRN_ZL, DELAY(3ns,-1,15ns),
+         DATA & TRN_LH, DELAY(2ns,-1,10ns),
+         DATA & TRN_HL, DELAY(3ns,-1,15ns),
+         TRN_HZ, DELAY(2ns,-1,10ns),
+         TRN_LZ, DELAY(1ns,-1,10ns),
+         DELAY(9ns,-1,25ns))}
+
+     W = {
+       CASE(
+         SELECT & TRN_LH, DELAY(8ns,-1,24ns),
+         SELECT & TRN_HL, DELAY(7ns,-1,23ns),
+         TRN_ZH, DELAY(3ns,-1,15ns),
+         TRN_ZL, DELAY(3ns,-1,15ns),
+         DATA & TRN_LH, DELAY(3ns,-1,15ns),
+         DATA & TRN_HL, DELAY(3ns,-1,15ns),
+         TRN_HZ, DELAY(2ns,-1,10ns),
+         TRN_LZ, DELAY(1ns,-1,10ns),
+         DELAY(9ns,-1,25ns))}

.ENDS 74ALS251
*
*
* ----------------------------------------------------------- 74AS251 ------
*  1-Of-8 Data Selectors/Multiplexers With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-293 to 2-298
*  bss    3/24/94
*
.SUBCKT 74AS251  GBAR A B C D0 D1 D2 D3 D4 D5 D6 D7 Y W
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     GBAR A B C D0 D1 D2 D3 D4 D5 D6 D7
+     Y_O W_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     g = {~GBAR}
+     d0o = {D0 & abar & bbar & cbar & g}
+     d1o = {D1 & A & bbar & cbar & g}
+     d2o = {D2 & abar & B & cbar & g}
+     d3o = {D3 & A & B & cbar & g}
+     d4o = {D4 & abar & bbar & C & g}
+     d5o = {D5 & A & bbar & C & g}
+     d6o = {D6 & abar & B & C & g}
+     d7o = {D7 & A & B & C & g}
+     W_O = {~(d0o | d1o | d2o | d3o | d4o | d5o | d6o | d7o)}
+     Y_O = {~W_O}

U2DLY PINDLY(2,1,11) DPWR DGND
+     Y_O W_O
+     GBAR
+     A B C D0 D1 D2 D3 D4 D5 D6 D7
+     Y W
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+         CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+     SELECT = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     Y = {
+       CASE(
+         TRN_ZH, DELAY(-1,5ns,-1),
+         TRN_ZL, DELAY(-1,6ns,-1),
+         TRN_HZ, DELAY(-1,3ns,-1),
+         TRN_LZ, DELAY(-1,4ns,-1),
+         SELECT, DELAY(-1,5ns,-1),
+         DATA & TRN_LH, DELAY(-1,3ns,-1),
+         DATA & TRN_HL, DELAY(-1,4ns,-1),
+         DELAY(-1,7ns,-1))}
+
+     W = {
+       CASE(
+         TRN_ZH, DELAY(-1,5ns,-1),
+         TRN_ZL, DELAY(-1,6ns,-1),
+         TRN_HZ, DELAY(-1,3ns,-1),
+         TRN_LZ, DELAY(-1,4ns,-1),
+         SELECT, DELAY(-1,4.5ns,-1),
+         DATA & TRN_LH, DELAY(-1,3ns,-1),
+         DATA & TRN_HL, DELAY(-1,2.5ns,-1),
+         DELAY(-1,7ns,-1))}

.ENDS 74AS251
*
*
* ----------------------------------------------------------- 74F251 ------
*  8-Input Multiplexer With Tri-State Output
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 339 to 343
*  bss    3/24/94
*
.SUBCKT 74F251  OEBAR S0 S1 S2 I0 I1 I2 I3 I4 I5 I6 I7 Y YBAR
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     OEBAR S0 S1 S2 I0 I1 I2 I3 I4 I5 I6 I7
+     Y_O YBAR_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     s2bar = {~S2}
+     oe = {~OEBAR}
+     i0o = {I0 & s0bar & s1bar & s2bar & oe}
+     i1o = {I1 & S0 & s1bar & s2bar & oe}
+     i2o = {I2 & s0bar & S1 & s2bar & oe}
+     i3o = {I3 & S0 & S1 & s2bar & oe}
+     i4o = {I4 & s0bar & s1bar & S2 & oe}
+     i5o = {I5 & S0 & s1bar & S2 & oe}
+     i6o = {I6 & s0bar & S1 & S2 & oe}
+     i7o = {I7 & S0 & S1 & S2 & oe}
+     YBAR_O = {~(i0o | i1o | i2o | i3o | i4o | i5o | i6o | i7o)}
+     Y_O = {~YBAR_O}

U2DLY PINDLY(2,1,11) DPWR DGND
+     Y_O YBAR_O
+     OEBAR
+     S0 S1 S2 I0 I1 I2 I3 I4 I5 I6 I7
+     Y YBAR
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(I0,0) | CHANGED(I1,0) | CHANGED(I2,0) | CHANGED(I3,0) |
+         CHANGED(I4,0) | CHANGED(I5,0) | CHANGED(I6,0) | CHANGED(I7,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(4ns,7ns,9.5ns),
+         SELECT & TRN_HL, DELAY(4ns,7ns,9ns),
+         TRN_ZH, DELAY(4ns,6.5ns,10ns),
+         TRN_ZL, DELAY(4ns,5.5ns,8ns),
+         DATA & TRN_LH, DELAY(3ns,4ns,6ns),
+         DATA & TRN_HL, DELAY(3ns,4.5ns,6.5ns),
+         TRN_HZ, DELAY(2.5ns,4ns,6.5ns),
+         TRN_LZ, DELAY(3ns,4ns,6.5ns),
+         DELAY(5ns,8ns,11ns))}
+
+     YBAR = {
+       CASE(
+         SELECT & TRN_LH, DELAY(3.5ns,6ns,9ns),
+         SELECT & TRN_HL, DELAY(1.5ns,5ns,7.5ns),
+         TRN_ZH, DELAY(4ns,5.5ns,8ns),
+         TRN_ZL, DELAY(4ns,5.5ns,8ns),
+         DATA & TRN_LH, DELAY(2.5ns,4ns,6ns),
+         DATA & TRN_HL, DELAY(1ns,2ns,4ns),
+         TRN_HZ, DELAY(2.5ns,4ns,6ns),
+         TRN_LZ, DELAY(2ns,4ns,6.5ns),
+         DELAY(5ns,7ns,10ns))}

.ENDS 74F251
*
*
* ----------------------------------------------------------- 74F251A ------
*  8-Input Multiplexer With Tri-State Output
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 339 to 343
*  bss    3/24/94
*
.SUBCKT 74F251A  OEBAR S0 S1 S2 I0 I1 I2 I3 I4 I5 I6 I7 Y YBAR
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     OEBAR S0 S1 S2 I0 I1 I2 I3 I4 I5 I6 I7
+     Y_O YBAR_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     s2bar = {~S2}
+     oe = {~OEBAR}
+     i0o = {I0 & s0bar & s1bar & s2bar & oe}
+     i1o = {I1 & S0 & s1bar & s2bar & oe}
+     i2o = {I2 & s0bar & S1 & s2bar & oe}
+     i3o = {I3 & S0 & S1 & s2bar & oe}
+     i4o = {I4 & s0bar & s1bar & S2 & oe}
+     i5o = {I5 & S0 & s1bar & S2 & oe}
+     i6o = {I6 & s0bar & S1 & S2 & oe}
+     i7o = {I7 & S0 & S1 & S2 & oe}
+     YBAR_O = {~(i0o | i1o | i2o | i3o | i4o | i5o | i6o | i7o)}
+     Y_O = {~YBAR_O}

U2DLY PINDLY(2,1,11) DPWR DGND
+     Y_O YBAR_O
+     OEBAR
+     S0 S1 S2 I0 I1 I2 I3 I4 I5 I6 I7
+     Y YBAR
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(I0,0) | CHANGED(I1,0) | CHANGED(I2,0) | CHANGED(I3,0) |
+         CHANGED(I4,0) | CHANGED(I5,0) | CHANGED(I6,0) | CHANGED(I7,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(4.5ns,6.5ns,10ns),
+         SELECT & TRN_HL, DELAY(4ns,5.5ns,9ns),
+         TRN_ZH, DELAY(3.5ns,5.5ns,7.5ns),
+         TRN_ZL, DELAY(3.5ns,5ns,7.5ns),
+         TRN_HZ, DELAY(2.5ns,4ns,6.5ns),
+         TRN_LZ, DELAY(1ns,4ns,6ns),
+         DATA, DELAY(3ns,5ns,7ns),
+         DELAY(5.5ns,7.5ns,11ns))}
+
+     YBAR = {
+       CASE(
+         SELECT & TRN_LH, DELAY(3.5ns,6ns,9ns),
+         SELECT & TRN_HL, DELAY(2.5ns,4.5ns,7ns),
+         TRN_ZH, DELAY(2.5ns,4ns,6.5ns),
+         TRN_ZL, DELAY(2.5ns,4ns,6.5ns),
+         DATA & TRN_LH, DELAY(2.5ns,4.5ns,7ns),
+         DATA & TRN_HL, DELAY(1ns,2.5ns,5ns),
+         TRN_HZ, DELAY(3.5ns,5ns,7.5ns),
+         TRN_LZ, DELAY(1ns,2ns,4.5ns),
+         DELAY(4.5ns,7ns,10ns))}

.ENDS 74F251A

*-------------------------------------------------------------74F251B-------

* 1 of 8 Data Selectors/Multiplexers with 3-State Outputs
* TI F Logic Data Book, 1994, pages 2-181 to 2-185
* jat 7/2/96

.SUBCKT 74F251B GBAR A B C D0 D1 D2 D3 D4 D5 D6 D7 Y W
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(11,2) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 A B C
+ YO WO
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   AND0 = {D0 & (~A) & (~B) & (~C)}
+   AND1 = {D1 & (A) & (~B) & (~C)}
+   AND2 = {D2 & (~A) & (B) & (~C)}
+   AND3 = {D3 & (A) & (B) & (~C)}
+   AND4 = {D4 & (~A) & (~B) & (C)}
+   AND5 = {D5 & (A) & (~B) & (C)}
+   AND6 = {D6 & (~A) & (B) & (C)}
+   AND7 = {D7 & (A) & (B) & (C)}
+   YO = {AND0 | AND1 | AND2 | AND3 | AND4 | AND5 | AND6 | AND7}
+   WO = {~YO}

U2 PINDLY(2,1,11) DPWR DGND
+ YO WO
+ GBAR
+ A B C D0 D1 D2 D3 D4 D5 D6 D7
+ Y W
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+           CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+   SELECT = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0)}
+ TRISTATE:
+   ENABLE LO = GBAR
+    Y = {
+      CASE(
+         TRN_ZH, DELAY(3.4NS,4.8NS,7NS),
+         TRN_ZL, DELAY(2.9NS,4NS,7.5NS),
+         TRN_HZ, DELAY(1.9NS,2.5NS,5.5NS),
+         TRN_LZ, DELAY(1NS,2.3NS,4.5NS),
+         SELECT & TRN_LH, DELAY(4.5NS,6.2NS,10.5NS),
+         SELECT & TRN_HL, DELAY(4NS,6NS,8.5NS),
+         DATA & TRN_LH, DELAY(3NS,3.8NS,7NS),
+         DATA & TRN_HL, DELAY(3NS,4.5NS,7NS),
+         DELAY(5.5NS,7.2NS,11.5NS))}
+    W = {
+      CASE(
+         TRN_ZH, DELAY(2.5NS,3.6NS,6NS),
+         TRN_ZL, DELAY(2.5NS,3.8NS,6NS),
+         TRN_HZ, DELAY(1.9NS,2.5NS,5.5NS),
+         TRN_LZ, DELAY(1NS,2.4NS,4.5NS),
+         SELECT & TRN_LH, DELAY(3.5NS,5.4NS,9NS),
+         SELECT & TRN_HL, DELAY(2.5NS,4.4NS,7.5NS),
+         DATA & TRN_LH, DELAY(2.5NS,3.7NS,6.5NS),
+         DATA & TRN_HL, DELAY(1NS,1.9NS,4NS),
+         DELAY(4.5NS,6.4NS,10NS))}

.ENDS 74F251B

*
*
* ----------------------------------------------------------- 74HC251 ------
*  Data Selectors/Multiplexers With 3-State Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-343 to 2-347
*  bss    3/24/94
*
.SUBCKT 74HC251  GBAR A B C D0 D1 D2 D3 D4 D5 D6 D7 Y W
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     GBAR A B C D0 D1 D2 D3 D4 D5 D6 D7
+     Y_O W_O
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     g = {~GBAR}
+     d0o = {D0 & abar & bbar & cbar & g}
+     d1o = {D1 & A & bbar & cbar & g}
+     d2o = {D2 & abar & B & cbar & g}
+     d3o = {D3 & A & B & cbar & g}
+     d4o = {D4 & abar & bbar & C & g}
+     d5o = {D5 & A & bbar & C & g}
+     d6o = {D6 & abar & B & C & g}
+     d7o = {D7 & A & B & C & g}
+     W_O = {~(d0o | d1o | d2o | d3o | d4o | d5o | d6o | d7o)}
+     Y_O = {~W_O}

U2DLY PINDLY(2,1,11) DPWR DGND
+     Y_O W_O
+     GBAR
+     A B C D0 D1 D2 D3 D4 D5 D6 D7
+     Y W
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+         CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+     SELECT = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     Y W = {
+       CASE(
+         TRN_ZH, DELAY(-1,10ns,29ns),
+         TRN_ZL, DELAY(-1,10ns,29ns),
+         TRN_HZ, DELAY(-1,15ns,39ns),
+         TRN_LZ, DELAY(-1,15ns,39ns),
+         SELECT, DELAY(-1,21ns,41ns),
+         DATA, DELAY(-1,17ns,39ns),
+         DELAY(-1,22ns,42ns))}

.ENDS 74HC251
*
*
* ----------------------------------------------------------- 74HCT251 ------
*  8-Input Multiplexer With Tri-State Output
*
*  The High-Speed CMOS Logic Data Book, 1994, Philips Pages 521 to 526
*  bss    3/24/94
*
.SUBCKT 74HCT251  OEBAR S0 S1 S2 I0 I1 I2 I3 I4 I5 I6 I7 Y YBAR
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(11,2) DPWR DGND
+     S0 S1 S2 I0 I1 I2 I3 I4 I5 I6 I7
+     Y_O YBAR_O
+     D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     s2bar = {~S2}
+     i0o = {I0 & s0bar & s1bar & s2bar}
+     i1o = {I1 & S0 & s1bar & s2bar}
+     i2o = {I2 & s0bar & S1 & s2bar}
+     i3o = {I3 & S0 & S1 & s2bar}
+     i4o = {I4 & s0bar & s1bar & S2}
+     i5o = {I5 & S0 & s1bar & S2}
+     i6o = {I6 & s0bar & S1 & S2}
+     i7o = {I7 & S0 & S1 & S2}
+     YBAR_O = {~(i0o | i1o | i2o | i3o | i4o | i5o | i6o | i7o)}
+     Y_O = {~YBAR_O}

U2DLY PINDLY(2,1,11) DPWR DGND
+     Y_O YBAR_O
+     OEBAR
+     S0 S1 S2 I0 I1 I2 I3 I4 I5 I6 I7
+     Y YBAR
+     IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(I0,0) | CHANGED(I1,0) | CHANGED(I2,0) | CHANGED(I3,0) |
+         CHANGED(I4,0) | CHANGED(I5,0) | CHANGED(I6,0) | CHANGED(I7,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     Y = {
+       CASE(
+         TRN_ZH, DELAY(-1,13ns,28ns),
+         TRN_ZL, DELAY(-1,13ns,28ns),
+         TRN_HZ, DELAY(-1,14ns,28ns),
+         TRN_LZ, DELAY(-1,14ns,28ns),
+         SELECT, DELAY(-1,24ns,44ns),
+         DATA, DELAY(-1,22ns,35ns),
+         DELAY(-1,25ns,45ns))}
+
+     YBAR = {
+       CASE(
+         TRN_ZH, DELAY(-1,13ns,28ns),
+         TRN_ZL, DELAY(-1,13ns,28ns),
+         TRN_HZ, DELAY(-1,14ns,28ns),
+         TRN_LZ, DELAY(-1,14ns,28ns),
+         SELECT, DELAY(-1,25ns,44ns),
+         DATA, DELAY(-1,22ns,35ns),
+         DELAY(-1,26ns,45ns))}

.ENDS 74HCT251
*
*
* ----------------------------------------------------------- 74LS251 ------
*  Data Selectors/Multiplexers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-715 to 2-722
*  bss    3/24/94
*
.SUBCKT 74LS251  GBAR A B C D0 D1 D2 D3 D4 D5 D6 D7 Y W
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     GBAR A B C D0 D1 D2 D3 D4 D5 D6 D7
+     Y_O W_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     g = {~GBAR}
+     d0o = {D0 & abar & bbar & cbar & g}
+     d1o = {D1 & A & bbar & cbar & g}
+     d2o = {D2 & abar & B & cbar & g}
+     d3o = {D3 & A & B & cbar & g}
+     d4o = {D4 & abar & bbar & C & g}
+     d5o = {D5 & A & bbar & C & g}
+     d6o = {D6 & abar & B & C & g}
+     d7o = {D7 & A & B & C & g}
+     W_O = {~(d0o | d1o | d2o | d3o | d4o | d5o | d6o | d7o)}
+     Y_O = {~W_O}

U2DLY PINDLY(2,1,11) DPWR DGND
+     Y_O W_O
+     GBAR
+     A B C D0 D1 D2 D3 D4 D5 D6 D7
+     Y W
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+         CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+     SELECT = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,29ns,45ns),
+         SELECT & TRN_HL, DELAY(-1,28ns,45ns),
+         TRN_ZH, DELAY(-1,30ns,45ns),
+         TRN_ZL, DELAY(-1,26ns,40ns),
+         DATA & TRN_LH, DELAY(-1,17ns,28ns),
+         DATA & TRN_HL, DELAY(-1,18ns,28ns),
+         TRN_HZ, DELAY(-1,30ns,45ns),
+         TRN_LZ, DELAY(-1,15ns,25ns),
+         DELAY(-1,31ns,46ns))}
+
+     W = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,20ns,33ns),
+         SELECT & TRN_HL, DELAY(-1,21ns,33ns),
+         TRN_ZH, DELAY(-1,17ns,27ns),
+         TRN_ZL, DELAY(-1,24ns,40ns),
+         DATA & TRN_LH, DELAY(-1,10ns,15ns),
+         DATA & TRN_HL, DELAY(-1,9ns,15ns),
+         TRN_HZ, DELAY(-1,37ns,55ns),
+         TRN_LZ, DELAY(-1,15ns,25ns),
+         DELAY(-1,38ns,56ns))}

.ENDS 74LS251
*
*
* ----------------------------------------------------------- 74S251 ------
*  Data Selectors/Multiplexers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-715 to 2-722
*  bss    3/24/94
*
.SUBCKT 74S251  GBAR A B C D0 D1 D2 D3 D4 D5 D6 D7 Y W
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     GBAR A B C D0 D1 D2 D3 D4 D5 D6 D7
+     Y_O W_O
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     g = {~GBAR}
+     d0o = {D0 & abar & bbar & cbar & g}
+     d1o = {D1 & A & bbar & cbar & g}
+     d2o = {D2 & abar & B & cbar & g}
+     d3o = {D3 & A & B & cbar & g}
+     d4o = {D4 & abar & bbar & C & g}
+     d5o = {D5 & A & bbar & C & g}
+     d6o = {D6 & abar & B & C & g}
+     d7o = {D7 & A & B & C & g}
+     W_O = {~(d0o | d1o | d2o | d3o | d4o | d5o | d6o | d7o)}
+     Y_O = {~W_O}

U2DLY PINDLY(2,1,11) DPWR DGND
+     Y_O W_O
+     GBAR
+     A B C D0 D1 D2 D3 D4 D5 D6 D7
+     Y W
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+         CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+     SELECT = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,12ns,18ns),
+         SELECT & TRN_HL, DELAY(-1,13ns,19.5ns),
+         TRN_ZH, DELAY(-1,13ns,19.5ns),
+         TRN_ZL, DELAY(-1,14ns,21ns),
+         TRN_HZ, DELAY(-1,5.5ns,8.5ns),
+         TRN_LZ, DELAY(-1,9ns,14ns),
+         DATA, DELAY(-1,8ns,12ns),
+         DELAY(-1,15ns,22ns))}
+
+     W = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,10ns,15ns),
+         SELECT & TRN_HL, DELAY(-1,9ns,13.5ns),
+         TRN_ZH, DELAY(-1,13ns,19.5ns),
+         TRN_ZL, DELAY(-1,14ns,21ns),
+         TRN_HZ, DELAY(-1,5.5ns,8.5ns),
+         TRN_LZ, DELAY(-1,9ns,14ns),
+         DATA, DELAY(-1,4.5ns,7ns),
+         DELAY(-1,15ns,22ns))}

.ENDS 74S251
*
*
* ----------------------------------------------------------- 74AC253 ------
*  Dual 4-Input Multiplexer With Tri-State Output
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-148 to 4-153
*  bss    3/25/94
*
.SUBCKT 74AC253  S0 S1 OEABAR I0A I1A I2A I3A OEBBAR I0B I1B I2B I3B ZA ZB
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     S0 S1 OEABAR I0A I1A I2A I3A OEBBAR I0B I1B I2B I3B
+     ZA_O ZB_O
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     oea = {~OEABAR}
+     oeb = {~OEBBAR}
+     a1o = {I0A & s0bar & s1bar & oea}
+     a2o = {I1A & S0 & s1bar & oea}
+     a3o = {I2A & s0bar & S1 & oea}
+     a4o = {I3A & S0 & S1 & oea}
+     b1o = {I0B & s0bar & s1bar & oeb}
+     b2o = {I1B & S0 & s1bar & oeb}
+     b3o = {I2B & s0bar & S1 & oeb}
+     b4o = {I3B & S0 & S1 & oeb}
+     ZA_O = {a1o | a2o | a3o | a4o}
+     ZB_O = {b1o | b2o | b3o | b4o}

U2DLY PINDLY(2,2,10) DPWR DGND
+     ZA_O ZB_O
+     OEABAR OEBBAR
+     S0 S1 I0A I1A I2A I3A I0B I1B I2B I3B
+     ZA ZB
+     IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0)}
+     DATAA = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I2A,0) |
+            CHANGED(I3A,0)}
+     DATAB = {CHANGED(I0B,0) | CHANGED(I1B,0) | CHANGED(I2B,0) |
+            CHANGED(I3B,0)}
+
+  TRISTATE:
+     ENABLE LO=OEABAR
+     ZA = {
+       CASE(
+         SELECT & TRN_LH, DELAY(2ns,6.5ns,11ns),
+         SELECT & TRN_HL, DELAY(2ns,7ns,11.5ns),
+         DATAA & TRN_LH, DELAY(1.5ns,5.5ns,10ns),
+         DATAA & TRN_HL, DELAY(1.5ns,5.5ns,9.5ns),
+         TRN_ZH, DELAY(1.5ns,3.5ns,6ns),
+         TRN_ZL, DELAY(1.5ns,3.5ns,6ns),
+         TRN_HZ, DELAY(2ns,5ns,8ns),
+         TRN_LZ, DELAY(1.5ns,4ns,7ns),
+         DELAY(3ns,8ns,12.5ns))}
+
+  TRISTATE:
+     ENABLE LO=OEBBAR
+     ZB = {
+       CASE(
+         SELECT & TRN_LH, DELAY(2ns,6.5ns,11ns),
+         SELECT & TRN_HL, DELAY(2ns,7ns,11.5ns),
+         DATAB & TRN_LH, DELAY(1.5ns,5.5ns,10ns),
+         DATAB & TRN_HL, DELAY(1.5ns,5.5ns,9.5ns),
+         TRN_ZH, DELAY(1.5ns,3.5ns,6ns),
+         TRN_ZL, DELAY(1.5ns,3.5ns,6ns),
+         TRN_HZ, DELAY(2ns,5ns,8ns),
+         TRN_LZ, DELAY(1.5ns,4ns,7ns),
+         DELAY(3ns,8ns,12.5ns))}

.ENDS 74AC253
*
*
* ----------------------------------------------------------- 74ACT253 ------
*  Dual 4-Input Multiplexer With Tri-State Output
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-148 to 4-153
*  bss    3/25/94
*
.SUBCKT 74ACT253  S0 S1 OEABAR I0A I1A I2A I3A OEBBAR I0B I1B I2B I3B ZA ZB
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     S0 S1 OEABAR I0A I1A I2A I3A OEBBAR I0B I1B I2B I3B
+     ZA_O ZB_O
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     oea = {~OEABAR}
+     oeb = {~OEBBAR}
+     a1o = {I0A & s0bar & s1bar & oea}
+     a2o = {I1A & S0 & s1bar & oea}
+     a3o = {I2A & s0bar & S1 & oea}
+     a4o = {I3A & S0 & S1 & oea}
+     b1o = {I0B & s0bar & s1bar & oeb}
+     b2o = {I1B & S0 & s1bar & oeb}
+     b3o = {I2B & s0bar & S1 & oeb}
+     b4o = {I3B & S0 & S1 & oeb}
+     ZA_O = {a1o | a2o | a3o | a4o}
+     ZB_O = {b1o | b2o | b3o | b4o}

U2DLY PINDLY(2,2,10) DPWR DGND
+     ZA_O ZB_O
+     OEABAR OEBBAR
+     S0 S1 I0A I1A I2A I3A I0B I1B I2B I3B
+     ZA ZB
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0)}
+     DATAA = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I2A,0) |
+            CHANGED(I3A,0)}
+     DATAB = {CHANGED(I0B,0) | CHANGED(I1B,0) | CHANGED(I2B,0) |
+            CHANGED(I3B,0)}
+
+  TRISTATE:
+     ENABLE LO=OEABAR
+     ZA = {
+       CASE(
+         SELECT & TRN_LH, DELAY(2ns,7ns,11.5ns),
+         SELECT & TRN_HL, DELAY(3ns,7.5ns,13ns),
+         DATAA & TRN_LH, DELAY(2.5ns,5.5ns,10ns),
+         DATAA & TRN_HL, DELAY(3.5ns,6.5ns,11ns),
+         TRN_ZH, DELAY(2ns,4.5ns,7.5ns),
+         TRN_ZL, DELAY(2ns,5ns,8ns),
+         TRN_HZ, DELAY(3ns,6ns,9.5ns),
+         TRN_LZ, DELAY(2.5ns,4.5ns,7.5ns),
+         DELAY(4ns,8.5ns,14ns))}
+
+  TRISTATE:
+     ENABLE LO=OEBBAR
+     ZB = {
+       CASE(
+         SELECT & TRN_LH, DELAY(2ns,7ns,11.5ns),
+         SELECT & TRN_HL, DELAY(3ns,7.5ns,13ns),
+         DATAB & TRN_LH, DELAY(2.5ns,5.5ns,10ns),
+         DATAB & TRN_HL, DELAY(3.5ns,6.5ns,11ns),
+         TRN_ZH, DELAY(2ns,4.5ns,7.5ns),
+         TRN_ZL, DELAY(2ns,5ns,8ns),
+         TRN_HZ, DELAY(3ns,6ns,9.5ns),
+         TRN_LZ, DELAY(2.5ns,4.5ns,7.5ns),
+         DELAY(4ns,8.5ns,14ns))}

.ENDS 74ACT253
*
*
* ----------------------------------------------------------- 74ALS253 ------
*  Dual 1-Of-4 Data Selectors/Multiplexers With 3-State Outputs
*
*  The ALS/AS Data Book, 1986, TI Pages 2-299 to 2-302
*  bss    3/25/94
*
.SUBCKT 74ALS253  A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3 1Y 2Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3
+     1Y_O 2Y_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     1g = {~1GBAR}
+     2g = {~2GBAR}
+     a1o = {1C0 & abar & bbar & 1g}
+     a2o = {1C1 & A & bbar & 1g}
+     a3o = {1C2 & abar & B & 1g}
+     a4o = {1C3 & A & B & 1g}
+     b1o = {2C0 & abar & bbar & 2g}
+     b2o = {2C1 & A & bbar & 2g}
+     b3o = {2C2 & abar & B & 2g}
+     b4o = {2C3 & A & B & 2g}
+     1Y_O = {a1o | a2o | a3o | a4o}
+     2Y_O = {b1o | b2o | b3o | b4o}

U2DLY PINDLY(2,2,10) DPWR DGND
+     1Y_O 2Y_O
+     1GBAR 2GBAR
+     A B 1C0 1C1 1C2 1C3 2C0 2C1 2C2 2C3
+     1Y 2Y
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(A,0) | CHANGED(B,0)}
+     DATAA = {CHANGED(1C0,0) | CHANGED(1C1,0) | CHANGED(1C2,0) |
+            CHANGED(1C3,0)}
+     DATAB = {CHANGED(2C0,0) | CHANGED(2C1,0) | CHANGED(2C2,0) |
+            CHANGED(2C3,0)}
+
+  TRISTATE:
+     ENABLE LO=1GBAR
+     1Y = {
+       CASE(
+         SELECT, DELAY(5ns,-1,21ns),
+         DATAA & TRN_LH, DELAY(2ns,-1,10ns),
+         DATAA & TRN_HL, DELAY(3ns,-1,14ns),
+         TRN_ZH, DELAY(3ns,-1,14ns),
+         TRN_ZL, DELAY(4ns,-1,16ns),
+         TRN_HZ, DELAY(2ns,-1,10ns),
+         TRN_LZ, DELAY(2ns,-1,14ns),
+         DELAY(6ns,-1,22ns))}
+
+  TRISTATE:
+     ENABLE LO=2GBAR
+     2Y = {
+       CASE(
+         SELECT, DELAY(5ns,-1,21ns),
+         DATAB & TRN_LH, DELAY(2ns,-1,10ns),
+         DATAB & TRN_HL, DELAY(3ns,-1,14ns),
+         TRN_ZH, DELAY(3ns,-1,14ns),
+         TRN_ZL, DELAY(4ns,-1,16ns),
+         TRN_HZ, DELAY(2ns,-1,10ns),
+         TRN_LZ, DELAY(2ns,-1,14ns),
+         DELAY(6ns,-1,22ns))}

.ENDS 74ALS253
*
*
* ----------------------------------------------------------- 74AS253 ------
*  Dual 1-Of-4 Data Selectors/Multiplexers With 3-State Outputs
*
*  The ALS/AS Data Book, 1986, TI Pages 2-299 to 2-302
*  bss    3/25/94
*
.SUBCKT 74AS253  A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3 1Y 2Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3
+     1Y_O 2Y_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     1g = {~1GBAR}
+     2g = {~2GBAR}
+     a1o = {1C0 & abar & bbar & 1g}
+     a2o = {1C1 & A & bbar & 1g}
+     a3o = {1C2 & abar & B & 1g}
+     a4o = {1C3 & A & B & 1g}
+     b1o = {2C0 & abar & bbar & 2g}
+     b2o = {2C1 & A & bbar & 2g}
+     b3o = {2C2 & abar & B & 2g}
+     b4o = {2C3 & A & B & 2g}
+     1Y_O = {a1o | a2o | a3o | a4o}
+     2Y_O = {b1o | b2o | b3o | b4o}

U2DLY PINDLY(2,2,10) DPWR DGND
+     1Y_O 2Y_O
+     1GBAR 2GBAR
+     A B 1C0 1C1 1C2 1C3 2C0 2C1 2C2 2C3
+     1Y 2Y
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(A,0) | CHANGED(B,0)}
+     DATAA = {CHANGED(1C0,0) | CHANGED(1C1,0) | CHANGED(1C2,0) |
+            CHANGED(1C3,0)}
+     DATAB = {CHANGED(2C0,0) | CHANGED(2C1,0) | CHANGED(2C2,0) |
+            CHANGED(2C3,0)}
+
+  TRISTATE:
+     ENABLE LO=1GBAR
+     1Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(4ns,-1,13.5ns),
+         SELECT & TRN_HL, DELAY(4ns,-1,11.5ns),
+         DATAA & TRN_LH, DELAY(3ns,-1,7.5ns),
+         DATAA & TRN_HL, DELAY(3ns,-1,8ns),
+         TRN_ZH, DELAY(4ns,-1,12.5ns),
+         TRN_ZL, DELAY(4ns,-1,11.5ns),
+         TRN_HZ, DELAY(2ns,-1,6ns),
+         TRN_LZ, DELAY(2ns,-1,7ns),
+         DELAY(5ns,-1,14.5ns))}
+
+  TRISTATE:
+     ENABLE LO=2GBAR
+     2Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(4ns,-1,13.5ns),
+         SELECT & TRN_HL, DELAY(4ns,-1,11.5ns),
+         DATAB & TRN_LH, DELAY(3ns,-1,7.5ns),
+         DATAB & TRN_HL, DELAY(3ns,-1,8ns),
+         TRN_ZH, DELAY(4ns,-1,12.5ns),
+         TRN_ZL, DELAY(4ns,-1,11.5ns),
+         TRN_HZ, DELAY(2ns,-1,6ns),
+         TRN_LZ, DELAY(2ns,-1,7ns),
+         DELAY(5ns,-1,14.5ns))}

.ENDS 74AS253
*
*
* ----------------------------------------------------------- 74F253 ------
*  Dual 4-Input Multiplexer With Tri-State Output
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 344 to 347
*  bss    3/25/94
*
.SUBCKT 74F253  S0 S1 OEABAR I0A I1A I2A I3A OEBBAR I0B I1B I2B I3B YA YB
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     S0 S1 OEABAR I0A I1A I2A I3A OEBBAR I0B I1B I2B I3B
+     YA_O YB_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     oea = {~OEABAR}
+     oeb = {~OEBBAR}
+     a1o = {I0A & s0bar & s1bar & oea}
+     a2o = {I1A & S0 & s1bar & oea}
+     a3o = {I2A & s0bar & S1 & oea}
+     a4o = {I3A & S0 & S1 & oea}
+     b1o = {I0B & s0bar & s1bar & oeb}
+     b2o = {I1B & S0 & s1bar & oeb}
+     b3o = {I2B & s0bar & S1 & oeb}
+     b4o = {I3B & S0 & S1 & oeb}
+     YA_O = {a1o | a2o | a3o | a4o}
+     YB_O = {b1o | b2o | b3o | b4o}

U2DLY PINDLY(2,2,10) DPWR DGND
+     YA_O YB_O
+     OEABAR OEBBAR
+     S0 S1 I0A I1A I2A I3A I0B I1B I2B I3B
+     YA YB
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0)}
+     DATAA = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I2A,0) |
+            CHANGED(I3A,0)}
+     DATAB = {CHANGED(I0B,0) | CHANGED(I1B,0) | CHANGED(I2B,0) |
+            CHANGED(I3B,0)}
+
+  TRISTATE:
+     ENABLE LO=OEABAR
+     YA = {
+       CASE(
+         SELECT & TRN_LH, DELAY(4.5ns,7.5ns,10.5ns),
+         SELECT & TRN_HL, DELAY(5ns,8.5ns,11ns),
+         DATAA & TRN_LH, DELAY(3ns,4.5ns,7ns),
+         DATAA & TRN_HL, DELAY(3ns,5ns,7ns),
+         TRN_ZH, DELAY(3ns,6.5ns,8ns),
+         TRN_ZL, DELAY(3ns,6.5ns,8ns),
+         TRN_HZ, DELAY(2.5ns,3.5ns,5ns),
+         TRN_LZ, DELAY(2ns,3ns,5ns),
+         DELAY(6ns,9.5ns,12ns))}
+
+  TRISTATE:
+     ENABLE LO=OEBBAR
+     YB = {
+       CASE(
+         SELECT & TRN_LH, DELAY(4.5ns,7.5ns,10.5ns),
+         SELECT & TRN_HL, DELAY(5ns,8.5ns,11ns),
+         DATAB & TRN_LH, DELAY(3ns,4.5ns,7ns),
+         DATAB & TRN_HL, DELAY(3ns,5ns,7ns),
+         TRN_ZH, DELAY(3ns,6.5ns,8ns),
+         TRN_ZL, DELAY(3ns,6.5ns,8ns),
+         TRN_HZ, DELAY(2.5ns,3.5ns,5ns),
+         TRN_LZ, DELAY(2ns,3ns,5ns),
+         DELAY(6ns,9.5ns,12ns))}

.ENDS 74F253
*
*
* ----------------------------------------------------------- 74HC253 ------
*  Dual 1-Of-4 Data Selectors/Multiplexers With 3-State Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-349 to 2-353
*  bss    3/25/94
*
.SUBCKT 74HC253  A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3 1Y 2Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3
+     1Y_O 2Y_O
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     1g = {~1GBAR}
+     2g = {~2GBAR}
+     a1o = {1C0 & abar & bbar & 1g}
+     a2o = {1C1 & A & bbar & 1g}
+     a3o = {1C2 & abar & B & 1g}
+     a4o = {1C3 & A & B & 1g}
+     b1o = {2C0 & abar & bbar & 2g}
+     b2o = {2C1 & A & bbar & 2g}
+     b3o = {2C2 & abar & B & 2g}
+     b4o = {2C3 & A & B & 2g}
+     1Y_O = {a1o | a2o | a3o | a4o}
+     2Y_O = {b1o | b2o | b3o | b4o}

U2DLY PINDLY(2,2,10) DPWR DGND
+     1Y_O 2Y_O
+     1GBAR 2GBAR
+     A B 1C0 1C1 1C2 1C3 2C0 2C1 2C2 2C3
+     1Y 2Y
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(A,0) | CHANGED(B,0)}
+     DATAA = {CHANGED(1C0,0) | CHANGED(1C1,0) | CHANGED(1C2,0) |
+            CHANGED(1C3,0)}
+     DATAB = {CHANGED(2C0,0) | CHANGED(2C1,0) | CHANGED(2C2,0) |
+            CHANGED(2C3,0)}
+
+  TRISTATE:
+     ENABLE LO=1GBAR
+     1Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,19ns,30ns),
+         SELECT & TRN_HL, DELAY(-1,19ns,30ns),
+         DATAA & TRN_LH, DELAY(-1,16ns,28ns),
+         DATAA & TRN_HL, DELAY(-1,16ns,28ns),
+         TRN_ZH, DELAY(-1,11ns,20ns),
+         TRN_ZL, DELAY(-1,11ns,20ns),
+         TRN_HZ, DELAY(-1,14ns,30ns),
+         TRN_LZ, DELAY(-1,14ns,30ns),
+         DELAY(-1,20ns,31ns))}
+
+  TRISTATE:
+     ENABLE LO=2GBAR
+     2Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,19ns,30ns),
+         SELECT & TRN_HL, DELAY(-1,19ns,30ns),
+         DATAA & TRN_LH, DELAY(-1,16ns,28ns),
+         DATAA & TRN_HL, DELAY(-1,16ns,28ns),
+         TRN_ZH, DELAY(-1,11ns,20ns),
+         TRN_ZL, DELAY(-1,11ns,20ns),
+         TRN_HZ, DELAY(-1,14ns,30ns),
+         TRN_LZ, DELAY(-1,14ns,30ns),
+         DELAY(-1,20ns,31ns))}

.ENDS 74HC253

*-------------------------------------------------------------74HCT253-------

* Dual 4-Input Multiplexer; Tri-State
* Philips High-Speed CMOS Logic Family Data Handbook, 1994, pages 527 to 531
* jat 9/10/96

.SUBCKT 74HCT253 S0 S1 1I0 1I1 1I2 1I3 2I0 2I1 2I2 2I3 1OEBAR 2OEBAR 1Y 2Y
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(12,2) DPWR DGND
+ S0 S1 1I0 1I1 1I2 1I3 2I0 2I1 2I2 2I3 1OEBAR 2OEBAR
+ 1YO 2YO
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   1YO = {~1OEBAR & ((1I0 & ~S0 & ~S1) | (1I1 & S0 & ~S1) |
+         (1I2 & ~S0 & S1) | (1I3 & S0 & S1))}
+   2YO = {~2OEBAR & ((2I0 & ~S0 & ~S1) | (2I1 & S0 & ~S1) |
+         (2I2 & ~S0 & S1) | (2I3 & S0 & S1))}

U2 PINDLY(2,2,10) DPWR DGND
+ 1YO 2YO
+ 1OEBAR 2OEBAR
+ S0 S1 1I0 1I1 1I2 1I3 2I0 2I1 2I2 2I3
+ 1Y 2Y
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA1 = {CHANGED(1I0,0) | CHANGED(1I1,0) | CHANGED(1I2,0) | CHANGED(1I3,0)}
+   DATA2 = {CHANGED(2I0,0) | CHANGED(2I1,0) | CHANGED(2I2,0) | CHANGED(2I3,0)}
+   SELECT = {CHANGED(S0,0) | CHANGED(S1,0)}
+ TRISTATE:
+   ENABLE LO = 1OEBAR
+    1Y = {
+      CASE(
+         TRN_Z$, DELAY(-1,11NS,20NS),
+         TRN_$Z, DELAY(-1,15NS,30NS),
+         SELECT & (TRN_LH | TRN_HL), DELAY(-1,21NS,35NS),
+         DATA1 & (TRN_LH | TRN_HL), DELAY(-1,20NS,35NS),
+         DELAY(-1,22NS,36NS))}
+ TRISTATE:
+   ENABLE LO = 2OEBAR
+    2Y = {
+      CASE(
+         TRN_Z$, DELAY(-1,11NS,20NS),
+         TRN_$Z, DELAY(-1,15NS,30NS),
+         SELECT & (TRN_LH | TRN_HL), DELAY(-1,21NS,35NS),
+         DATA2 & (TRN_LH | TRN_HL), DELAY(-1,20NS,35NS),
+         DELAY(-1,22NS,36NS))}

.ENDS 74HCT253

* ----------------------------------------------------------- 74LS253 ------
*  Dual 4-Line To 1-Line Data Selectors/Multiplexers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-723 to 2-727
*  bss    3/25/94
*
.SUBCKT 74LS253  A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3 1Y 2Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3
+     1Y_O 2Y_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     1g = {~1GBAR}
+     2g = {~2GBAR}
+     a1o = {1C0 & abar & bbar & 1g}
+     a2o = {1C1 & A & bbar & 1g}
+     a3o = {1C2 & abar & B & 1g}
+     a4o = {1C3 & A & B & 1g}
+     b1o = {2C0 & abar & bbar & 2g}
+     b2o = {2C1 & A & bbar & 2g}
+     b3o = {2C2 & abar & B & 2g}
+     b4o = {2C3 & A & B & 2g}
+     1Y_O = {a1o | a2o | a3o | a4o}
+     2Y_O = {b1o | b2o | b3o | b4o}

U2DLY PINDLY(2,2,10) DPWR DGND
+     1Y_O 2Y_O
+     1GBAR 2GBAR
+     A B 1C0 1C1 1C2 1C3 2C0 2C1 2C2 2C3
+     1Y 2Y
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(A,0) | CHANGED(B,0)}
+     DATAA = {CHANGED(1C0,0) | CHANGED(1C1,0) | CHANGED(1C2,0) |
+            CHANGED(1C3,0)}
+     DATAB = {CHANGED(2C0,0) | CHANGED(2C1,0) | CHANGED(2C2,0) |
+            CHANGED(2C3,0)}
+
+  TRISTATE:
+     ENABLE LO=1GBAR
+     1Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,30ns,45ns),
+         SELECT & TRN_HL, DELAY(-1,21ns,32ns),
+         DATAA & TRN_LH, DELAY(-1,17ns,25ns),
+         DATAA & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,15ns,28ns),
+         TRN_ZL, DELAY(-1,15ns,23ns),
+         TRN_HZ, DELAY(-1,27ns,41ns),
+         TRN_LZ, DELAY(-1,18ns,27ns),
+         DELAY(-1,31ns,46ns))}
+
+  TRISTATE:
+     ENABLE LO=2GBAR
+     2Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,30ns,45ns),
+         SELECT & TRN_HL, DELAY(-1,21ns,32ns),
+         DATAB & TRN_LH, DELAY(-1,17ns,25ns),
+         DATAB & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,15ns,28ns),
+         TRN_ZL, DELAY(-1,15ns,23ns),
+         TRN_HZ, DELAY(-1,27ns,41ns),
+         TRN_LZ, DELAY(-1,18ns,27ns),
+         DELAY(-1,31ns,46ns))}

.ENDS 74LS253
*
*
* ----------------------------------------------------------- 74S253 ------
*  Dual 4-Line To 1-Line Data Selectors/Multiplexers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-723 to 2-727
*  bss    3/25/94
*
.SUBCKT 74S253  A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3 1Y 2Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3
+     1Y_O 2Y_O
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     1g = {~1GBAR}
+     2g = {~2GBAR}
+     a1o = {1C0 & abar & bbar & 1g}
+     a2o = {1C1 & A & bbar & 1g}
+     a3o = {1C2 & abar & B & 1g}
+     a4o = {1C3 & A & B & 1g}
+     b1o = {2C0 & abar & bbar & 2g}
+     b2o = {2C1 & A & bbar & 2g}
+     b3o = {2C2 & abar & B & 2g}
+     b4o = {2C3 & A & B & 2g}
+     1Y_O = {a1o | a2o | a3o | a4o}
+     2Y_O = {b1o | b2o | b3o | b4o}

U2DLY PINDLY(2,2,10) DPWR DGND
+     1Y_O 2Y_O
+     1GBAR 2GBAR
+     A B 1C0 1C1 1C2 1C3 2C0 2C1 2C2 2C3
+     1Y 2Y
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(A,0) | CHANGED(B,0)}
+     DATAA = {CHANGED(1C0,0) | CHANGED(1C1,0) | CHANGED(1C2,0) |
+            CHANGED(1C3,0)}
+     DATAB = {CHANGED(2C0,0) | CHANGED(2C1,0) | CHANGED(2C2,0) |
+            CHANGED(2C3,0)}
+
+  TRISTATE:
+     ENABLE LO=1GBAR
+     1Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,11.5ns,18ns),
+         SELECT & TRN_HL, DELAY(-1,12ns,18ns),
+         DATAA, DELAY(-1,6ns,9ns),
+         TRN_ZH, DELAY(-1,11ns,16.5ns),
+         TRN_ZL, DELAY(-1,12ns,18ns),
+         TRN_HZ, DELAY(-1,6.5ns,9.5ns),
+         TRN_LZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,13ns,19ns))}
+
+  TRISTATE:
+     ENABLE LO=2GBAR
+     2Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,11.5ns,18ns),
+         SELECT & TRN_HL, DELAY(-1,12ns,18ns),
+         DATAB, DELAY(-1,6ns,9ns),
+         TRN_ZH, DELAY(-1,11ns,16.5ns),
+         TRN_ZL, DELAY(-1,12ns,18ns),
+         TRN_HZ, DELAY(-1,6.5ns,9.5ns),
+         TRN_LZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,13ns,19ns))}

.ENDS 74S253

*--------------------------------------------------------------74AC256-----

* Dual 4 Bit Addressable Latch
* Motorola FACT Data, 1993, pages 5-191 to 5-196
* jat 8/27/96

.SUBCKT 74AC256 EBAR DA DB A0 A1 MRBAR Q0A Q1A Q2A Q3A Q0B Q1B Q2B Q3B
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(14,10) DPWR DGND
+ EBAR MRBAR DA DB A0 A1 Q0AO Q1AO Q2AO Q3AO Q0BO Q1BO Q2BO Q3BO
+ D0A D1A D2A D3A D0B D1B D2B D3B RESET E
+ D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+     E = {~EBAR}
+     RESET = {MRBAR | E}
+     D0A = {(~A0 & ~A1 & DA & ~MRBAR) | (MRBAR & ~A0 & ~A1 & DA) |
+            (MRBAR & (A0 | A1) & Q0AO)}
+     D1A = {(A0 & ~A1 & DA & ~MRBAR) | (MRBAR & A0 & ~A1 & DA) |
+            (MRBAR  & (~A0 | A1) & Q1AO)}
+     D2A = {(~A0 & A1 & DA & ~MRBAR) | (MRBAR & ~A0 & A1 & DA) |
+            (MRBAR  & (A0 | ~A1) & Q2AO)}
+     D3A = {(A0 & A1 & DA & ~MRBAR) | (MRBAR & A0 & A1 & DA) |
+            (MRBAR  & (~A0 | ~A1) & Q3AO)}
+     D0B = {(~A0 & ~A1 & DB & ~MRBAR) | (MRBAR & ~A0 & ~A1 & DB) |
+            (MRBAR  & (A0 | A1) & Q0BO)}
+     D1B = {(A0 & ~A1 & DB & ~MRBAR) | (MRBAR & A0 & ~A1 & DB) |
+            (MRBAR  & (~A0 | A1) & Q1BO)}
+     D2B = {(~A0 & A1 & DB & ~MRBAR) | (MRBAR & ~A0 & A1 & DB) |
+            (MRBAR  & (A0 | ~A1) & Q2BO)}
+     D3B = {(A0 & A1 & DB & ~MRBAR) | (MRBAR & A0 & A1 & DB) |
+            (MRBAR  & (~A0 | ~A1) & Q3BO)}

U2 DLTCH(8) DPWR DGND
+ $D_HI RESET E
+ D0A D1A D2A D3A D0B D1B D2B D3B
+ Q0AO Q1AO Q2AO Q3AO Q0BO Q1BO Q2BO Q3BO
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(8,0,6) DPWR DGND
+ Q0AO Q1AO Q2AO Q3AO Q0BO Q1BO Q2BO Q3BO
+ DA DB EBAR A0 A1 MRBAR
+ Q0A Q1A Q2A Q3A Q0B Q1B Q2B Q3B
+ IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    DATA = {CHANGED(DA,0) | CHANGED(DB,0)}
+    ENABLE = {CHANGED_HL(EBAR,0)}
+    ADDRESS = {CHANGED(A0,0) | CHANGED(A1,0)}
+    RESET = {CHANGED_HL(MRBAR,0)}
+ PINDLY:
+      Q0A Q1A Q2A Q3A Q0B Q1B Q2B Q3B = {
+         CASE(
+			    RESET & TRN_HL, DELAY(2NS,6NS,9NS),
+    			 ENABLE & TRN_LH, DELAY(2NS,7NS,10.5NS),
+    			 ENABLE & TRN_HL, DELAY(2NS,7.5NS,9NS),
+    			 ADDRESS & TRN_LH, DELAY(2NS,8NS,13NS),
+    			 ADDRESS & TRN_HL, DELAY(2NS,7NS,11NS),
+    			 DATA & TRN_LH, DELAY(2NS,6.5NS,10NS),
+    			 DATA & TRN_HL, DELAY(2NS,6NS,9.5NS),
+    			 DELAY(3NS,9NS,14NS))}

U4 CONSTRAINT(5) DPWR DGND
+ A0 A1 DA DB EBAR
+ IO_AC IO_LEVEL={IO_LEVEL}
+ SETUP_HOLD:
+    CLOCK LH = EBAR
+    DATA(2) = DA DB
+    SETUPTIME = 2.5NS
+    HOLDTIME = 2NS
+ SETUP_HOLD:
+    CLOCK LH = EBAR
+    DATA(2) = A0 A1
+    SETUPTIME = 4NS
+    HOLDTIME = 2NS

.ENDS 74AC256

*--------------------------------------------------------------74ACT256-----

* Dual 4 Bit Addressable Latch
* Motorola FACT Data, 1993, pages 5-191 to 5-196
* jat 8/27/96

.SUBCKT 74ACT256 EBAR DA DB A0 A1 MRBAR Q0A Q1A Q2A Q3A Q0B Q1B Q2B Q3B
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(14,10) DPWR DGND
+ EBAR MRBAR DA DB A0 A1 Q0AO Q1AO Q2AO Q3AO Q0BO Q1BO Q2BO Q3BO
+ D0A D1A D2A D3A D0B D1B D2B D3B RESET E
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+     E = {~EBAR}
+     RESET = {MRBAR | E}
+     D0A = {(~A0 & ~A1 & DA & ~MRBAR) | (MRBAR & ~A0 & ~A1 & DA) |
+            (MRBAR & (A0 | A1) & Q0AO)}
+     D1A = {(A0 & ~A1 & DA & ~MRBAR) | (MRBAR & A0 & ~A1 & DA) |
+            (MRBAR  & (~A0 | A1) & Q1AO)}
+     D2A = {(~A0 & A1 & DA & ~MRBAR) | (MRBAR & ~A0 & A1 & DA) |
+            (MRBAR  & (A0 | ~A1) & Q2AO)}
+     D3A = {(A0 & A1 & DA & ~MRBAR) | (MRBAR & A0 & A1 & DA) |
+            (MRBAR  & (~A0 | ~A1) & Q3AO)}
+     D0B = {(~A0 & ~A1 & DB & ~MRBAR) | (MRBAR & ~A0 & ~A1 & DB) |
+            (MRBAR  & (A0 | A1) & Q0BO)}
+     D1B = {(A0 & ~A1 & DB & ~MRBAR) | (MRBAR & A0 & ~A1 & DB) |
+            (MRBAR  & (~A0 | A1) & Q1BO)}
+     D2B = {(~A0 & A1 & DB & ~MRBAR) | (MRBAR & ~A0 & A1 & DB) |
+            (MRBAR  & (A0 | ~A1) & Q2BO)}
+     D3B = {(A0 & A1 & DB & ~MRBAR) | (MRBAR & A0 & A1 & DB) |
+            (MRBAR  & (~A0 | ~A1) & Q3BO)}

U2 DLTCH(8) DPWR DGND
+ $D_HI RESET E
+ D0A D1A D2A D3A D0B D1B D2B D3B
+ Q0AO Q1AO Q2AO Q3AO Q0BO Q1BO Q2BO Q3BO
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(8,0,6) DPWR DGND
+ Q0AO Q1AO Q2AO Q3AO Q0BO Q1BO Q2BO Q3BO
+ DA DB EBAR A0 A1 MRBAR
+ Q0A Q1A Q2A Q3A Q0B Q1B Q2B Q3B
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    DATA = {CHANGED(DA,0) | CHANGED(DB,0)}
+    ENABLE = {CHANGED_HL(EBAR,0)}
+    ADDRESS = {CHANGED(A0,0) | CHANGED(A1,0)}
+    RESET = {CHANGED_HL(MRBAR,0)}
+ PINDLY:
+      Q0A Q1A Q2A Q3A Q0B Q1B Q2B Q3B = {
+         CASE(
+			    RESET & TRN_HL, DELAY(2NS,7NS,10.5NS),
+    			 ENABLE & TRN_LH, DELAY(2NS,8NS,12NS),
+    			 ENABLE & TRN_HL, DELAY(2NS,6.5NS,10.5NS),
+    			 ADDRESS & TRN_LH, DELAY(2NS,10.5NS,14.5NS),
+    			 ADDRESS & TRN_HL, DELAY(2NS,9NS,12.5NS),
+    			 DATA & TRN_LH, DELAY(2NS,6.5NS,11.5NS),
+    			 DATA & TRN_HL, DELAY(2NS,7NS,11NS),
+    			 DELAY(3NS,11.5NS,15.5NS))}

U4 CONSTRAINT(5) DPWR DGND
+ A0 A1 DA DB EBAR
+ IO_ACT IO_LEVEL={IO_LEVEL}
+ SETUP_HOLD:
+    CLOCK LH = EBAR
+    DATA(2) = DA DB
+    SETUPTIME = 3.5NS
+    HOLDTIME = 2.5NS
+ SETUP_HOLD:
+    CLOCK LH = EBAR
+    DATA(2) = A0 A1
+    SETUPTIME = 5.5NS
+    HOLDTIME = 2.5NS

.ENDS 74ACT256

*--------------------------------------------------------------74F256-----

* Dual 4 Bit Addressable Latch
* Philips FAST TTL Logic Data Handbook, 1992, pages 348 to 353
* jat 7/9/96

.SUBCKT 74F256 EBAR DA DB A0 A1 MRBAR Q0A Q1A Q2A Q3A Q0B Q1B Q2B Q3B
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(14,10) DPWR DGND
+ EBAR MRBAR DA DB A0 A1 Q0AO Q1AO Q2AO Q3AO Q0BO Q1BO Q2BO Q3BO
+ D0A D1A D2A D3A D0B D1B D2B D3B RESET E
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+     E = {~EBAR}
+     RESET = {MRBAR | E}
+     D0A = {(~A0 & ~A1 & DA & ~MRBAR) | (MRBAR & ~A0 & ~A1 & DA) |
+            (MRBAR & (A0 | A1) & Q0AO)}
+     D1A = {(A0 & ~A1 & DA & ~MRBAR) | (MRBAR & A0 & ~A1 & DA) |
+            (MRBAR  & (~A0 | A1) & Q1AO)}
+     D2A = {(~A0 & A1 & DA & ~MRBAR) | (MRBAR & ~A0 & A1 & DA) |
+            (MRBAR  & (A0 | ~A1) & Q2AO)}
+     D3A = {(A0 & A1 & DA & ~MRBAR) | (MRBAR & A0 & A1 & DA) |
+            (MRBAR  & (~A0 | ~A1) & Q3AO)}
+     D0B = {(~A0 & ~A1 & DB & ~MRBAR) | (MRBAR & ~A0 & ~A1 & DB) |
+            (MRBAR  & (A0 | A1) & Q0BO)}
+     D1B = {(A0 & ~A1 & DB & ~MRBAR) | (MRBAR & A0 & ~A1 & DB) |
+            (MRBAR  & (~A0 | A1) & Q1BO)}
+     D2B = {(~A0 & A1 & DB & ~MRBAR) | (MRBAR & ~A0 & A1 & DB) |
+            (MRBAR  & (A0 | ~A1) & Q2BO)}
+     D3B = {(A0 & A1 & DB & ~MRBAR) | (MRBAR & A0 & A1 & DB) |
+            (MRBAR  & (~A0 | ~A1) & Q3BO)}

U2 DLTCH(8) DPWR DGND
+ $D_HI RESET E
+ D0A D1A D2A D3A D0B D1B D2B D3B
+ Q0AO Q1AO Q2AO Q3AO Q0BO Q1BO Q2BO Q3BO
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(8,0,6) DPWR DGND
+ Q0AO Q1AO Q2AO Q3AO Q0BO Q1BO Q2BO Q3BO
+ DA DB EBAR A0 A1 MRBAR
+ Q0A Q1A Q2A Q3A Q0B Q1B Q2B Q3B
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    DATA = {CHANGED(DA,0) | CHANGED(DB,0)}
+    ENABLE = {CHANGED(EBAR,0)}
+    ADDRESS = {CHANGED(A0,0) | CHANGED(A1,0)}
+    RESET = {CHANGED(MRBAR,0)}
+ PINDLY:
+      Q0A Q1A Q2A Q3A Q0B Q1B Q2B Q3B = {
+         CASE(
+			    RESET & TRN_HL, DELAY(5NS,7NS,9NS),
+    			 ENABLE & TRN_LH, DELAY(4.5NS,8NS,10.5NS),
+    			 ENABLE & TRN_HL, DELAY(3NS,5NS,7NS),
+    			 ADDRESS & TRN_LH, DELAY(5NS,10NS,14NS),
+    			 ADDRESS & TRN_HL, DELAY(4.5NS,8.5NS,9.5NS),
+    			 DATA & TRN_LH, DELAY(4NS,7NS,9.5NS),
+    			 DATA & TRN_HL, DELAY(3NS,5NS,7NS),
+    			 DELAY(6NS,11NS,15NS))}

U4 CONSTRAINT(6) DPWR DGND
+ A0 A1 DA DB EBAR MRBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ WIDTH:
+    NODE = EBAR
+    MIN_LO = 7.5NS
+ WIDTH:
+    NODE = MRBAR
+    MIN_LO = 3NS
+ SETUP_HOLD:
+    CLOCK LH = EBAR
+    DATA(2) = DA DB
+    SETUPTIME_HI = 3NS
+    SETUPTIME_LO = 6.5NS
+ SETUP_HOLD:
+    CLOCK LH = EBAR
+    DATA(2) = A0 A1
+    SETUPTIME = 2NS

.ENDS 74F256

*--------------------------------------------------------------74LS256-----

* Dual 4 Bit Addressable Latch
* National LS/S/TTL Logic Databook, 1989, pages 2-292 to 2-295
* jat 8/7/96

.SUBCKT 74LS256 EBAR DA DB A0 A1 CLBAR Q0A Q1A Q2A Q3A Q0B Q1B Q2B Q3B
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(14,10) DPWR DGND
+ EBAR CLBAR DA DB A0 A1 Q0AO Q1AO Q2AO Q3AO Q0BO Q1BO Q2BO Q3BO
+ D0A D1A D2A D3A D0B D1B D2B D3B RESET E
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+     E = {~EBAR}
+     RESET = {CLBAR | E}
+     D0A = {(~A0 & ~A1 & DA & ~CLBAR) | (CLBAR & ~A0 & ~A1 & DA) |
+            (CLBAR & (A0 | A1) & Q0AO)}
+     D1A = {(A0 & ~A1 & DA & ~CLBAR) | (CLBAR & A0 & ~A1 & DA) |
+            (CLBAR  & (~A0 | A1) & Q1AO)}
+     D2A = {(~A0 & A1 & DA & ~CLBAR) | (CLBAR & ~A0 & A1 & DA) |
+            (CLBAR  & (A0 | ~A1) & Q2AO)}
+     D3A = {(A0 & A1 & DA & ~CLBAR) | (CLBAR & A0 & A1 & DA) |
+            (CLBAR  & (~A0 | ~A1) & Q3AO)}
+     D0B = {(~A0 & ~A1 & DB & ~CLBAR) | (CLBAR & ~A0 & ~A1 & DB) |
+            (CLBAR  & (A0 | A1) & Q0BO)}
+     D1B = {(A0 & ~A1 & DB & ~CLBAR) | (CLBAR & A0 & ~A1 & DB) |
+            (CLBAR  & (~A0 | A1) & Q1BO)}
+     D2B = {(~A0 & A1 & DB & ~CLBAR) | (CLBAR & ~A0 & A1 & DB) |
+            (CLBAR  & (A0 | ~A1) & Q2BO)}
+     D3B = {(A0 & A1 & DB & ~CLBAR) | (CLBAR & A0 & A1 & DB) |
+            (CLBAR  & (~A0 | ~A1) & Q3BO)}

U2 DLTCH(8) DPWR DGND
+ $D_HI RESET E
+ D0A D1A D2A D3A D0B D1B D2B D3B
+ Q0AO Q1AO Q2AO Q3AO Q0BO Q1BO Q2BO Q3BO
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(8,0,6) DPWR DGND
+ Q0AO Q1AO Q2AO Q3AO Q0BO Q1BO Q2BO Q3BO
+ DA DB EBAR A0 A1 CLBAR
+ Q0A Q1A Q2A Q3A Q0B Q1B Q2B Q3B
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    DATA = {CHANGED(DA,0) | CHANGED(DB,0)}
+    ENABLE = {CHANGED_HL(EBAR,0)}
+    ADDRESS = {CHANGED(A0,0) | CHANGED(A1,0)}
+    RESET = {CHANGED_HL(CLBAR,0)}
+ PINDLY:
+      Q0A Q1A Q2A Q3A Q0B Q1B Q2B Q3B = {
+         CASE(
+			    RESET & TRN_HL, DELAY(-1,-1,18NS),
+    			 ENABLE & TRN_LH, DELAY(-1,-1,27NS),
+    			 ENABLE & TRN_HL, DELAY(-1,-1,24NS),
+    			 ADDRESS & TRN_LH, DELAY(-1,-1,30NS),
+    			 ADDRESS & TRN_HL, DELAY(-1,-1,29NS),
+    			 DATA & TRN_LH, DELAY(-1,-1,30NS),
+    			 DATA & TRN_HL, DELAY(-1,-1,20NS),
+    			 DELAY(-1,-1,31NS))}

U4 CONSTRAINT(3) DPWR DGND
+ DA DB EBAR
+ IO_LS IO_LEVEL={IO_LEVEL}
+ WIDTH:
+    NODE = EBAR
+    MIN_LO = 17NS
+ SETUP_HOLD:
+    CLOCK LH = EBAR
+    DATA(2) = DA DB
+    SETUPTIME_HI = 20NS
+    SETUPTIME_LO = 15NS

.ENDS 74LS256

* ----------------------------------------------------------- 74AC257 ------
*  Quad 2-Input Multiplexer With Tri-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-154 to 4-158
*  bss    3/25/94
*
.SUBCKT 74AC257  S OEBAR I0A I1A I0B I1B I0C I1C I0D I1D ZA ZB ZC ZD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     I0A I1A I0B I1B I0C I1C I0D I1D S
+     ZA_O ZB_O ZC_O ZD_O
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbar = {~S}
+     ZA_O = {(I0A & sbar) | (I1A & S)}
+     ZB_O = {(I0B & sbar) | (I1B & S)}
+     ZC_O = {(I0C & sbar) | (I1C & S)}
+     ZD_O = {(I0D & sbar) | (I1D & S)}

U2DLY PINDLY(4,1,9) DPWR DGND
+     ZA_O ZB_O ZC_O ZD_O
+     OEBAR
+     I0A I1A I0B I1B I0C I1C I0D I1D S
+     ZA ZB ZC ZD
+     IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I0B,0) |
+         CHANGED(I1B,0) | CHANGED(I0C,0) | CHANGED(I1C,0) |
+         CHANGED(I0D,0) | CHANGED(I1D,0)}
+     SELECT = {CHANGED(S,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     ZA ZB ZC ZD = {
+       CASE(
+         SELECT & TRN_LH, DELAY(1.5ns,5ns,7.5ns),
+         SELECT & TRN_HL, DELAY(1.5ns,5.5ns,7.5ns),
+         DATA & TRN_LH, DELAY(1.5ns,4ns,6ns),
+         DATA & TRN_HL, DELAY(1.5ns,4.5ns,6ns),
+         TRN_ZH, DELAY(1.5ns,5ns,7.5ns),
+         TRN_ZL, DELAY(1.5ns,5ns,8.5ns),
+         TRN_HZ, DELAY(1.5ns,5ns,9ns),
+         TRN_LZ, DELAY(1.5ns,5ns,8ns),
+         DELAY(2.5ns,6ns,10ns))}

.ENDS 74AC257
*
*
* ----------------------------------------------------------- 74ACT257 ------
*  Quad 2-Input Multiplexer With Tri-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-154 to 4-158
*  bss    3/25/94
*
.SUBCKT 74ACT257  S OEBAR I0A I1A I0B I1B I0C I1C I0D I1D ZA ZB ZC ZD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     I0A I1A I0B I1B I0C I1C I0D I1D S
+     ZA_O ZB_O ZC_O ZD_O
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbar = {~S}
+     ZA_O = {(I0A & sbar) | (I1A & S)}
+     ZB_O = {(I0B & sbar) | (I1B & S)}
+     ZC_O = {(I0C & sbar) | (I1C & S)}
+     ZD_O = {(I0D & sbar) | (I1D & S)}

U2DLY PINDLY(4,1,9) DPWR DGND
+     ZA_O ZB_O ZC_O ZD_O
+     OEBAR
+     I0A I1A I0B I1B I0C I1C I0D I1D S
+     ZA ZB ZC ZD
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I0B,0) |
+         CHANGED(I1B,0) | CHANGED(I0C,0) | CHANGED(I1C,0) |
+         CHANGED(I0D,0) | CHANGED(I1D,0)}
+     SELECT = {CHANGED(S,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     ZA ZB ZC ZD = {
+       CASE(
+         SELECT & TRN_LH, DELAY(2ns,7ns,9.5ns),
+         SELECT & TRN_HL, DELAY(2.5ns,7ns,10.5ns),
+         DATA & TRN_LH, DELAY(1.5ns,5ns,7ns),
+         DATA & TRN_HL, DELAY(2ns,6ns,7.5ns),
+         TRN_ZH, DELAY(2ns,6ns,8ns),
+         TRN_ZL, DELAY(2ns,6ns,8ns),
+         TRN_HZ, DELAY(2.5ns,6.5ns,9ns),
+         TRN_LZ, DELAY(2ns,6ns,7.5ns),
+         DELAY(3.5ns,8ns,11.5ns))}

.ENDS 74ACT257
*
*
* ----------------------------------------------------------- 74ALS257 ------
*  Quad 2-Line To 1-Line Selectors/Multiplexers With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-303 to 2-308
*  bss    3/25/94
*
.SUBCKT 74ALS257  ABAR/B GBAR 1A 1B 2A 2B 3A 3B 4A 4B 1Y 2Y 3Y 4Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y_O 2Y_O 3Y_O 4Y_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a/bbar = {~ABAR/B}
+     1Y_O = {(1A & a/bbar) | (1B & ABAR/B)}
+     2Y_O = {(2A & a/bbar) | (2B & ABAR/B)}
+     3Y_O = {(3A & a/bbar) | (3B & ABAR/B)}
+     4Y_O = {(4A & a/bbar) | (4B & ABAR/B)}

U2DLY PINDLY(4,1,9) DPWR DGND
+     1Y_O 2Y_O 3Y_O 4Y_O
+     GBAR
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y 2Y 3Y 4Y
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1A,0) | CHANGED(1B,0) | CHANGED(2A,0) |
+         CHANGED(2B,0) | CHANGED(3A,0) | CHANGED(3B,0) |
+         CHANGED(4A,0) | CHANGED(4B,0)}
+     SELECT = {CHANGED(ABAR/B,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     1Y 2Y 3Y 4Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(7ns,-1,18ns),
+         SELECT & TRN_HL, DELAY(6ns,-1,22ns),
+         DATA & TRN_LH, DELAY(2ns,-1,10ns),
+         DATA & TRN_HL, DELAY(2ns,-1,12ns),
+         TRN_ZH, DELAY(4ns,-1,16ns),
+         TRN_ZL, DELAY(5ns,-1,18ns),
+         TRN_HZ, DELAY(2ns,-1,10ns),
+         TRN_LZ, DELAY(4ns,-1,15ns),
+         DELAY(8ns,-1,23ns))}

.ENDS 74ALS257
*
*
* ----------------------------------------------------------- 74AS257 ------
*  Quad 2-Line To 1-Line Selectors/Multiplexers With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-303 to 2-308
*  bss    3/25/94
*
.SUBCKT 74AS257  ABAR/B GBAR 1A 1B 2A 2B 3A 3B 4A 4B 1Y 2Y 3Y 4Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y_O 2Y_O 3Y_O 4Y_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a/bbar = {~ABAR/B}
+     1Y_O = {(1A & a/bbar) | (1B & ABAR/B)}
+     2Y_O = {(2A & a/bbar) | (2B & ABAR/B)}
+     3Y_O = {(3A & a/bbar) | (3B & ABAR/B)}
+     4Y_O = {(4A & a/bbar) | (4B & ABAR/B)}

U2DLY PINDLY(4,1,9) DPWR DGND
+     1Y_O 2Y_O 3Y_O 4Y_O
+     GBAR
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y 2Y 3Y 4Y
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1A,0) | CHANGED(1B,0) | CHANGED(2A,0) |
+         CHANGED(2B,0) | CHANGED(3A,0) | CHANGED(3B,0) |
+         CHANGED(4A,0) | CHANGED(4B,0)}
+     SELECT = {CHANGED(ABAR/B,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     1Y 2Y 3Y 4Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(2ns,-1,11ns),
+         SELECT & TRN_HL, DELAY(2ns,-1,10ns),
+         DATA & TRN_LH, DELAY(1ns,-1,5.5ns),
+         DATA & TRN_HL, DELAY(1ns,-1,6ns),
+         TRN_ZH, DELAY(2ns,-1,7.5ns),
+         TRN_ZL, DELAY(2ns,-1,9.5ns),
+         TRN_HZ, DELAY(1.5ns,-1,6.5ns),
+         TRN_LZ, DELAY(2ns,-1,7ns),
+         DELAY(3ns,-1,12ns))}

.ENDS 74AS257
*
*
* ----------------------------------------------------------- 74F257 ------
*  Quad 2-Line To 1-Line Selectors/Multiplexers With 3-State Outputs
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 354 to 358
*  bss    3/25/94
*
.SUBCKT 74F257  S OEBAR I0A I1A I0B I1B I0C I1C I0D I1D YA YB YC YD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     I0A I1A I0B I1B I0C I1C I0D I1D S
+     YA_O YB_O YC_O YD_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbar = {~S}
+     YA_O = {(I0A & sbar) | (I1A & S)}
+     YB_O = {(I0B & sbar) | (I1B & S)}
+     YC_O = {(I0C & sbar) | (I1C & S)}
+     YD_O = {(I0D & sbar) | (I1D & S)}

U2DLY PINDLY(4,1,9) DPWR DGND
+     YA_O YB_O YC_O YD_O
+     OEBAR
+     I0A I1A I0B I1B I0C I1C I0D I1D S
+     YA YB YC YD
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I0B,0) |
+         CHANGED(I1B,0) | CHANGED(I0C,0) | CHANGED(I1C,0) |
+         CHANGED(I0D,0) | CHANGED(I1D,0)}
+     SELECT = {CHANGED(S,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     YA YB YC YD = {
+       CASE(
+         SELECT & TRN_LH, DELAY(4.5ns,8ns,13ns),
+         SELECT & TRN_HL, DELAY(3.5ns,6ns,8.5ns),
+         DATA & TRN_LH, DELAY(3ns,4.5ns,6ns),
+         DATA & TRN_HL, DELAY(2ns,3.5ns,5.5ns),
+         TRN_ZH, DELAY(3ns,6ns,7.5ns),
+         TRN_ZL, DELAY(3ns,6ns,7.5ns),
+         TRN_HZ, DELAY(2ns,4ns,6ns),
+         TRN_LZ, DELAY(2ns,3.5ns,6ns),
+         DELAY(5.5ns,9ns,14ns))}

.ENDS 74F257
*
*
* ----------------------------------------------------------- 74F257A ------
*  Quad 2-Line To 1-Line Selectors/Multiplexers With 3-State Outputs
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 354 to 358
*  bss    3/25/94
*
.SUBCKT 74F257A  S OEBAR I0A I1A I0B I1B I0C I1C I0D I1D YA YB YC YD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     I0A I1A I0B I1B I0C I1C I0D I1D S
+     YA_O YB_O YC_O YD_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbar = {~S}
+     YA_O = {(I0A & sbar) | (I1A & S)}
+     YB_O = {(I0B & sbar) | (I1B & S)}
+     YC_O = {(I0C & sbar) | (I1C & S)}
+     YD_O = {(I0D & sbar) | (I1D & S)}

U2DLY PINDLY(4,1,9) DPWR DGND
+     YA_O YB_O YC_O YD_O
+     OEBAR
+     I0A I1A I0B I1B I0C I1C I0D I1D S
+     YA YB YC YD
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I0B,0) |
+         CHANGED(I1B,0) | CHANGED(I0C,0) | CHANGED(I1C,0) |
+         CHANGED(I0D,0) | CHANGED(I1D,0)}
+     SELECT = {CHANGED(S,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     YA YB YC YD = {
+       CASE(
+         SELECT & TRN_LH, DELAY(5.5ns,7.5ns,9.5ns),
+         SELECT & TRN_HL, DELAY(4ns,5.5ns,7ns),
+         DATA & TRN_LH, DELAY(3ns,4.5ns,6ns),
+         DATA & TRN_HL, DELAY(2ns,3.5ns,5ns),
+         TRN_ZH, DELAY(4.5ns,6.5ns,7.5ns),
+         TRN_ZL, DELAY(4.5ns,6ns,7.5ns),
+         TRN_HZ, DELAY(2ns,4ns,5.5ns),
+         TRN_LZ, DELAY(2ns,3.5ns,5.5ns),
+         DELAY(6.5ns,8.5ns,10.5ns))}

.ENDS 74F257A
*
*
* ----------------------------------------------------------- 74HC257 ------
*  Quad 2-Line To 1-Line Selectors/Multiplexers With 3-State Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-355 to 2-359
*  bss    3/25/94
*
.SUBCKT 74HC257  ABAR/B GBAR 1A 1B 2A 2B 3A 3B 4A 4B 1Y 2Y 3Y 4Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y_O 2Y_O 3Y_O 4Y_O
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a/bbar = {~ABAR/B}
+     1Y_O = {(1A & a/bbar) | (1B & ABAR/B)}
+     2Y_O = {(2A & a/bbar) | (2B & ABAR/B)}
+     3Y_O = {(3A & a/bbar) | (3B & ABAR/B)}
+     4Y_O = {(4A & a/bbar) | (4B & ABAR/B)}

U2DLY PINDLY(4,1,9) DPWR DGND
+     1Y_O 2Y_O 3Y_O 4Y_O
+     GBAR
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y 2Y 3Y 4Y
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1A,0) | CHANGED(1B,0) | CHANGED(2A,0) |
+         CHANGED(2B,0) | CHANGED(3A,0) | CHANGED(3B,0) |
+         CHANGED(4A,0) | CHANGED(4B,0)}
+     SELECT = {CHANGED(ABAR/B,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     1Y 2Y 3Y 4Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,10ns,20ns),
+         SELECT & TRN_HL, DELAY(-1,10ns,20ns),
+         DATA & TRN_LH, DELAY(-1,10ns,20ns),
+         DATA & TRN_HL, DELAY(-1,10ns,20ns),
+         TRN_Z$, DELAY(-1,15ns,30ns),
+         TRN_$Z, DELAY(-1,15ns,30ns),
+         DELAY(-1,16ns,31ns))}

.ENDS 74HC257

*-------------------------------------------------------------74HCT257-------

* Quad 2-Input Multiplexer; Tri-State
* Philips High-Speed CMOS Logic Family Data Handbook, 1994, pages 533 to 537
* jat 9/10/96

.SUBCKT 74HCT257 S 1I0 1I1 2I0 2I1 3I0 3I1 4I0 4I1 OEBAR 1Y 2Y 3Y 4Y
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(10,4) DPWR DGND
+ S 1I0 1I1 2I0 2I1 3I0 3I1 4I0 4I1 OEBAR
+ 1YO 2YO 3YO 4YO
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   1YO = {~OEBAR & ((1I0 & ~S) | (1I1 & S))}
+   2YO = {~OEBAR & ((2I0 & ~S) | (2I1 & S))}
+   3YO = {~OEBAR & ((3I0 & ~S) | (3I1 & S))}
+   4YO = {~OEBAR & ((4I0 & ~S) | (4I1 & S))}

U2 PINDLY(4,1,9) DPWR DGND
+ 1YO 2YO 3YO 4YO
+ OEBAR
+ S 1I0 1I1 2I0 2I1 3I0 3I1 4I0 4I1
+ 1Y 2Y 3Y 4Y
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(1I0,0) | CHANGED(1I1,0) | CHANGED(2I0,0) | CHANGED(2I1,0) |
+            CHANGED(3I0,0) | CHANGED(3I1,0) | CHANGED(4I0,0) | CHANGED(4I1,0)}
+   SELECT = {CHANGED(S,0)}
+ TRISTATE:
+   ENABLE LO = OEBAR
+    1Y 2Y 3Y 4Y = {
+      CASE(
+         TRN_Z$, DELAY(-1,12NS,30NS),
+         TRN_$Z, DELAY(-1,15NS,30NS),
+         SELECT & (TRN_LH | TRN_HL), DELAY(-1,17NS,30NS),
+         DATA & (TRN_LH | TRN_HL), DELAY(-1,13NS,22NS),
+         DELAY(-1,18NS,31NS))}

.ENDS 74HCT257

*--------------------------------------------------------------74LS257A-----

* Quad 2-Input Multiplexers with Tri-State Outputs
* Motorola Schottky TTL Data, 1983, pages 4-236 to 4-238
* jat 8/8/96

.SUBCKT 74LS257A E0BAR I0A I1A I0B I1B I0C I1C I0D I1D S ZA ZB ZC ZD
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,4) DPWR DGND
+ I0A I1A I0B I1B I0C I1C I0D I1D S
+ ZAO ZBO ZCO ZDO
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ZAO = {(I0A & ~S) | (I1A & S)}
+   ZBO = {(I0B & ~S) | (I1B & S)}
+   ZCO = {(I0C & ~S) | (I1C & S)}
+   ZDO = {(I0D & ~S) | (I1D & S)}

U2 PINDLY(4,1,9) DPWR DGND
+ ZAO ZBO ZCO ZDO
+ E0BAR
+ I0A I1A I0B I1B I0C I1C I0D I1D S
+ ZA ZB ZC ZD
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    DATA = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I0B,0) | CHANGED(I1B,0) |
+            CHANGED(I0C,0) | CHANGED(I1C,0) | CHANGED(I0D,0) | CHANGED(I1D,0)}
+    ADDRESS = {CHANGED(S,0)}
+ TRISTATE:
+ ENABLE LO = E0BAR
+  ZA ZB ZC ZD = {
+    CASE(
+      TRN_Z$, DELAY(-1,20NS,30NS),
+      TRN_HZ, DELAY(-1,18NS,30NS),
+      TRN_LZ, DELAY(-1,16NS,25NS),
+      ADDRESS & (TRN_LH | TRN_HL), DELAY(-1,14NS,21NS),
+    	 DATA & (TRN_LH | TRN_HL), DELAY(-1,12NS,18NS),
+    	 DELAY(-1,21NS,31NS))}

.ENDS 74LS257A

* ----------------------------------------------------------- 74LS257B ------
*  Quad 2-Line To 1-Line Data Selectors/Multiplexers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-729 to 2-733
*  bss    3/25/94
*
.SUBCKT 74LS257B  ABAR/B GBAR 1A 1B 2A 2B 3A 3B 4A 4B 1Y 2Y 3Y 4Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y_O 2Y_O 3Y_O 4Y_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a/bbar = {~ABAR/B}
+     1Y_O = {(1A & a/bbar) | (1B & ABAR/B)}
+     2Y_O = {(2A & a/bbar) | (2B & ABAR/B)}
+     3Y_O = {(3A & a/bbar) | (3B & ABAR/B)}
+     4Y_O = {(4A & a/bbar) | (4B & ABAR/B)}

U2DLY PINDLY(4,1,9) DPWR DGND
+     1Y_O 2Y_O 3Y_O 4Y_O
+     GBAR
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y 2Y 3Y 4Y
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1A,0) | CHANGED(1B,0) | CHANGED(2A,0) |
+         CHANGED(2B,0) | CHANGED(3A,0) | CHANGED(3B,0) |
+         CHANGED(4A,0) | CHANGED(4B,0)}
+     SELECT = {CHANGED(ABAR/B,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     1Y 2Y 3Y 4Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,16ns,21ns),
+         SELECT & TRN_HL, DELAY(-1,17ns,24ns),
+         DATA & TRN_LH, DELAY(-1,8ns,13ns),
+         DATA & TRN_HL, DELAY(-1,10ns,15ns),
+         TRN_ZH, DELAY(-1,15ns,30ns),
+         TRN_ZL, DELAY(-1,19ns,30ns),
+         TRN_HZ, DELAY(-1,18ns,30ns),
+         TRN_LZ, DELAY(-1,16ns,25ns),
+         DELAY(-1,20ns,31ns))}

.ENDS 74LS257B
*
*
* ----------------------------------------------------------- 74S257 ------
*  Quad 2-Line To 1-Line Data Selectors/Multiplexers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-729 to 2-733
*  bss    3/25/94
*
.SUBCKT 74S257  ABAR/B GBAR 1A 1B 2A 2B 3A 3B 4A 4B 1Y 2Y 3Y 4Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y_O 2Y_O 3Y_O 4Y_O
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a/bbar = {~ABAR/B}
+     1Y_O = {(1A & a/bbar) | (1B & ABAR/B)}
+     2Y_O = {(2A & a/bbar) | (2B & ABAR/B)}
+     3Y_O = {(3A & a/bbar) | (3B & ABAR/B)}
+     4Y_O = {(4A & a/bbar) | (4B & ABAR/B)}

U2DLY PINDLY(4,1,9) DPWR DGND
+     1Y_O 2Y_O 3Y_O 4Y_O
+     GBAR
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y 2Y 3Y 4Y
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1A,0) | CHANGED(1B,0) | CHANGED(2A,0) |
+         CHANGED(2B,0) | CHANGED(3A,0) | CHANGED(3B,0) |
+         CHANGED(4A,0) | CHANGED(4B,0)}
+     SELECT = {CHANGED(ABAR/B,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     1Y 2Y 3Y 4Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,8.5ns,15ns),
+         SELECT & TRN_HL, DELAY(-1,8.5ns,15ns),
+         DATA & TRN_LH, DELAY(-1,5ns,7.5ns),
+         DATA & TRN_HL, DELAY(-1,4.5ns,6.5ns),
+         TRN_ZH, DELAY(-1,13ns,19.5ns),
+         TRN_ZL, DELAY(-1,14ns,21ns),
+         TRN_HZ, DELAY(-1,5.5ns,8.5ns),
+         TRN_LZ, DELAY(-1,9ns,14ns),
+         DELAY(-1,15ns,22ns))}

.ENDS 74S257
*
*
* ----------------------------------------------------------- 74AC258 ------
*  Quad 2-Input Multiplexer With Tri-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-159 to 4-163
*  bss    3/25/94
*
.SUBCKT 74AC258  S OEBAR I0A I1A I0B I1B I0C I1C I0D I1D ZA ZB ZC ZD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     I0A I1A I0B I1B I0C I1C I0D I1D S
+     ZA_O ZB_O ZC_O ZD_O
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbar = {~S}
+     ZA_O = {~((I0A & sbar) | (I1A & S))}
+     ZB_O = {~((I0B & sbar) | (I1B & S))}
+     ZC_O = {~((I0C & sbar) | (I1C & S))}
+     ZD_O = {~((I0D & sbar) | (I1D & S))}

U2DLY PINDLY(4,1,9) DPWR DGND
+     ZA_O ZB_O ZC_O ZD_O
+     OEBAR
+     I0A I1A I0B I1B I0C I1C I0D I1D S
+     ZA ZB ZC ZD
+     IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I0B,0) |
+         CHANGED(I1B,0) | CHANGED(I0C,0) | CHANGED(I1C,0) |
+         CHANGED(I0D,0) | CHANGED(I1D,0)}
+     SELECT = {CHANGED(S,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     ZA ZB ZC ZD = {
+       CASE(
+         SELECT & TRN_LH, DELAY(2ns,6ns,9.5ns),
+         SELECT & TRN_HL, DELAY(1.5ns,5.5ns,9ns),
+         DATA & TRN_LH, DELAY(1.5ns,4.5ns,7.5ns),
+         DATA & TRN_HL, DELAY(1.5ns,4ns,6.5ns),
+         TRN_ZH, DELAY(1.5ns,4.5ns,7.5ns),
+         TRN_ZL, DELAY(1.5ns,5.5ns,7ns),
+         TRN_HZ, DELAY(2ns,5.5ns,8.5ns),
+         TRN_LZ, DELAY(1.5ns,5ns,7ns),
+         DELAY(3ns,7ns,10.5ns))}

.ENDS 74AC258
*
*
* ----------------------------------------------------------- 74ACT258 ------
*  Quad 2-Input Multiplexer With Tri-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-159 to 4-163
*  bss    3/25/94
*
.SUBCKT 74ACT258  S OEBAR I0A I1A I0B I1B I0C I1C I0D I1D ZA ZB ZC ZD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     I0A I1A I0B I1B I0C I1C I0D I1D S
+     ZA_O ZB_O ZC_O ZD_O
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbar = {~S}
+     ZA_O = {~((I0A & sbar) | (I1A & S))}
+     ZB_O = {~((I0B & sbar) | (I1B & S))}
+     ZC_O = {~((I0C & sbar) | (I1C & S))}
+     ZD_O = {~((I0D & sbar) | (I1D & S))}

U2DLY PINDLY(4,1,9) DPWR DGND
+     ZA_O ZB_O ZC_O ZD_O
+     OEBAR
+     I0A I1A I0B I1B I0C I1C I0D I1D S
+     ZA ZB ZC ZD
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I0B,0) |
+         CHANGED(I1B,0) | CHANGED(I0C,0) | CHANGED(I1C,0) |
+         CHANGED(I0D,0) | CHANGED(I1D,0)}
+     SELECT = {CHANGED(S,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     ZA ZB ZC ZD = {
+       CASE(
+         SELECT & TRN_LH, DELAY(3ns,7.5ns,10.5ns),
+         SELECT & TRN_HL, DELAY(1.5ns,7ns,9.5ns),
+         DATA & TRN_LH, DELAY(2ns,6.5ns,8.5ns),
+         DATA & TRN_HL, DELAY(2ns,5.5ns,7.5ns),
+         TRN_ZH, DELAY(2ns,6.5ns,8.5ns),
+         TRN_ZL, DELAY(2ns,6.5ns,8.5ns),
+         TRN_HZ, DELAY(1.5ns,7ns,9ns),
+         TRN_LZ, DELAY(2ns,6ns,8ns),
+         DELAY(4ns,8.5ns,11.5ns))}

.ENDS 74ACT258
*
*
* ----------------------------------------------------------- 74ALS258 ------
*  Quad 2-Line To 1-Line Selectors/Multiplexers With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-303 to 2-308
*  bss    3/25/94
*
.SUBCKT 74ALS258  ABAR/B GBAR 1A 1B 2A 2B 3A 3B 4A 4B 1Y 2Y 3Y 4Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y_O 2Y_O 3Y_O 4Y_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a/bbar = {~ABAR/B}
+     1Y_O = {~((1A & a/bbar) | (1B & ABAR/B))}
+     2Y_O = {~((2A & a/bbar) | (2B & ABAR/B))}
+     3Y_O = {~((3A & a/bbar) | (3B & ABAR/B))}
+     4Y_O = {~((4A & a/bbar) | (4B & ABAR/B))}

U2DLY PINDLY(4,1,9) DPWR DGND
+     1Y_O 2Y_O 3Y_O 4Y_O
+     GBAR
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y 2Y 3Y 4Y
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1A,0) | CHANGED(1B,0) | CHANGED(2A,0) |
+         CHANGED(2B,0) | CHANGED(3A,0) | CHANGED(3B,0) |
+         CHANGED(4A,0) | CHANGED(4B,0)}
+     SELECT = {CHANGED(ABAR/B,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     1Y 2Y 3Y 4Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(8ns,-1,20ns),
+         SELECT & TRN_HL, DELAY(5ns,-1,25ns),
+         DATA & TRN_LH, DELAY(2ns,-1,8ns),
+         DATA & TRN_HL, DELAY(2ns,-1,7ns),
+         TRN_ZH, DELAY(5ns,-1,18ns),
+         TRN_ZL, DELAY(5ns,-1,18ns),
+         TRN_HZ, DELAY(2ns,-1,10ns),
+         TRN_LZ, DELAY(5ns,-1,18ns),
+         DELAY(9ns,-1,26ns))}

.ENDS 74ALS258
*
*
* ----------------------------------------------------------- 74AS258 ------
*  Quad 2-Line To 1-Line Selectors/Multiplexers With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-303 to 2-308
*  bss    3/25/94
*
.SUBCKT 74AS258  ABAR/B GBAR 1A 1B 2A 2B 3A 3B 4A 4B 1Y 2Y 3Y 4Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y_O 2Y_O 3Y_O 4Y_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a/bbar = {~ABAR/B}
+     1Y_O = {~((1A & a/bbar) | (1B & ABAR/B))}
+     2Y_O = {~((2A & a/bbar) | (2B & ABAR/B))}
+     3Y_O = {~((3A & a/bbar) | (3B & ABAR/B))}
+     4Y_O = {~((4A & a/bbar) | (4B & ABAR/B))}

U2DLY PINDLY(4,1,9) DPWR DGND
+     1Y_O 2Y_O 3Y_O 4Y_O
+     GBAR
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y 2Y 3Y 4Y
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1A,0) | CHANGED(1B,0) | CHANGED(2A,0) |
+         CHANGED(2B,0) | CHANGED(3A,0) | CHANGED(3B,0) |
+         CHANGED(4A,0) | CHANGED(4B,0)}
+     SELECT = {CHANGED(ABAR/B,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     1Y 2Y 3Y 4Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(2ns,-1,9.5ns),
+         SELECT & TRN_HL, DELAY(2ns,-1,10ns),
+         DATA & TRN_LH, DELAY(1ns,-1,5ns),
+         DATA & TRN_HL, DELAY(1ns,-1,4ns),
+         TRN_ZH, DELAY(2ns,-1,8ns),
+         TRN_ZL, DELAY(2ns,-1,10ns),
+         TRN_HZ, DELAY(1.5ns,-1,6ns),
+         TRN_LZ, DELAY(2ns,-1,6.5ns),
+         DELAY(3ns,-1,11ns))}

.ENDS 74AS258
*
*
* ----------------------------------------------------------- 74F258 ------
*  Quad 2-Line To 1-Line Selectors/Multiplexers With 3-State Outputs
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 359 to 363
*  bss    3/25/94
*
.SUBCKT 74F258  S OEBAR I0A I1A I0B I1B I0C I1C I0D I1D YA YB YC YD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     I0A I1A I0B I1B I0C I1C I0D I1D S
+     YA_O YB_O YC_O YD_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbar = {~S}
+     YA_O = {~((I0A & sbar) | (I1A & S))}
+     YB_O = {~((I0B & sbar) | (I1B & S))}
+     YC_O = {~((I0C & sbar) | (I1C & S))}
+     YD_O = {~((I0D & sbar) | (I1D & S))}

U2DLY PINDLY(4,1,9) DPWR DGND
+     YA_O YB_O YC_O YD_O
+     OEBAR
+     I0A I1A I0B I1B I0C I1C I0D I1D S
+     YA YB YC YD
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I0B,0) |
+         CHANGED(I1B,0) | CHANGED(I0C,0) | CHANGED(I1C,0) |
+         CHANGED(I0D,0) | CHANGED(I1D,0)}
+     SELECT = {CHANGED(S,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     YA YB YC YD = {
+       CASE(
+         SELECT & TRN_LH, DELAY(3.5ns,6.5ns,8.5ns),
+         SELECT & TRN_HL, DELAY(2.5ns,6ns,9.5ns),
+         DATA & TRN_LH, DELAY(2.5ns,4ns,6ns),
+         DATA & TRN_HL, DELAY(1ns,2.5ns,4.7ns),
+         TRN_ZH, DELAY(3ns,5.9ns,7.5ns),
+         TRN_ZL, DELAY(3ns,5.5ns,7.5ns),
+         TRN_HZ, DELAY(2ns,3.5ns,6ns),
+         TRN_LZ, DELAY(2ns,3.5ns,6ns),
+         DELAY(4.5ns,7.5ns,10.5ns))}

.ENDS 74F258
*
*
* ----------------------------------------------------------- 74F258A ------
*  Quad 2-Line To 1-Line Selectors/Multiplexers With 3-State Outputs
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 359 to 363
*  bss    3/25/94
*
.SUBCKT 74F258A  S OEBAR I0A I1A I0B I1B I0C I1C I0D I1D YA YB YC YD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     I0A I1A I0B I1B I0C I1C I0D I1D S
+     YA_O YB_O YC_O YD_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbar = {~S}
+     YA_O = {~((I0A & sbar) | (I1A & S))}
+     YB_O = {~((I0B & sbar) | (I1B & S))}
+     YC_O = {~((I0C & sbar) | (I1C & S))}
+     YD_O = {~((I0D & sbar) | (I1D & S))}

U2DLY PINDLY(4,1,9) DPWR DGND
+     YA_O YB_O YC_O YD_O
+     OEBAR
+     I0A I1A I0B I1B I0C I1C I0D I1D S
+     YA YB YC YD
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I0B,0) |
+         CHANGED(I1B,0) | CHANGED(I0C,0) | CHANGED(I1C,0) |
+         CHANGED(I0D,0) | CHANGED(I1D,0)}
+     SELECT = {CHANGED(S,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     YA YB YC YD = {
+       CASE(
+         SELECT & TRN_LH, DELAY(3.5ns,6.5ns,8ns),
+         SELECT & TRN_HL, DELAY(2.5ns,6ns,8ns),
+         DATA & TRN_LH, DELAY(3ns,4.5ns,6ns),
+         DATA & TRN_HL, DELAY(1ns,2.5ns,4ns),
+         TRN_ZH, DELAY(4ns,6ns,7.5ns),
+         TRN_ZL, DELAY(4ns,5.5ns,7.5ns),
+         TRN_HZ, DELAY(2ns,3.5ns,5.5ns),
+         TRN_LZ, DELAY(2ns,3.5ns,5.5ns),
+         DELAY(5ns,7.5ns,9ns))}

.ENDS 74F258A
*
*
* ----------------------------------------------------------- 74HC258 ------
*  Quad 2-Line To 1-Line Selectors/Multiplexers With 3-State Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-355 to 2-359
*  bss    3/25/94
*
.SUBCKT 74HC258  ABAR/B GBAR 1A 1B 2A 2B 3A 3B 4A 4B 1Y 2Y 3Y 4Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y_O 2Y_O 3Y_O 4Y_O
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a/bbar = {~ABAR/B}
+     1Y_O = {~((1A & a/bbar) | (1B & ABAR/B))}
+     2Y_O = {~((2A & a/bbar) | (2B & ABAR/B))}
+     3Y_O = {~((3A & a/bbar) | (3B & ABAR/B))}
+     4Y_O = {~((4A & a/bbar) | (4B & ABAR/B))}

U2DLY PINDLY(4,1,9) DPWR DGND
+     1Y_O 2Y_O 3Y_O 4Y_O
+     GBAR
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y 2Y 3Y 4Y
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1A,0) | CHANGED(1B,0) | CHANGED(2A,0) |
+         CHANGED(2B,0) | CHANGED(3A,0) | CHANGED(3B,0) |
+         CHANGED(4A,0) | CHANGED(4B,0)}
+     SELECT = {CHANGED(ABAR/B,0)}
+     ENAB = {CHANGED(GBAR,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     1Y 2Y 3Y 4Y = {
+       CASE(
+         SELECT, DELAY(-1,13ns,23ns),
+         DATA, DELAY(-1,13ns,20ns),
+         ENAB, DELAY(-1,15ns,30ns),
+         DELAY(-1,16ns,31ns))}

.ENDS 74HC258

*-------------------------------------------------------------74HCT258-------

* Quad 2-Input Multiplexer; Tri-State; Inverting
* Philips High-Speed CMOS Logic Family Data Handbook, 1994, pages 539 to 543
* jat 9/11/96

.SUBCKT 74HCT258 S 1I0 1I1 2I0 2I1 3I0 3I1 4I0 4I1 OEBAR 1YBAR 2YBAR 3YBAR 4YBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(10,4) DPWR DGND
+ S 1I0 1I1 2I0 2I1 3I0 3I1 4I0 4I1 OEBAR
+ 1YBARO 2YBARO 3YBARO 4YBARO
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   1YBARO = {~(~OEBAR & ((1I0 & ~S) | (1I1 & S)))}
+   2YBARO = {~(~OEBAR & ((2I0 & ~S) | (2I1 & S)))}
+   3YBARO = {~(~OEBAR & ((3I0 & ~S) | (3I1 & S)))}
+   4YBARO = {~(~OEBAR & ((4I0 & ~S) | (4I1 & S)))}

U2 PINDLY(4,1,9) DPWR DGND
+ 1YBARO 2YBARO 3YBARO 4YBARO
+ OEBAR
+ S 1I0 1I1 2I0 2I1 3I0 3I1 4I0 4I1
+ 1YBAR 2YBAR 3YBAR 4YBAR
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(1I0,0) | CHANGED(1I1,0) | CHANGED(2I0,0) | CHANGED(2I1,0) |
+            CHANGED(3I0,0) | CHANGED(3I1,0) | CHANGED(4I0,0) | CHANGED(4I1,0)}
+   SELECT = {CHANGED(S,0)}
+ TRISTATE:
+   ENABLE LO = OEBAR
+    1YBAR 2YBAR 3YBAR 4YBAR = {
+      CASE(
+         TRN_Z$, DELAY(-1,14NS,28NS),
+         TRN_$Z, DELAY(-1,20NS,30NS),
+         SELECT & (TRN_LH | TRN_HL), DELAY(-1,17NS,28NS),
+         DATA & (TRN_LH | TRN_HL), DELAY(-1,11NS,19NS),
+         DELAY(-1,18NS,29NS))}

.ENDS 74HCT258

*--------------------------------------------------------------74LS258A-----

* Quad 2-Input Multiplexers with Tri-State Outputs
* Motorola Schottky TTL Data, 1983, pages 4-236 to 4-238
* jat 8/8/96

.SUBCKT 74LS258A E0BAR I0A I1A I0B I1B I0C I1C I0D I1D S ZABAR ZBBAR ZCBAR ZDBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,4) DPWR DGND
+ I0A I1A I0B I1B I0C I1C I0D I1D S
+ ZABARO ZBBARO ZCBARO ZDBARO
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ZABARO = {~((I0A & ~S) | (I1A & S))}
+   ZBBARO = {~((I0B & ~S) | (I1B & S))}
+   ZCBARO = {~((I0C & ~S) | (I1C & S))}
+   ZDBARO = {~((I0D & ~S) | (I1D & S))}

U2 PINDLY(4,1,9) DPWR DGND
+ ZABARO ZBBARO ZCBARO ZDBARO
+ E0BAR
+ I0A I1A I0B I1B I0C I1C I0D I1D S
+ ZABAR ZBBAR ZCBAR ZDBAR
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    DATA = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I0B,0) | CHANGED(I1B,0) |
+            CHANGED(I0C,0) | CHANGED(I1C,0) | CHANGED(I0D,0) | CHANGED(I1D,0)}
+    ADDRESS = {CHANGED(S,0)}
+ TRISTATE:
+ ENABLE LO = E0BAR
+  ZABAR ZBBAR ZCBAR ZDBAR = {
+    CASE(
+      TRN_Z$, DELAY(-1,20NS,30NS),
+      TRN_HZ, DELAY(-1,18NS,30NS),
+      TRN_LZ, DELAY(-1,16NS,25NS),
+      ADDRESS & (TRN_LH | TRN_HL), DELAY(-1,14NS,21NS),
+    	 DATA & (TRN_LH | TRN_HL), DELAY(-1,12NS,18NS),
+    	 DELAY(-1,21NS,31NS))}

.ENDS 74LS258A

* ----------------------------------------------------------- 74LS258B ------
*  Quad 2-Line To 1-Line Data Selectors/Multiplexers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-729 to 2-733
*  bss    3/25/94
*
.SUBCKT 74LS258B  ABAR/B GBAR 1A 1B 2A 2B 3A 3B 4A 4B 1Y 2Y 3Y 4Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y_O 2Y_O 3Y_O 4Y_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a/bbar = {~ABAR/B}
+     1Y_O = {~((1A & a/bbar) | (1B & ABAR/B))}
+     2Y_O = {~((2A & a/bbar) | (2B & ABAR/B))}
+     3Y_O = {~((3A & a/bbar) | (3B & ABAR/B))}
+     4Y_O = {~((4A & a/bbar) | (4B & ABAR/B))}

U2DLY PINDLY(4,1,9) DPWR DGND
+     1Y_O 2Y_O 3Y_O 4Y_O
+     GBAR
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y 2Y 3Y 4Y
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1A,0) | CHANGED(1B,0) | CHANGED(2A,0) |
+         CHANGED(2B,0) | CHANGED(3A,0) | CHANGED(3B,0) |
+         CHANGED(4A,0) | CHANGED(4B,0)}
+     SELECT = {CHANGED(ABAR/B,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     1Y 2Y 3Y 4Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,14ns,21ns),
+         SELECT & TRN_HL, DELAY(-1,19ns,24ns),
+         DATA & TRN_LH, DELAY(-1,7ns,12ns),
+         DATA & TRN_HL, DELAY(-1,11ns,17ns),
+         TRN_ZH, DELAY(-1,15ns,30ns),
+         TRN_ZL, DELAY(-1,20ns,30ns),
+         TRN_HZ, DELAY(-1,18ns,30ns),
+         TRN_LZ, DELAY(-1,16ns,25ns),
+         DELAY(-1,21ns,31ns))}

.ENDS 74LS258B
*
*
* ----------------------------------------------------------- 74S258 ------
*  Quad 2-Line To 1-Line Data Selectors/Multiplexers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-729 to 2-733
*  bss    3/25/94
*
.SUBCKT 74S258  ABAR/B GBAR 1A 1B 2A 2B 3A 3B 4A 4B 1Y 2Y 3Y 4Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y_O 2Y_O 3Y_O 4Y_O
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a/bbar = {~ABAR/B}
+     1Y_O = {~((1A & a/bbar) | (1B & ABAR/B))}
+     2Y_O = {~((2A & a/bbar) | (2B & ABAR/B))}
+     3Y_O = {~((3A & a/bbar) | (3B & ABAR/B))}
+     4Y_O = {~((4A & a/bbar) | (4B & ABAR/B))}

U2DLY PINDLY(4,1,9) DPWR DGND
+     1Y_O 2Y_O 3Y_O 4Y_O
+     GBAR
+     1A 1B 2A 2B 3A 3B 4A 4B ABAR/B
+     1Y 2Y 3Y 4Y
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1A,0) | CHANGED(1B,0) | CHANGED(2A,0) |
+         CHANGED(2B,0) | CHANGED(3A,0) | CHANGED(3B,0) |
+         CHANGED(4A,0) | CHANGED(4B,0)}
+     SELECT = {CHANGED(ABAR/B,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     1Y 2Y 3Y 4Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,8ns,12ns),
+         SELECT & TRN_HL, DELAY(-1,7.5ns,12ns),
+         DATA, DELAY(-1,4ns,6ns),
+         TRN_ZH, DELAY(-1,13ns,19.5ns),
+         TRN_ZL, DELAY(-1,14ns,21ns),
+         TRN_HZ, DELAY(-1,5.5ns,8.5ns),
+         TRN_LZ, DELAY(-1,9ns,14ns),
+         DELAY(-1,15ns,20.5ns))}

.ENDS 74S258
*
*
* ----------------------------------------------------------- 74259 ------
*  8-Bit Addressable Latches
*
*  The TTL Logic Data Book, 1988, TI Pages 2-735 to 2-738
*  bss    3/28/94
*
.SUBCKT 74259  S0 S1 S2 GBAR D CLRBAR Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(14,16) DPWR DGND
+     S0 S1 S2 GBAR D CLRBAR Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     Q0A Q0B Q1A Q1B Q2A Q2B Q3A Q3B Q4A Q4B Q5A Q5B Q6A Q6B Q7A Q7B
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     s2bar = {~S2}
+     nor1 = {~(GBAR | D)}
+     nor2 = {~(GBAR | (~D))}
+     Q0A = {nor1 & s0bar & s1bar & s2bar}
+     Q0B = {~((s0bar & s1bar & s2bar & nor2) | (CLRBAR & Q0_O))}
+     Q1A = {nor1 & S0 & s1bar & s2bar}
+     Q1B = {~((S0 & s1bar & s2bar & nor2) | (CLRBAR & Q1_O))}
+     Q2A = {nor1 & s0bar & S1 & s2bar}
+     Q2B = {~((s0bar & S1 & s2bar & nor2) | (CLRBAR & Q2_O))}
+     Q3A = {nor1 & S0 & S1 & s2bar}
+     Q3B = {~((S0 & S1 & s2bar & nor2) | (CLRBAR & Q3_O))}
+     Q4A = {nor1 & s0bar & s1bar & S2}
+     Q4B = {~((s0bar & s1bar & S2 & nor2) | (CLRBAR & Q4_O))}
+     Q5A = {nor1 & S0 & s1bar & S2}
+     Q5B = {~((S0 & s1bar & S2 & nor2) | (CLRBAR & Q5_O))}
+     Q6A = {nor1 & s0bar & S1 & S2}
+     Q6B = {~((s0bar & S1 & S2 & nor2) | (CLRBAR & Q6_O))}
+     Q7A = {nor1 & S0 & S1 & S2}
+     Q7B = {~((S0 & S1 & S2 & nor2) | (CLRBAR & Q7_O))}

U2 nora(2,8) DPWR DGND
+     Q0A Q0B Q1A Q1B Q2A Q2B Q3A Q3B Q4A Q4B Q5A Q5B Q6A Q6B Q7A Q7B
+     Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(8,0,6) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     CLRBAR D S0 S1 S2 GBAR
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ADDRESS = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+     DATA = {CHANGED(D,0)}
+     ENAB = {CHANGED(GBAR,0)}
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+
+  PINDLY:
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,16ns,25ns),
+         ENAB & TRN_LH, DELAY(-1,12ns,20ns),
+         ENAB & TRN_HL, DELAY(-1,11ns,20ns),
+         ADDRESS & TRN_LH, DELAY(-1,15ns,28ns),
+         ADDRESS & TRN_HL, DELAY(-1,17ns,28ns),
+         DATA & TRN_LH, DELAY(-1,14ns,24ns),
+         DATA & TRN_HL, DELAY(-1,11ns,20ns),
+         DELAY(-1,18ns,29ns))}

U4CON CONSTRAINT(6) DPWR DGND
+     S0 S1 S2 D GBAR CLRBAR
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=GBAR
+     MIN_LO=15ns
+
+  SETUP_HOLD:
+     CLOCK LH=GBAR
+     DATA(1)=D
+     SETUPTIME=15ns
+
+  SETUP_HOLD:
+     CLOCK LH=GBAR
+     DATA(3)=S0 S1 S2
+     SETUPTIME=5ns
+     HOLDTIME=20ns

.ENDS 74259

*--------------------------------------------------------------74AC259-----

* 8-Bit Addressable Latch
* Motorola FACT Data, 1993, pages 5-211 to 5-218
* jat 8/27/96

.SUBCKT 74AC259 EBAR MRBAR D A0 A1 A2 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(14,10) DPWR DGND
+ EBAR MRBAR D A0 A1 A2 Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ E RESET D0 D1 D2 D3 D4 D5 D6 D7
+ D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+     E = {~EBAR}
+     RESET = {MRBAR | E}
+     D0 = {(~A2 & ~A1 & ~A0 & D & ~MRBAR) | (MRBAR & ~A2 & ~A1 & ~A0 & D) |
+           (MRBAR & (~(~A2 & ~A1 & ~A0)) & Q0O)}
+     D1 = {(~A2 & ~A1 & A0 & D & ~MRBAR) | (MRBAR & ~A2 & ~A1 & A0 & D) |
+           (MRBAR & (~(~A2 & ~A1 & A0)) & Q1O)}
+     D2 = {(~A2 & A1 & ~A0 & D & ~MRBAR) | (MRBAR & ~A2 & A1 & ~A0 & D) |
+           (MRBAR & (~(~A2 & A1 & ~A0)) & Q2O)}
+     D3 = {(~A2 & A1 & A0 & D & ~MRBAR) | (MRBAR & ~A2 & A1 & A0 & D) |
+           (MRBAR & (~(~A2 & A1 & A0)) & Q3O)}
+     D4 = {(A2 & ~A1 & ~A0 & D & ~MRBAR) | (MRBAR & A2 & ~A1 & ~A0 & D) |
+           (MRBAR & (~(A2 & ~A1 & ~A0)) & Q4O)}
+     D5 = {(A2 & ~A1 & A0 & D & ~MRBAR) | (MRBAR & A2 & ~A1 & A0 & D) |
+           (MRBAR & (~(A1 & ~A1 & A0)) & Q5O)}
+     D6 = {(A2 & A1 & ~A0 & D & ~MRBAR) | (MRBAR & A2 & A1 & ~A0 & D) |
+           (MRBAR & (~(A2 & A1 & ~A0)) & Q6O)}
+     D7 = {(A2 & A1 & A0 & D & ~MRBAR) | (MRBAR & A2 & A1 & A0 & D) |
+           (MRBAR & (~(A2 & A1 & A0)) & Q7O)}

U2 DLTCH(8) DPWR DGND
+ $D_HI RESET E
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(8,0,6) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ D A0 A1 A2 EBAR MRBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    DATA = {CHANGED(D,0)}
+    ENABLE = {CHANGED_HL(EBAR,0)}
+    ADDRESS = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0)}
+    RESET = {CHANGED_HL(MRBAR,0)}
+ PINDLY:
+      Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+         CASE(
+			    RESET & TRN_HL, DELAY(2NS,6NS,9NS),
+    			 ENABLE & TRN_LH, DELAY(2NS,7NS,10.5NS),
+    			 ENABLE & TRN_HL, DELAY(2NS,7.5NS,9NS),
+    			 ADDRESS & TRN_LH, DELAY(2NS,8NS,13NS),
+    			 ADDRESS & TRN_HL, DELAY(2NS,7NS,11NS),
+    			 DATA & TRN_LH, DELAY(2NS,6.5NS,10NS),
+    			 DATA & TRN_HL, DELAY(2NS,6NS,9.5NS),
+    			 DELAY(3NS,9NS,14NS))}

U4 CONSTRAINT(6) DPWR DGND
+ EBAR MRBAR D A0 A1 A2
+ IO_AC IO_LEVEL={IO_LEVEL}
+ WIDTH:
+    NODE = EBAR
+    MIN_LO = 5.5NS
+ WIDTH:
+    NODE = MRBAR
+    MIN_LO = 5.5NS
+ SETUP_HOLD:
+    CLOCK LH = EBAR
+    DATA(1) = D
+    SETUPTIME = 2.5NS
+    HOLDTIME = 2NS
+ SETUP_HOLD:
+    CLOCK LH = EBAR
+    DATA(3) = A0 A1 A2
+    SETUPTIME = 2.5NS
+    HOLDTIME = 2NS

.ENDS 74AC259

*--------------------------------------------------------------74ACT259-----

* 8-Bit Addressable Latch
* Motorola FACT Data, 1993, pages 5-211 to 5-218
* jat 8/27/96

.SUBCKT 74ACT259 EBAR MRBAR D A0 A1 A2 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(14,10) DPWR DGND
+ EBAR MRBAR D A0 A1 A2 Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ E RESET D0 D1 D2 D3 D4 D5 D6 D7
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+     E = {~EBAR}
+     RESET = {MRBAR | E}
+     D0 = {(~A2 & ~A1 & ~A0 & D & ~MRBAR) | (MRBAR & ~A2 & ~A1 & ~A0 & D) |
+           (MRBAR & (~(~A2 & ~A1 & ~A0)) & Q0O)}
+     D1 = {(~A2 & ~A1 & A0 & D & ~MRBAR) | (MRBAR & ~A2 & ~A1 & A0 & D) |
+           (MRBAR & (~(~A2 & ~A1 & A0)) & Q1O)}
+     D2 = {(~A2 & A1 & ~A0 & D & ~MRBAR) | (MRBAR & ~A2 & A1 & ~A0 & D) |
+           (MRBAR & (~(~A2 & A1 & ~A0)) & Q2O)}
+     D3 = {(~A2 & A1 & A0 & D & ~MRBAR) | (MRBAR & ~A2 & A1 & A0 & D) |
+           (MRBAR & (~(~A2 & A1 & A0)) & Q3O)}
+     D4 = {(A2 & ~A1 & ~A0 & D & ~MRBAR) | (MRBAR & A2 & ~A1 & ~A0 & D) |
+           (MRBAR & (~(A2 & ~A1 & ~A0)) & Q4O)}
+     D5 = {(A2 & ~A1 & A0 & D & ~MRBAR) | (MRBAR & A2 & ~A1 & A0 & D) |
+           (MRBAR & (~(A1 & ~A1 & A0)) & Q5O)}
+     D6 = {(A2 & A1 & ~A0 & D & ~MRBAR) | (MRBAR & A2 & A1 & ~A0 & D) |
+           (MRBAR & (~(A2 & A1 & ~A0)) & Q6O)}
+     D7 = {(A2 & A1 & A0 & D & ~MRBAR) | (MRBAR & A2 & A1 & A0 & D) |
+           (MRBAR & (~(A2 & A1 & A0)) & Q7O)}

U2 DLTCH(8) DPWR DGND
+ $D_HI RESET E
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(8,0,6) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ D A0 A1 A2 EBAR MRBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    DATA = {CHANGED(D,0)}
+    ENABLE = {CHANGED_HL(EBAR,0)}
+    ADDRESS = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0)}
+    RESET = {CHANGED_HL(MRBAR,0)}
+ PINDLY:
+      Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+         CASE(
+			    RESET & TRN_HL, DELAY(2NS,-1,10NS),
+    			 ENABLE & TRN_LH, DELAY(2NS,10.5NS,14NS),
+    			 ENABLE & TRN_HL, DELAY(2NS,9NS,12NS),
+    			 ADDRESS & TRN_LH, DELAY(2NS,8NS,11.5NS),
+    			 ADDRESS & TRN_HL, DELAY(2NS,6NS,10NS),
+    			 DATA & TRN_LH, DELAY(2NS,6.5NS,11NS),
+    			 DATA & TRN_HL, DELAY(2NS,7NS,10.5NS),
+    			 DELAY(3NS,11.5NS,15NS))}

U4 CONSTRAINT(6) DPWR DGND
+ EBAR MRBAR D A0 A1 A2
+ IO_ACT IO_LEVEL={IO_LEVEL}
+ WIDTH:
+    NODE = EBAR
+    MIN_LO = 7NS
+ WIDTH:
+    NODE = MRBAR
+    MIN_LO = 7NS
+ SETUP_HOLD:
+    CLOCK LH = EBAR
+    DATA(1) = D
+    SETUPTIME = 3NS
+    HOLDTIME = 2.5NS
+ SETUP_HOLD:
+    CLOCK LH = EBAR
+    DATA(3) = A0 A1 A2
+    SETUPTIME = 4.5NS
+    HOLDTIME = 2.5NS

.ENDS 74ACT259

* ----------------------------------------------------------- 74ALS259 ------
*  8-Bit Addressable Latches
*
*  The TTL Logic Data Book, 1988, TI Pages 2-309 to 2-311
*  bss    3/28/94
*
.SUBCKT 74ALS259  S0 S1 S2 GBAR D CLRBAR Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(14,16) DPWR DGND
+     S0 S1 S2 GBAR D CLRBAR Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     Q0A Q0B Q1A Q1B Q2A Q2B Q3A Q3B Q4A Q4B Q5A Q5B Q6A Q6B Q7A Q7B
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     s2bar = {~S2}
+     nor1 = {~(GBAR | D)}
+     nor2 = {~(GBAR | (~D))}
+     Q0A = {nor1 & s0bar & s1bar & s2bar}
+     Q0B = {~((s0bar & s1bar & s2bar & nor2) | (CLRBAR & Q0_O))}
+     Q1A = {nor1 & S0 & s1bar & s2bar}
+     Q1B = {~((S0 & s1bar & s2bar & nor2) | (CLRBAR & Q1_O))}
+     Q2A = {nor1 & s0bar & S1 & s2bar}
+     Q2B = {~((s0bar & S1 & s2bar & nor2) | (CLRBAR & Q2_O))}
+     Q3A = {nor1 & S0 & S1 & s2bar}
+     Q3B = {~((S0 & S1 & s2bar & nor2) | (CLRBAR & Q3_O))}
+     Q4A = {nor1 & s0bar & s1bar & S2}
+     Q4B = {~((s0bar & s1bar & S2 & nor2) | (CLRBAR & Q4_O))}
+     Q5A = {nor1 & S0 & s1bar & S2}
+     Q5B = {~((S0 & s1bar & S2 & nor2) | (CLRBAR & Q5_O))}
+     Q6A = {nor1 & s0bar & S1 & S2}
+     Q6B = {~((s0bar & S1 & S2 & nor2) | (CLRBAR & Q6_O))}
+     Q7A = {nor1 & S0 & S1 & S2}
+     Q7B = {~((S0 & S1 & S2 & nor2) | (CLRBAR & Q7_O))}

U2 nora(2,8) DPWR DGND
+     Q0A Q0B Q1A Q1B Q2A Q2B Q3A Q3B Q4A Q4B Q5A Q5B Q6A Q6B Q7A Q7B
+     Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(8,0,6) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     CLRBAR D S0 S1 S2 GBAR
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ADDRESS = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+     DATA = {CHANGED(D,0)}
+     ENAB = {CHANGED(GBAR,0)}
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+
+  PINDLY:
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(2ns,-1,12ns),
+         ENAB & TRN_LH, DELAY(4ns,-1,20ns),
+         ENAB & TRN_HL, DELAY(2ns,-1,13ns),
+         ADDRESS & TRN_LH, DELAY(4ns,-1,22ns),
+         ADDRESS & TRN_HL, DELAY(2ns,-1,12ns),
+         DATA & TRN_LH, DELAY(4ns,-1,19ns),
+         DATA & TRN_HL, DELAY(2ns,-1,12ns),
+         DELAY(5ns,-1,23ns))}

U4CON CONSTRAINT(6) DPWR DGND
+     S0 S1 S2 D GBAR CLRBAR
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=10ns
+
+  WIDTH:
+     NODE=GBAR
+     MIN_LO=15ns
+
+  SETUP_HOLD:
+     CLOCK LH=GBAR
+     DATA(1)=D
+     SETUPTIME=15ns
+
+  SETUP_HOLD:
+     CLOCK LH=GBAR
+     DATA(3)=S0 S1 S2
+     SETUPTIME=15ns

.ENDS 74ALS259
*
*
* ----------------------------------------------------------- 74F259 ------
*  8-Bit Addressable Latches
*
*  The Fast TTL Logic Data Book, 1992, Philips Pages 364 to 369
*  bss    3/29/94
*
.SUBCKT 74F259  A0 A1 A2 EBAR D MRBAR Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(14,16) DPWR DGND
+     A0 A1 A2 EBAR D MRBAR Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     Q0A Q0B Q1A Q1B Q2A Q2B Q3A Q3B Q4A Q4B Q5A Q5B Q6A Q6B Q7A Q7B
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a0bar = {~A0}
+     a1bar = {~A1}
+     a2bar = {~A2}
+     nor1 = {~(EBAR | D)}
+     nor2 = {~(EBAR | (~D))}
+     Q0A = {nor1 & a0bar & a1bar & a2bar}
+     Q0B = {~((a0bar & a1bar & a2bar & nor2) | (MRBAR & Q0_O))}
+     Q1A = {nor1 & A0 & a1bar & a2bar}
+     Q1B = {~((A0 & a1bar & a2bar & nor2) | (MRBAR & Q1_O))}
+     Q2A = {nor1 & a0bar & A1 & a2bar}
+     Q2B = {~((a0bar & A1 & a2bar & nor2) | (MRBAR & Q2_O))}
+     Q3A = {nor1 & A0 & A1 & a2bar}
+     Q3B = {~((A0 & A1 & a2bar & nor2) | (MRBAR & Q3_O))}
+     Q4A = {nor1 & a0bar & a1bar & A2}
+     Q4B = {~((a0bar & a1bar & A2 & nor2) | (MRBAR & Q4_O))}
+     Q5A = {nor1 & A0 & a1bar & A2}
+     Q5B = {~((A0 & a1bar & A2 & nor2) | (MRBAR & Q5_O))}
+     Q6A = {nor1 & a0bar & A1 & A2}
+     Q6B = {~((a0bar & A1 & A2 & nor2) | (MRBAR & Q6_O))}
+     Q7A = {nor1 & A0 & A1 & A2}
+     Q7B = {~((A0 & A1 & A2 & nor2) | (MRBAR & Q7_O))}

U2 nora(2,8) DPWR DGND
+     Q0A Q0B Q1A Q1B Q2A Q2B Q3A Q3B Q4A Q4B Q5A Q5B Q6A Q6B Q7A Q7B
+     Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(8,0,6) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     MRBAR D A0 A1 A2 EBAR
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ADDRESS = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0)}
+     DATA = {CHANGED(D,0)}
+     ENAB = {CHANGED(EBAR,0)}
+     CLEAR = {CHANGED_HL(MRBAR,0)}
+
+  PINDLY:
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(5ns,7ns,9ns),
+         ENAB & TRN_LH, DELAY(4.5ns,8ns,10.5ns),
+         ENAB & TRN_HL, DELAY(3ns,5ns,7ns),
+         ADDRESS & TRN_LH, DELAY(5ns,10ns,14ns),
+         ADDRESS & TRN_HL, DELAY(4ns,8.5ns,9.5ns),
+         DATA & TRN_LH, DELAY(4ns,7ns,9ns),
+         DATA & TRN_HL, DELAY(3ns,5ns,7ns),
+         DELAY(6ns,11ns,15ns))}

U4CON CONSTRAINT(6) DPWR DGND
+     A0 A1 A2 D EBAR MRBAR
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=MRBAR
+     MIN_LO=3ns
+
+  WIDTH:
+     NODE=EBAR
+     MIN_LO=8ns
+
+  SETUP_HOLD:
+     CLOCK LH=EBAR
+     DATA(1)=D
+     SETUPTIME_HI=3ns
+     SETUPTIME_LO=7ns
+
+  SETUP_HOLD:
+     CLOCK LH=EBAR
+     DATA(3)=A0 A1 A2
+     SETUPTIME=2ns

.ENDS 74F259
*
*
* ----------------------------------------------------------- 74HC259 ------
*  8-Bit Addressable Latches
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-361 to 2-365
*  bss    3/29/94
*
.SUBCKT 74HC259  S0 S1 S2 GBAR D CLRBAR Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(14,16) DPWR DGND
+     S0 S1 S2 GBAR D CLRBAR Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     Q0A Q0B Q1A Q1B Q2A Q2B Q3A Q3B Q4A Q4B Q5A Q5B Q6A Q6B Q7A Q7B
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     s2bar = {~S2}
+     nor1 = {~(GBAR | D)}
+     nor2 = {~(GBAR | (~D))}
+     Q0A = {nor1 & s0bar & s1bar & s2bar}
+     Q0B = {~((s0bar & s1bar & s2bar & nor2) | (CLRBAR & Q0_O))}
+     Q1A = {nor1 & S0 & s1bar & s2bar}
+     Q1B = {~((S0 & s1bar & s2bar & nor2) | (CLRBAR & Q1_O))}
+     Q2A = {nor1 & s0bar & S1 & s2bar}
+     Q2B = {~((s0bar & S1 & s2bar & nor2) | (CLRBAR & Q2_O))}
+     Q3A = {nor1 & S0 & S1 & s2bar}
+     Q3B = {~((S0 & S1 & s2bar & nor2) | (CLRBAR & Q3_O))}
+     Q4A = {nor1 & s0bar & s1bar & S2}
+     Q4B = {~((s0bar & s1bar & S2 & nor2) | (CLRBAR & Q4_O))}
+     Q5A = {nor1 & S0 & s1bar & S2}
+     Q5B = {~((S0 & s1bar & S2 & nor2) | (CLRBAR & Q5_O))}
+     Q6A = {nor1 & s0bar & S1 & S2}
+     Q6B = {~((s0bar & S1 & S2 & nor2) | (CLRBAR & Q6_O))}
+     Q7A = {nor1 & S0 & S1 & S2}
+     Q7B = {~((S0 & S1 & S2 & nor2) | (CLRBAR & Q7_O))}

U2 nora(2,8) DPWR DGND
+     Q0A Q0B Q1A Q1B Q2A Q2B Q3A Q3B Q4A Q4B Q5A Q5B Q6A Q6B Q7A Q7B
+     Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(8,0,6) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     CLRBAR D S0 S1 S2 GBAR
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ADDRESS = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+     DATA = {CHANGED(D,0)}
+     ENAB = {CHANGED(GBAR,0)}
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+
+  PINDLY:
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,18ns,30ns),
+         ENAB, DELAY(-1,20ns,34ns),
+         ADDRESS, DELAY(-1,21ns,40ns),
+         DATA, DELAY(-1,17ns,26ns),
+         DELAY(-1,22ns,41ns))}

U4CON CONSTRAINT(6) DPWR DGND
+     S0 S1 S2 D GBAR CLRBAR
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=GBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=GBAR
+     DATA(1)=D
+     SETUPTIME=19ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=GBAR
+     DATA(3)=S0 S1 S2
+     SETUPTIME=19ns
+     HOLDTIME=5ns

.ENDS 74HC259
*
*
* ----------------------------------------------------------- 74HCT259 ------
*  8-Bit Addressable Latches
*
*  The High Speed CMOS Logic Data Book, 1994, Philips Pages 545 to 550
*  bss    3/29/94
*
.SUBCKT 74HCT259  A0 A1 A2 LEBAR D MRBAR Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(14,16) DPWR DGND
+     A0 A1 A2 LEBAR D MRBAR Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     Q0A Q0B Q1A Q1B Q2A Q2B Q3A Q3B Q4A Q4B Q5A Q5B Q6A Q6B Q7A Q7B
+     D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a0bar = {~A0}
+     a1bar = {~A1}
+     a2bar = {~A2}
+     nor1 = {~(LEBAR | D)}
+     nor2 = {~(LEBAR | (~D))}
+     Q0A = {nor1 & a0bar & a1bar & a2bar}
+     Q0B = {~((a0bar & a1bar & a2bar & nor2) | (MRBAR & Q0_O))}
+     Q1A = {nor1 & A0 & a1bar & a2bar}
+     Q1B = {~((A0 & a1bar & a2bar & nor2) | (MRBAR & Q1_O))}
+     Q2A = {nor1 & a0bar & A1 & a2bar}
+     Q2B = {~((a0bar & A1 & a2bar & nor2) | (MRBAR & Q2_O))}
+     Q3A = {nor1 & A0 & A1 & a2bar}
+     Q3B = {~((A0 & A1 & a2bar & nor2) | (MRBAR & Q3_O))}
+     Q4A = {nor1 & a0bar & a1bar & A2}
+     Q4B = {~((a0bar & a1bar & A2 & nor2) | (MRBAR & Q4_O))}
+     Q5A = {nor1 & A0 & a1bar & A2}
+     Q5B = {~((A0 & a1bar & A2 & nor2) | (MRBAR & Q5_O))}
+     Q6A = {nor1 & a0bar & A1 & A2}
+     Q6B = {~((a0bar & A1 & A2 & nor2) | (MRBAR & Q6_O))}
+     Q7A = {nor1 & A0 & A1 & A2}
+     Q7B = {~((A0 & A1 & A2 & nor2) | (MRBAR & Q7_O))}

U2 nora(2,8) DPWR DGND
+     Q0A Q0B Q1A Q1B Q2A Q2B Q3A Q3B Q4A Q4B Q5A Q5B Q6A Q6B Q7A Q7B
+     Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10DLY PINDLY(8,0,6) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     MRBAR D A0 A1 A2 LEBAR
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ADDRESS = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0)}
+     DATA = {CHANGED(D,0)}
+     ENAB = {CHANGED(LEBAR,0)}
+     CLEAR = {CHANGED_HL(MRBAR,0)}
+
+  PINDLY:
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,23ns,39ns),
+         ENAB, DELAY(-1,22ns,38ns),
+         ADDRESS, DELAY(-1,25ns,41ns),
+         DATA, DELAY(-1,23ns,39ns),
+         DELAY(-1,26ns,42ns))}

U11CON CONSTRAINT(6) DPWR DGND
+     A0 A1 A2 D LEBAR MRBAR
+     IO_HCT IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=MRBAR
+     MIN_LO=23ns
+
+  WIDTH:
+     NODE=LEBAR
+     MIN_LO=24ns
+
+  SETUP_HOLD:
+     CLOCK LH=LEBAR
+     DATA(1)=D
+     SETUPTIME=21ns
+
+  SETUP_HOLD:
+     CLOCK LH=LEBAR
+     DATA(3)=A0 A1 A2
+     SETUPTIME=21ns

.ENDS 74HCT259

*--------------------------------------------------------------74LS259-----

* 8-Bit Addressable Latches
* National LS/S/TTL Logic Databbok, 1989, pages 2-301 to 2-303
* jat 8/8/96

.SUBCKT 74LS259 EBAR CLRBAR D A B C Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(14,10) DPWR DGND
+ EBAR CLRBAR D A B C Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ E RESET D0 D1 D2 D3 D4 D5 D6 D7
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+     E = {~EBAR}
+     RESET = {CLRBAR | E}
+     D0 = {(~C & ~B & ~A & D & ~CLRBAR) | (CLRBAR & ~C & ~B & ~A & D) |
+           (CLRBAR & (~(~C & ~B & ~A)) & Q0O)}
+     D1 = {(~C & ~B & A & D & ~CLRBAR) | (CLRBAR & ~C & ~B & A & D) |
+           (CLRBAR & (~(~C & ~B & A)) & Q1O)}
+     D2 = {(~C & B & ~A & D & ~CLRBAR) | (CLRBAR & ~C & B & ~A & D) |
+           (CLRBAR & (~(~C & B & ~A)) & Q2O)}
+     D3 = {(~C & B & A & D & ~CLRBAR) | (CLRBAR & ~C & B & A & D) |
+           (CLRBAR & (~(~C & B & A)) & Q3O)}
+     D4 = {(C & ~B & ~A & D & ~CLRBAR) | (CLRBAR & C & ~B & ~A & D) |
+           (CLRBAR & (~(C & ~B & ~A)) & Q4O)}
+     D5 = {(C & ~B & A & D & ~CLRBAR) | (CLRBAR & C & ~B & A & D) |
+           (CLRBAR & (~(C & ~B & A)) & Q5O)}
+     D6 = {(C & B & ~A & D & ~CLRBAR) | (CLRBAR & C & B & ~A & D) |
+           (CLRBAR & (~(C & B & ~A)) & Q6O)}
+     D7 = {(C & B & A & D & ~CLRBAR) | (CLRBAR & C & B & A & D) |
+           (CLRBAR & (~(C & B & A)) & Q7O)}

U2 DLTCH(8) DPWR DGND
+ $D_HI RESET E
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(8,0,6) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ D A B C EBAR CLRBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    DATA = {CHANGED(D,0)}
+    ENABLE = {CHANGED_HL(EBAR,0)}
+    ADDRESS = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0)}
+    RESET = {CHANGED_HL(CLRBAR,0)}
+ PINDLY:
+      Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+         CASE(
+			    RESET & TRN_HL, DELAY(-1,-1,18NS),
+    			 ENABLE & TRN_LH, DELAY(-1,-1,27NS),
+    			 ENABLE & TRN_HL, DELAY(-1,-1,24NS),
+    			 ADDRESS & TRN_LH, DELAY(-1,-1,30NS),
+    			 ADDRESS & TRN_HL, DELAY(-1,-1,29NS),
+    			 DATA & TRN_LH, DELAY(-1,-1,30NS),
+    			 DATA & TRN_HL, DELAY(-1,-1,20NS),
+    			 DELAY(-1,-1,31NS))}

U4 CONSTRAINT(6) DPWR DGND
+ EBAR CLRBAR D A B C
+ IO_LS IO_LEVEL={IO_LEVEL}
+ WIDTH:
+    NODE = EBAR
+    MIN_LO = 15NS
+ WIDTH:
+    NODE = CLRBAR
+    MIN_LO = 15NS
+ SETUP_HOLD:
+    CLOCK LH = EBAR
+    DATA(1) = D
+    SETUPTIME = 15NS
+ SETUP_HOLD:
+    CLOCK LH = EBAR
+    DATA(3) = A B C
+    SETUPTIME = 15NS

.ENDS 74LS259

* ----------------------------------------------------------- 74LS259B ------
*  8-Bit Addressable Latches
*
*  The TTL Logic Data Book, 1988, TI Pages 2-735 to 2-738
*  bss    3/29/94
*
.SUBCKT 74LS259B  S0 S1 S2 GBAR D CLRBAR Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(14,16) DPWR DGND
+     S0 S1 S2 GBAR D CLRBAR Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     Q0A Q0B Q1A Q1B Q2A Q2B Q3A Q3B Q4A Q4B Q5A Q5B Q6A Q6B Q7A Q7B
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     s2bar = {~S2}
+     nor1 = {~(GBAR | D)}
+     nor2 = {~(GBAR | (~D))}
+     Q0A = {nor1 & s0bar & s1bar & s2bar}
+     Q0B = {~((s0bar & s1bar & s2bar & nor2) | (CLRBAR & Q0_O))}
+     Q1A = {nor1 & S0 & s1bar & s2bar}
+     Q1B = {~((S0 & s1bar & s2bar & nor2) | (CLRBAR & Q1_O))}
+     Q2A = {nor1 & s0bar & S1 & s2bar}
+     Q2B = {~((s0bar & S1 & s2bar & nor2) | (CLRBAR & Q2_O))}
+     Q3A = {nor1 & S0 & S1 & s2bar}
+     Q3B = {~((S0 & S1 & s2bar & nor2) | (CLRBAR & Q3_O))}
+     Q4A = {nor1 & s0bar & s1bar & S2}
+     Q4B = {~((s0bar & s1bar & S2 & nor2) | (CLRBAR & Q4_O))}
+     Q5A = {nor1 & S0 & s1bar & S2}
+     Q5B = {~((S0 & s1bar & S2 & nor2) | (CLRBAR & Q5_O))}
+     Q6A = {nor1 & s0bar & S1 & S2}
+     Q6B = {~((s0bar & S1 & S2 & nor2) | (CLRBAR & Q6_O))}
+     Q7A = {nor1 & S0 & S1 & S2}
+     Q7B = {~((S0 & S1 & S2 & nor2) | (CLRBAR & Q7_O))}

U2 nora(2,8) DPWR DGND
+     Q0A Q0B Q1A Q1B Q2A Q2B Q3A Q3B Q4A Q4B Q5A Q5B Q6A Q6B Q7A Q7B
+     Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10DLY PINDLY(8,0,6) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     CLRBAR D S0 S1 S2 GBAR
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ADDRESS = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+     DATA = {CHANGED(D,0)}
+     ENAB = {CHANGED(GBAR,0)}
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+
+  PINDLY:
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,12ns,18ns),
+         ENAB, DELAY(-1,15ns,24ns),
+         ADDRESS & TRN_LH, DELAY(-1,17ns,27ns),
+         ADDRESS & TRN_HL, DELAY(-1,14ns,20ns),
+         DATA & TRN_LH, DELAY(-1,19ns,30ns),
+         DATA & TRN_HL, DELAY(-1,13ns,20ns),
+         DELAY(-1,20ns,31ns))}

U11CON CONSTRAINT(6) DPWR DGND
+     S0 S1 S2 D GBAR CLRBAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=10ns
+
+  WIDTH:
+     NODE=GBAR
+     MIN_LO=17ns
+
+  SETUP_HOLD:
+     CLOCK LH=GBAR
+     DATA(1)=D
+     SETUPTIME=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=GBAR
+     DATA(3)=S0 S1 S2
+     SETUPTIME=17ns

.ENDS 74LS259B

*--------------------------------------------------------------74F260----

* Dual 5 Input Positive NOR Gate
* TI F Logic Data Book, 1994, pages 2-201 to 2-202
* jat 7/3/96

.SUBCKT 74F260 1A 1B 1C 1D 1E 1Y
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 NOR(5) DPWR DGND
+ 1A 1B 1C 1D 1E
+ 1Y
+ DLY_F260 IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.MODEL DLY_F260 UGATE (TPLHMN=1.7NS TPLHTY=4NS TPLHMX=5.5NS
+                      TPHLMN=1NS   TPHLTY=2.5NS TPHLMX=4NS)

.ENDS 74F260

*--------------------------------------------------------------74LS260----

* Dual 5 Input NOR Gate
* National LS/S/TTL Logic Databook, 1989, pages 2-304 to 2-305
* jat 8/8/96

.SUBCKT 74LS260 1A 1B 1C 1D 1E 1Y
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 NOR(5) DPWR DGND
+ 1A 1B 1C 1D 1E
+ 1Y
+ DLY_LS260 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.MODEL DLY_LS260 UGATE (TPLHMX=10NS TPHLMX=12NS)

.ENDS 74LS260

* ----------------------------------------------------------- 74S260 ------
*  Dual 5-Input Nor Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-739 to 2-741
*  bss    3/29/94
*
.SUBCKT 74S260  1A 1B 1C 1D 1E 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nor(5) DPWR DGND
+     1A 1B 1C 1D 1E
+     1Y
+     DLY_S260 IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_S260 ugate (tplhTY=4ns tplhMX=5.5ns tphlTY=4ns tphlMX=6ns)

.ENDS 74S260
*
*
* ----------------------------------------------------------- 74LS261 ------
*  2-Bit By 4-Bit Parallel Binary Multipliers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-743 to 2-749
*  bss    3/29/94
*
.SUBCKT 74LS261  B0 B1 B2 B3 B4 M0 M1 M2 C Q0 Q1 Q2 Q3 Q4BAR
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,5) DPWR DGND
+     B0 B1 B2 B3 B4 M0 M1 M2 C
+     Q0_O Q1_O Q2_O Q3_O Q4BAR_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     b0bar = {~B0}
+     b1bar = {~B1}
+     b2bar = {~B2}
+     b3bar = {~B3}
+     b4bar = {~B4}
+     cbar = {~C}
+     andm = {M0 & M1}
+     norm1 = {~(M0 | M1)}
+     norm2 = {~(andm | norm1)}
+     normc1 = {~(cbar | M2)}
+     normc2 = {~(cbar | normc1)}
+     Q0_O = {(B0 & andm & normc1) | (b0bar & norm1 & normc2) |
+         (B1 & norm2 & normc1) | (b1bar & norm2 & normc2) | (cbar & Q0_O)}
+     Q1_O = {(B1 & andm & normc1) | (b1bar & norm1 & normc2) |
+         (B2 & norm2 & normc1) | (b2bar & norm2 & normc2) | (cbar & Q1_O)}
+     Q2_O = {(B2 & andm & normc1) | (b2bar & norm1 & normc2) |
+         (B3 & norm2 & normc1) | (b3bar & norm2 & normc2) | (cbar & Q2_O)}
+     Q3_O = {(B3 & andm & normc1) | (b3bar & norm1 & normc2) |
+         (B4 & norm2 & normc1) | (b4bar & norm2 & normc2) | (cbar & Q3_O)}
+     Q4BAR_O = {~((B4 & andm & normc1) | (b4bar & norm1 & normc2) |
+         (B4 & norm2 & normc1) | (b4bar & norm2 & normc2) |
+         (cbar & (~Q4BAR_O)))}

U2DLY PINDLY(5,0,9) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O Q4BAR_O
+     B0 B1 B2 B3 B4 M0 M1 M2 C
+     Q0 Q1 Q2 Q3 Q4BAR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     LATCH = {CHANGED(C,0)}
+     MULT = {CHANGED(M0,0) | CHANGED(M1,0) | CHANGED(M2,0)}
+     IN = {CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) |
+        CHANGED(B4,0)}
+
+  PINDLY:
+     Q0 Q1 Q2 Q3 Q4BAR = {
+       CASE(
+         LATCH & TRN_LH, DELAY(-1,22ns,35ns),
+         LATCH & TRN_HL, DELAY(-1,20ns,30ns),
+         IN & TRN_LH, DELAY(-1,27ns,42ns),
+         IN & TRN_HL, DELAY(-1,24ns,37ns),
+         MULT & TRN_LH, DELAY(-1,25ns,40ns),
+         MULT & TRN_HL, DELAY(-1,22ns,35ns),
+         DELAY(-1,28ns,43ns))}

U3CON CONSTRAINT(9) DPWR DGND
+     B0 B1 B2 B3 B4 M0 M1 M2 C
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=C
+     MIN_HI=25ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(3)=M0 M1 M2
+     SETUPTIME=17ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(5)=B0 B1 B2 B3 B4
+     SETUPTIME=15ns

.ENDS 74LS261
*
*
* ----------------------------------------------------------- 74AS264 ------
*  Look Ahead Carry Generators For Counters
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-313 to 2-317
*  bss    3/29/94
*
.SUBCKT 74AS264  CE A0 A1 A2 A3 B0 B1 B2 B3 C0 C1 C2 RCOA RCOB
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,5) DPWR DGND
+     CE A0 A1 A2 A3 B0 B1 B2 B3
+     C0_O C1_O C2_O RCOA_O RCOB_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     RCOB_O = {B0 | B1 | B2 | B3 | CE}
+     RCOA_O = {(CE & A0 & A1 & A2 & A3) | (B1 & A1 & A2 & A3) |
+         (B2 & A2 & A3) | (B3 & A3)}
+     C2_O = {(CE & A0 & A1 & A2) | (B0 & A0 & A1 & A2) |
+         (B1 & A1 & A2) | (B2 & A2)}
+     C1_O = {(CE & A0 & A1) | (B0 & A0 & A1) | (B1 & A1)}
+     C0_O = {(CE & A0) | (B0 & A0)}

U2DLY PINDLY(5,0,9) DPWR DGND
+     C0_O C1_O C2_O RCOA_O RCOB_O
+     CE A0 A1 A2 A3 B0 B1 B2 B3
+     C0 C1 C2 RCOA RCOB
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATAA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0)}
+     DATAB = {CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0)}
+     CARRY = {CHANGED(CE,0)}
+
+  PINDLY:
+     C0 C1 C2 = {
+       CASE(
+         CARRY & TRN_LH, DELAY(-1,6ns,-1),
+         CARRY & TRN_HL, DELAY(-1,5ns,-1),
+         DATAA | DATAB, DELAY(-1,5ns,-1),
+         DELAY(-1,7ns,-1))}
+
+     RCOA RCOB= {
+       CASE(
+         DELAY(-1,5ns,-1))}

.ENDS 74AS264
*
*
* ----------------------------------------------------------- 74265 ------
*  Look Ahead Carry Generators For Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-751 to 2-755
*  bss    3/29/94
*
.SUBCKT 74265  1A 2A 2B 1W 1Y 2W 2Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(3,4) DPWR DGND
+     1A 2A 2B
+     1W_O 1Y_O 2W_O 2Y_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     1W_O = {1A}
+     1Y_O = {~1A}
+     2W_O = {2A & 2B}
+     2Y_O = {~(2A & 2B)}

U2DLY PINDLY(4,0,0) DWPR DGND
+     1W_O 1Y_O 2W_O 2Y_O
+     1W 1Y 2W 2Y
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     1W 2W = {
+       CASE(
+         TRN_LH, DELAY(-1,11.6ns,18ns),
+         TRN_HL, DELAY(-1,9.8ns,18ns),
+         DELAY(-1,12.6ns,19ns))}
+
+     1Y 2Y = {
+       CASE(
+         TRN_LH, DELAY(-1,10.2ns,18ns),
+         TRN_HL, DELAY(-1,11.3ns,18ns),
+         DELAY(-1,12.3ns,19ns))}

.ENDS 74265
*
*
* ----------------------------------------------------------- 74HC266 ------
*  Quad 2-Input Exclusive-Nor Gates With Open-Drain Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-367 to 2-369
*  bss    3/29/94
*
.SUBCKT 74HC266  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nxor DPWR DGND
+     1A 1B 1Y
+     DLY_HC266 IO_HC_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC266 ugate (tplhTY=13ns tplhMX=25ns tphlTY=13ns tphlMX=20ns)

.ENDS 74HC266
*
*
* ----------------------------------------------------------- 74LS266 ------
*  Quad 2-Input Exclusive-Nor Gates With Open-Collector Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-757 to 2-758
*  bss    3/29/94
*
.SUBCKT 74LS266  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nxor DPWR DGND
+     1A 1B 1Y
+     DLY_LS266 IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LS266 ugate (tplhTY=18ns tplhMX=30ns tphlTY=18ns tphlMX=30ns)

.ENDS 74LS266
*
*
* ----------------------------------------------------------- 74S268 ------
*  Hex D-Type Transparent Latches With 3-State Outputs
*
*  The TTL Logic Data Book, Vol. 2, 1985, TI Pages 3-885 to 3-887
*  bss    3/29/94
*
.SUBCKT 74S268  OCBAR C 1D 2D 3D 4D 5D 6D 1Q 2Q 3Q 4Q 5Q 6Q
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(6) DPWR DGND
+     $D_HI $D_HI C 1D 2D 3D 4D 5D 6D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(6,1,7) DWPR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O
+     OCBAR
+     C 1D 2D 3D 4D 5D 6D
+     1Q 2Q 3Q 4Q 5Q 6Q
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) |
+          CHANGED(4D,0) | CHANGED(5D,0) | CHANGED(6D,0)}
+     LATCH = {CHANGED(C,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1Q 2Q 3Q 4Q 5Q 6Q = {
+       CASE(
+         LATCH & TRN_LH, DELAY(-1,7ns,14ns),
+         LATCH & TRN_HL, DELAY(-1,12ns,18ns),
+         DATA, DELAY(-1,7ns,12ns),
+         TRN_ZH, DELAY(-1,8ns,15ns),
+         TRN_ZL, DELAY(-1,11ns,18ns),
+         TRN_HZ, DELAY(-1,6ns,9ns),
+         TRN_LZ, DELAY(-1,8ns,12ns),
+         DELAY(-1,13ns,19ns))}

U3CON CONSTRAINT(7) DPWR DGND
+     C 1D 2D 3D 4D 5D 6D
+     IO_S IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=C
+     MIN_HI=6ns
+     MIN_LO=7.3ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(6)=1D 2D 3D 4D 5D 6D
+     HOLDTIME=10ns

.ENDS 74S268

*-------------------------------------------------------------74F269	-----

* 8 Bit Bidirectional Binary Counter
* National Advanced Bipolar Logic Databook, 1995, pages 7-216 to 7-219
* jat 7/9/96

.SUBCKT 74F269 PEBAR CEPBAR CETBAR U/DBAR CP P0 P1 P2 P3 P4 P5 P6 P7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 TCBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(29,18) DPWR DGND
+ CP U/DBAR PEBAR CEPBAR CETBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0O Q1O Q2O Q3O Q4O
+ Q5O Q6O Q7O Q0BARO Q1BARO Q2BARO Q3BARO Q4BARO Q5BARO Q6BARO Q7BARO
+ CPBAR J0 J1 J2 J3 J4 J5 J6 J7 K0 K1 K2 K3 K4 K5 K6 K7 TCBARO
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   CPBAR = {~CP}
+   ENAB = {~(CETBAR | CEPBAR | ~PEBAR)} 
+   NAND0A = {~(~PEBAR & P0)}
+   NAND0B = {~(~PEBAR & NAND0A)}
+   XNOR0 = {~(PEBAR ^ ENAB)}
+   J0 = {NAND0B & XNOR0}
+   K0 = {NAND0A & XNOR0}
+   A0 = {~((Q0O & ~U/DBAR) | (Q0BARO & U/DBAR))}
+   NAND1A = {~(~PEBAR & P1)}
+   NAND1B = {~(~PEBAR & NAND1A)}
+   T1 = {ENAB & A0}
+   XNOR1 = {~(PEBAR ^ T1)}
+   J1 = {NAND1B & XNOR1}
+   K1 = {NAND1A & XNOR1}
+   A1 = {~((Q1O & ~U/DBAR) | (Q1BARO & U/DBAR))}
+   NAND2A = {~(~PEBAR & P2)}
+   NAND2B = {~(~PEBAR & NAND2A)}
+   T2 = {ENAB & A0 & A1}
+   XNOR2 = {~(PEBAR ^ T2)}
+   J2 = {NAND2B & XNOR2}
+   K2 = {NAND2A & XNOR2}
+   A2 = {~((Q2O & ~U/DBAR) | (Q2BARO & U/DBAR))}
+   NAND3A = {~(~PEBAR & P3)}
+   NAND3B = {~(~PEBAR & NAND3A)}
+   T3 = {ENAB & A0 & A1 & A2}
+   XNOR3 = {~(PEBAR ^ T3)}
+   J3 = {NAND3B & XNOR3}
+   K3 = {NAND3A & XNOR3}
+   A3 = {~((Q3O & ~U/DBAR) | (Q3BARO & U/DBAR))}
+   NAND4A = {~(~PEBAR & P4)}
+   NAND4B = {~(~PEBAR & NAND4A)}
+   T4 = {ENAB & A0 & A1 & A2 & A3}
+   XNOR4 = {~(PEBAR ^ T4)}
+   J4 = {NAND1B & XNOR4}
+   K4 = {NAND1A & XNOR4}
+   A4 = {~((Q4O & ~U/DBAR) | (Q4BARO & U/DBAR))}
+   NAND5A = {~(~PEBAR & P5)}
+   NAND5B = {~(~PEBAR & NAND5A)}
+   T5 = {ENAB & A0 & A1 & A2 & A3 & A4}
+   XNOR5 = {~(PEBAR ^ T5)}
+   J5 = {NAND5B & XNOR5}
+   K5 = {NAND5A & XNOR5}
+   A5 = {~((Q5O & ~U/DBAR) | (Q5BARO & U/DBAR))}
+   NAND6A = {~(~PEBAR & P6)}
+   NAND6B = {~(~PEBAR & NAND6A)}
+   T6 = {ENAB & A0 & A1 & A2 & A3 & A4 & A5}
+   XNOR6 = {~(PEBAR ^ T6)}
+   J6 = {NAND6B & XNOR6}
+   K6 = {NAND6A & XNOR6}
+   A6 = {~((Q6O & ~U/DBAR) | (Q6BARO & U/DBAR))}
+   NAND7A = {~(~PEBAR & P7)}
+   NAND7B = {~(~PEBAR & NAND7A)}
+   T7 = {ENAB & A0 & A1 & A2 & A3 & A4 & A5 & A6}
+   XNOR7 = {~(PEBAR ^ T7)}
+   J7 = {NAND1B & XNOR7}
+   K7 = {NAND1A & XNOR7}
+   A7 = {~((Q7O & ~U/DBAR) | (Q7BARO & U/DBAR))}
+   TCBARO = {~(~CETBAR & A0 & A1 & A2 & A3 & A4 & A5 & A6 & A7)}

U2 JKFF(8) DPWR DGND
+ $D_HI $D_HI CPBAR
+ J0 J1 J2 J3 J4 J5 J6 J7 K0 K1 K2 K3 K4 K5 K6 K7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ Q0BARO Q1BARO Q2BARO Q3BARO Q4BARO Q5BARO Q6BARO Q7BARO
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(9,0,4) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O TCBARO
+ CP U/DBAR CETBAR PEBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 TCBAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   EDGE = {CHANGED_LH(CP,0)}
+   UPDOWN = {CHANGED(U/DBAR,0)}
+   CET = {CHANGED(CETBAR,0)}
+ PINDLY:
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+        CASE(
+           EDGE & (PEBAR=='0) & TRN_LH, DELAY(3.5NS,-1,7NS),
+           EDGE & (PEBAR=='0) & TRN_HL, DELAY(3.5NS,-1,7NS),
+           EDGE & (PEBAR=='1 & U/DBAR=='1) & TRN_LH, DELAY(3.5NS,-1,8NS),
+           EDGE & (PEBAR=='1 & U/DBAR=='1) & TRN_HL, DELAY(4.5NS,-1,10NS),
+           EDGE & (PEBAR=='1 & U/DBAR=='0) & TRN_LH, DELAY(3.5NS,-1,10.5NS),
+           EDGE & (PEBAR=='1 & U/DBAR=='0) & TRN_HL, DELAY(4.5NS,-1,10.5NS),
+           DELAY(5.5NS,-1,11.5NS))}
+    TCBAR = {
+      CASE(
+        CET & TRN_LH, DELAY(3NS,-1,7NS),
+        CET & TRN_HL, DELAY(3NS,-1,10.5NS),
+        UPDOWN & TRN_LH, DELAY(3.5NS,-1,7.5NS),
+        UPDOWN & TRN_HL, DELAY(4.5NS,-1,7.5NS),
+        EDGE & TRN_LH, DELAY(4.5NS,-1,10NS),
+        EDGE & TRN_HL, DELAY(5NS,-1,10NS),
+        DELAY(6NS,-1,11.5NS))}

U4 CONSTRAINT(13) DPWR DGND
+ P0 P1 P2 P3 P4 P5 P6 P7 CP PEBAR CETBAR CEPBAR U/DBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CP
+   MAXFREQ = 100MEG
+ WIDTH:
+   NODE = CP
+   MIN_LO = 3.5NS
+   MIN_HI = 3.5NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(8) = P0 P1 P2 P3 P4 P5 P6 P7
+   SETUPTIME_HI = 3.5NS
+   SETUPTIME_LO = 3NS
+   HOLDTIME = 1NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(1) = PEBAR
+   SETUPTIME = 5.5NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(2) = CEPBAR CETBAR
+   SETUPTIME_HI = 6NS
+   SETUPTIME_LO = 8NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(1) = U/DBAR
+   SETUPTIME_HI = 8NS
+   SETUPTIME_LO = 6NS

.ENDS 74F269

* ----------------------------------------------------------- 74273 ------
*  Octal D-Type Flip-Flop With Clear
*
*  The TTL Logic Data Book, 1988, TI Pages 2-759 to 2-762
*  bss    3/30/94
*
.SUBCKT 74273  CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_273 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_273 ueff (tppcqhlTY=18ns tppcqhlMX=27ns twpclMN=16.5ns
+            tpclkqlhTY=17ns tpclkqlhMX=27ns tpclkqhlTY=18ns
+            tpclkqhlMX=27ns twclklMN=16.5ns twclkhMN=16.5ns
+            tsudclkMN=20ns tsupcclkhMN=25ns thdclkMN=5ns)

.ENDS 74273
*
*
* ----------------------------------------------------------- 74AC273 ------
*  Octal D-Type Flip-Flop With Clear
*
*  The Advanced CMOS Logic Data Book, 1993, TI Pages 2-335 to 2-339
*  bss    3/30/94
*  This part is shown in the data book as a 74AC11273
*
.SUBCKT 74AC273  CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_AC273 IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AC273 ueff (tppcqhlMN=4.3ns tppcqhlTY=9.2ns tppcqhlMX=10.9ns
+            tpclkqlhMN=3.5ns tpclkqlhTY=7.7ns tpclkqlhMX=9.3ns
+            tpclkqhlMN=4.5ns tpclkqhlTY=9.3ns tpclkqhlMX=11ns
+            twclklMN=6.3ns twclkhMN=6.3ns
+            tsudclkMN=5ns tsupcclkhMN=4.5ns twpclMN=5ns)

.ENDS 74AC273
*
*
* ----------------------------------------------------------- 74ACT273 ------
*  Octal D-Type Flip-Flop With Clear
*
*  The Advanced CMOS Logic Data Book, 1993, TI Pages 2-341 to 2-344
*  bss    3/30/94
*  This part is shown in the data book as a 74ACT11273
*
.SUBCKT 74ACT273  CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_ACT273 IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2CON CONSTRAINT(10) DPWR DGND
+     CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_ACT IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=5.9ns
+     MIN_LO=5.9ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLRBAR
+     SETUPTIME=4ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME_HI=4ns
+     SETUPTIME_LO=5ns
+     HOLDTIME=1ns

.model DLY_ACT273 ueff (tppcqhlMN=4.4ns tppcqhlTY=9.5ns tppcqhlMX=12ns
+            tpclkqlhMN=5.4ns tpclkqlhTY=9.4ns tpclkqlhMX=11.4ns
+            tpclkqhlMN=6ns tpclkqhlTY=10.3ns tpclkqhlMX=12.5ns)

.ENDS 74ACT273
*
*
* ----------------------------------------------------------- 74ALS273 ------
*  Octal D-Type Flip-Flop With Clear
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-319 to 2-321
*  bss    3/30/94
*
.SUBCKT 74ALS273  CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_ALS273 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS273 ueff (tppcqhlMN=4ns tppcqhlMX=18ns
+            tpclkqlhMN=2ns tpclkqlhMX=12ns
+            tpclkqhlMN=3ns tpclkqhlMX=15ns
+            twclklMN=14ns twclkhMN=14ns
+            tsudclkMN=10ns tsupcclkhMN=15ns twpclMN=10ns)

.ENDS 74ALS273
*
*
* ----------------------------------------------------------- 74F273 ------
*  Octal D-Type Flip-Flop With Clear
*
*  The Fast TTL Logic Data Book, 1992, Philips Pages 381 to 386
*  bss    3/30/94
*
.SUBCKT 74F273  MRBAR CP D0 D1 D2 D3 D4 D5 D6 D7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI MRBAR CP D0 D1 D2 D3 D4 D5 D6 D7
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_F273 IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_F273 ueff (tppcqhlMN=4ns tppcqhlTY=5.5ns tppcqhlMX=8.5ns
+            tpclkqlhMN=4ns tpclkqlhTY=7.5ns tpclkqlhMX=9.5ns
+            tpclkqhlMN=4ns tpclkqhlTY=7.5ns tpclkqhlMX=9.5ns
+            twclklMN=5.5ns twclkhMN=4ns
+            tsudclkMN=3ns tsupcclkhMN=9ns twpclMN=4.5ns)

.ENDS 74F273

* ----------------------------------------------------------- 74F273A------

*  Octal D-Type Flip-Flop With Clear
*  The Fast TTL Logic Data Book, 1992, Philips Pages 381 to 386
*  jat  7/10/96

.SUBCKT 74F273A  MRBAR CP D0 D1 D2 D3 D4 D5 D6 D7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI MRBAR CP D0 D1 D2 D3 D4 D5 D6 D7
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_F273A IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_F273A ueff (tppcqhlMN=5ns tppcqhlTY=7ns tppcqhlMX=9ns
+            tpclkqlhMN=3.5ns tpclkqlhTY=5ns tpclkqlhMX=8ns
+            tpclkqhlMN=5ns tpclkqhlTY=7ns tpclkqhlMX=9.5ns
+            twclklMN=3.5ns twclkhMN=4.5ns
+            tsudclkMN=2.5ns tsupcclkhMN=4ns twpclMN=3ns)

.ENDS 74F273A


* ----------------------------------------------------------- 74HC273 ------
*  Octal D-Type Flip-Flop With Clear
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-371 to 2-374
*  bss    3/30/94
*
.SUBCKT 74HC273  CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_HC273 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC273 ueff (tppcqhlTY=15ns tppcqhlMX=32ns twpclMN=20ns
+            tpclkqlhTY=15ns tpclkqlhMX=32ns tpclkqhlTY=15ns
+            tpclkqhlMX=32ns twclklMN=20ns twclkhMN=20ns
+            tsudclkMN=25ns tsupcclkhMN=25ns)

.ENDS 74HC273

*-----------------------------------------------------------------74HC273A---

* Octal D Flip-Flop with Common Clock and Reset
* Motorola High-Speed CMOS Data, 1993, pages 5-279 to 5-282
* jat 9/11/96

.SUBCKT 74HC273A
+ CLOCK RESET D0 D1 D2 D3 D4 D5 D6 D7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI RESET CLOCK
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,0,2) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ RESET CLOCK
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLEAR = {CHANGED_HL(RESET,0)}
+   EDGE = {CHANGED_LH(CLOCK,0)}
+ PINDLY:
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+      CLEAR & TRN_HL, DELAY(-1,-1,29NS),
+      EDGE & (TRN_LH | TRN_HL), DELAY(-1,-1,29NS),
+      DELAY(-1,-1,30NS))}

U3 CONSTRAINT(10) DPWR DGND
+ CLOCK RESET D0 D1 D2 D3 D4 D5 D6 D7
+ IO_HC IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CLOCK
+  MAXFREQ = 30MEG
+ WIDTH:
+  NODE = CLOCK
+  MIN_LO = 12NS
+  MIN_HI = 12NS
+ SETUP_HOLD:
+  CLOCK LH = CLOCK
+  DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+  SETUPTIME = 12NS
+  HOLDTIME = 3NS
+ WIDTH:
+  NODE = RESET
+  MIN_LO = 12NS
+ SETUP_HOLD:
+  CLOCK LH = CLOCK
+  DATA(1) = RESET
+  SETUPTIME_HI = 5NS

.ENDS 74HC273A

*-----------------------------------------------------------------74HCT273---

* Octal D-Type Flip-Flop with Reset; Positive-Edge Triggered
* Philips High-speed CMOS Logi Data Handbook, 1994, pages 551 to 555
* jat 9/11/96

.SUBCKT 74HCT273
+ CP MRBAR D0 D1 D2 D3 D4 D5 D6 D7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI MRBAR CP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,0,2) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ MRBAR CP
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   RESET = {CHANGED_HL(MRBAR,0)}
+   EDGE = {CHANGED_LH(CP,0)}
+ PINDLY:
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+      RESET & TRN_HL, DELAY(-1,16NS,30NS),
+      EDGE & (TRN_LH | TRN_HL), DELAY(-1,15NS,30NS),
+      DELAY(-1,17NS,31NS))}

U3 CONSTRAINT(10) DPWR DGND
+ CP MRBAR D0 D1 D2 D3 D4 D5 D6 D7
+ IO_HCT IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CP
+  MAXFREQ = 103MEG
+ WIDTH:
+  NODE = CP
+  MIN_LO = 5NS
+  MIN_HI = 5NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+  SETUPTIME = 4NS
+ WIDTH:
+  NODE = MRBAR
+  MIN_LO = 6NS

.ENDS 74HCT273

*-----------------------------------------------------------------74HCT273A---

* Octal D Flip-Flop with Common Clock and Reset
* Motorola High-Speed CMOS Data, 1993, pages 5-283 to 5-286
* jat 9/11/96

.SUBCKT 74HCT273A
+ CLOCK RESET D0 D1 D2 D3 D4 D5 D6 D7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI RESET CLOCK
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,0,2) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ RESET CLOCK
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLEAR = {CHANGED_HL(RESET,0)}
+   EDGE = {CHANGED_LH(CLOCK,0)}
+ PINDLY:
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+      CLEAR & TRN_HL, DELAY(-1,-1,25NS),
+      EDGE & (TRN_LH | TRN_HL), DELAY(-1,-1,25NS),
+      DELAY(-1,-1,26NS))}

U3 CONSTRAINT(10) DPWR DGND
+ CLOCK RESET D0 D1 D2 D3 D4 D5 D6 D7
+ IO_HCT IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CLOCK
+  MAXFREQ = 30MEG
+ WIDTH:
+  NODE = CLOCK
+  MIN_LO = 12NS
+  MIN_HI = 12NS
+ SETUP_HOLD:
+  CLOCK LH = CLOCK
+  DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+  SETUPTIME = 10NS
+  HOLDTIME = 3NS
+ WIDTH:
+  NODE = RESET
+  MIN_LO = 12NS
+ SETUP_HOLD:
+  CLOCK LH = CLOCK
+  DATA(1) = RESET
+  SETUPTIME_HI = 5NS

.ENDS 74HCT273A

* ----------------------------------------------------------- 74LS273 ------
*  Octal D-Type Flip-Flop With Clear
*
*  The TTL Logic Data Book, 1988, TI Pages 2-759 to 2-762
*  bss    3/30/94
*
.SUBCKT 74LS273  CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_LS273 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LS273 ueff (tppcqhlTY=18ns tppcqhlMX=27ns twpclMN=20ns
+            tpclkqlhTY=17ns tpclkqlhMX=27ns tpclkqhlTY=18ns
+            tpclkqhlMX=27ns twclklMN=20ns twclkhMN=20ns
+            tsudclkMN=20ns tsupcclkhMN=25ns thdclkMN=5ns)

.ENDS 74LS273
*
*
* ----------------------------------------------------------- 74276 ------
*  Quad J-KBAR Flip-Flops
*
*  The TTL Logic Data Book, 1988, TI Pages 2-763 to 2-765
*  bss    3/30/94
*
.SUBCKT 74276  PREBAR CLRBAR 1CLK 1J 1KBAR 2CLK 2J 2KBAR 3CLK 3J
+     3KBAR 4CLK 4J 4KBAR 1Q 2Q 3Q 4Q
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 inva(4) DPWR DGND
+     1KBAR 2KBAR 3KBAR 4KBAR
+     1K 2K 3K 4K
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     PREBAR CLRBAR 1CLK 1J 1K 1Q_O $D_NC
+     DLY_276 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     PREBAR CLRBAR 2CLK 2J 2K 2Q_O $D_NC
+     DLY_276 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     PREBAR CLRBAR 3CLK 3J 3K 3Q_O $D_NC
+     DLY_276 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 jkff(1) DPWR DGND
+     PREBAR CLRBAR 4CLK 4J 4K 4Q_O $D_NC
+     DLY_276 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6DLY PINDLY(4,0,6) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O
+     PREBAR CLRBAR 1CLK 2CLK 3CLK 4CLK
+     1Q 2Q 3Q 4Q
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     PRE = {CHANGED_HL(PREBAR,0)}
+     CLR = {CHANGED_HL(CLRBAR,0)}
+     CLOCK = {CHANGED_HL(1CLK,0) | CHANGED_HL(2CLK,0) | CHANGED_HL(3CLK,0) |
+         CHANGED_HL(4CLK,0)}
+
+  PINDLY:
+     1Q 2Q 3Q 4Q = {
+       CASE(
+         PRE & TRN_LH, DELAY(-1,15ns,25ns),
+         CLR & TRN_HL, DELAY(-1,18ns,30ns),
+         CLOCK & TRN_LH, DELAY(-1,17ns,30ns),
+         CLOCK & TRN_HL, DELAY(-1,20ns,30ns),
+         DELAY(-1,21ns,31ns))}

.model DLY_276 ueff (twpclMN=12ns twclklMN=15ns twclkhMN=13.5ns
+             tsudclkMN=3ns tsupcclkhMN=10ns thdclkMN=10ns)

.ENDS 74276
*
*
* ----------------------------------------------------------- 74278 ------
*  4-Bit Cascadable Priority Registers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-767 to 2-770
*  bss    3/30/94
*
.SUBCKT 74278  STROBE P0BAR D1 D2 D3 D4 P1 Y1 Y2 Y3 Y4
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nora(2,8) DPWR DGND
+     AND1B Q1 AND1 Q1B AND2B Q2 AND2 Q2B AND3B Q3 AND3 Q3B
+     AND4B Q4 AND4 Q4B
+     Q1B Q1 Q2B Q2 Q3B Q3 Q4B Q4
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(14,13) DPWR DGND
+     P0BAR STROBE D4 D3 D2 D1 Q1 Q1B Q2 Q2B Q3 Q3B Q4 Q4B
+     AND4 AND4B AND3 AND3B AND2 AND2B AND1 AND1B P1_O Y4_O Y3_O Y2_O Y1_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     d1bar = {~D1}
+     d2bar = {~D2}
+     d3bar = {~D3}
+     d4bar = {~D4}
+     AND1 = {d1bar & STROBE}
+     AND1B = {D1 & STROBE}
+     AND2 = {d2bar & STROBE}
+     AND2B = {D2 & STROBE}
+     AND3 = {d3bar & STROBE}
+     AND3B = {D3 & STROBE}
+     AND4 = {d4bar & STROBE}
+     AND4B = {D4 & STROBE}
+     Y1_O = {~(Q1B | P0BAR)}
+     Y2_O = {~(Q1 | Q2B | P0BAR)}
+     Y3_O = {~(Q1 | Q2 | Q3B | P0BAR)}
+     Y4_O = {~(Q1 | Q2 | Q3 | Q4B | P0BAR)}
+     P1_O = {P0BAR | Q1 | Q2 | Q3 | Q4}

U3DLY PINDLY(5,0,6) DPWR DGND
+     P1_O Y1_O Y2_O Y3_O Y4_O
+     P0BAR STROBE D1 D2 D3 D4
+     P1 Y1 Y2 Y3 Y4
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) | CHANGED(D4,0)}
+     ENAB = {CHANGED(STROBE,0)}
+     PCH = {CHANGED(P0BAR,0)}
+
+  PINDLY:
+     Y1 = {
+       CASE(
+         ENAB & TRN_LH, DELAY(-1,-1,30ns),
+         ENAB & TRN_HL, DELAY(-1,-1,31ns),
+         TRN_LH, DELAY(-1,-1,30ns),
+         TRN_HL, DELAY(-1,-1,39ns),
+         DELAY(-1,-1,40ns))}
+
+     Y2 = {
+       CASE(
+         ENAB & TRN_LH, DELAY(-1,-1,30ns),
+         ENAB & TRN_HL, DELAY(-1,-1,31ns),
+         D1=='0 & TRN_LH, DELAY(-1,-1,30ns),
+         D1=='0 & TRN_HL, DELAY(-1,-1,39ns),
+         TRN_LH, DELAY(-1,-1,38ns),
+         TRN_HL, DELAY(-1,-1,31ns),
+         DELAY(-1,-1,40ns))}
+
+     Y3 = {
+       CASE(
+         ENAB & TRN_LH, DELAY(-1,-1,30ns),
+         ENAB & TRN_HL, DELAY(-1,-1,31ns),
+         (D1=='0 & D2=='0) & TRN_LH, DELAY(-1,-1,30ns),
+         (D1=='0 & D2=='0) & TRN_HL, DELAY(-1,-1,39ns),
+         TRN_LH, DELAY(-1,-1,38ns),
+         TRN_HL, DELAY(-1,-1,31ns),
+         DELAY(-1,-1,40ns))}
+
+     Y4 = {
+       CASE(
+         ENAB & TRN_LH, DELAY(-1,-1,30ns),
+         ENAB & TRN_HL, DELAY(-1,-1,31ns),
+         (D1=='0 & D2=='0 & D3=='0) & TRN_LH, DELAY(-1,-1,30ns),
+         (D1=='0 & D2=='0 & D3=='0) & TRN_HL, DELAY(-1,-1,39ns),
+         TRN_LH, DELAY(-1,-1,38ns),
+         TRN_HL, DELAY(-1,-1,31ns),
+         DELAY(-1,-1,40ns))}
+
+     P1 = {
+       CASE(
+         ENAB & TRN_LH, DELAY(-1,-1,38ns),
+         ENAB & TRN_HL, DELAY(-1,-1,42ns),
+         DATA & STROBE=='1 & TRN_LH, DELAY(-1,-1,46ns),
+         DATA & STROBE=='1 & TRN_HL, DELAY(-1,-1,39ns),
+         PCH & TRN_LH, DELAY(-1,-1,23ns),
+         PCH & TRN_HL, DELAY(-1,-1,30ns),
+         DELAY(-1,-1,47ns))}

U4CON CONSTRAINT(5) DPWR DGND
+     D1 D2 D3 D4 STROBE
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=STROBE
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=STROBE
+     DATA(4)=D1 D2 D3 D4
+     SETUPTIME=20ns
+     HOLDTIME=5ns

.ENDS 74278
*
*
* ----------------------------------------------------------- 74279 ------
*  Quad SBAR-RBAR Latches
*
*  The TTL Logic Data Book, 1988, TI Pages 2-771 to 2-774
*  bss    3/31/94
*
.SUBCKT 74279  1RBAR 1S1BAR 1S2BAR 2RBAR 2SBAR 1Q 2Q
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(3) DPWR DGND
+     1S1BAR 1S2BAR 1R
+     1Q_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nanda(2,3) DPWR DGND
+     1RBAR 1Q_O 2RBAR 2Q_O 2SBAR 2R
+     1R 2R 2Q_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(2,0,5) DWPR DGND
+     1Q_O 2Q_O
+     1RBAR 1S1BAR 1S2BAR 2RBAR 2SBAR
+     1Q 2Q
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     1SCH = {CHANGED(1S1BAR,0) | CHANGED(1S2BAR,0)}
+     1RCH = {CHANGED(1RBAR,0)}
+     2SCH = {CHANGED(2SBAR,0)}
+     2RCH = {CHANGED(2RBAR,0)}
+
+  PINDLY:
+     1Q = {
+       CASE(
+         1RCH & TRN_HL, DELAY(-1,15ns,27ns),
+         1SCH & TRN_HL, DELAY(-1,9ns,15ns),
+         1SCH & TRN_LH, DELAY(-1,12ns,22ns),
+         DELAY(-1,16ns,28ns))}
+
+     2Q = {
+       CASE(
+         2RCH & TRN_HL, DELAY(-1,15ns,27ns),
+         2SCH & TRN_HL, DELAY(-1,9ns,15ns),
+         2SCH & TRN_LH, DELAY(-1,12ns,22ns),
+         DELAY(-1,16ns,28ns))}

U4CON CONSTRAINT(5) DPWR DGND
+     1RBAR 1S1BAR 1S2BAR 2RBAR 2SBAR
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=1RBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1S1BAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1S2BAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=2RBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=2SBAR
+     MIN_LO=20ns

.ENDS 74279

*------------------------------------------------------------74LS279-----

* Quad Sbar-Rbar Latches
* National LS/S/TTL Logic Databook, 1989, pages 2-311 to 2-313
* jat 8/8/96

.SUBCKT 74LS279 1RBAR 1S1BAR 1S2BAR 1Q 2RBAR 2SBAR 2Q
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(5,4) DPWR DGND
+ 1S1BAR 1S2BAR 2SBAR 1RBAR 2RBAR
+ 1S 2S 1R 2R
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   1S = {~(1S1BAR & 1S2BAR)}
+   2S = {~2SBAR}
+   1R = {~1RBAR}
+   2R = {~2RBAR}

U2 SRFF(2) DPWR DGND
+ $D_HI $D_HI $D_HI
+ 1S 2S
+ 1R 2R
+ 1QO 2QO $D_NC $D_NC
+ D0_GFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(2,0,5) DPWR DGND
+ 1QO 2QO
+ 1S1BAR 1S2BAR 2SBAR 1RBAR 2RBAR
+ 1Q 2Q
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SS = {CHANGED(1S1BAR,0) | CHANGED(1S2BAR,0) | CHANGED(2SBAR,0)}
+   RR = {CHANGED(1RBAR,0) | CHANGED(2RBAR,0)}
+ PINDLY:
+   1Q 2Q = {
+    CASE(
+     SS & TRN_LH, DELAY(-1,-1,22NS),
+     SS & TRN_HL, DELAY(-1,-1,15NS),
+     RR & TRN_HL, DELAY(-1,-1,27NS),
+     DELAY(-1,-1,28NS))}

.ENDS 74LS279

* ----------------------------------------------------------- 74LS279A ------
*  Quad SBAR-RBAR Latches
*
*  The TTL Logic Data Book, 1988, TI Pages 2-771 to 2-774
*  bss    3/31/94
*
.SUBCKT 74LS279A  1RBAR 1S1BAR 1S2BAR 2RBAR 2SBAR 1Q 2Q
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(3) DPWR DGND
+     1S1BAR 1S2BAR 1R
+     1Q_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nanda(2,3) DPWR DGND
+     1RBAR 1Q_O 2RBAR 2Q_O 2SBAR 2R
+     1R 2R 2Q_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(2,0,5) DWPR DGND
+     1Q_O 2Q_O
+     1RBAR 1S1BAR 1S2BAR 2RBAR 2SBAR
+     1Q 2Q
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     1SCH = {CHANGED(1S1BAR,0) | CHANGED(1S2BAR,0)}
+     1RCH = {CHANGED(1RBAR,0)}
+     2SCH = {CHANGED(2SBAR,0)}
+     2RCH = {CHANGED(2RBAR,0)}
+
+  PINDLY:
+     1Q = {
+       CASE(
+         1RCH & TRN_HL, DELAY(-1,15ns,27ns),
+         1SCH & TRN_HL, DELAY(-1,13ns,21ns),
+         1SCH & TRN_LH, DELAY(-1,12ns,22ns),
+         DELAY(-1,16ns,28ns))}
+
+     2Q = {
+       CASE(
+         2RCH & TRN_HL, DELAY(-1,15ns,27ns),
+         2SCH & TRN_HL, DELAY(-1,13ns,21ns),
+         2SCH & TRN_LH, DELAY(-1,12ns,22ns),
+         DELAY(-1,16ns,28ns))}

U4CON CONSTRAINT(5) DPWR DGND
+     1RBAR 1S1BAR 1S2BAR 2RBAR 2SBAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=1RBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1S1BAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1S2BAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=2RBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=2SBAR
+     MIN_LO=20ns

.ENDS 74LS279A
*
*
* ----------------------------------------------------------- 74AC280 ------
*  9-Bit Parity Generator/Checker
*
*  The Advanced CMOS Logic Data Book, 1993, TI Pages 2-345 to 2-348
*  bss    3/31/94
*  This part is shown in the data book as a 74AC11280
*
.SUBCKT 74AC280  A B C D E F G H I EVEN ODD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,2) DPWR DGND
+     A B C D E F G H I
+     EVEN_O ODD_O
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     dbar = {~D}
+     ebar = {~E}
+     fbar = {~F}
+     gbar = {~G}
+     hbar = {~H}
+     ibar = {~I}
+     tri1 = {~((A & bbar & cbar) | (abar & B & cbar) | (abar & bbar & C) |
+          (A & B & C))}
+     tri2 = {~((D & ebar & fbar) | (dbar & E & fbar) | (dbar & ebar & F) |
+          (D & E & F))}
+     tri3 = {~((G & hbar & ibar) | (gbar & H & ibar) | (gbar & hbar & I) |
+          (G & H & I))}
+     tri1bar = {~tri1}
+     tri2bar = {~tri2}
+     tri3bar = {~tri3}
+     EVEN_O = {~((tri2 & tri3 & tri1bar) | (tri1 & tri3 & tri2bar) |
+          (tri1 & tri2 & tri3bar) | (tri1bar & tri2bar & tri3bar))}
+     ODD_O = {~((tri1 & tri2bar & tri3bar) | (tri1bar & tri2 & tri3bar) |
+          (tri1bar & tri2bar & tri3) | (tri1 & tri2 & tri3))}

U2DLY PINDLY(2,0,0) DPWR DGND
+     EVEN_O ODD_O
+     EVEN ODD
+     IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     EVEN = {
+       CASE(
+         TRN_LH, DELAY(1.5ns,5.9ns,9.1ns),
+         TRN_HL, DELAY(1.5ns,6.7ns,9.9ns),
+         DELAY(2.5ns,7.7ns,10.9ns))}
+
+     ODD = {
+       CASE(
+         TRN_LH, DELAY(1.5ns,6ns,9.3ns),
+         TRN_HL, DELAY(1.5ns,6.8ns,10.3ns),
+         DELAY(2.5ns,7.8ns,11.3ns))}

.ENDS 74AC280
*
*
* ----------------------------------------------------------- 74ACT280 ------
*  9-Bit Parity Generator/Checker
*
*  The Advanced CMOS Logic Data Book, 1993, TI Pages 2-349 to 2-352
*  bss    4/1/94
*  This part is shown in the data book as a 74ACT11280
*
.SUBCKT 74ACT280  A B C D E F G H I EVEN ODD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,2) DPWR DGND
+     A B C D E F G H I
+     EVEN_O ODD_O
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     dbar = {~D}
+     ebar = {~E}
+     fbar = {~F}
+     gbar = {~G}
+     hbar = {~H}
+     ibar = {~I}
+     tri1 = {~((A & bbar & cbar) | (abar & B & cbar) | (abar & bbar & C) |
+          (A & B & C))}
+     tri2 = {~((D & ebar & fbar) | (dbar & E & fbar) | (dbar & ebar & F) |
+          (D & E & F))}
+     tri3 = {~((G & hbar & ibar) | (gbar & H & ibar) | (gbar & hbar & I) |
+          (G & H & I))}
+     tri1bar = {~tri1}
+     tri2bar = {~tri2}
+     tri3bar = {~tri3}
+     EVEN_O = {~((tri2 & tri3 & tri1bar) | (tri1 & tri3 & tri2bar) |
+          (tri1 & tri2 & tri3bar) | (tri1bar & tri2bar & tri3bar))}
+     ODD_O = {~((tri1 & tri2bar & tri3bar) | (tri1bar & tri2 & tri3bar) |
+          (tri1bar & tri2bar & tri3) | (tri1 & tri2 & tri3))}

U2DLY PINDLY(2,0,0) DPWR DGND
+     EVEN_O ODD_O
+     EVEN ODD
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     EVEN = {
+       CASE(
+         TRN_LH, DELAY(1.5ns,7.3ns,10.8ns),
+         TRN_HL, DELAY(1.5ns,8.8ns,12.5ns),
+         DELAY(2.5ns,9.8ns,13.5ns))}
+
+     ODD = {
+       CASE(
+         TRN_LH, DELAY(1.5ns,7.3ns,10.8ns),
+         TRN_HL, DELAY(1.5ns,8.6ns,12.4ns),
+         DELAY(2.5ns,9.6ns,13.4ns))}

.ENDS 74ACT280
*
*
* ----------------------------------------------------------- 74ALS280 ------
*  9-Bit Parity Generator/Checker
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-323 to 2-328
*  bss    4/1/94
*
.SUBCKT 74ALS280  A B C D E F G H I EVEN ODD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,2) DPWR DGND
+     A B C D E F G H I
+     EVEN_O ODD_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     dbar = {~D}
+     ebar = {~E}
+     fbar = {~F}
+     gbar = {~G}
+     hbar = {~H}
+     ibar = {~I}
+     tri1 = {~((A & bbar & cbar) | (abar & B & cbar) | (abar & bbar & C) |
+          (A & B & C))}
+     tri2 = {~((D & ebar & fbar) | (dbar & E & fbar) | (dbar & ebar & F) |
+          (D & E & F))}
+     tri3 = {~((G & hbar & ibar) | (gbar & H & ibar) | (gbar & hbar & I) |
+          (G & H & I))}
+     tri1bar = {~tri1}
+     tri2bar = {~tri2}
+     tri3bar = {~tri3}
+     EVEN_O = {~((tri2 & tri3 & tri1bar) | (tri1 & tri3 & tri2bar) |
+          (tri1 & tri2 & tri3bar) | (tri1bar & tri2bar & tri3bar))}
+     ODD_O = {~((tri1 & tri2bar & tri3bar) | (tri1bar & tri2 & tri3bar) |
+          (tri1bar & tri2bar & tri3) | (tri1 & tri2 & tri3))}

U2DLY PINDLY(2,0,0) DPWR DGND
+     EVEN_O ODD_O
+     EVEN ODD
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     EVEN = {
+       CASE(
+         TRN_LH, DELAY(3ns,12ns,20ns),
+         TRN_HL, DELAY(3ns,12ns,20ns),
+         DELAY(4ns,13ns,21ns))}
+
+     ODD = {
+       CASE(
+         TRN_LH, DELAY(3ns,12ns,20ns),
+         TRN_HL, DELAY(4ns,13ns,22ns),
+         DELAY(5ns,14ns,23ns))}

.ENDS 74ALS280
*
*
* ----------------------------------------------------------- 74AS280 ------
*  9-Bit Parity Generator/Checker
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-323 to 2-328
*  bss    4/1/94
*
.SUBCKT 74AS280  A B C D E F G H I EVEN ODD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,2) DPWR DGND
+     A B C D E F G H I
+     EVEN_O ODD_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     dbar = {~D}
+     ebar = {~E}
+     fbar = {~F}
+     gbar = {~G}
+     hbar = {~H}
+     ibar = {~I}
+     tri1 = {~((A & bbar & cbar) | (abar & B & cbar) | (abar & bbar & C) |
+          (A & B & C))}
+     tri2 = {~((D & ebar & fbar) | (dbar & E & fbar) | (dbar & ebar & F) |
+          (D & E & F))}
+     tri3 = {~((G & hbar & ibar) | (gbar & H & ibar) | (gbar & hbar & I) |
+          (G & H & I))}
+     tri1bar = {~tri1}
+     tri2bar = {~tri2}
+     tri3bar = {~tri3}
+     EVEN_O = {~((tri2 & tri3 & tri1bar) | (tri1 & tri3 & tri2bar) |
+          (tri1 & tri2 & tri3bar) | (tri1bar & tri2bar & tri3bar))}
+     ODD_O = {~((tri1 & tri2bar & tri3bar) | (tri1bar & tri2 & tri3bar) |
+          (tri1bar & tri2bar & tri3) | (tri1 & tri2 & tri3))}

U2DLY PINDLY(2,0,0) DPWR DGND
+     EVEN_O ODD_O
+     EVEN ODD
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     EVEN = {
+       CASE(
+         TRN_LH, DELAY(3ns,-1,12ns),
+         TRN_HL, DELAY(3ns,-1,11ns),
+         DELAY(4ns,-1,13ns))}
+
+     ODD = {
+       CASE(
+         TRN_LH, DELAY(3ns,-1,12ns),
+         TRN_HL, DELAY(3ns,-1,11.5ns),
+         DELAY(4ns,-1,13ns))}

.ENDS 74AS280

* ----------------------------------------------------------- 74F280 ------

*  9-Bit Parity Generator/Checker
*  National Advanced Bipoloar Logic Databook, 1995, pages 7-224 to 7-227
*  jat 7/10/96

.SUBCKT 74F280  I0 I1 I2 I3 I4 I5 I6 I7 I8 EVEN ODD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,2) DPWR DGND
+     I0 I1 I2 I3 I4 I5 I6 I7 I8
+     EVEN_O ODD_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~I0}
+     bbar = {~I1}
+     cbar = {~I2}
+     dbar = {~I3}
+     ebar = {~I4}
+     fbar = {~I5}
+     gbar = {~I6}
+     hbar = {~I7}
+     ibar = {~I8}
+     tri1 = {~((I0 & bbar & cbar) | (abar & I1 & cbar) | (abar & bbar & I2) |
+          (I0 & I1 & I2))}
+     tri2 = {~((I3 & ebar & fbar) | (dbar & I4 & fbar) | (dbar & ebar & I5) |
+          (I3 & I4 & I5))}
+     tri3 = {~((I6 & hbar & ibar) | (gbar & I7 & ibar) | (gbar & hbar & I8) |
+          (I6 & I7 & I8))}
+     tri1bar = {~tri1}
+     tri2bar = {~tri2}
+     tri3bar = {~tri3}
+     EVEN_O = {~((tri2 & tri3 & tri1bar) | (tri1 & tri3 & tri2bar) |
+          (tri1 & tri2 & tri3bar) | (tri1bar & tri2bar & tri3bar))}
+     ODD_O = {~((tri1 & tri2bar & tri3bar) | (tri1bar & tri2 & tri3bar) |
+          (tri1bar & tri2bar & tri3) | (tri1 & tri2 & tri3))}

U2DLY PINDLY(2,0,0) DPWR DGND
+     EVEN_O ODD_O
+     EVEN ODD
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     EVEN = {
+       CASE(
+         TRN_LH, DELAY(6.5ns,10ns,15ns),
+         TRN_HL, DELAY(6.5ns,11ns,16ns),
+         DELAY(7.5ns,12ns,17ns))}
+
+     ODD = {
+       CASE(
+         TRN_LH, DELAY(6ns,10ns,15ns),
+         TRN_HL, DELAY(6.5ns,11ns,16ns),
+         DELAY(7.5ns,12ns,17ns))}

.ENDS 74F280

* ----------------------------------------------------------- 74F280A ------
*  9-Bit Parity Generator/Checker
*
*  The Fast TTL Logic Data Book, 1992, Philips Pages 387 to 390
*  bss    4/1/94
*
.SUBCKT 74F280A  I0 I1 I2 I3 I4 I5 I6 I7 I8 EVEN ODD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,2) DPWR DGND
+     I0 I1 I2 I3 I4 I5 I6 I7 I8
+     EVEN_O ODD_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~I0}
+     bbar = {~I1}
+     cbar = {~I2}
+     dbar = {~I3}
+     ebar = {~I4}
+     fbar = {~I5}
+     gbar = {~I6}
+     hbar = {~I7}
+     ibar = {~I8}
+     tri1 = {~((I0 & bbar & cbar) | (abar & I1 & cbar) | (abar & bbar & I2) |
+          (I0 & I1 & I2))}
+     tri2 = {~((I3 & ebar & fbar) | (dbar & I4 & fbar) | (dbar & ebar & I5) |
+          (I3 & I4 & I5))}
+     tri3 = {~((I6 & hbar & ibar) | (gbar & I7 & ibar) | (gbar & hbar & I8) |
+          (I6 & I7 & I8))}
+     tri1bar = {~tri1}
+     tri2bar = {~tri2}
+     tri3bar = {~tri3}
+     EVEN_O = {~((tri2 & tri3 & tri1bar) | (tri1 & tri3 & tri2bar) |
+          (tri1 & tri2 & tri3bar) | (tri1bar & tri2bar & tri3bar))}
+     ODD_O = {~((tri1 & tri2bar & tri3bar) | (tri1bar & tri2 & tri3bar) |
+          (tri1bar & tri2bar & tri3) | (tri1 & tri2 & tri3))}

U2DLY PINDLY(2,0,0) DPWR DGND
+     EVEN_O ODD_O
+     EVEN ODD
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     EVEN = {
+       CASE(
+         TRN_LH, DELAY(5ns,7ns,9ns),
+         TRN_HL, DELAY(7.5ns,10ns,13ns),
+         DELAY(8.5ns,11ns,14ns))}
+
+     ODD = {
+       CASE(
+         TRN_LH, DELAY(6.5ns,8.6ns,10.5ns),
+         TRN_HL, DELAY(7ns,9.1ns,12ns),
+         DELAY(8ns,10.1ns,13ns))}

.ENDS 74F280A
*
*
* ----------------------------------------------------------- 74F280B ------
*  9-Bit Parity Generator/Checker
*
*  The Fast TTL Logic Data Book, 1992, Philips Pages 387 to 390
*  bss    4/1/94
*
.SUBCKT 74F280B  I0 I1 I2 I3 I4 I5 I6 I7 I8 EVEN ODD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,2) DPWR DGND
+     I0 I1 I2 I3 I4 I5 I6 I7 I8
+     EVEN_O ODD_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~I0}
+     bbar = {~I1}
+     cbar = {~I2}
+     dbar = {~I3}
+     ebar = {~I4}
+     fbar = {~I5}
+     gbar = {~I6}
+     hbar = {~I7}
+     ibar = {~I8}
+     tri1 = {~((I0 & bbar & cbar) | (abar & I1 & cbar) | (abar & bbar & I2) |
+          (I0 & I1 & I2))}
+     tri2 = {~((I3 & ebar & fbar) | (dbar & I4 & fbar) | (dbar & ebar & I5) |
+          (I3 & I4 & I5))}
+     tri3 = {~((I6 & hbar & ibar) | (gbar & I7 & ibar) | (gbar & hbar & I8) |
+          (I6 & I7 & I8))}
+     tri1bar = {~tri1}
+     tri2bar = {~tri2}
+     tri3bar = {~tri3}
+     EVEN_O = {~((tri2 & tri3 & tri1bar) | (tri1 & tri3 & tri2bar) |
+          (tri1 & tri2 & tri3bar) | (tri1bar & tri2bar & tri3bar))}
+     ODD_O = {~((tri1 & tri2bar & tri3bar) | (tri1bar & tri2 & tri3bar) |
+          (tri1bar & tri2bar & tri3) | (tri1 & tri2 & tri3))}

U2DLY PINDLY(2,0,0) DPWR DGND
+     EVEN_O ODD_O
+     EVEN ODD
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     EVEN ODD = {
+       CASE(
+         TRN_LH, DELAY(4ns,6.5ns,9ns),
+         TRN_HL, DELAY(4ns,7ns,10ns),
+         DELAY(5ns,11ns,14ns))}

.ENDS 74F280B
*
*
* ----------------------------------------------------------- 74HC280 ------
*  9-Bit Parity Generator/Checker
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-375 to 2-377
*  bss    4/1/94
*
.SUBCKT 74HC280  A B C D E F G H I EVEN ODD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,2) DPWR DGND
+     A B C D E F G H I
+     EVEN_O ODD_O
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     dbar = {~D}
+     ebar = {~E}
+     fbar = {~F}
+     gbar = {~G}
+     hbar = {~H}
+     ibar = {~I}
+     tri1 = {~((A & bbar & cbar) | (abar & B & cbar) | (abar & bbar & C) |
+          (A & B & C))}
+     tri2 = {~((D & ebar & fbar) | (dbar & E & fbar) | (dbar & ebar & F) |
+          (D & E & F))}
+     tri3 = {~((G & hbar & ibar) | (gbar & H & ibar) | (gbar & hbar & I) |
+          (G & H & I))}
+     tri1bar = {~tri1}
+     tri2bar = {~tri2}
+     tri3bar = {~tri3}
+     EVEN_O = {~((tri2 & tri3 & tri1bar) | (tri1 & tri3 & tri2bar) |
+          (tri1 & tri2 & tri3bar) | (tri1bar & tri2bar & tri3bar))}
+     ODD_O = {~((tri1 & tri2bar & tri3bar) | (tri1bar & tri2 & tri3bar) |
+          (tri1bar & tri2bar & tri3) | (tri1 & tri2 & tri3))}

U2DLY PINDLY(2,0,0) DPWR DGND
+     EVEN_O ODD_O
+     EVEN ODD
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     EVEN  ODD = {
+       CASE(
+         DELAY(-1,21ns,41ns))}

.ENDS 74HC280
*
*
* ----------------------------------------------------------- 74HCT280 ------
*  9-Bit Parity Generator/Checker
*
*  The High Speed CMOS Logic Data Book, 1994, Philips Pages 557 to 561
*  bss    4/1/94
*
.SUBCKT 74HCT280  I0 I1 I2 I3 I4 I5 I6 I7 I8 EVEN ODD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,2) DPWR DGND
+     I0 I1 I2 I3 I4 I5 I6 I7 I8
+     EVEN_O ODD_O
+     D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~I0}
+     bbar = {~I1}
+     cbar = {~I2}
+     dbar = {~I3}
+     ebar = {~I4}
+     fbar = {~I5}
+     gbar = {~I6}
+     hbar = {~I7}
+     ibar = {~I8}
+     tri1 = {~((I0 & bbar & cbar) | (abar & I1 & cbar) | (abar & bbar & I2) |
+          (I0 & I1 & I2))}
+     tri2 = {~((I3 & ebar & fbar) | (dbar & I4 & fbar) | (dbar & ebar & I5) |
+          (I3 & I4 & I5))}
+     tri3 = {~((I6 & hbar & ibar) | (gbar & I7 & ibar) | (gbar & hbar & I8) |
+          (I6 & I7 & I8))}
+     tri1bar = {~tri1}
+     tri2bar = {~tri2}
+     tri3bar = {~tri3}
+     EVEN_O = {~((tri2 & tri3 & tri1bar) | (tri1 & tri3 & tri2bar) |
+          (tri1 & tri2 & tri3bar) | (tri1bar & tri2bar & tri3bar))}
+     ODD_O = {~((tri1 & tri2bar & tri3bar) | (tri1bar & tri2 & tri3bar) |
+          (tri1bar & tri2bar & tri3) | (tri1 & tri2 & tri3))}

U2DLY PINDLY(2,0,0) DPWR DGND
+     EVEN_O ODD_O
+     EVEN ODD
+     IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     EVEN = {
+       CASE(
+         DELAY(-1,21ns,42ns))}
+
+     ODD = {
+       CASE(
+         DELAY(-1,26ns,45ns))}

.ENDS 74HCT280
*
*
* ----------------------------------------------------------- 74LS280 ------
*  9-Bit Parity Generator/Checker
*
*  The TTL Logic Data Book, 1988, TI Pages 2-775 to 2-779
*  bss    4/1/94
*
.SUBCKT 74LS280  A B C D E F G H I EVEN ODD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,2) DPWR DGND
+     A B C D E F G H I
+     EVEN_O ODD_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     dbar = {~D}
+     ebar = {~E}
+     fbar = {~F}
+     gbar = {~G}
+     hbar = {~H}
+     ibar = {~I}
+     tri1 = {~((A & bbar & cbar) | (abar & B & cbar) | (abar & bbar & C) |
+          (A & B & C))}
+     tri2 = {~((D & ebar & fbar) | (dbar & E & fbar) | (dbar & ebar & F) |
+          (D & E & F))}
+     tri3 = {~((G & hbar & ibar) | (gbar & H & ibar) | (gbar & hbar & I) |
+          (G & H & I))}
+     tri1bar = {~tri1}
+     tri2bar = {~tri2}
+     tri3bar = {~tri3}
+     EVEN_O = {~((tri2 & tri3 & tri1bar) | (tri1 & tri3 & tri2bar) |
+          (tri1 & tri2 & tri3bar) | (tri1bar & tri2bar & tri3bar))}
+     ODD_O = {~((tri1 & tri2bar & tri3bar) | (tri1bar & tri2 & tri3bar) |
+          (tri1bar & tri2bar & tri3) | (tri1 & tri2 & tri3))}

U2DLY PINDLY(2,0,0) DPWR DGND
+     EVEN_O ODD_O
+     EVEN ODD
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     EVEN = {
+       CASE(
+         TRN_LH, DELAY(-1,33ns,50ns),
+         TRN_HL, DELAY(-1,29ns,45ns),
+         DELAY(-1,34ns,51ns))}
+
+     ODD = {
+       CASE(
+         TRN_LH, DELAY(-1,23ns,35ns),
+         TRN_HL, DELAY(-1,31ns,50ns),
+         DELAY(-1,32ns,51ns))}

.ENDS 74LS280
*
*
* ----------------------------------------------------------- 74S280 ------
*  9-Bit Parity Generator/Checker
*
*  The TTL Logic Data Book, 1988, TI Pages 2-775 to 2-779
*  bss    4/1/94
*
.SUBCKT 74S280  A B C D E F G H I EVEN ODD
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,2) DPWR DGND
+     A B C D E F G H I
+     EVEN_O ODD_O
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     dbar = {~D}
+     ebar = {~E}
+     fbar = {~F}
+     gbar = {~G}
+     hbar = {~H}
+     ibar = {~I}
+     tri1 = {~((A & bbar & cbar) | (abar & B & cbar) | (abar & bbar & C) |
+          (A & B & C))}
+     tri2 = {~((D & ebar & fbar) | (dbar & E & fbar) | (dbar & ebar & F) |
+          (D & E & F))}
+     tri3 = {~((G & hbar & ibar) | (gbar & H & ibar) | (gbar & hbar & I) |
+          (G & H & I))}
+     tri1bar = {~tri1}
+     tri2bar = {~tri2}
+     tri3bar = {~tri3}
+     EVEN_O = {~((tri2 & tri3 & tri1bar) | (tri1 & tri3 & tri2bar) |
+          (tri1 & tri2 & tri3bar) | (tri1bar & tri2bar & tri3bar))}
+     ODD_O = {~((tri1 & tri2bar & tri3bar) | (tri1bar & tri2 & tri3bar) |
+          (tri1bar & tri2bar & tri3) | (tri1 & tri2 & tri3))}

U2DLY PINDLY(2,0,0) DPWR DGND
+     EVEN_O ODD_O
+     EVEN ODD
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     EVEN ODD = {
+       CASE(
+         TRN_LH, DELAY(-1,14ns,21ns),
+         TRN_HL, DELAY(-1,11.5ns,18ns),
+         DELAY(-1,15ns,22ns))}

.ENDS 74S280
*
*
* ----------------------------------------------------------- 74AS282 ------
*  Look-Ahead Carry Generator With Selectable Carry Inputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-329 to 2-332
*  bss    4/1/94
*
.SUBCKT 74AS282  S0 S1 CnA CnB P0BAR P1BAR P2BAR P3BAR G0BAR G1BAR G2BAR
+     G3BAR Cn Cnx Cny Cnz PBAR GBAR
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,6) DPWR DGND
+     S0 S1 CnA CnB P0BAR P1BAR P2BAR P3BAR G0BAR G1BAR G2BAR G3BAR
+     Cn_O Cnx_O Cny_O Cnz_O PBAR_O GBAR_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     cnabar = {~CnA}
+     cnbbar = {~CnB}
+     cnbar = {~((s0bar & s1bar & CnA) | (S0 & s1bar & cnabar) | (s0bar & S1 & CnB) |
+             (S0 & S1 & cnbbar))}
+     Cn_O = {~cnbar}
+     Cnx_O = {~((P0BAR & G0BAR) | (cnbar & G0BAR))}
+     Cny_O = {~((G1BAR & G0BAR & cnbar) | (P0BAR & G0BAR & G1BAR) | 
+             (P1BAR & G1BAR))}
+     Cnz_O = {~((G0BAR & G1BAR & G2BAR & cnbar) | (P0BAR & G0BAR & G1BAR & 
+             G2BAR) | (P1BAR & G1BAR & G2BAR) | (P2BAR & G2BAR))}
+     GBAR_O = {((G0BAR & G1BAR & G2BAR & G3BAR) | (P1BAR & G1BAR & G2BAR &
+             G3BAR) | (P2BAR & G2BAR & G3BAR) | (P3BAR & G3BAR))}
+     PBAR_O = {P0BAR | P1BAR | P2BAR | P3BAR}

U2DLY PINDLY(6,0,12) DPWR DGND
+     Cn_O Cnx_O Cny_O Cnz_O PBAR_O GBAR_O
+     S0 S1 CnA CnB P0BAR P1BAR P2BAR P3BAR G0BAR G1BAR G2BAR G3BAR
+     Cn Cnx Cny Cnz PBAR GBAR
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(CnA,0) | CHANGED(CnB,0)}
+     PCH = {CHANGED(P0BAR,0) | CHANGED(P1BAR,0) | CHANGED(P2BAR,0) |
+            CHANGED(P3BAR,0)}
+     GCH = {CHANGED(G0BAR,0) | CHANGED(G1BAR,0) | CHANGED(G2BAR,0) |
+            CHANGED(G3BAR,0)}
+     PGCH = {PCH | GCH}
+
+  PINDLY:
+     Cn = {
+       CASE(
+         DELAY(-1,6ns,-1))}
+
+     Cnx Cny Cnz = {
+       CASE(
+         SELECT, DELAY(-1,6ns,-1),
+         PGCH, DELAY(-1,5ns,-1),
+         DELAY(-1,7ns,-1))}
+
+     GBAR = {
+       CASE(
+         PGCH & TRN_LH, DELAY(-1,6ns,-1),
+         PGCH & TRN_HL, DELAY(-1,5ns,-1),
+         DELAY(-1,7ns,-1))}
+
+     PBAR = {
+       CASE(
+         DELAY(-1,5ns,-1))}

.ENDS 74AS282
*
*
* ----------------------------------------------------------- 74283 ------
*  4-Bit Binary Full Adders With Fast Carry
*
*  The TTL Logic Data Book, 1988, TI Pages 2-781 to 2-785
*  bss    4/4/94
*
.SUBCKT 74283 C0 A1 A2 A3 A4 B1 B2 B3 B4 S1 S2 S3 S4 C4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,5) DPWR DGND
+     C0 A1 A2 A3 A4 B1 B2 B3 B4
+     S1_O S2_O S3_O S4_O C4_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     c0bar = {~C0}
+     nor1 = {~(A1 | B1)}
+     nand1 = {~(A1 & B1)}
+     nor2 = {~(A2 | B2)}
+     nand2 = {~(A2 & B2)}
+     nor3 = {~(A3 | B3)}
+     nand3 = {~(A3 & B3)}
+     nor4 = {~(A4 | B4)}
+     nand4 = {~(A4 & B4)}
+     C4_O = {~(nor4 | (nor3 & nand4) | (nor2 & nand4 & nand3) | (nor1 & nand4 & nand3 & 
+             nand2) | (nand4 & nand3 & nand2 & nand1 & c0bar))}
+     S4_O = {(nand4 & (~nor4)) ^ (~(nor3 | (nor2 & nand3) | (nor1 & nand3 & nand2) |
+             (nand3 & nand2 & nand1 & c0bar)))}
+     S3_O = {(nand3 & (~nor3)) ^ (~(nor2 | (nor1 & nand2) | (nand2 & nand1 & c0bar)))}
+     S2_O = {(nand2 & (~nor2)) ^ (~(nor1 | (nand1 & c0bar)))}
+     S1_O = {(nand1 & (~nor1)) ^ C0}

U2DLY PINDLY(5,0,9) DPWR DGND
+     S1_O S2_O S3_O S4_O C4_O
+     C0 A1 A2 A3 A4 B1 B2 B3 B4
+     S1 S2 S3 S4 C4
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+                  CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0)}
+     CARRY = {CHANGED(C0,0)}
+
+  PINDLY:
+     S1 S2 S3 S4 = {
+        CASE(
+           DATA & TRN_LH, DELAY(-1,16ns,24ns),
+           DATA & TRN_HL, DELAY(-1,16ns,24ns),
+           CARRY & TRN_LH, DELAY(-1,14ns,21ns),
+           CARRY & TRN_HL, DELAY(-1,12ns,21ns),
+           DELAY(-1,17ns,25ns))}
+
+     C4 = {
+        CASE(
+           TRN_LH, DELAY(-1,9ns,14ns),
+           TRN_HL, DELAY(-1,11ns,16ns),
+           DELAY(-1,12ns,17ns))}

.ENDS 74283
*
*
*-------------------------------------------------------------74AC283-----
*
* The 74AC283 4-Bit Binary Full Adder with Fast Carry
* (4 Page Fax) Harris Advanced CMOS Logic, File Number 1912
* and Philips Semiconductors High-speed CMOS Logic Data Handbook 
* for the logic diagram, 1994, page 564
* jat 7/26/95

.SUBCKT 74AC283
+ A0 A1 A2 A3 B0 B1 B2 B3 CIN COUT S0 S1 S2 S3
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,5) DPWR DGND
+ A0 A1 A2 A3 B0 B1 B2 B3 CIN 
+ S_0 S_1 S_2 S_3 C_OUT
+ D0_GATE IO_AC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+        S_0 = {A0 ^ B0 ^ CIN}
+        NOR1 = {(A0 | B0) & (CIN | (A0 & B0))}
+        S_1 = {NOR1 ^ A1 ^ B1}
+        NOR2 = {~((~(A1 | B1)) | ((~(A0 | B0)) & (~(A1 & B1))) | 
+          ((~(A1 & B1)) & (~(A0 & B0)) & (~CIN)))}
+        S_2 = {NOR2 ^ A2 ^ B2}
+        AND31 = {(~(A2 & B2)) & (~(A1 & B1)) & (~(A0 & B0)) & (~CIN)}
+        AND32 = {(~(A0 | B0)) & (~(A2 & B2)) & (~(A1 & B1))}
+        AND33 = {(~(A1 | B1)) & (~(A2 & B2))}
+        NOR3 = {~(AND31 | AND32 | AND33 | (~(A2 | B2)))}
+        S_3 = {NOR3 ^ A3 ^ B3}
+        ANDC1 = {(~(A3 & B3)) & (~(A2 & B2)) & (~(A1 & B1)) &
+           (~(A0 & B0)) & (~CIN)}
+        ANDC2 = {(~(A0 | B0)) & (~(A3 & B3)) & (~(A2 & B2)) & (~(A1 & B1))}
+        ANDC3 = {(~(A1 | B1)) & (~(A3 & B3)) & (~(A2 & B2))}
+        ANDC4 = {(~(A2 | B2)) & (~(A3 & B3))}
+        C_OUT = {~(ANDC1 | ANDC2 | ANDC3 | ANDC4 | (~(A3 | B3)))}

U2 PINDLY(5,0,9) DPWR DGND
+ S_0 S_1 S_2 S_3 C_OUT
+ A0 A1 A2 A3 B0 B1 B2 B3 CIN
+ S0 S1 S2 S3 COUT
+ IO_AC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+          CARRYIN = {CHANGED(CIN,0)}
+          NUMBER = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) |
+                    CHANGED(A3,0) | CHANGED(B0,0) | CHANGED(B1,0) |
+                    CHANGED(B2,0) | CHANGED(B3,0)}
+ PINDLY:
+          S0 S1 S2 S3 = {
+             CASE(
+                NUMBER & (TRN_LH | TRN_HL), DELAY(4.7NS,-1,16.5NS),
+                CARRYIN & (TRN_LH | TRN_HL), DELAY(4.5NS,-1,16NS),
+                DELAY(5.7NS,-1,17.5NS))}
+          COUT = {
+             CASE(
+                NUMBER & (TRN_LH | TRN_HL), DELAY(4.5NS,-1,16NS),
+                CARRYIN & (TRN_LH | TRN_HL), DELAY(4.5NS,-1,16NS),
+                DELAY(5.7NS,-1,17.5NS))}

.ENDS 74AC283
*
*
*------------------------------------------------------------74ACT283----
*
* The 74ACT283 4-Bit Binary Full Adder with Fast Carry
* (4 Page Fax) Harris Advanced CMOS Logic, File Number 1912
* and Philips Semiconductors High-speed CMOS Logic Data Handbook 
* for the logic diagram, 1994, page 564
* jat 7/26/95

.SUBCKT 74ACT283
+ A0 A1 A2 A3 B0 B1 B2 B3 CIN COUT S0 S1 S2 S3
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,5) DPWR DGND
+ A0 A1 A2 A3 B0 B1 B2 B3 CIN 
+ S_0 S_1 S_2 S_3 C_OUT
+ D0_GATE IO_ACT
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+        S_0 = {A0 ^ B0 ^ CIN}
+        NOR1 = {(A0 | B0) & (CIN | (A0 & B0))}
+        S_1 = {NOR1 ^ A1 ^ B1}
+        NOR2 = {~((~(A1 | B1)) | ((~(A0 | B0)) & (~(A1 & B1))) | 
+          ((~(A1 & B1)) & (~(A0 & B0)) & (~CIN)))}
+        S_2 = {NOR2 ^ A2 ^ B2}
+        AND31 = {(~(A2 & B2)) & (~(A1 & B1)) & (~(A0 & B0)) & (~CIN)}
+        AND32 = {(~(A0 | B0)) & (~(A2 & B2)) & (~(A1 & B1))}
+        AND33 = {(~(A1 | B1)) & (~(A2 & B2))}
+        NOR3 = {~(AND31 | AND32 | AND33 | (~(A2 | B2)))}
+        S_3 = {NOR3 ^ A3 ^ B3}
+        ANDC1 = {(~(A3 & B3)) & (~(A2 & B2)) & (~(A1 & B1)) &
+           (~(A0 & B0)) & (~CIN)}
+        ANDC2 = {(~(A0 | B0)) & (~(A3 & B3)) & (~(A2 & B2)) & (~(A1 & B1))}
+        ANDC3 = {(~(A1 | B1)) & (~(A3 & B3)) & (~(A2 & B2))}
+        ANDC4 = {(~(A2 | B2)) & (~(A3 & B3))}
+        C_OUT = {~(ANDC1 | ANDC2 | ANDC3 | ANDC4 | (~(A3 | B3)))}

U2 PINDLY(5,0,9) DPWR DGND
+ S_0 S_1 S_2 S_3 C_OUT
+ A0 A1 A2 A3 B0 B1 B2 B3 CIN
+ S0 S1 S2 S3 COUT
+ IO_ACT
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+          CARRYIN = {CHANGED(CIN,0)}
+          NUMBER = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) |
+                    CHANGED(A3,0) | CHANGED(B0,0) | CHANGED(B1,0) |
+                    CHANGED(B2,0) | CHANGED(B3,0)}
+ PINDLY:
+          S0 S1 S2 S3 = {
+             CASE(
+                NUMBER & (TRN_LH | TRN_HL), DELAY(4.7NS,-1,16.5NS),
+                CARRYIN & (TRN_LH | TRN_HL), DELAY(4.5NS,-1,16NS),
+                DELAY(5.7NS,-1,17.5NS))}
+          COUT = {
+             CASE(
+                NUMBER & (TRN_LH | TRN_HL), DELAY(4.5NS,-1,16NS),
+                CARRYIN & (TRN_LH | TRN_HL), DELAY(4.5NS,-1,16NS),
+                DELAY(5.7NS,-1,17.5NS))}

.ENDS 74ACT283
*
*
* ----------------------------------------------------------- 74F283 ------
*  4-Bit Binary Full Adders With Fast Carry
*
*  The F Logic Data Book, 1994, TI Pages 2-207 to 2-210
*  bss    4/4/94
*
.SUBCKT 74F283 C0 A1 A2 A3 A4 B1 B2 B3 B4 S1 S2 S3 S4 C4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,5) DPWR DGND
+     C0 A1 A2 A3 A4 B1 B2 B3 B4
+     S1_O S2_O S3_O S4_O C4_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     c0bar = {~C0}
+     nor1 = {~(A1 | B1)}
+     nand1 = {~(A1 & B1)}
+     nor2 = {~(A2 | B2)}
+     nand2 = {~(A2 & B2)}
+     nor3 = {~(A3 | B3)}
+     nand3 = {~(A3 & B3)}
+     nor4 = {~(A4 | B4)}
+     nand4 = {~(A4 & B4)}
+     C4_O = {~(nor4 | (nor3 & nand4) | (nor2 & nand4 & nand3) | (nor1 & nand4 & nand3 & 
+             nand2) | (nand4 & nand3 & nand2 & nand1 & c0bar))}
+     S4_O = {(nand4 & (~nor4)) ^ (~(nor3 | (nor2 & nand3) | (nor1 & nand3 & nand2) |
+             (nand3 & nand2 & nand1 & c0bar)))}
+     S3_O = {(nand3 & (~nor3)) ^ (~(nor2 | (nor1 & nand2) | (nand2 & nand1 & c0bar)))}
+     S2_O = {(nand2 & (~nor2)) ^ (~(nor1 | (nand1 & c0bar)))}
+     S1_O = {(nand1 & (~nor1)) ^ C0}

U2DLY PINDLY(5,0,9) DPWR DGND
+     S1_O S2_O S3_O S4_O C4_O
+     C0 A1 A2 A3 A4 B1 B2 B3 B4
+     S1 S2 S3 S4 C4
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+                  CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0)}
+     CARRY = {CHANGED(C0,0)}
+
+  PINDLY:
+     S1 S2 S3 S4 = {
+        CASE(
+           DATA & TRN_LH, DELAY(3.2ns,6.6ns,9.5ns),
+           CARRY & TRN_HL, DELAY(3.2ns,6.6ns,9.5ns),
+           CARRY & TRN_LH, DELAY(2.7ns,6.6ns,9.5ns),
+           DATA & TRN_HL, DELAY(2.7ns,6.6ns,9.5ns),
+           DELAY(4.2ns,7.6ns,10.5ns))}
+
+     C4 = {
+        CASE(
+           TRN_LH, DELAY(2.7ns,5.3ns,7.5ns),
+           CARRY & TRN_HL, DELAY(2.2ns,5ns,7ns),
+           DATA & TRN_HL, DELAY(2.2ns,4.9ns,7ns),
+           DELAY(3.7ns,6.3ns,8.5ns))}

.ENDS 74F283
*
*
* ----------------------------------------------------------- 74HC283 ------
*  4-Bit Binary Full Adders With Fast Carry
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-379 to 2-383
*  bss    4/4/94
*
.SUBCKT 74HC283 C0 A1 A2 A3 A4 B1 B2 B3 B4 S1 S2 S3 S4 C4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,5) DPWR DGND
+     C0 A1 A2 A3 A4 B1 B2 B3 B4
+     S1_O S2_O S3_O S4_O C4_O
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     c0bar = {~C0}
+     nor1 = {~(A1 | B1)}
+     nand1 = {~(A1 & B1)}
+     nor2 = {~(A2 | B2)}
+     nand2 = {~(A2 & B2)}
+     nor3 = {~(A3 | B3)}
+     nand3 = {~(A3 & B3)}
+     nor4 = {~(A4 | B4)}
+     nand4 = {~(A4 & B4)}
+     C4_O = {~(nor4 | (nor3 & nand4) | (nor2 & nand4 & nand3) | (nor1 & nand4 & nand3 & 
+             nand2) | (nand4 & nand3 & nand2 & nand1 & c0bar))}
+     S4_O = {(nand4 & (~nor4)) ^ (~(nor3 | (nor2 & nand3) | (nor1 & nand3 & nand2) |
+             (nand3 & nand2 & nand1 & c0bar)))}
+     S3_O = {(nand3 & (~nor3)) ^ (~(nor2 | (nor1 & nand2) | (nand2 & nand1 & c0bar)))}
+     S2_O = {(nand2 & (~nor2)) ^ (~(nor1 | (nand1 & c0bar)))}
+     S1_O = {(nand1 & (~nor1)) ^ C0}

U2DLY PINDLY(5,0,9) DPWR DGND
+     S1_O S2_O S3_O S4_O C4_O
+     C0 A1 A2 A3 A4 B1 B2 B3 B4
+     S1 S2 S3 S4 C4
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+                  CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0)}
+     CARRY = {CHANGED(C0,0)}
+
+  PINDLY:
+     S1 S2 S3 S4 = {
+        CASE(
+           DATA, DELAY(-1,25ns,35ns),
+           CARRY, DELAY(-1,20ns,30ns),
+           DELAY(-1,26ns,36ns))}
+
+     C4 = {
+        CASE(
+           DATA, DELAY(-1,26ns,35ns),
+           CARRY, DELAY(-1,25ns,35ns),
+           DELAY(-1,27ns,36ns))}

.ENDS 74HC283

*-------------------------------------------------------------74HCT283-----

* 4-Bit Binary Full Adder with Fast Carry
* Philips High-speed CMOS Logic Family Data Handbook, 1994, page 563 to 568
* jat 9/11/96

.SUBCKT 74HCT283
+ A1 A2 A3 A4 B1 B2 B3 B4 CIN COUT S1 S2 S3 S4
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,5) DPWR DGND
+ A1 A2 A3 A4 B1 B2 B3 B4 CIN 
+ S1O S2O S3O S4O COUTO
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+        S1O = {A1 ^ B1 ^ CIN}
+        NOR1 = {(A1 | B1) & (CIN | (A1 & B1))}
+        S2O = {NOR1 ^ A2 ^ B2}
+        NOR2 = {~((~(A2 | B2)) | ((~(A1 | B1)) & (~(A2 & B2))) | 
+          ((~(A2 & B2)) & (~(A1 & B1)) & (~CIN)))}
+        S3O = {NOR2 ^ A3 ^ B3}
+        AND41 = {(~(A3 & B3)) & (~(A2 & B2)) & (~(A1 & B1)) & (~CIN)}
+        AND42 = {(~(A1 | B1)) & (~(A3 & B3)) & (~(A2 & B2))}
+        AND43 = {(~(A2 | B2)) & (~(A3 & B3))}
+        NOR3 = {~(AND41 | AND42 | AND43 | (~(A3 | B3)))}
+        S4O = {NOR3 ^ A4 ^ B4}
+        ANDC1 = {(~(A4 & B4)) & (~(A3 & B3)) & (~(A2 & B2)) &
+           (~(A1 & B1)) & (~CIN)}
+        ANDC2 = {(~(A1 | B1)) & (~(A4 & B4)) & (~(A3 & B3)) & (~(A2 & B2))}
+        ANDC3 = {(~(A2 | B2)) & (~(A4 & B4)) & (~(A3 & B3))}
+        ANDC4 = {(~(A3 | B3)) & (~(A4 & B4))}
+        COUTO = {~(ANDC1 | ANDC2 | ANDC3 | ANDC4 | (~(A4 | B4)))}

U2 PINDLY(5,0,9) DPWR DGND
+ S1O S2O S3O S4O COUTO
+ A1 A2 A3 A4 B1 B2 B3 B4 CIN
+ S1 S2 S3 S4 COUT
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+          CARRYIN = {CHANGED(CIN,0)}
+          NUMBER = {CHANGED(A4,0) | CHANGED(A1,0) | CHANGED(A2,0) |
+                    CHANGED(A3,0) | CHANGED(B4,0) | CHANGED(B1,0) |
+                    CHANGED(B2,0) | CHANGED(B3,0)}
+ PINDLY:
+          S1 = {
+             CASE(
+                NUMBER & (TRN_LH | TRN_HL), DELAY(-1,29NS,49NS),
+                CARRYIN & (TRN_LH | TRN_HL), DELAY(-1,18NS,31NS),
+                DELAY(-1,30NS,50NS))}
+          S2 = {
+             CASE(
+                NUMBER & (TRN_LH | TRN_HL), DELAY(-1,29NS,49NS),
+                CARRYIN & (TRN_LH | TRN_HL), DELAY(-1,25NS,43NS),
+                DELAY(-1,30NS,50NS))}
+          S3 = {
+             CASE(
+                NUMBER & (TRN_LH | TRN_HL), DELAY(-1,29NS,49NS),
+                CARRYIN & (TRN_LH | TRN_HL), DELAY(-1,27NS,46NS),
+                DELAY(-1,30NS,50NS))}
+          S4 = {
+             CASE(
+                NUMBER & (TRN_LH | TRN_HL), DELAY(-1,29NS,49NS),
+                CARRYIN & (TRN_LH | TRN_HL), DELAY(-1,31NS,53NS),
+                DELAY(-1,32NS,54NS))}
+          COUT = {
+             CASE(
+                NUMBER & (TRN_LH | TRN_HL), DELAY(-1,28NS,48NS),
+                CARRYIN & (TRN_LH | TRN_HL), DELAY(-1,27NS,46NS),
+                DELAY(-1,29NS,49NS))}

.ENDS 74HCT283

* ---------------------------------------------------------- 74LS283 ------
*  4-Bit Binary Full Adders With Fast Carry
*
*  The TTL Logic Data Book, 1988, TI Pages 2-781 to 2-785
*  bss    4/4/94
*
.SUBCKT 74LS283 C0 A1 A2 A3 A4 B1 B2 B3 B4 S1 S2 S3 S4 C4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,5) DPWR DGND
+     C0 A1 A2 A3 A4 B1 B2 B3 B4
+     S1_O S2_O S3_O S4_O C4_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     c0bar = {~C0}
+     nor1 = {~(A1 | B1)}
+     nand1 = {~(A1 & B1)}
+     nor2 = {~(A2 | B2)}
+     nand2 = {~(A2 & B2)}
+     nor3 = {~(A3 | B3)}
+     nand3 = {~(A3 & B3)}
+     nor4 = {~(A4 | B4)}
+     nand4 = {~(A4 & B4)}
+     C4_O = {~(nor4 | (nor3 & nand4) | (nor2 & nand4 & nand3) | (nor1 & nand4 & nand3 & 
+             nand2) | (nand4 & nand3 & nand2 & nand1 & c0bar))}
+     S4_O = {(nand4 & (~nor4)) ^ (~(nor3 | (nor2 & nand3) | (nor1 & nand3 & nand2) |
+             (nand3 & nand2 & nand1 & c0bar)))}
+     S3_O = {(nand3 & (~nor3)) ^ (~(nor2 | (nor1 & nand2) | (nand2 & nand1 & c0bar)))}
+     S2_O = {(nand2 & (~nor2)) ^ (~(nor1 | (nand1 & c0bar)))}
+     S1_O = {(nand1 & (~nor1)) ^ C0}

U2DLY PINDLY(5,0,9) DPWR DGND
+     S1_O S2_O S3_O S4_O C4_O
+     C0 A1 A2 A3 A4 B1 B2 B3 B4
+     S1 S2 S3 S4 C4
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+                  CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0)}
+     CARRY = {CHANGED(C0,0)}
+
+  PINDLY:
+     S1 S2 S3 S4 = {
+        CASE(
+           CARRY & TRN_LH, DELAY(-1,16ns,24ns),
+           DATA & TRN_LH, DELAY(-1,15ns,24ns),
+           TRN_HL, DELAY(-1,15ns,24ns),
+           DELAY(-1,17ns,25ns))}
+
+     C4 = {
+        CASE(
+           TRN_LH, DELAY(-1,11ns,17ns),
+           CARRY & TRN_HL, DELAY(-1,11ns,22ns),
+           DATA & TRN_HL, DELAY(-1,12ns,17ns),
+           DELAY(-1,13ns,23ns))}

.ENDS 74LS283
*
*
* ----------------------------------------------------------- 74S283 ------
*  4-Bit Binary Full Adders With Fast Carry
*
*  The TTL Logic Data Book, 1988, TI Pages 2-781 to 2-785
*  bss    4/4/94
*
.SUBCKT 74S283 C0 A1 A2 A3 A4 B1 B2 B3 B4 S1 S2 S3 S4 C4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,5) DPWR DGND
+     C0 A1 A2 A3 A4 B1 B2 B3 B4
+     S1_O S2_O S3_O S4_O C4_O
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     c0bar = {~C0}
+     nor1 = {~(A1 | B1)}
+     nand1 = {~(A1 & B1)}
+     nor2 = {~(A2 | B2)}
+     nand2 = {~(A2 & B2)}
+     nor3 = {~(A3 | B3)}
+     nand3 = {~(A3 & B3)}
+     nor4 = {~(A4 | B4)}
+     nand4 = {~(A4 & B4)}
+     C4_O = {~(nor4 | (nor3 & nand4) | (nor2 & nand4 & nand3) | (nor1 & nand4 & nand3 & 
+             nand2) | (nand4 & nand3 & nand2 & nand1 & c0bar))}
+     S4_O = {(nand4 & (~nor4)) ^ (~(nor3 | (nor2 & nand3) | (nor1 & nand3 & nand2) |
+             (nand3 & nand2 & nand1 & c0bar)))}
+     S3_O = {(nand3 & (~nor3)) ^ (~(nor2 | (nor1 & nand2) | (nand2 & nand1 & c0bar)))}
+     S2_O = {(nand2 & (~nor2)) ^ (~(nor1 | (nand1 & c0bar)))}
+     S1_O = {(nand1 & (~nor1)) ^ C0}

U2DLY PINDLY(5,0,9) DPWR DGND
+     S1_O S2_O S3_O S4_O C4_O
+     C0 A1 A2 A3 A4 B1 B2 B3 B4
+     S1 S2 S3 S4 C4
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+                  CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0)}
+     CARRY = {CHANGED(C0,0)}
+
+  PINDLY:
+     S1 S2 S3 S4 = {
+        CASE(
+           DATA & TRN_LH, DELAY(-1,12ns,18ns),
+           CARRY & TRN_LH, DELAY(-1,11ns,18ns),
+           CARRY & TRN_HL, DELAY(-1,12ns,18ns),
+           DATA & TRN_HL, DELAY(-1,11.5ns,18ns),
+           DELAY(-1,13ns,19ns))}
+
+     C4 = {
+        CASE(
+           DATA & TRN_LH, DELAY(-1,7.5ns,12ns),
+           DATA & TRN_HL, DELAY(-1,8.5ns,12ns),
+           CARRY & TRN_LH, DELAY(-1,6ns,11ns),
+           CARRY & TRN_HL, DELAY(-1,7.5ns,11ns),
+           DELAY(-1,9.5ns,13ns))}

.ENDS 74S283
*
*
*-------------------------------------------------------------74AC286------

* 9 Bit Parity Generator/Checker with Bus Driver Parity I/O Ports
* TI Advanced CMOS Logic Databook, 1993, pages 2-353 to 2-357
* jat 12/20/95

.SUBCKT 74AC286
+ A B C D E F G H I PI/O XMITBAR PERROR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNYTMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(11,2) DPWR DGND
+ A B C D E F G H I PI/O XMITBAR
+ PI/OO PERRORO
+ D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  ABC = {~((~(A ^ B)) ^ (~C))}
+  DEF = {~((~(D ^ E)) ^ (~F))}
+  GHI = {~((~(G ^ H)) ^ (~I))}
+  PI/OO = {(~(ABC ^ DEF)) ^ (~GHI)}
+  XNOR = {~((PI/OO) ^ (~PI/O))}
+  PERRORO = {~(XNOR & XMITBAR)}

U2 PINDLY(2,1,10) DPWR DGND
+ PI/OO PERRORO
+ XMITBAR
+ A B C D E F G H I PI/O
+ PI/O PERROR
+ IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0) | CHANGED(D,0) | 
+    CHANGED(E,0) | CHANGED(F,0) | CHANGED(G,0) | CHANGED(H,0) | CHANGED(I,0)}
+   PARITY = {CHANGED(PI/O,0)}
+ TRISTATE:
+   ENABLE LO = XMITBAR
+   PI/O = {
+     CASE(
+       TRN_ZH, DELAY(1.4NS,3.3NS,4.9NS),
+       TRN_ZL, DELAY(3NS,5.4NS,8.3NS),
+       TRN_HZ, DELAY(3.1NS,4.8NS,6.1NS),
+       TRN_LZ, DELAY(3NS,4.6NS,6NS),
+       DATA & TRN_LH, DELAY(2NS,5.5NS,8NS),
+       DATA & TRN_HL, DELAY(3.1NS,6.9NS,9.1NS),
+       DELAY(4.1NS,7.9NS,10.1NS))}
+ PINDLY:
+    PERROR = {
+       CASE(
+          PARITY & TRN_LH, DELAY(1.9NS,3.9NS,5.6NS),
+          PARITY & TRN_HL, DELAY(2.9NS,5NS,7.2NS),
+          DATA & TRN_LH, DELAY(2.5NS,5.2NS,8.9NS),
+          DATA & TRN_HL, DELAY(3.3NS,6.5NS,10.7NS),
+          DELAY(4.3NS,7.5NS,11.7NS))}

.ENDS 74AC286

*-------------------------------------------------------------74ACT286------

* 9 Bit Parity Generator/Checker with Bus Driver Parity I/O Ports
* TI Advanced CMOS Logic Databook, 1993, pages 2-353 to 2-357
* jat 12/20/95

.SUBCKT 74ACT286
+ A B C D E F G H I PI/O XMITBAR PERROR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNYTMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(11,2) DPWR DGND
+ A B C D E F G H I PI/O XMITBAR
+ PI/OO PERRORO
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  ABC = {~((~(A ^ B)) ^ (~C))}
+  DEF = {~((~(D ^ E)) ^ (~F))}
+  GHI = {~((~(G ^ H)) ^ (~I))}
+  PI/OO = {(~(ABC ^ DEF)) ^ (~GHI)}
+  XNOR = {~((PI/OO) ^ (~PI/O))}
+  PERRORO = {~(XNOR & XMITBAR)}

U2 PINDLY(2,1,10) DPWR DGND
+ PI/OO PERRORO
+ XMITBAR
+ A B C D E F G H I PI/O
+ PI/O PERROR
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0) | CHANGED(D,0) | 
+    CHANGED(E,0) | CHANGED(F,0) | CHANGED(G,0) | CHANGED(H,0) | CHANGED(I,0)}
+   PARITY = {CHANGED(PI/O,0)}
+ TRISTATE:
+   ENABLE LO = XMITBAR
+   PI/O = {
+     CASE(
+       TRN_ZH, DELAY(1.8NS,4.2NS,6.3NS),
+       TRN_ZL, DELAY(3NS,6.3NS,9.4NS),
+       TRN_HZ, DELAY(4.7NS,6.5NS,7.9NS),
+       TRN_LZ, DELAY(4.1NS,6NS,7.3NS),
+       DATA & TRN_LH, DELAY(2.7NS,6.1NS,9NS),
+       DATA & TRN_HL, DELAY(3.6NS,7.3NS,10.8NS),
+       DELAY(5.7NS,8.3NS,11.8NS))}
+ PINDLY:
+    PERROR = {
+       CASE(
+          PARITY & TRN_LH, DELAY(2.2NS,4.6NS,6.8NS),
+          PARITY & TRN_HL, DELAY(3.1NS,5.6NS,8.3NS),
+          DATA & TRN_LH, DELAY(3NS,6.9NS,9.7NS),
+          DATA & TRN_HL, DELAY(3.9NS,7.7NS,11.4NS),
+          DELAY(4.9NS,8.7NS,12.4NS))}

.ENDS 74ACT286

* ----------------------------------------------------------- 74AS286 ------
*  9-Bit Parity Generators/Checker With Bus Driver I/O Port
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-333 to 2-337
*  bss    4/4/94
*
.SUBCKT 74AS286 XMITBAR A B C D E F G H I P_I/O P_ERR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(11,2) DPWR DGND
+     XMITBAR A B C D E F G H I P_I/O
+     P_I/O_O P_ERR_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     PIO = {P_I/O}
+     nx1 = {~((~(A ^ B)) ^ (~C))}
+     nx2 = {~((~(D ^ E)) ^ (~F))}
+     nx3 = {~((~(G ^ H)) ^ (~I))}
+     piobar = {~((~(nx1 ^ nx2)) ^ (~nx3))}
+     P_I/O_O = {~piobar}
+     pio2 = {~piobar}
+     nxfin = {~(pio2 ^ (~PIO))}
+     P_ERR_O = {~(nxfin & XMITBAR)}

U2DLY PINDLY(2,1,10) DPWR DGND
+     P_I/O_O P_ERR_O
+     XMITBAR
+     A B C D E F G H I P_I/O
+     P_I/O P_ERR
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     INPUT = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0) | CHANGED(D,0) | 
+            CHANGED(E,0) | CHANGED(F,0) | CHANGED(G,0) | CHANGED(H,0) |
+            CHANGED(I,0)}
+     PIN = {CHANGED(P_I/O,0) & XMITBAR=='1}
+
+  TRISTATE:
+     ENABLE LO=XMITBAR
+     P_I/O = {
+       CASE(
+         INPUT & TRN_LH, DELAY(3ns,-1,15ns),
+         INPUT & TRN_HL, DELAY(3ns,-1,14ns),
+         TRN_ZH, DELAY(3ns,-1,13ns),
+         TRN_ZL, DELAY(3ns,-1,16ns),
+         TRN_HZ, DELAY(3ns,-1,11.5ns),
+         TRN_LZ, DELAY(3ns,-1,10ns),
+         DELAY(4ns,-1,17ns))}
+
+  PINDLY:
+     P_ERR = {
+       CASE(
+         INPUT, DELAY(3ns,-1,16.5ns),
+         PIN, DELAY(3ns,-1,9ns),
+         DELAY(4ns,-1,17.5ns))}

.ENDS 74AS286
*
*
* ----------------------------------------------------------- 74290 ------
*  Decade Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-791 to 2-297
*  bss    4/4/94
*
.SUBCKT 74290 R01 R02 R91 R92 CKA CKB QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     NAND9 NAND0 CKA $D_HI $D_HI QA_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     $D_HI NANDC CKB QDBAR $D_HI QB_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+     $D_HI NANDC QB_O $D_HI $D_HI QC_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+     NAND9 NAND0 CKB ANDQ QD_O QD_O QDBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(6,4) DPWR DGND
+     R01 R02 R91 R92 QB_O QC_O
+     NAND9 NAND0 NANDC ANDQ
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     NAND0 = {~(R01 & R02)}
+     NAND9 = {~(R91 & R92)}
+     NANDC = {NAND0 & NAND9}
+     ANDQ = {QB_O & QC_O}

U6DLY PINDLY(4,0,5) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     CKA CKB NAND9 NAND0 NANDC
+     QA QB QC QD
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CHA = {CHANGED_HL(CKA,0)}
+     CHB = {CHANGED_HL(CKB,0)}
+     SETTO9 = {CHANGED_HL(NAND9,0)}
+     SETTO0 = {CHANGED_HL(NAND0,0)}
+     SETALL = {CHANGED_HL(NANDC,0)}
+
+  PINDLY:
+     QA = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         SETTO9 & TRN_LH, DELAY(-1,20ns,30ns),
+         CHA & TRN_LH, DELAY(-1,10ns,16ns),
+         CHA & TRN_HL, DELAY(-1,12ns,18ns),
+         DELAY(-1,27ns,41ns))}
+
+     QB = {
+       CASE(
+         SETALL & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,10ns,16ns),
+         CHB & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,27ns,41ns))}
+
+     QC = {
+       CASE(
+         SETALL & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,21ns,32ns),
+         CHB & TRN_HL, DELAY(-1,23ns,35ns),
+         DELAY(-1,27ns,41ns))}
+
+     QD = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         SETTO9 & TRN_LH, DELAY(-1,20ns,30ns),
+         CHA & TRN_LH, DELAY(-1,32ns,48ns),
+         CHA & TRN_HL, DELAY(-1,34ns,50ns),
+         CHB & TRN_LH, DELAY(-1,21ns,32ns),
+         CHB & TRN_HL, DELAY(-1,23ns,35ns),
+         DELAY(-1,35ns,51ns))}

U7CON CONSTRAINT(8) DPWR DGND
+     R01 R02 R91 R92 CKA CKB NAND9 NAND0
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CKA
+     MAXFREQ=32MEG
+
+  FREQ:
+     NODE=CKB
+     MAXFREQ=16MEG
+
+  WIDTH:
+     NODE=CKA
+     MIN_HI=15ns
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=CKB
+     MIN_HI=30ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=R01
+     MIN_HI=15ns
+     WHEN = {NAND9!='0}
+
+  WIDTH:
+     NODE=R02
+     MIN_HI=15ns
+     WHEN = {NAND9!='0}
+
+  WIDTH:
+     NODE=R91
+     MIN_HI=15ns
+
+  WIDTH:
+     NODE=R92
+     MIN_HI=15ns
+
+  SETUP_HOLD:
+  CLOCK HL = CKA
+  DATA(1) = NAND9
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R91 R92 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = CKB
+  DATA(1) = NAND9
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R91 R92 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = CKA
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  WHEN = {NAND9!='0}
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = CKB
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  WHEN = {NAND9!='0}
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"

.ENDS 74290
*
*
* ----------------------------------------------------------- 74LS290 ------
*  Decade Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-791 to 2-797
*  bss    4/4/94
*
.SUBCKT 74LS290 R01 R02 R91 R92 CKA CKB QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     NAND9 NAND0 CKA $D_HI $D_HI QA_O $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     $D_HI NANDC CKB QDBAR $D_HI QB_O $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+     $D_HI NANDC QB_O $D_HI $D_HI QC_O $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+     NAND9 NAND0 CKB ANDQ QD_O QD_O QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(6,4) DPWR DGND
+     R01 R02 R91 R92 QB_O QC_O
+     NAND9 NAND0 NANDC ANDQ
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     NAND0 = {~(R01 & R02)}
+     NAND9 = {~(R91 & R92)}
+     NANDC = {NAND0 & NAND9}
+     ANDQ = {QB_O & QC_O}

U6DLY PINDLY(4,0,5) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     CKA CKB NAND9 NAND0 NANDC
+     QA QB QC QD
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CHA = {CHANGED_HL(CKA,0)}
+     CHB = {CHANGED_HL(CKB,0)}
+     SETTO9 = {CHANGED_HL(NAND9,0)}
+     SETTO0 = {CHANGED_HL(NAND0,0)}
+     SETALL = {CHANGED_HL(NANDC,0)}
+
+  PINDLY:
+     QA = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         SETTO9 & TRN_LH, DELAY(-1,20ns,30ns),
+         CHA & TRN_LH, DELAY(-1,10ns,16ns),
+         CHA & TRN_HL, DELAY(-1,12ns,18ns),
+         DELAY(-1,27ns,41ns))}
+
+     QB = {
+       CASE(
+         SETALL & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,10ns,16ns),
+         CHB & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,27ns,41ns))}
+
+     QC = {
+       CASE(
+         SETALL & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,21ns,32ns),
+         CHB & TRN_HL, DELAY(-1,23ns,35ns),
+         DELAY(-1,27ns,41ns))}
+
+     QD = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         SETTO9 & TRN_LH, DELAY(-1,20ns,30ns),
+         CHA & TRN_LH, DELAY(-1,32ns,48ns),
+         CHA & TRN_HL, DELAY(-1,34ns,50ns),
+         CHB & TRN_LH, DELAY(-1,21ns,32ns),
+         CHB & TRN_HL, DELAY(-1,23ns,35ns),
+         DELAY(-1,35ns,51ns))}

U7CON CONSTRAINT(8) DPWR DGND
+     R01 R02 R91 R92 CKA CKB NAND9 NAND0
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CKA
+     MAXFREQ=32MEG
+
+  FREQ:
+     NODE=CKB
+     MAXFREQ=16MEG
+
+  WIDTH:
+     NODE=CKA
+     MIN_HI=15ns
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=CKB
+     MIN_HI=30ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=R01
+     MIN_HI=30ns
+     WHEN = {NAND9!='0}
+
+  WIDTH:
+     NODE=R02
+     MIN_HI=30ns
+     WHEN = {NAND9!='0}
+
+  WIDTH:
+     NODE=R91
+     MIN_HI=30ns
+
+  WIDTH:
+     NODE=R92
+     MIN_HI=30ns
+
+  SETUP_HOLD:
+  CLOCK HL = CKA
+  DATA(1) = NAND9
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R91 R92 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = CKB
+  DATA(1) = NAND9
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R91 R92 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = CKA
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  WHEN = {NAND9!='0}
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = CKB
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  WHEN = {NAND9!='0}
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"

.ENDS 74LS290
*
*
* ----------------------------------------------------------- 74293 ------
*  4-Bit Binary Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-791 to 2-797
*  bss    4/4/94
*
.SUBCKT 74293 R01 R02 CKA CKB QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     $D_HI NAND0 CKA $D_HI $D_HI QA_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     $D_HI NAND0 CKB $D_HI $D_HI QB_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+     $D_HI NAND0 QB_O $D_HI $D_HI QC_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+     $D_HI NAND0 QC_O $D_HI $D_HI QD_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 nand(2) DPWR DGND
+     R01 R02 NAND0
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6DLY PINDLY(4,0,3) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     CKA CKB NAND0
+     QA QB QC QD
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CHA = {CHANGED_HL(CKA,0)}
+     CHB = {CHANGED_HL(CKB,0)}
+     SETTO0 = {CHANGED_HL(NAND0,0)}
+
+  PINDLY:
+     QA = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHA & TRN_LH, DELAY(-1,10ns,16ns),
+         CHA & TRN_HL, DELAY(-1,12ns,18ns),
+         DELAY(-1,27ns,41ns))}
+
+     QB = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,10ns,16ns),
+         CHB & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,27ns,41ns))}
+
+     QC = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,21ns,32ns),
+         CHB & TRN_HL, DELAY(-1,23ns,35ns),
+         DELAY(-1,27ns,41ns))}
+
+     QD = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHA & TRN_LH, DELAY(-1,46ns,70ns),
+         CHA & TRN_HL, DELAY(-1,46ns,70ns),
+         CHB & TRN_LH, DELAY(-1,34ns,51ns),
+         CHB & TRN_HL, DELAY(-1,34ns,51ns),
+         DELAY(-1,47ns,71ns))}

U7CON CONSTRAINT(5) DPWR DGND
+     R01 R02 CKA CKB NAND0
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CKA
+     MAXFREQ=32MEG
+
+  FREQ:
+     NODE=CKB
+     MAXFREQ=16MEG
+
+  WIDTH:
+     NODE=CKA
+     MIN_HI=15ns
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=CKB
+     MIN_HI=30ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=R01
+     MIN_HI=15ns
+
+  WIDTH:
+     NODE=R02
+     MIN_HI=15ns
+
+  SETUP_HOLD:
+  CLOCK HL = CKA
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = CKB
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"

.ENDS 74293
*
*
* ----------------------------------------------------------- 74LS293 ------
*  4-Bit Binary Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-791 to 2-797
*  bss    4/4/94
*
.SUBCKT 74LS293 R01 R02 CKA CKB QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     $D_HI NAND0 CKA $D_HI $D_HI QA_O $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     $D_HI NAND0 CKB $D_HI $D_HI QB_O $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+     $D_HI NAND0 QB_O $D_HI $D_HI QC_O $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+     $D_HI NAND0 QC_O $D_HI $D_HI QD_O $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 nand(2) DPWR DGND
+     R01 R02 NAND0
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6DLY PINDLY(4,0,3) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     CKA CKB NAND0
+     QA QB QC QD
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CHA = {CHANGED_HL(CKA,0)}
+     CHB = {CHANGED_HL(CKB,0)}
+     SETTO0 = {CHANGED_HL(NAND0,0)}
+
+  PINDLY:
+     QA = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHA & TRN_LH, DELAY(-1,10ns,16ns),
+         CHA & TRN_HL, DELAY(-1,12ns,18ns),
+         DELAY(-1,27ns,41ns))}
+
+     QB = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,10ns,16ns),
+         CHB & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,27ns,41ns))}
+
+     QC = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,21ns,32ns),
+         CHB & TRN_HL, DELAY(-1,23ns,35ns),
+         DELAY(-1,27ns,41ns))}
+
+     QD = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHA & TRN_LH, DELAY(-1,46ns,70ns),
+         CHA & TRN_HL, DELAY(-1,46ns,70ns),
+         CHB & TRN_LH, DELAY(-1,34ns,51ns),
+         CHB & TRN_HL, DELAY(-1,34ns,51ns),
+         DELAY(-1,47ns,71ns))}

U7CON CONSTRAINT(5) DPWR DGND
+     R01 R02 CKA CKB NAND0
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CKA
+     MAXFREQ=32MEG
+
+  FREQ:
+     NODE=CKB
+     MAXFREQ=16MEG
+
+  WIDTH:
+     NODE=CKA
+     MIN_HI=15ns
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=CKB
+     MIN_HI=30ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=R01
+     MIN_HI=30ns
+
+  WIDTH:
+     NODE=R02
+     MIN_HI=30ns
+
+  SETUP_HOLD:
+  CLOCK HL = CKA
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = CKB
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"

.ENDS 74LS293

*-------------------------------------------------------------74LS295A----

* 4-Bit Shift Register with Tri-State Outputs
* National LS/S/TTL Logic Databook, 1989, pages 2-326 to 2-329
* jat 8/8/96

.SUBCKT 74LS295A PE P0 P1 P2 P3 DS CPBAR OE Q0 Q1 Q2 Q3
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,8) DPWR DGND
+ PE P0 P1 P2 P3 DS Q0O Q1O Q2O
+ J0 J1 J2 J3 K0 K1 K2 K3
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   J0 = {(P0 & PE) | (DS & ~PE)}
+   J1 = {(P1 & PE) | (Q0O & ~PE)}
+   J2 = {(P2 & PE) | (Q1O & ~PE)}
+   J3 = {(P3 & PE) | (Q2O & ~PE)}
+   K0 = {~J0}
+   K1 = {~J1}
+   K2 = {~J2}
+   K3 = {~J3}

U2 JKFF(4) DPWR DGND
+ $D_HI $D_HI CPBAR
+ J0 J1 J2 J3 K0 K1 K2 K3
+ Q0O Q1O Q2O Q3O $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(4,1,0) DPWR DGND
+ Q0O Q1O Q2O Q3O
+ OE
+ Q0 Q1 Q2 Q3
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+ ENABLE HI = OE
+  Q0 Q1 Q2 Q3 = {
+   CASE(
+     TRN_ZH, DELAY(-1,-1,18NS),
+     TRN_ZL, DELAY(-1,-1,20NS),
+     TRN_HZ, DELAY(-1,-1,24NS),
+     TRN_LZ, DELAY(-1,-1,20NS),
+     TRN_LH, DELAY(-1,-1,30NS),
+     TRN_HL, DELAY(-1,-1,26NS),
+     DELAY(-1,-1,31NS))}

U4 CONSTRAINT(7) DPWR DGND
+ P0 P1 P2 P3 CPBAR PE DS
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CPBAR
+  MAXFREQ = 30MEG
+ WIDTH:
+  NODE = CPBAR
+  MIN_LO = 20NS
+ SETUP_HOLD:
+  CLOCK HL = CPBAR
+  DATA(5) = DS P0 P1 P2 P3
+  SETUPTIME = 20NS
+  HOLDTIME = 10NS
+ SETUP_HOLD:
+  CLOCK HL = CPBAR
+  DATA(1) = PE
+  SETUPTIME = 20NS

.ENDS 74LS295A

* ----------------------------------------------------------- 74LS295B ------
*  4-Bit Right-Shift Left-Shift Registers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-807 to 2-810
*  bss    4/4/94
*
.SUBCKT 74LS295B OC LD/SHB CLK SER A B C D QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(4) DPWR DGND
+     $D_HI $D_HI CLK
+     J1 J2 J3 J4 K1 K2 K3 K4
+     QA_O QB_O QC_O QD_O $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(9,8) DPWR DGND
+     LD/SHB SER A B C D QA_O QB_O QC_O
+     J1 J2 J3 J4 K1 K2 K3 K4
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     ldsh = {~LD/SHB}
+     J1 = {(ldsh & SER) | (LD/SHB & A)}
+     K1 = {~J1}
+     J2 = {(ldsh & QA_O) | (LD/SHB & B)}
+     K2 = {~J2}
+     J3 = {(ldsh & QB_O) | (LD/SHB & C)}
+     K3 = {~J3}
+     J4 = {(ldsh & QC_O) | (LD/SHB & D)}
+     K4 = {~J4}

U3DLY PINDLY(4,1,0) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     OC
+     QA QB QC QD
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  TRISTATE:
+     ENABLE HI=OC
+     QA QB QC QD = {
+       CASE(
+         TRN_LH, DELAY(-1,14ns,20ns),
+         TRN_HL, DELAY(-1,19ns,30ns),
+         TRN_ZH, DELAY(-1,18ns,26ns),
+         TRN_ZL, DELAY(-1,20ns,30ns),
+         TRN_HZ, DELAY(-1,13ns,20ns),
+         TRN_LZ, DELAY(-1,13ns,20ns),
+         DELAY(-1,21ns,31ns))}

U4CON CONSTRAINT(7) DPWR DGND
+     CLK LD/SHB SER A B C D
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=30MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=16ns
+     MIN_LO=16ns
+
+  SETUP_HOLD:
+     CLOCK HL=CLK
+     DATA(5)=SER A B C D
+     SETUPTIME=20ns
+     HOLDTIME=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=CLK
+     DATA(1)=LD/SHB
+     SETUPTIME_HI=25ns
+     SETUPTIME_LO=30ns

.ENDS 74LS295B
*
*
* ----------------------------------------------------------- 74298 ------
*  Quad 2-Input Multiplexers With Storage
*
*  The TTL Logic Data Book, 1988, TI Pages 2-817 to 2-821
*  bss    4/4/94
*
.SUBCKT 74298 WS CLK A1 A2 B1 B2 C1 C2 D1 D2 QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(4) DPWR DGND
+     $D_HI $D_HI CLK
+     J1 J2 J3 J4 K1 K2 K3 K4
+     QA_O QB_O QC_O QD_O $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(9,8) DPWR DGND
+     WS A1 A2 B1 B2 C1 C2 D1 D2
+     J1 J2 J3 J4 K1 K2 K3 K4
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     wsbar = {~WS}
+     J1 = {(wsbar & A1) | (WS & A2)}
+     K1 = {~J1}
+     J2 = {(wsbar & B1) | (WS & B2)}
+     K2 = {~J2}
+     J3 = {(wsbar & C1) | (WS & C2)}
+     K3 = {~J3}
+     J4 = {(wsbar & D1) | (WS & D2)}
+     K4 = {~J4}

U3DLY PINDLY(4,0,0) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     QA QB QC QD
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     QA QB QC QD = {
+       CASE(
+         TRN_LH, DELAY(-1,18ns,27ns),
+         TRN_HL, DELAY(-1,21ns,32ns),
+         DELAY(-1,22ns,33ns))}

U4CON CONSTRAINT(10) DPWR DGND
+     WS CLK A1 A2 B1 B2 C1 C2 D1 D2
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=CLK
+     DATA(8)=A1 A2 B1 B2 C1 C2 D1 D2
+     SETUPTIME=15ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK HL=CLK
+     DATA(1)=WS
+     SETUPTIME=25ns

.ENDS 74298
*
*
* ----------------------------------------------------------- 74AS298 ------
*  Quad 2-Input Multiplexers With Storage
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-339 to 2-342
*  bss    4/4/94
*
.SUBCKT 74AS298 WS CLK A1 A2 B1 B2 C1 C2 D1 D2 QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(4) DPWR DGND
+     $D_HI $D_HI CLK
+     J1 J2 J3 J4 K1 K2 K3 K4
+     QA_O QB_O QC_O QD_O $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(9,8) DPWR DGND
+     WS A1 A2 B1 B2 C1 C2 D1 D2
+     J1 J2 J3 J4 K1 K2 K3 K4
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     wsbar = {~WS}
+     J1 = {(wsbar & A1) | (WS & A2)}
+     K1 = {~J1}
+     J2 = {(wsbar & B1) | (WS & B2)}
+     K2 = {~J2}
+     J3 = {(wsbar & C1) | (WS & C2)}
+     K3 = {~J3}
+     J4 = {(wsbar & D1) | (WS & D2)}
+     K4 = {~J4}

U3DLY PINDLY(4,0,0) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     QA QB QC QD
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     QA QB QC QD = {
+       CASE(
+         TRN_LH, DELAY(2ns,-1,9ns),
+         TRN_HL, DELAY(1ns,-1,11ns),
+         DELAY(3ns,-1,12ns))}

U4CON CONSTRAINT(10) DPWR DGND
+     WS CLK A1 A2 B1 B2 C1 C2 D1 D2
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=100MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=5ns
+     MIN_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK HL=CLK
+     DATA(8)=A1 A2 B1 B2 C1 C2 D1 D2
+     SETUPTIME=4.5ns
+     HOLDTIME=3.5ns
+
+  SETUP_HOLD:
+     CLOCK HL=CLK
+     DATA(1)=WS
+     SETUPTIME=13ns
+     HOLDTIME=1ns

.ENDS 74AS298
*
*
* ----------------------------------------------------------- 74F298 ------
*  Quad 2-Input Multiplexers With Storage
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 396 to 399
*  bss    4/4/94
*
.SUBCKT 74F298 S CP I0A I1A I0B I1B I0C I1C I0D I1D QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(4) DPWR DGND
+     $D_HI $D_HI CP
+     J1 J2 J3 J4 K1 K2 K3 K4
+     QA_O QB_O QC_O QD_O $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(9,8) DPWR DGND
+     S I0A I1A I0B I1B I0C I1C I0D I1D
+     J1 J2 J3 J4 K1 K2 K3 K4
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbar = {~S}
+     J1 = {(sbar & I0A) | (S & I1A)}
+     K1 = {~J1}
+     J2 = {(sbar & I0B) | (S & I1B)}
+     K2 = {~J2}
+     J3 = {(sbar & I0C) | (S & I1C)}
+     K3 = {~J3}
+     J4 = {(sbar & I0D) | (S & I1D)}
+     K4 = {~J4}

U3DLY PINDLY(4,0,0) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     QA QB QC QD
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     QA QB QC QD = {
+       CASE(
+         TRN_LH, DELAY(4ns,5.5ns,7.5ns),
+         TRN_HL, DELAY(4.5ns,6.5ns,8.5ns),
+         DELAY(5.5ns,7.5ns,9.5nsns))}

U4CON CONSTRAINT(10) DPWR DGND
+     S CP I0A I1A I0B I1B I0C I1C I0D I1D
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CP
+     MAXFREQ=105MEG
+
+  WIDTH:
+     NODE=CP
+     MIN_HI=5ns
+     MIN_LO=7ns
+
+  SETUP_HOLD:
+     CLOCK HL=CP
+     DATA(8)=I0A I1A I0B I1B I0C I1C I0D I1D
+     SETUPTIME=2ns
+     HOLDTIME=1ns
+
+  SETUP_HOLD:
+     CLOCK HL=CP
+     DATA(1)=S
+     SETUPTIME_HI=7ns
+     SETUPTIME_LO=6ns

.ENDS 74F298
*
*
* ----------------------------------------------------------- 74HC298 ------
*  Quad 2-Input Multiplexers With Storage
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-385 to 2-388
*  bss    4/4/94
*
.SUBCKT 74HC298 WS CLK A1 A2 B1 B2 C1 C2 D1 D2 QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(4) DPWR DGND
+     $D_HI $D_HI CLK
+     J1 J2 J3 J4 K1 K2 K3 K4
+     QA_O QB_O QC_O QD_O $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(9,8) DPWR DGND
+     WS A1 A2 B1 B2 C1 C2 D1 D2
+     J1 J2 J3 J4 K1 K2 K3 K4
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     wsbar = {~WS}
+     J1 = {(wsbar & A1) | (WS & A2)}
+     K1 = {~J1}
+     J2 = {(wsbar & B1) | (WS & B2)}
+     K2 = {~J2}
+     J3 = {(wsbar & C1) | (WS & C2)}
+     K3 = {~J3}
+     J4 = {(wsbar & D1) | (WS & D2)}
+     K4 = {~J4}

U3DLY PINDLY(4,0,0) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     QA QB QC QD
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     QA QB QC QD = {
+       CASE(
+         TRN_LH, DELAY(-1,15ns,25ns),
+         TRN_HL, DELAY(-1,15ns,25ns),
+         DELAY(-1,16ns,26ns))}

U4CON CONSTRAINT(10) DPWR DGND
+     WS CLK A1 A2 B1 B2 C1 C2 D1 D2
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=27MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=19ns
+     MIN_LO=19ns
+
+  SETUP_HOLD:
+     CLOCK HL=CLK
+     DATA(8)=A1 A2 B1 B2 C1 C2 D1 D2
+     SETUPTIME=21ns
+
+  SETUP_HOLD:
+     CLOCK HL=CLK
+     DATA(1)=WS
+     SETUPTIME=21ns

.ENDS 74HC298
*
*
* ----------------------------------------------------------- 74LS298 ------
*  Quad 2-Input Multiplexers With Storage
*
*  The TTL Logic Data Book, 1988, TI Pages 2-817 to 2-821
*  bss    4/4/94
*
.SUBCKT 74LS298 WS CLK A1 A2 B1 B2 C1 C2 D1 D2 QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(4) DPWR DGND
+     $D_HI $D_HI CLK
+     J1 J2 J3 J4 K1 K2 K3 K4
+     QA_O QB_O QC_O QD_O $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(9,8) DPWR DGND
+     WS A1 A2 B1 B2 C1 C2 D1 D2
+     J1 J2 J3 J4 K1 K2 K3 K4
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     wsbar = {~WS}
+     J1 = {(wsbar & A1) | (WS & A2)}
+     K1 = {~J1}
+     J2 = {(wsbar & B1) | (WS & B2)}
+     K2 = {~J2}
+     J3 = {(wsbar & C1) | (WS & C2)}
+     K3 = {~J3}
+     J4 = {(wsbar & D1) | (WS & D2)}
+     K4 = {~J4}

U3DLY PINDLY(4,0,0) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     QA QB QC QD
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     QA QB QC QD = {
+       CASE(
+         TRN_LH, DELAY(-1,18ns,27ns),
+         TRN_HL, DELAY(-1,21ns,32ns),
+         DELAY(-1,22ns,33ns))}

U4CON CONSTRAINT(10) DPWR DGND
+     WS CLK A1 A2 B1 B2 C1 C2 D1 D2
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=CLK
+     DATA(8)=A1 A2 B1 B2 C1 C2 D1 D2
+     SETUPTIME=15ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK HL=CLK
+     DATA(1)=WS
+     SETUPTIME=25ns

.ENDS 74LS298
*
*
* ----------------------------------------------------------- 74AC299 ------
*  8-Input Universal Shift/Storage Register With Common Parallel I/O Pins
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-175 to 4-181
*  bss    4/5/94
*
.SUBCKT 74AC299 MRBAR OE1BAR OE2BAR S0 S1 CP DS0 DS7 I/O0 I/O1 I/O2 I/O3
+     I/O4 I/O5 I/O6 I/O7 Q0 Q7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI MRBAR CP
+     D1 D2 D3 D4 D5 D6 D7 D8
+     Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(22,11) DPWR DGND
+     OE1BAR OE2BAR S0 S1 DS0 DS7 Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+     D1 D2 D3 D4 D5 D6 D7 D8 Q0_O Q7_O ENAB
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     Q0_O = {Q0_B}
+     Q7_O = {Q7_B}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     senab = {S0 & S1}
+     ENAB = {~(senab | OE1BAR | OE2BAR)}
+     D1 = {(DS0 & S0 & s1bar) | (Q1_B & s0bar & S1) | (I/O0 & S0 & S1) | 
+            (Q0_B & s0bar & s1bar)}
+     D2 = {(Q0_B & S0 & s1bar) | (Q2_B & s0bar & S1) | (I/O1 & S0 & S1) |
+            (Q1_B & s0bar & s1bar)}
+     D3 = {(Q1_B & S0 & s1bar) | (Q3_B & s0bar & S1) | (I/O2 & S0 & S1) |
+            (Q2_B & s0bar & s1bar)}
+     D4 = {(Q2_B & S0 & s1bar) | (Q4_B & s0bar & S1) | (I/O3 & S0 & S1) |
+            (Q3_B & s0bar & s1bar)}
+     D5 = {(Q3_B & S0 & s1bar) | (Q5_B & s0bar & S1) | (I/O4 & S0 & S1) |
+            (Q4_B & s0bar & s1bar)}
+     D6 = {(Q4_B & S0 & s1bar) | (Q6_B & s0bar & S1) | (I/O5 & S0 & S1) |
+            (Q5_B & s0bar & s1bar)}
+     D7 = {(Q5_B & S0 & s1bar) | (Q7_B & s0bar & S1) | (I/O6 & S0 & S1) |
+            (Q6_B & s0bar & s1bar)}
+     D8 = {(Q6_B & S0 & s1bar) | (DS7 & s0bar & S1) | (I/O7 & S0 & S1) |
+            (Q7_B & s0bar & s1bar)}

U3DLY PINDLY(10,1,4) DPWR DGND
+     Q0_O Q7_O Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     ENAB
+     CP MRBAR OE1BAR OE2BAR
+     Q0 Q7 I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+     IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CP,0)}
+     CLEAR = {CHANGED_HL(MRBAR,0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(5.5ns,10ns,15ns),
+         CLOCK & TRN_HL, DELAY(6.5ns,11ns,16ns),
+         CLOCK & TRN_LH, DELAY(6ns,10ns,14.5ns),
+         TRN_ZH, DELAY(4.5ns,8.5ns,12.5ns),
+         TRN_ZL, DELAY(5ns,8ns,12.5ns),
+         TRN_HZ, DELAY(3.5ns,9.5ns,14ns),
+         TRN_LZ, DELAY(3.5ns,8ns,12.5ns),
+         DELAY(7.5ns,12ns,17ns))}
+
+  PINDLY:
+     Q0 Q7 = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(5.5ns,10.5ns,15.5ns),
+         CLOCK & TRN_LH, DELAY(5.5ns,9.5ns,14ns),
+         CLOCK & TRN_HL, DELAY(5.5ns,10ns,14.5ns),
+         DELAY(6.5ns,11.5ns,16.5ns))}

U4CON CONSTRAINT(16) DPWR DGND
+     S0 S1 CP DS0 DS7 MRBAR I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 OE1BAR OE2BAR
+     IO_AC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CP
+     MAXFREQ=105MEG
+
+  WIDTH:
+     NODE=CP
+     MIN_LO=3.5ns
+
+  WIDTH:
+     NODE=MRBAR
+     MIN_LO=3.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(2)=S0 S1
+     SETUPTIME=5.5ns
+     HOLDTIME=1ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(2)=DS0 DS7
+     SETUPTIME=4.5ns
+     HOLDTIME=1ns
+     WHEN={MRBAR!='0 & ((S1=='1 & S0=='0) | (S1=='0 & S0=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(8)=I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+     SETUPTIME=4ns
+     HOLDTIME=1ns
+     WHEN={MRBAR!='0 & ((S0=='1 & S1=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(1)=MRBAR
+     SETUPTIME_HI=1.5ns

.ENDS 74AC299
*
*
* ----------------------------------------------------------- 74ACT299 ------
*  8-Input Universal Shift/Storage Register With Common Parallel I/O Pins
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-175 to 4-181
*  bss    4/5/94
*
.SUBCKT 74ACT299 MRBAR OE1BAR OE2BAR S0 S1 CP DS0 DS7 I/O0 I/O1 I/O2 I/O3
+     I/O4 I/O5 I/O6 I/O7 Q0 Q7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI MRBAR CP
+     D1 D2 D3 D4 D5 D6 D7 D8
+     Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(22,11) DPWR DGND
+     OE1BAR OE2BAR S0 S1 DS0 DS7 Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+     D1 D2 D3 D4 D5 D6 D7 D8 Q0_O Q7_O ENAB
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     Q0_O = {Q0_B}
+     Q7_O = {Q7_B}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     senab = {S0 & S1}
+     ENAB = {~(senab | OE1BAR | OE2BAR)}
+     D1 = {(DS0 & S0 & s1bar) | (Q1_B & s0bar & S1) | (I/O0 & S0 & S1) | 
+            (Q0_B & s0bar & s1bar)}
+     D2 = {(Q0_B & S0 & s1bar) | (Q2_B & s0bar & S1) | (I/O1 & S0 & S1) |
+            (Q1_B & s0bar & s1bar)}
+     D3 = {(Q1_B & S0 & s1bar) | (Q3_B & s0bar & S1) | (I/O2 & S0 & S1) |
+            (Q2_B & s0bar & s1bar)}
+     D4 = {(Q2_B & S0 & s1bar) | (Q4_B & s0bar & S1) | (I/O3 & S0 & S1) |
+            (Q3_B & s0bar & s1bar)}
+     D5 = {(Q3_B & S0 & s1bar) | (Q5_B & s0bar & S1) | (I/O4 & S0 & S1) |
+            (Q4_B & s0bar & s1bar)}
+     D6 = {(Q4_B & S0 & s1bar) | (Q6_B & s0bar & S1) | (I/O5 & S0 & S1) |
+            (Q5_B & s0bar & s1bar)}
+     D7 = {(Q5_B & S0 & s1bar) | (Q7_B & s0bar & S1) | (I/O6 & S0 & S1) |
+            (Q6_B & s0bar & s1bar)}
+     D8 = {(Q6_B & S0 & s1bar) | (DS7 & s0bar & S1) | (I/O7 & S0 & S1) |
+            (Q7_B & s0bar & s1bar)}

U3DLY PINDLY(10,1,4) DPWR DGND
+     Q0_O Q7_O Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     ENAB
+     CP MRBAR OE1BAR OE2BAR
+     Q0 Q7 I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CP,0)}
+     CLEAR = {CHANGED_HL(MRBAR,0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(4ns,13ns,14.5ns),
+         CLOCK & TRN_LH, DELAY(4.5ns,8.5ns,12.5ns),
+         CLOCK & TRN_HL, DELAY(5ns,9.5ns,15ns),
+         TRN_ZH, DELAY(2.5ns,8ns,12ns),
+         TRN_ZL, DELAY(2ns,8ns,12ns),
+         TRN_HZ, DELAY(2ns,8.5ns,12.5ns),
+         TRN_LZ, DELAY(2.5ns,8ns,11.5ns),
+         DELAY(6ns,14ns,15.5ns))}
+
+  PINDLY:
+     Q0 Q7 = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(4ns,14ns,15ns),
+         CLOCK & TRN_HL, DELAY(4ns,9ns,13.5ns),
+         CLOCK & TRN_LH, DELAY(4ns,8.5ns,12.5ns),
+         DELAY(5ns,15ns,16ns))}

U4CON CONSTRAINT(16) DPWR DGND
+     S0 S1 CP DS0 DS7 MRBAR I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 OE1BAR OE2BAR
+     IO_ACT IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CP
+     MAXFREQ=110MEG
+
+  WIDTH:
+     NODE=CP
+     MIN_LO=4.5ns
+     MIN_HI=4.5ns
+
+  WIDTH:
+     NODE=MRBAR
+     MIN_LO=3.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(2)=S0 S1
+     SETUPTIME=5.5ns
+     HOLDTIME=1ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(2)=DS0 DS7
+     SETUPTIME=5ns
+     HOLDTIME=1ns
+     WHEN={MRBAR!='0 & ((S1=='1 & S0=='0) | (S1=='0 & S0=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(8)=I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+     SETUPTIME=4.5ns
+     HOLDTIME=1ns
+     WHEN={MRBAR!='0 & ((S0=='1 & S1=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(1)=MRBAR
+     SETUPTIME_HI=1.5ns

.ENDS 74ACT299
*
*
* ----------------------------------------------------------- 74ALS299 ------
*  8-Input Universal Shift/Storage Register With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-343 to 2-349
*  bss    4/5/94
*
.SUBCKT 74ALS299 CLRBAR G1BAR G2BAR S0 S1 CLK SR SL A/QA B/QB C/QC D/QD
+     E/QE F/QF G/QG H/QH QA QH
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI CLRBAR CLK
+     D1 D2 D3 D4 D5 D6 D7 D8
+     Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(22,12) DPWR DGND
+     G1BAR G2BAR S0 S1 SR SL Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     D1 D2 D3 D4 D5 D6 D7 D8 QA_O QH_O ENAB SENAB
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     QA_O = {Q0_B}
+     QH_O = {Q7_B}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     SENAB = {S0 & S1}
+     ENAB = {~(senab | G1BAR | G2BAR)}
+     D1 = {(SR & S0 & s1bar) | (Q1_B & s0bar & S1) | (A/QA & S0 & S1) | 
+            (Q0_B & s0bar & s1bar)}
+     D2 = {(Q0_B & S0 & s1bar) | (Q2_B & s0bar & S1) | (B/QB & S0 & S1) |
+            (Q1_B & s0bar & s1bar)}
+     D3 = {(Q1_B & S0 & s1bar) | (Q3_B & s0bar & S1) | (C/QC & S0 & S1) |
+            (Q2_B & s0bar & s1bar)}
+     D4 = {(Q2_B & S0 & s1bar) | (Q4_B & s0bar & S1) | (D/QD & S0 & S1) |
+            (Q3_B & s0bar & s1bar)}
+     D5 = {(Q3_B & S0 & s1bar) | (Q5_B & s0bar & S1) | (E/QE & S0 & S1) |
+            (Q4_B & s0bar & s1bar)}
+     D6 = {(Q4_B & S0 & s1bar) | (Q6_B & s0bar & S1) | (F/QF & S0 & S1) |
+            (Q5_B & s0bar & s1bar)}
+     D7 = {(Q5_B & S0 & s1bar) | (Q7_B & s0bar & S1) | (G/QG & S0 & S1) |
+            (Q6_B & s0bar & s1bar)}
+     D8 = {(Q6_B & S0 & s1bar) | (SL & s0bar & S1) | (H/QH & S0 & S1) |
+            (Q7_B & s0bar & s1bar)}

U3DLY PINDLY(10,1,5) DPWR DGND
+     QA_O QH_O Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     ENAB
+     CLK CLRBAR G1BAR G2BAR SENAB
+     QA QH A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CLK,0)}
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     ENABSD = {CHANGED_LH(SENAB,0)}
+     ENABSE = {CHANGED_HL(SENAB,0)}
+     ENABGD = {CHANGED_LH(G1BAR,0) | CHANGED_LH(G2BAR,0)}
+     ENABGE = {(CHANGED_HL(G1BAR,0) & G2BAR=='0) | (CHANGED_HL(G2BAR,0) & 
+                     G1BAR=='0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(6ns,-1,22ns),
+         CLOCK & TRN_LH, DELAY(4ns,-1,13ns),
+         CLOCK & TRN_HL, DELAY(7ns,-1,19ns),
+         ENABGE & TRN_ZH, DELAY(6ns,-1,16ns),
+         ENABGE & TRN_ZL, DELAY(8ns,-1,22ns),
+         ENABSE & TRN_ZH, DELAY(7ns,-1,17ns),
+         ENABSE & TRN_ZL, DELAY(8ns,-1,22ns),
+         ENABGD & TRN_HZ, DELAY(1ns,-1,8ns),
+         ENABGD & TRN_LZ, DELAY(5ns,-1,15ns),
+         ENABSD & TRN_HZ, DELAY(1ns,-1,12ns),
+         ENABSD & TRN_LZ, DELAY(8ns,-1,25ns),
+         DELAY(9ns,-1,26ns))}
+
+  PINDLY:
+     QA QH = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(6ns,-1,22ns),
+         CLOCK & TRN_LH, DELAY(5ns,-1,15ns),
+         CLOCK & TRN_HL, DELAY(8ns,-1,18ns),
+         DELAY(9ns,-1,23ns))}

U4CON CONSTRAINT(16) DPWR DGND
+     S0 S1 CLK SR SL CLRBAR A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH 
+     G1BAR G2BAR
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=30MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_LO=16.5ns
+     MIN_HI=16.5ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=10ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=S0 S1
+     SETUPTIME=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=SR SL
+     SETUPTIME_HI=16ns
+     SETUPTIME_LO=6ns
+     WHEN = {CLRBAR!='0 & ((S1=='1 & S0=='0) | (S1=='0 & S0=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     SETUPTIME_HI=16ns
+     SETUPTIME_LO=6ns
+     WHEN = {CLRBAR!='0 & ((S0=='1 & S1=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=15ns

.ENDS 74ALS299
*
*
*-------------------------------------------------------------74AS299----

* 8-Bit Universal Shift/Storage Register with 3-State Outputs
* TI ALS/AS Logic Data Book, 1986, pages 2-343 to 2-349
* The constraints for the ALS299 were used.
* jat 1/2/96

.SUBCKT 74AS299 CLRBAR G1BAR G2BAR S0 S1 CLK SR SL A/QA B/QB C/QC D/QD
+ E/QE F/QF G/QG H/QH QA QH
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(22,9) DPWR DGND
+ SR SL S0 S1 QAO QB QC QD QE QF QG QHO A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+ G1BAR G2BAR
+ ENAB DA DB DC DD DE DF DG DH
+ D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  ENAB = {(~G1BAR) & (~G2BAR) & ((~S0) | (~S1))}
+  DA = {(SR & S0 & (~S1)) | (QB & (~S0) & S1) | (A/QA & S0 & S1) |
+        (QAO & (~S0) & (~S1))}
+  DB = {(QAO & S0 & (~S1)) | (QC & (~S0) & S1) | (B/QB & S0 & S1) |
+        (QB & (~S0) & (~S1))}
+  DC = {(QB & S0 & (~S1)) | (QD & (~S0) & S1) | (C/QC & S0 & S1) |
+        (QC & (~S0) & (~S1))}
+  DD = {(QC & S0 & (~S1)) | (QE & (~S0) & S1) | (D/QD & S0 & S1) |
+        (QD & (~S0) & (~S1))}
+  DE = {(QD & S0 & (~S1)) | (QF & (~S0) & S1) | (E/QE & S0 & S1) |
+        (QE & (~S0) & (~S1))}
+  DF = {(QE & S0 & (~S1)) | (QG & (~S0) & S1) | (F/QF & S0 & S1) |
+        (QF & (~S0) & (~S1))}
+  DG = {(QF & S0 & (~S1)) | (QHO & (~S0) & S1) | (G/QG & S0 & S1) |
+        (QG & (~S0) & (~S1))}
+  DH = {(QG & S0 & (~S1)) | (SL & (~S0) & S1) | (H/QH & S0 & S1) |
+        (QHO & (~S0) & (~S1))}

U2 DFF(8) DPWR DGND
+ $D_HI CLRBAR CLK
+ DA DB DC DD DE DF DG DH
+ QAO QB QC QD QE QF QG QHO
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(10,1,6) DPWR DGND
+ QAO QB QC QD QE QF QG QHO QAO QHO
+ ENAB
+ G1BAR G2BAR S0 S1 CLK CLRBAR
+ A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH QA QH
+ IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   G12ENAB = {CHANGED(G1BAR,0) | CHANGED(G2BAR,0)}
+   S12ENAB = {CHANGED(S0,0) | CHANGED(S1,0)}
+   EDGE = {CHANGED_LH(CLK,0)}
+   CLEAR = {CHANGED(CLRBAR,0)}
+ TRISTATE:
+ ENABLE HI = ENAB
+    A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH = {
+       CASE(
+         G12ENAB & TRN_Z$, DELAY(-1,10NS,-1),
+         G12ENAB & TRN_$Z, DELAY(-1,7NS,-1),
+         S12ENAB & TRN_Z$, DELAY(-1,10NS,-1),
+         S12ENAB & TRN_$Z, DELAY(-1,7NS,-1),
+         CLEAR & TRN_HL, DELAY(-1,12NS,-1),
+         EDGE & (TRN_LH | TRN_HL), DELAY(-1,10NS,-1),
+         DELAY(-1,13NS,-1))}
+ PINDLY:
+     QA QH = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,12NS,-1),
+         EDGE & (TRN_LH | TRN_HL), DELAY(-1,10NS,-1),
+         DELAY(-1,13NS,-1))}

U4 CONSTRAINT(14) DPWR DGND
+ CLK CLRBAR S0 S1 SR SL A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+ IO_AS00 IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLK
+   MAXFREQ = 30MEG
+ WIDTH:
+   NODE = CLK
+   MIN_LO = 16.5NS
+   MIN_HI = 16.5NS
+ WIDTH:
+   NODE = CLRBAR
+   MIN_LO = 10NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(2) = S0 S1
+   SETUPTIME = 20NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(10) =  A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH SR SL
+   SETUPTIME_LO = 6NS
+   SETUPTIME_HI = 16NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(1) = CLRBAR
+   SETUPTIME_HI = 15NS

.ENDS 74AS299
*
*
*-------------------------------------------------------------74F299----

* 8-Bit Universal Shift/Storage Register with 3-State Outputs
* TI F Logic Data Book, 1994, pages 2-211 to 2-215
* jat 7/3/96

.SUBCKT 74F299 CLRBAR OE1BAR OE2BAR S0 S1 CLK SR SL A/QA B/QB C/QC D/QD
+ E/QE F/QF G/QG H/QH QA QH
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(22,9) DPWR DGND
+ SR SL S0 S1 QAO QB QC QD QE QF QG QHO A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+ OE1BAR OE2BAR
+ ENAB DA DB DC DD DE DF DG DH
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  ENAB = {(~OE1BAR) & (~OE2BAR) & ((~S0) | (~S1))}
+  DA = {(SR & S0 & (~S1)) | (QB & (~S0) & S1) | (A/QA & S0 & S1) |
+        (QAO & (~S0) & (~S1))}
+  DB = {(QAO & S0 & (~S1)) | (QC & (~S0) & S1) | (B/QB & S0 & S1) |
+        (QB & (~S0) & (~S1))}
+  DC = {(QB & S0 & (~S1)) | (QD & (~S0) & S1) | (C/QC & S0 & S1) |
+        (QC & (~S0) & (~S1))}
+  DD = {(QC & S0 & (~S1)) | (QE & (~S0) & S1) | (D/QD & S0 & S1) |
+        (QD & (~S0) & (~S1))}
+  DE = {(QD & S0 & (~S1)) | (QF & (~S0) & S1) | (E/QE & S0 & S1) |
+        (QE & (~S0) & (~S1))}
+  DF = {(QE & S0 & (~S1)) | (QG & (~S0) & S1) | (F/QF & S0 & S1) |
+        (QF & (~S0) & (~S1))}
+  DG = {(QF & S0 & (~S1)) | (QHO & (~S0) & S1) | (G/QG & S0 & S1) |
+        (QG & (~S0) & (~S1))}
+  DH = {(QG & S0 & (~S1)) | (SL & (~S0) & S1) | (H/QH & S0 & S1) |
+        (QHO & (~S0) & (~S1))}

U2 DFF(8) DPWR DGND
+ $D_HI CLRBAR CLK
+ DA DB DC DD DE DF DG DH
+ QAO QB QC QD QE QF QG QHO
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(10,1,4) DPWR DGND
+ QAO QB QC QD QE QF QG QHO QAO QHO
+ ENAB
+ OE1BAR OE2BAR CLK CLRBAR
+ A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH QA QH
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   G12ENAB = {CHANGED(OE1BAR,0) | CHANGED(OE2BAR,0)}
+   EDGE = {CHANGED_LH(CLK,0)}
+   CLEAR = {CHANGED(CLRBAR,0)}
+ TRISTATE:
+ ENABLE HI = ENAB
+    A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH = {
+       CASE(
+         G12ENAB & TRN_ZH, DELAY(2.7NS,5.6NS,8NS),
+         G12ENAB & TRN_ZL, DELAY(3.2NS,6.6NS,10NS),
+         G12ENAB & TRN_HZ, DELAY(1.7NS,4.1NS,6NS),
+         G12ENAB & TRN_LZ, DELAY(1.2NS,3.6NS,5.5NS),
+         CLEAR & TRN_HL, DELAY(5.7NS,10.6NS,14NS),
+         EDGE & TRN_LH, DELAY(3.2NS,6.6NS,9NS),
+         EDGE & TRN_HL, DELAY(4.2NS,8.1NS,11NS),
+         DELAY(6.7NS,11.6NS,15NS))}
+ PINDLY:
+     QA QH = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(3.7NS,7.1NS,9.5NS),
+         EDGE & TRN_LH, DELAY(3.2NS,6.6NS,9NS),
+         EDGE & TRN_HL, DELAY(2.7NS,6.1NS,8.5NS),
+         DELAY(4.7NS,8.1NS,10.5NS))}

U4 CONSTRAINT(14) DPWR DGND
+ CLK CLRBAR S0 S1 SR SL A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLK
+   MAXFREQ = 70MEG
+ WIDTH:
+   NODE = CLK
+   MIN_LO = 7NS
+   MIN_HI = 7NS
+ WIDTH:
+   NODE = CLRBAR
+   MIN_LO = 7NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(2) = S0 S1
+   SETUPTIME = 8.5NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(10) =  A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH SR SL
+   SETUPTIME = 5.5NS
+   HOLDTIME = 2NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(1) = CLRBAR
+   SETUPTIME_HI = 7NS

.ENDS 74F299

* ----------------------------------------------------------- 74HC299 ------
*  8-Input Universal Shift/Storage Register With Direct Clear And 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-389 to 2-394
*  bss    4/6/94
*
.SUBCKT 74HC299 CLRBAR G1BAR G2BAR S0 S1 CLK SR SL A/QA B/QB C/QC D/QD
+     E/QE F/QF G/QG H/QH QA QH
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI CLRBAR CLK
+     D1 D2 D3 D4 D5 D6 D7 D8
+     Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(22,12) DPWR DGND
+     G1BAR G2BAR S0 S1 SR SL Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     D1 D2 D3 D4 D5 D6 D7 D8 QA_O QH_O ENAB SENAB
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     QA_O = {Q0_B}
+     QH_O = {Q7_B}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     SENAB = {S0 & S1}
+     ENAB = {~(senab | G1BAR | G2BAR)}
+     D1 = {(SR & S0 & s1bar) | (Q1_B & s0bar & S1) | (A/QA & S0 & S1) | 
+            (Q0_B & s0bar & s1bar)}
+     D2 = {(Q0_B & S0 & s1bar) | (Q2_B & s0bar & S1) | (B/QB & S0 & S1) |
+            (Q1_B & s0bar & s1bar)}
+     D3 = {(Q1_B & S0 & s1bar) | (Q3_B & s0bar & S1) | (C/QC & S0 & S1) |
+            (Q2_B & s0bar & s1bar)}
+     D4 = {(Q2_B & S0 & s1bar) | (Q4_B & s0bar & S1) | (D/QD & S0 & S1) |
+            (Q3_B & s0bar & s1bar)}
+     D5 = {(Q3_B & S0 & s1bar) | (Q5_B & s0bar & S1) | (E/QE & S0 & S1) |
+            (Q4_B & s0bar & s1bar)}
+     D6 = {(Q4_B & S0 & s1bar) | (Q6_B & s0bar & S1) | (F/QF & S0 & S1) |
+            (Q5_B & s0bar & s1bar)}
+     D7 = {(Q5_B & S0 & s1bar) | (Q7_B & s0bar & S1) | (G/QG & S0 & S1) |
+            (Q6_B & s0bar & s1bar)}
+     D8 = {(Q6_B & S0 & s1bar) | (SL & s0bar & S1) | (H/QH & S0 & S1) |
+            (Q7_B & s0bar & s1bar)}

U3DLY PINDLY(10,1,5) DPWR DGND
+     QA_O QH_O Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     ENAB
+     CLK CLRBAR G1BAR G2BAR SENAB
+     QA QH A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CLK,0)}
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     ENABSD = {CHANGED_LH(SENAB,0)}
+     ENABSE = {CHANGED_HL(SENAB,0)}
+     ENABGD = {CHANGED_LH(G1BAR,0) | CHANGED_LH(G2BAR,0)}
+     ENABGE = {(CHANGED_HL(G1BAR,0) & G2BAR=='0) | (CHANGED_HL(G2BAR,0) & 
+                     G1BAR=='0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,17ns,42ns),
+         CLOCK, DELAY(-1,16ns,38ns),
+         ENABGE & TRN_ZH, DELAY(-1,24ns,32ns),
+         ENABGE & TRN_ZL, DELAY(-1,24ns,32ns),
+         ENABSE & TRN_ZH, DELAY(-1,44ns,60ns),
+         ENABSE & TRN_ZL, DELAY(-1,44ns,60ns),
+         ENABGD & TRN_HZ, DELAY(-1,24ns,32ns),
+         ENABGD & TRN_LZ, DELAY(-1,24ns,32ns),
+         ENABSD & TRN_HZ, DELAY(-1,44ns,60ns),
+         ENABSD & TRN_LZ, DELAY(-1,44ns,60ns),
+         DELAY(-1,45ns,61ns))}
+
+  PINDLY:
+     QA QH = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,17ns,42ns),
+         CLOCK, DELAY(-1,16ns,38ns),
+         DELAY(-1,18ns,43ns))}

U4CON CONSTRAINT(16) DPWR DGND
+     S0 S1 CLK SR SL CLRBAR A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     G1BAR G2BAR
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_LO=20ns
+     MIN_HI=20ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=S0 S1
+     SETUPTIME=44ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=SR SL
+     SETUPTIME=25ns
+     WHEN = {CLRBAR!='0 & ((S1=='1 & S0=='0) | (S1=='0 & S0=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     SETUPTIME=16ns
+     WHEN = {CLRBAR!='0 & ((S0=='1 & S1=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=16ns

.ENDS 74HC299

*-------------------------------------------------------------74HCT299----

* 8-Bit Universal Shift Register; 3-State
* Philips High-Speed CMOS Logic Family Data Handbook, 1994, pages 577 to 583
* jat 9/11/96

.SUBCKT 74HCT299 S0 S1 DSR DSL CP MRBAR OE1BAR OE2BAR I/O0 I/O1 I/O2 I/O3
+ I/O4 I/O5 I/O6 I/O7 Q0 Q7
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(24,9) DPWR DGND
+ S0 S1 DSR DSL CP MRBAR OE1BAR OE2BAR I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ ENAB D0 D1 D2 D3 D4 D5 D6 D7
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  ENAB = {(~OE1BAR) & (~OE2BAR) & ((~S0) | (~S1))}
+  D0 = {(DSR & S0 & (~S1)) | (Q1O & (~S0) & S1) | (I/O0 & S0 & S1) |
+        (Q0O & (~S0) & (~S1))}
+  D1 = {(Q0O & S0 & (~S1)) | (Q2O & (~S0) & S1) | (I/O1 & S0 & S1) |
+        (Q1O & (~S0) & (~S1))}
+  D2 = {(Q1O & S0 & (~S1)) | (Q3O & (~S0) & S1) | (I/O2 & S0 & S1) |
+        (Q2O & (~S0) & (~S1))}
+  D3 = {(Q2O & S0 & (~S1)) | (Q4O & (~S0) & S1) | (I/O3 & S0 & S1) |
+        (Q3O & (~S0) & (~S1))}
+  D4 = {(Q3O & S0 & (~S1)) | (Q5O & (~S0) & S1) | (I/O4 & S0 & S1) |
+        (Q4O & (~S0) & (~S1))}
+  D5 = {(Q4O & S0 & (~S1)) | (Q6O & (~S0) & S1) | (I/O5 & S0 & S1) |
+        (Q5O & (~S0) & (~S1))}
+  D6 = {(Q5O & S0 & (~S1)) | (Q7O & (~S0) & S1) | (I/O6 & S0 & S1) |
+        (Q6O & (~S0) & (~S1))}
+  D7 = {(Q6O & S0 & (~S1)) | (DSL & (~S0) & S1) | (I/O7 & S0 & S1) |
+        (Q7O & (~S0) & (~S1))}

U2 DFF(8) DPWR DGND
+ $D_HI MRBAR CP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(10,1,2) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O Q0O Q7O
+ ENAB
+ CP MRBAR
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 Q0 Q7
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   EDGE = {CHANGED_LH(CP,0)}
+   CLEAR = {CHANGED_HL(MRBAR,0)}
+ TRISTATE:
+ ENABLE HI = ENAB
+    I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 = {
+       CASE(
+         TRN_Z$, DELAY(-1,19NS,30NS),
+         TRN_HZ, DELAY(-1,24NS,37NS),
+         TRN_LZ, DELAY(-1,20NS,32NS),
+         CLEAR & TRN_HL, DELAY(-1,27NS,46NS),
+         EDGE & (TRN_LH | TRN_HL), DELAY(-1,22NS,37NS),
+         DELAY(-1,28NS,47NS))}
+ PINDLY:
+     Q0 Q7 = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,27NS,46NS),
+         EDGE & (TRN_LH | TRN_HL), DELAY(-1,22NS,37NS),
+         DELAY(-1,28NS,47NS))}

U4 CONSTRAINT(14) DPWR DGND
+ CP MRBAR S0 S1 I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 DSR DSL
+ IO_HCT IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CP
+   MAXFREQ = 42MEG
+ WIDTH:
+   NODE = CP
+   MIN_LO = 10NS
+   MIN_HI = 10NS
+ WIDTH:
+   NODE = MRBAR
+   MIN_LO = 11NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(2) = S0 S1
+   SETUPTIME = 18NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(10) = I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 DSR DSL
+   SETUPTIME = 14NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(1) = MRBAR
+   SETUPTIME_HI = 2NS

.ENDS 74HCT299

* ----------------------------------------------------------- 74LS299 ------
*  8-Input Universal Shift/Storage Registers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-823 to 2-828
*  bss    4/6/94
*
.SUBCKT 74LS299 CLRBAR G1BAR G2BAR S0 S1 CLK SR SL A/QA B/QB C/QC D/QD
+     E/QE F/QF G/QG H/QH QA QH
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI CLRBAR CLK
+     D1 D2 D3 D4 D5 D6 D7 D8
+     Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(22,12) DPWR DGND
+     G1BAR G2BAR S0 S1 SR SL Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     D1 D2 D3 D4 D5 D6 D7 D8 QA_O QH_O ENAB SENAB
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     QA_O = {Q0_B}
+     QH_O = {Q7_B}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     SENAB = {S0 & S1}
+     ENAB = {~(senab | G1BAR | G2BAR)}
+     D1 = {(SR & S0 & s1bar) | (Q1_B & s0bar & S1) | (A/QA & S0 & S1) | 
+            (Q0_B & s0bar & s1bar)}
+     D2 = {(Q0_B & S0 & s1bar) | (Q2_B & s0bar & S1) | (B/QB & S0 & S1) |
+            (Q1_B & s0bar & s1bar)}
+     D3 = {(Q1_B & S0 & s1bar) | (Q3_B & s0bar & S1) | (C/QC & S0 & S1) |
+            (Q2_B & s0bar & s1bar)}
+     D4 = {(Q2_B & S0 & s1bar) | (Q4_B & s0bar & S1) | (D/QD & S0 & S1) |
+            (Q3_B & s0bar & s1bar)}
+     D5 = {(Q3_B & S0 & s1bar) | (Q5_B & s0bar & S1) | (E/QE & S0 & S1) |
+            (Q4_B & s0bar & s1bar)}
+     D6 = {(Q4_B & S0 & s1bar) | (Q6_B & s0bar & S1) | (F/QF & S0 & S1) |
+            (Q5_B & s0bar & s1bar)}
+     D7 = {(Q5_B & S0 & s1bar) | (Q7_B & s0bar & S1) | (G/QG & S0 & S1) |
+            (Q6_B & s0bar & s1bar)}
+     D8 = {(Q6_B & S0 & s1bar) | (SL & s0bar & S1) | (H/QH & S0 & S1) |
+            (Q7_B & s0bar & s1bar)}

U3DLY PINDLY(10,1,5) DPWR DGND
+     QA_O QH_O Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     ENAB
+     CLK CLRBAR G1BAR G2BAR SENAB
+     QA QH A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CLK,0)}
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,26ns,40ns),
+         CLOCK & TRN_LH, DELAY(-1,17ns,25ns),
+         CLOCK & TRN_HL, DELAY(-1,26ns,39ns),
+         TRN_ZH, DELAY(-1,13ns,21ns),
+         TRN_ZL, DELAY(-1,19ns,30ns),
+         TRN_HZ, DELAY(-1,10ns,20ns),
+         TRN_LZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,27ns,41ns))}
+
+  PINDLY:
+     QA QH = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,27ns,40ns),
+         CLOCK & TRN_LH, DELAY(-1,22ns,33ns),
+         CLOCK & TRN_HL, DELAY(-1,26ns,39ns),
+         DELAY(-1,28ns,41ns))}

U4CON CONSTRAINT(16) DPWR DGND
+     S0 S1 CLK SR SL CLRBAR A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     G1BAR G2BAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_LO=10ns
+     MIN_HI=30ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=S0 S1
+     SETUPTIME=35ns
+     HOLDTIME=10ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=SR SL
+     SETUPTIME=20ns
+     WHEN = {CLRBAR!='0 & ((S1=='1 & S0=='0) | (S1=='0 & S0=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     SETUPTIME=20ns
+     WHEN = {CLRBAR!='0 & ((S0=='1 & S1=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=20ns

.ENDS 74LS299
*
*
* ----------------------------------------------------------- 74S299 ------
*  8-Input Universal Shift/Storage Registers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-823 to 2-828
*  bss    4/6/94
*
.SUBCKT 74S299 CLRBAR G1BAR G2BAR S0 S1 CLK SR SL A/QA B/QB C/QC D/QD
+     E/QE F/QF G/QG H/QH QA QH
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI CLRBAR CLK
+     D1 D2 D3 D4 D5 D6 D7 D8
+     Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(22,12) DPWR DGND
+     G1BAR G2BAR S0 S1 SR SL Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     D1 D2 D3 D4 D5 D6 D7 D8 QA_O QH_O ENAB SENAB
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     QA_O = {Q0_B}
+     QH_O = {Q7_B}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     SENAB = {S0 & S1}
+     ENAB = {~(senab | G1BAR | G2BAR)}
+     D1 = {(SR & S0 & s1bar) | (Q1_B & s0bar & S1) | (A/QA & S0 & S1) | 
+            (Q0_B & s0bar & s1bar)}
+     D2 = {(Q0_B & S0 & s1bar) | (Q2_B & s0bar & S1) | (B/QB & S0 & S1) |
+            (Q1_B & s0bar & s1bar)}
+     D3 = {(Q1_B & S0 & s1bar) | (Q3_B & s0bar & S1) | (C/QC & S0 & S1) |
+            (Q2_B & s0bar & s1bar)}
+     D4 = {(Q2_B & S0 & s1bar) | (Q4_B & s0bar & S1) | (D/QD & S0 & S1) |
+            (Q3_B & s0bar & s1bar)}
+     D5 = {(Q3_B & S0 & s1bar) | (Q5_B & s0bar & S1) | (E/QE & S0 & S1) |
+            (Q4_B & s0bar & s1bar)}
+     D6 = {(Q4_B & S0 & s1bar) | (Q6_B & s0bar & S1) | (F/QF & S0 & S1) |
+            (Q5_B & s0bar & s1bar)}
+     D7 = {(Q5_B & S0 & s1bar) | (Q7_B & s0bar & S1) | (G/QG & S0 & S1) |
+            (Q6_B & s0bar & s1bar)}
+     D8 = {(Q6_B & S0 & s1bar) | (SL & s0bar & S1) | (H/QH & S0 & S1) |
+            (Q7_B & s0bar & s1bar)}

U3DLY PINDLY(10,1,5) DPWR DGND
+     QA_O QH_O Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     ENAB
+     CLK CLRBAR G1BAR G2BAR SENAB
+     QA QH A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CLK,0)}
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,16ns,24ns),
+         CLOCK, DELAY(-1,15ns,21ns),
+         TRN_ZH, DELAY(-1,10ns,18ns),
+         TRN_ZL, DELAY(-1,12ns,18ns),
+         TRN_HZ, DELAY(-1,7ns,12ns),
+         TRN_LZ, DELAY(-1,7ns,12ns),
+         DELAY(-1,17ns,25ns))}
+
+  PINDLY:
+     QA QH = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,14ns,21ns),
+         CLOCK & TRN_LH, DELAY(-1,12ns,20ns),
+         CLOCK & TRN_HL, DELAY(-1,13ns,20ns),
+         DELAY(-1,15ns,22ns))}

U4CON CONSTRAINT(16) DPWR DGND
+     S0 S1 CLK SR SL CLRBAR A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     G1BAR G2BAR
+     IO_S IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=50MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_LO=10ns
+     MIN_HI=10ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=10ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=S0 S1
+     SETUPTIME=15ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=SR SL
+     SETUPTIME_HI=7ns
+     SETUPTIME_LO=5ns
+     HOLDTIME=5ns
+     WHEN = {CLRBAR!='0 & ((S1=='1 & S0=='0) | (S1=='0 & S0=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     SETUPTIME_HI=7ns
+     SETUPTIME_LO=5ns
+     HOLDTIME=5ns
+     WHEN = {CLRBAR!='0 & ((S0=='1 & S1=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=10ns

.ENDS 74S299

* -----------------------------------------------------------74F322------

* Octal Serial/Parallel Register with Sign Extend
* National Advanced Bipolar Logic Databook, 1995, pages 7-239 to 7-244
* jat 8/14/96

.SUBCKT 74F322 MRBAR OEBAR REBAR S/PBAR CP SEBAR S D0 D1 
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 Q0
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(25,9) DPWR DGND
+ REBAR S/PBAR S D0 D1 SEBAR CP MRBAR OEBAR I/O0 I/O1 I/O2 I/O3 I/O4 I/O5
+ I/O6 I/O7 Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7 OUTENAB
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   NORX = {~REBAR & ~S/PBAR}
+   NORY = {~REBAR & S/PBAR}
+   AND7TOP = {D1 & NORY & SEBAR & S}
+   AND7BOT = {D0 & NORY & SEBAR & ~S}
+   DATA7 = {AND7BOT | AND7TOP | (I/O7 & NORX) | (~SEBAR & NORY & Q7O) |
+           (REBAR & Q7O)}
+   DATA6 = {(Q7O & NORY) | (NORX & I/O6) | (REBAR & Q6O)}
+   DATA5 = {(Q6O & NORY) | (NORX & I/O5) | (REBAR & Q5O)}
+   DATA4 = {(Q5O & NORY) | (NORX & I/O4) | (REBAR & Q4O)}
+   DATA3 = {(Q4O & NORY) | (NORX & I/O3) | (REBAR & Q3O)}
+   DATA2 = {(Q3O & NORY) | (NORX & I/O2) | (REBAR & Q2O)}
+   DATA1 = {(Q2O & NORY) | (NORX & I/O1) | (REBAR & Q1O)}
+   DATA0 = {(Q1O & NORY) | (NORX & I/O0) | (REBAR & Q0O)}
+   OUTENAB = {~(NORX | OEBAR)}

U2 DFF(8) DPWR DGND
+ $D_HI MRBAR CP
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(9,1,4) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O Q0O
+ OUTENAB
+ CP MRBAR OEBAR S/PBAR
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 Q0 
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLOCK = {CHANGED_LH(CP,0)}
+   CLEAR = {CHANGED_HL(MRBAR,0)}
+ TRISTATE:
+ ENABLE HI=OUTENAB
+   I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 = {
+     CASE(
+       TRN_ZH & (CHANGED(OEBAR,0)), DELAY(3NS,6.5NS,9NS),
+       TRN_ZL & (CHANGED(OEBAR,0)), DELAY(4NS,8.5NS,11NS),
+       TRN_HZ & (CHANGED(OEBAR,0)), DELAY(2NS,4.5NS,6NS),
+       TRN_LZ & (CHANGED(OEBAR,0)), DELAY(2NS,5NS,7NS),
+       TRN_ZH & (CHANGED(S/PBAR,0)), DELAY(4.5NS,8NS,10.5NS),
+       TRN_ZL & (CHANGED(S/PBAR,0)), DELAY(5.5NS,10NS,14NS),
+       TRN_HZ & (CHANGED(S/PBAR,0)), DELAY(5NS,9NS,11.5NS),
+       TRN_LZ & (CHANGED(S/PBAR,0)), DELAY(6NS,12NS,15.5NS),
+       CLEAR & TRN_HL, DELAY(6NS,10NS,13NS),
+       CLOCK & TRN_LH, DELAY(3.5NS,7NS,7.5NS),
+       CLOCK & TRN_HL, DELAY(5NS,8.5NS,11NS),
+       DELAY(7NS,13NS,16.5NS))}
+ PINDLY:
+   Q0 = {
+     CASE(
+       CLEAR & TRN_HL, DELAY(5.5NS,7.5NS,12NS),
+       CLOCK & TRN_LH, DELAY(3.5NS,7NS,9NS),
+       CLOCK & TRN_HL, DELAY(3.5NS,7NS,8NS),
+       DELAY(6.5NS,8.5NS,13NS))}

U4 CONSTRAINT(16) DPWR DGND
+ CP MRBAR S D0 D1 REBAR SEBAR S/PBAR I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE=CP
+   MAXFREQ=90MEG
+ WIDTH:
+   NODE=CP
+   MIN_HI=7NS
+   MIN_LO=7NS
+ WIDTH:
+   NODE=MRBAR
+   MIN_LO=5.5NS
+ SETUP_HOLD:
+   CLOCK LH=CP
+   DATA(1)=S
+   SETUPTIME_HI=6.5NS
+   SETUPTIME_LO=9NS
+ SETUP_HOLD:
+   CLOCK LH=CP
+   DATA(10)=D0 D1 I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+   SETUPTIME=6.5NS
+   HOLDTIME=2NS
+ SETUP_HOLD:
+   CLOCK LH=CP
+   DATA(1)=REBAR
+   SETUPTIME_HI=6NS
+   SETUPTIME_LO=14NS
+ SETUP_HOLD:
+   CLOCK LH=CP
+   DATA(1)=SEBAR
+   SETUPTIME_HI=7NS
+   SETUPTIME_LO=2.5NS
+   HOLDTIME_HI=2NS
+ SETUP_HOLD:
+   CLOCK LH=CP
+   DATA(1)=S/PBAR
+   SETUPTIME_HI=11NS
+   SETUPTIME_LO=13.5NS
+ SETUP_HOLD:
+   CLOCK LH=CP
+   DATA(1)=MRBAR
+   SETUPTIME_HI=8NS

.ENDS 74F322

* -----------------------------------------------------------74LS322------

* 8-Bit Serial/Parallel Register with Sign Extend
* National LS/S/TTL Logic Databook, 1989, pages 2-338 to 2-342
* jat 8/8/96

.SUBCKT 74LS322 MRBAR OEBAR REBAR S/PBAR CP SEBAR S D0 D1 
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 Q0
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(25,9) DPWR DGND
+ REBAR S/PBAR S D0 D1 SEBAR CP MRBAR OEBAR I/O0 I/O1 I/O2 I/O3 I/O4 I/O5
+ I/O6 I/O7 Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7 OUTENAB
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   NORX = {~REBAR & ~S/PBAR}
+   NORY = {~REBAR & S/PBAR}
+   AND7TOP = {D1 & NORY & SEBAR & S}
+   AND7BOT = {D0 & NORY & SEBAR & ~S}
+   DATA7 = {AND7BOT | AND7TOP | (I/O7 & NORX) | (~SEBAR & NORY & Q7O) |
+           (REBAR & Q7O)}
+   DATA6 = {(Q7O & NORY) | (NORX & I/O6) | (REBAR & Q6O)}
+   DATA5 = {(Q6O & NORY) | (NORX & I/O5) | (REBAR & Q5O)}
+   DATA4 = {(Q5O & NORY) | (NORX & I/O4) | (REBAR & Q4O)}
+   DATA3 = {(Q4O & NORY) | (NORX & I/O3) | (REBAR & Q3O)}
+   DATA2 = {(Q3O & NORY) | (NORX & I/O2) | (REBAR & Q2O)}
+   DATA1 = {(Q2O & NORY) | (NORX & I/O1) | (REBAR & Q1O)}
+   DATA0 = {(Q1O & NORY) | (NORX & I/O0) | (REBAR & Q0O)}
+   OUTENAB = {~(NORX | OEBAR)}

U2 DFF(8) DPWR DGND
+ $D_HI MRBAR CP
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(9,1,4) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O Q0O
+ OUTENAB
+ CP MRBAR OEBAR S/PBAR
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 Q0 
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLOCK = {CHANGED_LH(CP,0)}
+   CLEAR = {CHANGED_HL(MRBAR,0)}
+ TRISTATE:
+ ENABLE HI=OUTENAB
+   I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 = {
+     CASE(
+       TRN_ZH & (CHANGED(OEBAR,0)), DELAY(-1,-1,21.5NS),
+       TRN_ZL & (CHANGED(OEBAR,0)), DELAY(-1,-1,23.9NS),
+       TRN_HZ & (CHANGED(OEBAR,0)), DELAY(-1,-1,15NS),
+       TRN_LZ & (CHANGED(OEBAR,0)), DELAY(-1,-1,15NS),
+       TRN_ZH & (CHANGED(S/PBAR,0)), DELAY(-1,-1,25.2NS),
+       TRN_ZL & (CHANGED(S/PBAR,0)), DELAY(-1,-1,25.8NS),
+       TRN_HZ & (CHANGED(S/PBAR,0)), DELAY(-1,-1,40.2NS),
+       TRN_LZ & (CHANGED(S/PBAR,0)), DELAY(-1,-1,26.8NS),
+       CLEAR & TRN_HL, DELAY(-1,-1,34.1NS),
+       CLOCK & TRN_LH, DELAY(-1,-1,25NS),
+       CLOCK & TRN_HL, DELAY(-1,-1,34NS),
+       DELAY(-1,-1,41.2NS))}
+ PINDLY:
+   Q0 = {
+     CASE(
+       CLEAR & TRN_HL, DELAY(-1,-1,28NS),
+       CLOCK & TRN_LH, DELAY(-1,-1,26NS),
+       CLOCK & TRN_HL, DELAY(-1,-1,29NS),
+       DELAY(-1,-1,30NS))}

U4 CONSTRAINT(16) DPWR DGND
+ CP MRBAR S D0 D1 REBAR SEBAR S/PBAR I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE=CP
+   MAXFREQ=35MEG
+ WIDTH:
+   NODE=CP
+   MIN_HI=15NS
+ WIDTH:
+   NODE=MRBAR
+   MIN_LO=15NS
+ SETUP_HOLD:
+   CLOCK LH=CP
+   DATA(1)=S
+   SETUPTIME=15NS
+ SETUP_HOLD:
+   CLOCK LH=CP
+   DATA(10)=D0 D1 I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+   SETUPTIME=10NS
+ SETUP_HOLD:
+   CLOCK LH=CP
+   DATA(1)=REBAR
+   SETUPTIME=24NS
+ SETUP_HOLD:
+   CLOCK LH=CP
+   DATA(1)=SEBAR
+   SETUPTIME=15NS
+ SETUP_HOLD:
+   CLOCK LH=CP
+   DATA(1)=S/PBAR
+   SETUPTIME=24NS
+ SETUP_HOLD:
+   CLOCK LH=CP
+   DATA(1)=MRBAR
+   SETUPTIME_HI=15NS

.ENDS 74LS322

* ----------------------------------------------------------- 74LS322A ------
*  8-Bit Shift Register With Sign Extend
*
*  The TTL Logic Data Book, 1988, TI Pages 2-835 to 2-839
*  bss    4/6/94
*
.SUBCKT 74LS322A CLRBAR OEBAR GBAR S/PBAR CLK SEBAR DS D0 D1 
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH QH
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI CLRBAR CLK
+     D1 D2 D3 D4 D5 D6 D7 D8
+     QA_B QB_B QC_B QD_B QE_B QF_B QG_B QH_B
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(23,10) DPWR DGND
+     OEBAR GBAR S/PBAR SEBAR DS D0 D1 A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     QA_B QB_B QC_B QD_B QE_B QF_B QG_B QH_B
+     D1 D2 D3 D4 D5 D6 D7 D8 ENAB QH_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     QH_O = {QH_B}
+     se = {~SEBAR}
+     enreg1 = {~(S/PBAR | GBAR)}
+     enreg2 = {~(enreg1 | GBAR)}
+     d1and = {D1 & SEBAR & enreg2 & DS}
+     dsbar = {~DS}
+     d0and = {D0 & SEBAR & enreg2 & dsbar}
+     ENAB = {~(OEBAR | enreg1)}
+     D1 = {d0and | d1and | (enreg1 & A/QA) | (se & enreg2 & QA_B) | (GBAR & QA_B)}
+     D2 = {(enreg2 & QA_B) | (enreg1 & B/QB) | (GBAR & QB_B)}
+     D3 = {(enreg2 & QB_B) | (enreg1 & C/QC) | (GBAR & QC_B)}
+     D4 = {(enreg2 & QC_B) | (enreg1 & D/QD) | (GBAR & QD_B)}
+     D5 = {(enreg2 & QD_B) | (enreg1 & E/QE) | (GBAR & QE_B)}
+     D6 = {(enreg2 & QE_B) | (enreg1 & F/QF) | (GBAR & QF_B)}
+     D7 = {(enreg2 & QF_B) | (enreg1 & G/QG) | (GBAR & QG_B)}
+     D8 = {(enreg2 & QG_B) | (enreg1 & H/QH) | (GBAR & QH_B)}

U3DLY PINDLY(9,1,2) DPWR DGND
+     QH_O QA_B QB_B QC_B QD_B QE_B QF_B QG_B QH_B
+     ENAB
+     CLK CLRBAR
+     QH A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CLK,0)}
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,22ns,35ns),
+         CLOCK & TRN_LH, DELAY(-1,16ns,25ns),
+         CLOCK & TRN_HL, DELAY(-1,22ns,33ns),
+         TRN_ZH, DELAY(-1,15ns,35ns),
+         TRN_ZL, DELAY(-1,15ns,35ns),
+         TRN_HZ, DELAY(-1,15ns,25ns),
+         TRN_LZ, DELAY(-1,15ns,25ns),
+         DELAY(-1,23ns,36ns))}
+
+  PINDLY:
+     QH = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,27ns,35ns),
+         CLOCK & TRN_LH, DELAY(-1,22ns,33ns),
+         CLOCK & TRN_HL, DELAY(-1,26ns,35ns),
+         DELAY(-1,28ns,36ns))}

U4CON CONSTRAINT(15) DPWR DGND
+     CLK CLRBAR DS D0 D1 A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH GBAR S/PBAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=30ns
+     MIN_LO=10ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=DS
+     SETUPTIME=10ns
+     HOLDTIME=10ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=D0 D1
+     SETUPTIME=20ns
+     HOLDTIME=2ns
+     WHEN = {CLRBAR!='0}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     SETUPTIME=20ns
+     HOLDTIME=2ns
+     WHEN = {CLRBAR!='0 & GBAR=='0 & S/PBAR=='0}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=GBAR
+     SETUPTIME_HI=35ns
+     SETUPTIME_LO=50ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=20ns

.ENDS 74LS322A
*
*
*-------------------------------------------------------------74AC323-----
*
* The 74AC323 8-Input Universal Shift/Storage Register
* with Common Parallel I/O Pins
* (9 Page Fax) Harris Advanced CMOS Logic, File Number 1958
* The TTL Data Book, 1988, TI page 2-842 for logic diagram
* jat 7/26/95

.SUBCKT 74AC323
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 DS0 DS7 CP S0 S1 Q0 Q7
+ OE1BAR OE2BAR MRBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(5,5) DPWR DGND
+ S1 MRBAR S0 OE1BAR OE2BAR
+ S1BAR MR NOR1 NOR2 ENAB
+ D0_GATE IO_AC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+        S1BAR = {~S1}
+        MR = {~MRBAR}
+        NOR1 = {~(S0 | MR)}
+        NOR2 = {~(NOR1 | MR)}
+        ENAB = {(~OE1BAR) & (~OE2BAR) & (~(S0 & S1))}

U2 AO(3,4) DPWR DGND
+ DS0 NOR2 S1BAR S1 NOR1 Q_1 S1 NOR2 I/O0 S1BAR NOR1 Q_0
+ D0
+ D0_GATE IO_AC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 AO(3,4) DPWR DGND
+ Q_0 NOR2 S1BAR S1 NOR1 Q_2 S1 NOR2 I/O1 S1BAR NOR1 Q_1
+ D1
+ D0_GATE IO_AC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 AO(3,4) DPWR DGND
+ Q_1 NOR2 S1BAR S1 NOR1 Q_3 S1 NOR2 I/O2 S1BAR NOR1 Q_2
+ D2
+ D0_GATE IO_AC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 AO(3,4) DPWR DGND
+ Q_2 NOR2 S1BAR S1 NOR1 Q_4 S1 NOR2 I/O3 S1BAR NOR1 Q_3
+ D3
+ D0_GATE IO_AC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 AO(3,4) DPWR DGND
+ Q_3 NOR2 S1BAR S1 NOR1 Q_5 S1 NOR2 I/O4 S1BAR NOR1 Q_4
+ D4
+ D0_GATE IO_AC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 AO(3,4) DPWR DGND
+ Q_4 NOR2 S1BAR S1 NOR1 Q_6 S1 NOR2 I/O5 S1BAR NOR1 Q_5
+ D5
+ D0_GATE IO_AC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 AO(3,4) DPWR DGND
+ Q_5 NOR2 S1BAR S1 NOR1 Q_7 S1 NOR2 I/O6 S1BAR NOR1 Q_6
+ D6
+ D0_GATE IO_AC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 AO(3,4) DPWR DGND
+ Q_6 NOR2 S1BAR S1 NOR1 DS7 S1 NOR2 I/O7 S1BAR NOR1 Q_7
+ D7
+ D0_GATE IO_AC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 DFF(8) DPWR DGND
+ $D_HI $D_HI CP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q_0 Q_1 Q_2 Q_3 Q_4 Q_5 Q_6 Q_7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_AC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U11 PINDLY(10,1,1) DPWR DGND
+ Q_0 Q_7 Q_0 Q_1 Q_2 Q_3 Q_4 Q_5 Q_6 Q_7
+ ENAB
+ CP
+ Q0 Q7 I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+ IO_AC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+          EDGE = {CHANGED_LH(CP,0)}
+ TRISTATE:
+          ENABLE HI = ENAB
+          I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 = {
+            CASE(
+               (TRN_$Z | TRN_Z$), DELAY(3.8NS,-1,13.5NS),
+               EDGE & (TRN_LH | TRN_HL), DELAY(3.5NS,-1,12.3NS),
+               DELAY(4.8NS,-1,14.5NS))}
+ PINDLY:
+          Q0 Q7 = {
+            CASE(
+               EDGE & (TRN_LH | TRN_HL), DELAY(3.3NS,-1,11.7NS),
+               DELAY(4.3NS,-1,12.7NS))}

U12 CONSTRAINT(14) DPWR DGND
+ CP S0 S1 I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 DS0 DS7 MRBAR
+ IO_AC IO_LEVEL={IO_LEVEL}
+ SETUP_HOLD:
+             CLOCK LH = CP
+             DATA(2) = S0 S1
+             SETUPTIME = 7.9NS
+ SETUP_HOLD:
+             CLOCK LH = CP
+             DATA(10) = I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 DS0 DS7
+             SETUPTIME = 3.9NS
+ SETUP_HOLD:
+             CLOCK LH = CP
+             DATA(1) = MRBAR
+             SETUPTIME = 4.8NS
+ WIDTH:
+             NODE = CP
+             MIN_LO = 4.6NS
+             MIN_HI = 4.6NS
+ WIDTH:
+             NODE = MRBAR
+             MIN_LO = 4.4NS
+             MIN_HI = 4.4NS
+ FREQ:
+             NODE = CP
+             MAXFREQ = 108MEG

.ENDS 74AC323
*
*
* ----------------------------------------------------------- 74ACT323 ------
*  8-Bit Universal Shift/Storage Register With Synchronous Reset And
*  Common I/O Pins
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-182 to 4-186
*  bss    4/7/94
*
.SUBCKT 74ACT323 SRBAR OE1BAR OE2BAR S0 S1 CP DS0 DS7 I/O0 I/O1 I/O2 I/O3
+     I/O4 I/O5 I/O6 I/O7 Q0 Q7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CP
+     D1 D2 D3 D4 D5 D6 D7 D8
+     Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(23,12) DPWR DGND
+     OE1BAR OE2BAR S0 S1 DS0 DS7 SRBAR
+     Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+     D1 D2 D3 D4 D5 D6 D7 D8 Q0_O Q7_O ENAB SENAB
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     Q0_O = {Q0_B}
+     Q7_O = {Q7_B}
+     clr = {~SRBAR}
+     scnor1 = {~(clr | S0)}
+     scnor2 = {~(clr | scnor1)}
+     s1bar = {~S1}
+     SENAB = {S0 & S1}
+     ENAB = {~(senab | OE1BAR | OE2BAR)}
+     D1 = {(DS0 & scnor2 & s1bar) | (Q1_B & scnor1 & S1) | (I/O0 & scnor2 & S1) |
+            (Q0_B & scnor1 & s1bar)}
+     D2 = {(Q0_B & scnor2 & s1bar) | (Q2_B & scnor1 & S1) | (I/O1 & scnor2 & S1) |
+            (Q1_B & scnor1 & s1bar)}
+     D3 = {(Q1_B & scnor2 & s1bar) | (Q3_B & scnor1 & S1) | (I/O2 & scnor2 & S1) |
+            (Q2_B & scnor1 & s1bar)}
+     D4 = {(Q2_B & scnor2 & s1bar) | (Q4_B & scnor1 & S1) | (I/O3 & scnor2 & S1) |
+            (Q3_B & scnor1 & s1bar)}
+     D5 = {(Q3_B & scnor2 & s1bar) | (Q5_B & scnor1 & S1) | (I/O4 & scnor2 & S1) |
+            (Q4_B & scnor1 & s1bar)}
+     D6 = {(Q4_B & scnor2 & s1bar) | (Q6_B & scnor1 & S1) | (I/O5 & scnor2 & S1) |
+            (Q5_B & scnor1 & s1bar)}
+     D7 = {(Q5_B & scnor2 & s1bar) | (Q7_B & scnor1 & S1) | (I/O6 & scnor2 & S1) |
+            (Q6_B & scnor1 & s1bar)}
+     D8 = {(Q6_B & scnor2 & s1bar) | (DS7 & scnor1 & S1) | (I/O7 & scnor2 & S1) |
+            (Q7_B & scnor1 & s1bar)}

U3DLY PINDLY(10,1,1) DPWR DGND
+     Q0_O Q7_O Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     ENAB
+     CP
+     Q0 Q7 I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CP,0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(5ns,8.5ns,12.5ns),
+         CLOCK & TRN_HL, DELAY(6ns,10ns,14.5ns),
+         TRN_ZH, DELAY(3.5ns,7.5ns,11ns),
+         TRN_ZL, DELAY(3.5ns,7.5ns,11.5ns),
+         TRN_HZ, DELAY(4ns,8.5ns,12.5ns),
+         TRN_LZ, DELAY(3ns,8ns,11.5ns),
+         DELAY(7ns,11ns,15.5ns))}
+
+  PINDLY:
+     Q0 Q7 = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(5ns,9ns,12.5ns),
+         CLOCK & TRN_HL, DELAY(5ns,9ns,13.5ns),
+         DELAY(6ns,10ns,14.5ns))}

U4CON CONSTRAINT(14) DPWR DGND
+     S0 S1 CP DS0 DS7 SRBAR I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+     IO_ACT IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CP
+     MAXFREQ=110MEG
+
+  WIDTH:
+     NODE=CP
+     MIN_LO=4.5ns
+     MIN_HI=4.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(2)=S0 S1
+     SETUPTIME=5ns
+     HOLDTIME=1.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(2)=DS0 DS7
+     SETUPTIME=4.5ns
+     HOLDTIME=1ns
+     WHEN = {SRBAR!='0 & ((S1=='1 & S0=='0) | (S1=='0 & S0=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(8)=I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+     SETUPTIME=4.5ns
+     HOLDTIME=1ns
+     WHEN = {SRBAR!='0 & ((S0=='1 & S1=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(1)=SRBAR
+     SETUPTIME=2.5ns
+     HOLDTIME=1ns

.ENDS 74ACT323
*
*
* ----------------------------------------------------------- 74ALS323 ------
*  8-Input Universal Shift/Storage Register With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-343 to 2-349
*  bss    4/6/94
*
.SUBCKT 74ALS323 CLRBAR G1BAR G2BAR S0 S1 CLK SR SL A/QA B/QB C/QC D/QD
+     E/QE F/QF G/QG H/QH QA QH
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     D1 D2 D3 D4 D5 D6 D7 D8
+     Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(23,12) DPWR DGND
+     G1BAR G2BAR S0 S1 SR SL CLRBAR
+     Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     D1 D2 D3 D4 D5 D6 D7 D8 QA_O QH_O ENAB SENAB
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     QA_O = {Q0_B}
+     QH_O = {Q7_B}
+     clr = {~CLRBAR}
+     scnor1 = {~(clr | S0)}
+     scnor2 = {~(clr | scnor1)}
+     s1bar = {~S1}
+     SENAB = {S0 & S1}
+     ENAB = {~(senab | G1BAR | G2BAR)}
+     D1 = {(SR & scnor2 & s1bar) | (Q1_B & scnor1 & S1) | (A/QA & scnor2 & S1) | 
+            (Q0_B & scnor1 & s1bar)}
+     D2 = {(Q0_B & scnor2 & s1bar) | (Q2_B & scnor1 & S1) | (B/QB & scnor2 & S1) |
+            (Q1_B & scnor1 & s1bar)}
+     D3 = {(Q1_B & scnor2 & s1bar) | (Q3_B & scnor1 & S1) | (C/QC & scnor2 & S1) |
+            (Q2_B & scnor1 & s1bar)}
+     D4 = {(Q2_B & scnor2 & s1bar) | (Q4_B & scnor1 & S1) | (D/QD & scnor2 & S1) |
+            (Q3_B & scnor1 & s1bar)}
+     D5 = {(Q3_B & scnor2 & s1bar) | (Q5_B & scnor1 & S1) | (E/QE & scnor2 & S1) |
+            (Q4_B & scnor1 & s1bar)}
+     D6 = {(Q4_B & scnor2 & s1bar) | (Q6_B & scnor1 & S1) | (F/QF & scnor2 & S1) |
+            (Q5_B & scnor1 & s1bar)}
+     D7 = {(Q5_B & scnor2 & s1bar) | (Q7_B & scnor1 & S1) | (G/QG & scnor2 & S1) |
+            (Q6_B & scnor1 & s1bar)}
+     D8 = {(Q6_B & scnor2 & s1bar) | (SL & scnor1 & S1) | (H/QH & scnor2 & S1) |
+            (Q7_B & scnor1 & s1bar)}

U3DLY PINDLY(10,1,4) DPWR DGND
+     QA_O QH_O Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     ENAB
+     CLK G1BAR G2BAR SENAB
+     QA QH A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CLK,0)}
+     ENABSD = {CHANGED_LH(SENAB,0)}
+     ENABSE = {CHANGED_HL(SENAB,0)}
+     ENABGD = {CHANGED_LH(G1BAR,0) | CHANGED_LH(G2BAR,0)}
+     ENABGE = {(CHANGED_HL(G1BAR,0) & G2BAR=='0) | (CHANGED_HL(G2BAR,0) & 
+                     G1BAR=='0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(4ns,-1,13ns),
+         CLOCK & TRN_HL, DELAY(7ns,-1,19ns),
+         ENABGE & TRN_ZH, DELAY(6ns,-1,16ns),
+         ENABGE & TRN_ZL, DELAY(8ns,-1,22ns),
+         ENABSE & TRN_ZH, DELAY(7ns,-1,17ns),
+         ENABSE & TRN_ZL, DELAY(8ns,-1,22ns),
+         ENABGD & TRN_HZ, DELAY(1ns,-1,8ns),
+         ENABGD & TRN_LZ, DELAY(5ns,-1,15ns),
+         ENABSD & TRN_HZ, DELAY(1ns,-1,12ns),
+         ENABSD & TRN_LZ, DELAY(8ns,-1,25ns),
+         DELAY(9ns,-1,26ns))}
+
+  PINDLY:
+     QA QH = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(5ns,-1,15ns),
+         CLOCK & TRN_HL, DELAY(8ns,-1,18ns),
+         DELAY(9ns,-1,23ns))}

U4CON CONSTRAINT(14) DPWR DGND
+     S0 S1 CLK SR SL CLRBAR A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=30MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_LO=16.5ns
+     MIN_HI=16.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=S0 S1
+     SETUPTIME=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=SR SL
+     SETUPTIME_HI=16ns
+     SETUPTIME_LO=6ns
+     WHEN = {CLRBAR!='0 & ((S1=='1 & S0=='0) | (S1=='0 & S0=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     SETUPTIME_HI=16ns
+     SETUPTIME_LO=6ns
+     WHEN = {CLRBAR!='0 & ((S0=='1 & S1=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLRBAR
+     SETUPTIME_LO=20ns
+     SETUPTIME_HI=16ns

.ENDS 74ALS323
*
*
*-------------------------------------------------------------74AS323----

* 8-Bit Universal Shift/Storage Register with 3-State Outputs
* TI ALS/AS Logic Data Book, 1986, pages 2-343 to 2-349
* The constraints for the ALS323 were used.
* jat 1/2/96

.SUBCKT 74AS323 CLRBAR G1BAR G2BAR S0 S1 CLK SR SL A/QA B/QB C/QC D/QD
+ E/QE F/QF G/QG H/QH QA QH
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(23,9) DPWR DGND
+ SR SL S0 S1 QAO QB QC QD QE QF QG QHO A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+ G1BAR G2BAR CLRBAR
+ ENAB DA DB DC DD DE DF DG DH
+ D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  ENAB = {(~G1BAR) & (~G2BAR) & ((~S0) | (~S1))}
+  DA = {CLRBAR & ((SR & S0 & (~S1)) | (QB & (~S0) & S1) | (A/QA & S0 & S1) |
+        (QAO & (~S0) & (~S1)))}
+  DB = {CLRBAR & ((QAO & S0 & (~S1)) | (QC & (~S0) & S1) | (B/QB & S0 & S1) |
+        (QB & (~S0) & (~S1)))}
+  DC = {CLRBAR & ((QB & S0 & (~S1)) | (QD & (~S0) & S1) | (C/QC & S0 & S1) |
+        (QC & (~S0) & (~S1)))}
+  DD = {CLRBAR & ((QC & S0 & (~S1)) | (QE & (~S0) & S1) | (D/QD & S0 & S1) |
+        (QD & (~S0) & (~S1)))}
+  DE = {CLRBAR & ((QD & S0 & (~S1)) | (QF & (~S0) & S1) | (E/QE & S0 & S1) |
+        (QE & (~S0) & (~S1)))}
+  DF = {CLRBAR & ((QE & S0 & (~S1)) | (QG & (~S0) & S1) | (F/QF & S0 & S1) |
+        (QF & (~S0) & (~S1)))}
+  DG = {CLRBAR & ((QF & S0 & (~S1)) | (QHO & (~S0) & S1) | (G/QG & S0 & S1) |
+        (QG & (~S0) & (~S1)))}
+  DH = {CLRBAR & ((QG & S0 & (~S1)) | (SL & (~S0) & S1) | (H/QH & S0 & S1) |
+        (QHO & (~S0) & (~S1)))}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CLK
+ DA DB DC DD DE DF DG DH
+ QAO QB QC QD QE QF QG QHO
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(10,1,6) DPWR DGND
+ QAO QB QC QD QE QF QG QHO QAO QHO
+ ENAB
+ G1BAR G2BAR S0 S1 CLK CLRBAR
+ A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH QA QH
+ IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   G12ENAB = {CHANGED(G1BAR,0) | CHANGED(G2BAR,0)}
+   S12ENAB = {CHANGED(S0,0) | CHANGED(S1,0)}
+   EDGE = {CHANGED_LH(CLK,0)}
+   CLEAR = {CHANGED(CLRBAR,0)}
+ TRISTATE:
+ ENABLE HI = ENAB
+    A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH = {
+       CASE(
+         G12ENAB & TRN_Z$, DELAY(-1,10NS,-1),
+         G12ENAB & TRN_$Z, DELAY(-1,7NS,-1),
+         S12ENAB & TRN_Z$, DELAY(-1,10NS,-1),
+         S12ENAB & TRN_$Z, DELAY(-1,7NS,-1),
+         CLEAR & TRN_HL, DELAY(-1,12NS,-1),
+         EDGE & (TRN_LH | TRN_HL), DELAY(-1,10NS,-1),
+         DELAY(-1,13NS,-1))}
+ PINDLY:
+     QA QH = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,12NS,-1),
+         EDGE & (TRN_LH | TRN_HL), DELAY(-1,10NS,-1),
+         DELAY(-1,13NS,-1))}

U4 CONSTRAINT(14) DPWR DGND
+ CLK CLRBAR S0 S1 SR SL A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+ IO_AS00 IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLK
+   MAXFREQ = 30MEG
+ WIDTH:
+   NODE = CLK
+   MIN_LO = 16.5NS
+   MIN_HI = 16.5NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(2) = S0 S1
+   SETUPTIME = 20NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(10) =  A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH SR SL
+   SETUPTIME_LO = 6NS
+   SETUPTIME_HI = 16NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(1) = CLRBAR
+   SETUPTIME_HI = 16NS
+   SETUPTIME_LO = 20NS

.ENDS 74AS323

*-------------------------------------------------------------74F323-----

* 8-Bit Universal Shift/Storage Register with Synchronous Clear and 3-State Outputs
* TI F Logic Data Book, 1994, pages 2-217 to 2-221
* jat 7/3/96

.SUBCKT 74f323 CLRBAR OE1BAR OE2BAR S0 S1 CLK SR SL A/QA B/QB C/QC D/QD
+ E/QE F/QF G/QG H/QH QA QH
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(23,9) DPWR DGND
+ SR SL S0 S1 QAO QB QC QD QE QF QG QHO A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+ OE1BAR OE2BAR CLRBAR
+ ENAB DA DB DC DD DE DF DG DH
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  ENAB = {(~OE1BAR) & (~OE2BAR) & ((~S0) | (~S1))}
+  DA = {CLRBAR & ((SR & S0 & (~S1)) | (QB & (~S0) & S1) | (A/QA & S0 & S1) |
+        (QAO & (~S0) & (~S1)))}
+  DB = {CLRBAR & ((QAO & S0 & (~S1)) | (QC & (~S0) & S1) | (B/QB & S0 & S1) |
+        (QB & (~S0) & (~S1)))}
+  DC = {CLRBAR & ((QB & S0 & (~S1)) | (QD & (~S0) & S1) | (C/QC & S0 & S1) |
+        (QC & (~S0) & (~S1)))}
+  DD = {CLRBAR & ((QC & S0 & (~S1)) | (QE & (~S0) & S1) | (D/QD & S0 & S1) |
+        (QD & (~S0) & (~S1)))}
+  DE = {CLRBAR & ((QD & S0 & (~S1)) | (QF & (~S0) & S1) | (E/QE & S0 & S1) |
+        (QE & (~S0) & (~S1)))}
+  DF = {CLRBAR & ((QE & S0 & (~S1)) | (QG & (~S0) & S1) | (F/QF & S0 & S1) |
+        (QF & (~S0) & (~S1)))}
+  DG = {CLRBAR & ((QF & S0 & (~S1)) | (QHO & (~S0) & S1) | (G/QG & S0 & S1) |
+        (QG & (~S0) & (~S1)))}
+  DH = {CLRBAR & ((QG & S0 & (~S1)) | (SL & (~S0) & S1) | (H/QH & S0 & S1) |
+        (QHO & (~S0) & (~S1)))}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CLK
+ DA DB DC DD DE DF DG DH
+ QAO QB QC QD QE QF QG QHO
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(10,1,3) DPWR DGND
+ QAO QB QC QD QE QF QG QHO QAO QHO
+ ENAB
+ OE1BAR OE2BAR CLK
+ A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH QA QH
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   OE12ENAB = {CHANGED(OE1BAR,0) | CHANGED(OE2BAR,0)}
+   EDGE = {CHANGED_LH(CLK,0)}
+ TRISTATE:
+ ENABLE HI = ENAB
+    A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH = {
+       CASE(
+         OE12ENAB & TRN_ZH, DELAY(2.7NS,5.6NS,8NS),
+         OE12ENAB & TRN_ZL, DELAY(3.2NS,6.6NS,10NS),
+         OE12ENAB & TRN_HZ, DELAY(1.7NS,4.1NS,6NS),
+         OE12ENAB & TRN_LZ, DELAY(1.2NS,3.6NS,5.5NS),
+         EDGE & TRN_LH, DELAY(3.2NS,6.6NS,9NS),
+         EDGE & TRN_HL, DELAY(4.2NS,8.1NS,11NS),
+         DELAY(5.2NS,9.1NS,12NS))}
+ PINDLY:
+     QA QH = {
+       CASE(
+         EDGE & TRN_LH, DELAY(3.2NS,6.6NS,9NS),
+         EDGE & TRN_HL, DELAY(2.7NS,6.1NS,8.5NS),
+         DELAY(4.2NS,7.6NS,10NS))}

U4 CONSTRAINT(14) DPWR DGND
+ CLK CLRBAR S0 S1 SR SL A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLK
+   MAXFREQ = 70MEG
+ WIDTH:
+   NODE = CLK
+   MIN_LO = 7NS
+   MIN_HI = 7NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(2) = S0 S1
+   SETUPTIME = 8.5NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(10) =  A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH SR SL
+   SETUPTIME = 5NS
+   HOLDTIME = 2NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(1) = CLRBAR
+   SETUPTIME = 10NS
+   SETUPTIME_LO = 20NS

.ENDS 74F323

* ----------------------------------------------------------- 74LS323 ------
*  8-Input Universal Shift/Storage Registers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-841 to 2-843
*  bss    4/7/94
*  The constraints come from the 74LS299 (same data book)
*
.SUBCKT 74LS323 CLRBAR G1BAR G2BAR S0 S1 CLK SR SL A/QA B/QB C/QC D/QD
+     E/QE F/QF G/QG H/QH QA QH
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     D1 D2 D3 D4 D5 D6 D7 D8
+     Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(23,12) DPWR DGND
+     G1BAR G2BAR S0 S1 SR SL CLRBAR
+     Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     D1 D2 D3 D4 D5 D6 D7 D8 QA_O QH_O ENAB SENAB
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     QA_O = {Q0_B}
+     QH_O = {Q7_B}
+     clr = {~CLRBAR}
+     scnor1 = {~(clr | S0)}
+     scnor2 = {~(clr | scnor1)}
+     s1bar = {~S1}
+     SENAB = {S0 & S1}
+     ENAB = {~(senab | G1BAR | G2BAR)}
+     D1 = {(SR & scnor2 & s1bar) | (Q1_B & scnor1 & S1) | (A/QA & scnor2 & S1) | 
+            (Q0_B & scnor1 & s1bar)}
+     D2 = {(Q0_B & scnor2 & s1bar) | (Q2_B & scnor1 & S1) | (B/QB & scnor2 & S1) |
+            (Q1_B & scnor1 & s1bar)}
+     D3 = {(Q1_B & scnor2 & s1bar) | (Q3_B & scnor1 & S1) | (C/QC & scnor2 & S1) |
+            (Q2_B & scnor1 & s1bar)}
+     D4 = {(Q2_B & scnor2 & s1bar) | (Q4_B & scnor1 & S1) | (D/QD & scnor2 & S1) |
+            (Q3_B & scnor1 & s1bar)}
+     D5 = {(Q3_B & scnor2 & s1bar) | (Q5_B & scnor1 & S1) | (E/QE & scnor2 & S1) |
+            (Q4_B & scnor1 & s1bar)}
+     D6 = {(Q4_B & scnor2 & s1bar) | (Q6_B & scnor1 & S1) | (F/QF & scnor2 & S1) |
+            (Q5_B & scnor1 & s1bar)}
+     D7 = {(Q5_B & scnor2 & s1bar) | (Q7_B & scnor1 & S1) | (G/QG & scnor2 & S1) |
+            (Q6_B & scnor1 & s1bar)}
+     D8 = {(Q6_B & scnor2 & s1bar) | (SL & scnor1 & S1) | (H/QH & scnor2 & S1) |
+            (Q7_B & scnor1 & s1bar)}

U3DLY PINDLY(10,1,1) DPWR DGND
+     QA_O QH_O Q0_B Q1_B Q2_B Q3_B Q4_B Q5_B Q6_B Q7_B
+     ENAB
+     CLK
+     QA QH A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CLK,0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(-1,17ns,25ns),
+         CLOCK & TRN_HL, DELAY(-1,25ns,39ns),
+         TRN_ZH, DELAY(-1,14ns,21ns),
+         TRN_ZL, DELAY(-1,20ns,30ns),
+         TRN_HZ, DELAY(-1,10ns,20ns),
+         TRN_LZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,26ns,40ns))}
+
+  PINDLY:
+     QA QH = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(-1,22ns,33ns),
+         CLOCK & TRN_HL, DELAY(-1,26ns,39ns),
+         DELAY(-1,27ns,40ns))}

U4CON CONSTRAINT(14) DPWR DGND
+     S0 S1 CLK SR SL CLRBAR A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_LO=10ns
+     MIN_HI=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=S0 S1
+     SETUPTIME=35ns
+     HOLDTIME=10ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=SR SL
+     SETUPTIME=20ns
+     WHEN = {CLRBAR!='0 & ((S1=='1 & S0=='0) | (S1=='0 & S0=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     SETUPTIME=20ns
+     WHEN = {CLRBAR!='0 & ((S0=='1 & S1=='1))}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLRBAR
+     SETUPTIME=20ns

.ENDS 74LS323
*
*
* ----------------------------------------------------------- 74LS347 ------
*  BCD-To-Seven Segment Decoders/Drivers
*
*  The TTL Logic Data Book, 1985, Vol. 2, TI Pages 2-977 to 2-979
*  bss    4/11/94
*
.SUBCKT 74LS347  A B C D BI/RBO RBIBAR LTBAR
+      OA OB OC OD OE OF OG
+      optional: DPWR=$G_DPWR DGND=$G_DGND
+      params: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP (7,8) DPWR DGND
+      A B C D BI/RBO RBIBAR LTBAR
+      O_A O_B O_C O_D O_E O_F O_G BI/RBO
+      D0_GATE IO_LS IO_LEVEL={IO_LEVEL}
+
+    LOGIC:
+      alt = {~(A & LTBAR)}
+      blt = {~(B & LTBAR)}
+      clt = {~(C & LTBAR)}
+      dbar = {~D}
+      abi = {~(alt & BI/RBO)}
+      bbi = {~(blt & BI/RBO)}
+      cbi = {~(clt & BI/RBO)}
+      dbi = {~(dbar & BI/RBO)}
+      rbi = {~RBIBAR}
+
+      O_A = {(bbi & dbi) | (alt & cbi) | (abi & blt & clt & dbar)}
+      O_B = {(bbi & dbi) | (abi & blt & cbi) | (alt & bbi & cbi)}
+      O_C = {(cbi & dbi) | (alt & bbi & clt)}
+      O_D = {(abi & blt & clt) | (alt & blt & cbi) | (abi & bbi & cbi)}
+      O_E = {abi | (blt & cbi)}
+      O_F  = {(abi & bbi) | (bbi & clt) | (abi & clt & dbar)}
+      O_G = {(abi & bbi & cbi) | (blt & clt & dbar & LTBAR)}
+      BI/RBO = {~(LTBAR & rbi & dbar & clt & blt & alt)}

U2 PINDLY (7,0,0) DPWR DGND
+    O_A O_B O_C O_D O_E O_F O_G
+    OA OB OC OD OE OF OG
+    IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     OA OB OC OD OE OF OG = {
+         DELAY(-1,-1,100ns)}

.ENDS 74LS347
*
*
* ----------------------------------------------------------- 74LS348 ------
*  8-Line To 3-Line Priority Encoders With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-845 to 2-848
*  bss    4/11/94
*
.SUBCKT 74LS348 I0 I1 I2 I3 I4 I5 I6 I7 EI EO GS A0 A1 A2
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,6) DPWR DGND
+     I0 I1 I2 I3 I4 I5 I6 I7 EI
+     EO_O GS_O A0_O A1_O A2_O ENAB
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     i1bar = {~I1}
+     i2bar = {~I2}
+     i3bar = {~I3}
+     i4bar = {~I4}
+     i5bar = {~I5}
+     i6bar = {~I6}
+     i7bar = {~I7}
+     eibar = {~EI}
+     EO_O = {~(eibar & I0 & I1 & I2 & I3 & I4 & I5 & I6 & I7)}
+     GS_O = {~(EO_O & eibar)}
+     ENAB = {EO_O & eibar}
+     A0_O = {~((i1bar & I2 & I4 & I6 & ENAB) | (i3bar & I4 & I6 & ENAB) |
+               (i5bar & I6 & ENAB) | (i7bar & ENAB))}
+     A1_O = {~((i2bar & I4 & I5 & ENAB) | (i3bar & I4 & I5 & ENAB) | (i6bar & ENAB) | 
+               (i7bar & ENAB))}
+     A2_O = {~((i4bar & ENAB) | (i5bar & ENAB) | (i6bar & ENAB) | (i7bar & ENAB))}

U2DLY PINDLY(5,1,9) DWPR DGND
+     A0_O A1_O A2_O EO_O GS_O
+     ENAB
+     I0 I1 I2 I3 I4 I5 I6 I7 EI
+     A0 A1 A2 EO GS
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENI = {CHANGED(EI,0)}
+     DATA = {CHANGED(I0,0) | CHANGED(I1,0) | CHANGED(I2,0) | CHANGED(I3,0) |
+                 CHANGED(I4,0) | CHANGED(I5,0) | CHANGED(I6,0) | CHANGED(I7,0)}
+     IN1 = {CHANGED(I1,0) & I2=='1 & I3=='1 & I4=='1 & I5=='1 & I6=='1 & I7=='1}
+     IN2 = {CHANGED(I2,0) & I1=='1 & I3=='1 & I4=='1 & I5=='1 & I6=='1 & I7=='1}
+     IN3 = {CHANGED(I3,0) & I1=='1 & I2=='1 & I4=='1 & I5=='1 & I6=='1 & I7=='1}
+     IN4 = {CHANGED(I4,0) & I1=='1 & I2=='1 & I3=='1 & I5=='1 & I6=='1 & I7=='1}
+     IN5 = {CHANGED(I5,0) & I1=='1 & I2=='1 & I3=='1 & I4=='1 & I6=='1 & I7=='1}
+     IN6 = {CHANGED(I6,0) & I1=='1 & I2=='1 & I3=='1 & I4=='1 & I5=='1 & I7=='1}
+     IN7 = {CHANGED(I7,0) & I1=='1 & I2=='1 & I3=='1 & I4=='1 & I5=='1 & I6=='1}
+     IN = {IN1 | IN2 | IN3 | IN4 | IN5 | IN6 | IN7}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     A0 A1 A2 = {
+       CASE(
+         IN & TRN_LH, DELAY(-1,11ns,17ns),
+         IN & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_LH, DELAY(-1,23ns,35ns),
+         TRN_HL, DELAY(-1,23ns,35ns),
+         TRN_ZH, DELAY(-1,25ns,39ns),
+         TRN_ZL, DELAY(-1,24ns,41ns),
+         TRN_HZ, DELAY(-1,18ns,27ns),
+         TRN_LZ, DELAY(-1,23ns,35ns),
+         DELAY(-1,26ns,42ns))}
+
+  PINDLY:
+     GS = {
+       CASE(
+         ENI & TRN_LH, DELAY(-1,11ns,17ns),
+         ENI & TRN_HL, DELAY(-1,14ns,36ns),
+         DATA & TRN_LH, DELAY(-1,38ns,55ns),
+         DATA & TRN_HL, DELAY(-1,9ns,21ns),
+         DELAY(-1,39ns,56ns))}
+
+     EO = {
+       CASE(
+         ENI & TRN_LH, DELAY(-1,17ns,26ns),
+         ENI & TRN_HL, DELAY(-1,25ns,40ns),
+         DATA & TRN_LH, DELAY(-1,11ns,18ns),
+         DATA & TRN_HL, DELAY(-1,26ns,40ns),
+         DELAY(-1,27ns,41ns))}

.ENDS 74LS348

*-------------------------------------------------------------74AC350-----

* 4 Bit Shifter with Tri-State Outputs
* Motorola FACT Data, 1993, pages 5-241 to 5-248
* jat 8/27/96

.SUBCKT 74AC350
+ I0 I1 I2 I3 I-1 I-2 I-3 S0 S1 OEBAR O0 O1 O2 O3
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,4) DPWR DGND
+ I0 I1 I2 I3 I-1 I-2 I-3 S0 S1
+ O0O O1O O2O O3O
+ D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  O0O = {(~S0 & ~S1 & I0) | (S0 & ~S1 & I-1) | (~S0 & S1 & I-2) | (S0 & S1 & I-3)}
+  O1O = {(~S0 & ~S1 & I1) | (S0 & ~S1 & I0) | (~S0 & S1 & I-1) | (S0 & S1 & I-2)}
+  O2O = {(~S0 & ~S1 & I2) | (S0 & ~S1 & I1) | (~S0 & S1 & I0) | (S0 & S1 & I-1)}
+  O3O = {(~S0 & ~S1 & I3) | (S0 & ~S1 & I2) | (~S0 & S1 & I1) | (S0 & S1 & I0)}

U2 PINDLY(4,1,9) DPWR DGND
+ O0O O1O O2O O3O
+ OEBAR
+ I0 I1 I2 I3 I-1 I-2 I-3 S0 S1
+ O0 O1 O2 O3
+ IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(I0,0) | CHANGED(I1,0) | CHANGED(I2,0) | CHANGED(I3,0) | 
+           CHANGED(I-1,0) | CHANGED(I-2,0) | CHANGED(I-3,0)}
+   ADDRESS = {CHANGED(S0,0) | CHANGED(S1,0)}
+ TRISTATE:
+   ENABLE LO = OEBAR
+   O0 O1 O2 O3 = {
+     CASE(
+       TRN_ZH, DELAY(2.5NS,-1,6NS),
+       TRN_ZL, DELAY(2.5NS,-1,7.5NS),
+       TRN_HZ, DELAY(4.5NS,-1,8NS),
+       TRN_LZ, DELAY(2.5NS,-1,6NS),
+       ADDRESS & TRN_LH, DELAY(3.5NS,-1,11NS),
+       ADDRESS & TRN_HL, DELAY(3.5NS,-1,11NS),
+       DATA & TRN_LH, DELAY(3NS,-1,8.5NS),
+       DATA & TRN_HL, DELAY(3NS,-1,8.5NS),
+       DELAY(4.5NS,-1,12NS))}

.ENDS 74AC350

*-------------------------------------------------------------74ACT350-----

* 4 Bit Shifter with Tri-State Outputs
* Motorola FACT Data, 1993, pages 5-241 to 5-248
* jat 8/27/96

.SUBCKT 74ACT350
+ I0 I1 I2 I3 I-1 I-2 I-3 S0 S1 OEBAR O0 O1 O2 O3
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,4) DPWR DGND
+ I0 I1 I2 I3 I-1 I-2 I-3 S0 S1
+ O0O O1O O2O O3O
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  O0O = {(~S0 & ~S1 & I0) | (S0 & ~S1 & I-1) | (~S0 & S1 & I-2) | (S0 & S1 & I-3)}
+  O1O = {(~S0 & ~S1 & I1) | (S0 & ~S1 & I0) | (~S0 & S1 & I-1) | (S0 & S1 & I-2)}
+  O2O = {(~S0 & ~S1 & I2) | (S0 & ~S1 & I1) | (~S0 & S1 & I0) | (S0 & S1 & I-1)}
+  O3O = {(~S0 & ~S1 & I3) | (S0 & ~S1 & I2) | (~S0 & S1 & I1) | (S0 & S1 & I0)}

U2 PINDLY(4,1,9) DPWR DGND
+ O0O O1O O2O O3O
+ OEBAR
+ I0 I1 I2 I3 I-1 I-2 I-3 S0 S1
+ O0 O1 O2 O3
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(I0,0) | CHANGED(I1,0) | CHANGED(I2,0) | CHANGED(I3,0) | 
+           CHANGED(I-1,0) | CHANGED(I-2,0) | CHANGED(I-3,0)}
+   ADDRESS = {CHANGED(S0,0) | CHANGED(S1,0)}
+ TRISTATE:
+   ENABLE LO = OEBAR
+   O0 O1 O2 O3 = {
+     CASE(
+       TRN_ZH, DELAY(4NS,-1,9NS),
+       TRN_ZL, DELAY(4NS,-1,10NS),
+       TRN_HZ, DELAY(4NS,-1,10NS),
+       TRN_LZ, DELAY(4NS,-1,8NS),
+       ADDRESS & TRN_LH, DELAY(4.5NS,-1,13NS),
+       ADDRESS & TRN_HL, DELAY(4.5NS,-1,13NS),
+       DATA & TRN_LH, DELAY(4NS,-1,11.5NS),
+       DATA & TRN_HL, DELAY(4NS,-1,11.5NS),
+       DELAY(5.5NS,-1,14NS))}

.ENDS 74ACT350

* ----------------------------------------------------------- 74F350 ------
*  4-Bit Shifter
*
*  The Fast TTL Logic Data Book, 1992, Philips Pages 420 to 424
*  bss    4/11/94
*
.SUBCKT 74F350 OEBAR S0 S1 I3 I2 I1 I0 I-1 I-2 I-3 Y0 Y1 Y2 Y3
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(10,5) DPWR DGND
+     OEBAR S0 S1 I3 I2 I1 I0 I-1 I-2 I-3
+     OE Y0_O Y1_O Y2_O Y3_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     OE = {~OEBAR}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     Y0_O = {(I-3 & S1 & S0) | (I-2 & S1 & s0bar) | ( I-1 & s1bar & S0) | (I0 & s1bar & s0bar)}
+     Y1_O = {(I-2 & S1 & S0) | (I-1 & S1 & s0bar) | ( I0 & s1bar & S0) | (I1 & s1bar & s0bar)}
+     Y2_O = {(I-1 & S1 & S0) | (I0 & S1 & s0bar) | ( I1 & s1bar & S0) | (I2 & s1bar & s0bar)}
+     Y3_O = {(I0 & S1 & S0) | (I1 & S1 & s0bar) | ( I2 & s1bar & S0) | (I3 & s1bar & s0bar)}

U2DLY PINDLY(4,1,9) DPWR DGND
+     Y0_O Y1_O Y2_O Y3_O
+     OE
+     S0 S1 I-3 I-2 I-1 I0 I1 I2 I3
+     Y0 Y1 Y2 Y3
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(I3,0) | CHANGED(I2,0) | CHANGED(I1,0) | CHANGED(I0,0) |
+               CHANGED(I-1,0) | CHANGED(I-2,0) | CHANGED(I-3,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0)}
+
+  TRISTATE:
+     ENABLE HI=OE
+     Y0 Y1 Y2 Y3 = {
+       CASE(
+         SELECT & TRN_LH, DELAY(4ns,7.8ns,10ns),
+         SELECT & TRN_HL, DELAY(3ns,6.5ns,8.5ns),
+         DATA & TRN_LH, DELAY(3ns,4.5ns,6ns),
+         DATA & TRN_HL, DELAY(2.5ns,4ns,5.5ns),
+         TRN_ZH, DELAY(2.5ns,5ns,7ns),
+         TRN_ZL, DELAY(4ns,7ns,9ns),
+         TRN_HZ, DELAY(2ns,3.9ns,5.5ns),
+         TRN_LZ, DELAY(2ns,4ns,5.5ns),
+         DELAY(5ns,8.8ns,11ns))}

.ENDS 74F350
*
*
* ----------------------------------------------------------- 74S350 ------
*  4-Bit Shifter With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-849 to 2-854
*  bss    4/11/94
*
.SUBCKT 74S350 OEBAR S0 S1 D3 D2 D1 D0 D-1 D-2 D-3 Y0 Y1 Y2 Y3
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(10,5) DPWR DGND
+     OEBAR S0 S1 D3 D2 D1 D0 D-1 D-2 D-3
+     OE Y0_O Y1_O Y2_O Y3_O
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     OE = {~OEBAR}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     Y0_O = {(D-3 & S1 & S0) | (D-2 & S1 & s0bar) | ( D-1 & s1bar & S0) | 
+                (D0 & s1bar & s0bar)}
+     Y1_O = {(D-2 & S1 & S0) | (D-1 & S1 & s0bar) | ( D0 & s1bar & S0) | (D1 & s1bar & s0bar)}
+     Y2_O = {(D-1 & S1 & S0) | (D0 & S1 & s0bar) | ( D1 & s1bar & S0) | (D2 & s1bar & s0bar)}
+     Y3_O = {(D0 & S1 & S0) | (D1 & S1 & s0bar) | ( D2 & s1bar & S0) | (D3 & s1bar & s0bar)}

U2DLY PINDLY(4,1,9) DPWR DGND
+     Y0_O Y1_O Y2_O Y3_O
+     OE
+     S0 S1 D-3 D-2 D-1 D0 D1 D2 D3
+     Y0 Y1 Y2 Y3
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(D3,0) | CHANGED(D2,0) | CHANGED(D1,0) | CHANGED(D0,0) |
+               CHANGED(D-1,0) | CHANGED(D-2,0) | CHANGED(D-3,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0)}
+
+  TRISTATE:
+     ENABLE HI=OE
+     Y0 Y1 Y2 Y3 = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,11ns,17ns),
+         SELECT & TRN_HL, DELAY(-1,13ns,20ns),
+         DATA & TRN_LH, DELAY(-1,5ns,9ns),
+         DATA & TRN_HL, DELAY(-1,8ns,12ns),
+         TRN_ZH, DELAY(-1,-1,19.5ns),
+         TRN_ZL, DELAY(-1,-1,21ns),
+         TRN_HZ, DELAY(-1,8ns,13ns),
+         TRN_LZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,14ns,22ns))}

.ENDS 74S350
*
*
* ----------------------------------------------------------- 74351 ------
*  Dual Data Selector/Multiplexer With 3-State Outputs
*
*  The TTL Logic Data Book, 1985, Vol. 2, TI Pages 3-991 to 3-994
*  bss    4/11/94
*
.SUBCKT 74351 GBAR A B C 1D0 1D1 1D2 1D3 2D0 2D1 2D2 2D3 D4 D5 D6 D7 1Y 2Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(16,3) DPWR DGND
+     GBAR A B C 1D0 1D1 1D2 1D3 2D0 2D1 2D2 2D3 D4 D5 D6 D7
+     GEN 1Y_O 2Y_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     GEN = {~GBAR}
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     in01 = {(1D0 & abar & bbar & cbar & GEN)}
+     in11 = {(1D1 & A & bbar & cbar & GEN)}
+     in21 = {(1D2 & abar & B & cbar & GEN)}
+     in31 = {(1D3 & A & B & cbar & GEN)}
+     in41 = {(D4 & abar & bbar & C & GEN)}
+     in51 = {(D5 & A & bbar & C & GEN)}
+     in61 = {(D6 & abar & B & C & GEN)}
+     in71 = {(D7 & A & B & C & GEN)}
+     1Y_O = {~(in01 | in11 | in21 | in31 | in41 | in51 | in61 | in71)}
+     in02 = {(2D0 & abar & bbar & cbar & GEN)}
+     in12 = {(2D1 & A & bbar & cbar & GEN)}
+     in22 = {(2D2 & abar & B & cbar & GEN)}
+     in32 = {(2D3 & A & B & cbar & GEN)}
+     in42 = {(D4 & abar & bbar & C & GEN)}
+     in52 = {(D5 & A & bbar & C & GEN)}
+     in62 = {(D6 & abar & B & C & GEN)}
+     in72 = {(D7 & A & B & C & GEN)}
+     2Y_O = {~(in02 | in12 | in22 | in32 | in42 | in52 | in62 | in72)}

U2DLY PINDLY(2,1,15) DPWR DGND
+     1Y_O 2Y_O
+     GEN
+     A B C 1D0 1D1 1D2 1D3 2D0 2D1 2D2 2D3 D4 D5 D6 D7
+     1Y 2Y
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0)}
+     DATA1 = {CHANGED(1D0,0) | CHANGED(1D1,0) | CHANGED(1D2,0) | CHANGED(1D3,0) |
+              CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+     DATA2 = {CHANGED(2D0,0) | CHANGED(2D1,0) | CHANGED(2D2,0) | CHANGED(2D3,0) |
+              CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+
+  TRISTATE:
+     ENABLE HI=GEN
+     1Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,20ns,30ns),
+         SELECT & TRN_HL, DELAY(-1,20ns,30ns),
+         DATA1 & TRN_LH, DELAY(-1,10ns,22ns),
+         DATA1 & TRN_HL, DELAY(-1,10ns,22ns),
+         TRN_ZH, DELAY(-1,18ns,33ns),
+         TRN_ZL, DELAY(-1,20ns,33ns),
+         TRN_HZ, DELAY(-1,6ns,20ns),
+         TRN_LZ, DELAY(-1,10ns,20ns),
+         DELAY(-1,21ns,34ns))}
+
+     2Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,20ns,30ns),
+         SELECT & TRN_HL, DELAY(-1,20ns,30ns),
+         DATA2 & TRN_LH, DELAY(-1,10ns,22ns),
+         DATA2 & TRN_HL, DELAY(-1,10ns,22ns),
+         TRN_ZH, DELAY(-1,18ns,33ns),
+         TRN_ZL, DELAY(-1,20ns,33ns),
+         TRN_HZ, DELAY(-1,6ns,20ns),
+         TRN_LZ, DELAY(-1,10ns,20ns),
+         DELAY(-1,21ns,34ns))}

.ENDS 74351

*-------------------------------------------------------------74AC352-----

* Dual 4-Input Multiplexer
* Motorola FACT Data, 1993, pages 5-249 to 5-254
* jat 8/27/96

.SUBCKT 74AC352
+ S0 S1 EABAR EBBAR I0A I1A I2A I3A I0B I1B I2B I3B ZA ZB
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(12,2) DPWR DGND
+ S0 S1 EABAR EBBAR I0A I1A I2A I3A I0B I1B I2B I3B
+ ZAO ZBO
+ D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+    ZAO = {~EABAR & ((~I0A & ~S1 & ~S0) | (~I1A & ~S1 & S0) | (~I2A & S1 & ~S0) |
+          (~I3A & S1 & S0))}
+    ZBO = {~EBBAR & ((~I0B & ~S1 & ~S0) | (~I1B & ~S1 & S0) | (~I2B & S1 & ~S0) |
+          (~I3B & S1 & S0))}

U2 PINDLY(2,0,12) DPWR DGND
+ ZAO ZBO
+ I0A I1A I2A I3A I0B I1B I2B I3B EABAR EBBAR S0 S1
+ ZA ZB
+ IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SELECT = {CHANGED(S0,0) | CHANGED(S1,0)}
+   DATA = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I2A,0) | CHANGED(I3A,0) |
+           CHANGED(I0B,0) | CHANGED(I1B,0) | CHANGED(I2B,0) | CHANGED(I3B,0)}
+   ENABS = {CHANGED(EABAR,0) | CHANGED(EBBAR,0)}
+ PINDLY:
+   ZA ZB = {
+     CASE(
+       ENABS & TRN_LH, DELAY(2NS,4.5NS,9.5NS),
+       ENABS & TRN_HL, DELAY(2NS,4NS,8NS),
+       SELECT & TRN_LH, DELAY(2NS,6.5NS,11NS),
+       SELECT & TRN_HL, DELAY(2NS,6NS,11NS),
+       DATA & TRN_LH, DELAY(2NS,5NS,9NS),
+       DATA & TRN_HL, DELAY(2NS,5NS,8.5NS),
+       DELAY(3NS,7.5NS,12NS))}

.ENDS 74AC352

*-------------------------------------------------------------74ACT352-----

* Dual 4-Input Multiplexer
* Motorola FACT Data, 1993, pages 5-249 to 5-254
* jat 8/27/96

.SUBCKT 74ACT352
+ S0 S1 EABAR EBBAR I0A I1A I2A I3A I0B I1B I2B I3B ZA ZB
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(12,2) DPWR DGND
+ S0 S1 EABAR EBBAR I0A I1A I2A I3A I0B I1B I2B I3B
+ ZAO ZBO
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+    ZAO = {~EABAR & ((~I0A & ~S1 & ~S0) | (~I1A & ~S1 & S0) | (~I2A & S1 & ~S0) |
+          (~I3A & S1 & S0))}
+    ZBO = {~EBBAR & ((~I0B & ~S1 & ~S0) | (~I1B & ~S1 & S0) | (~I2B & S1 & ~S0) |
+          (~I3B & S1 & S0))}

U2 PINDLY(2,0,12) DPWR DGND
+ ZAO ZBO
+ I0A I1A I2A I3A I0B I1B I2B I3B EABAR EBBAR S0 S1
+ ZA ZB
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SELECT = {CHANGED(S0,0) | CHANGED(S1,0)}
+   DATA = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I2A,0) | CHANGED(I3A,0) |
+           CHANGED(I0B,0) | CHANGED(I1B,0) | CHANGED(I2B,0) | CHANGED(I3B,0)}
+   ENABS = {CHANGED(EABAR,0) | CHANGED(EBBAR,0)}
+ PINDLY:
+   ZA ZB = {
+     CASE(
+       ENABS & TRN_LH, DELAY(2NS,4.5NS,8NS),
+       ENABS & TRN_HL, DELAY(2NS,4NS,8NS),
+       SELECT & TRN_LH, DELAY(3NS,6NS,10.5NS),
+       SELECT & TRN_HL, DELAY(3NS,6NS,10NS),
+       DATA & TRN_LH, DELAY(2NS,5.5NS,10NS),
+       DATA & TRN_HL, DELAY(2NS,6.5NS,8.5NS),
+       DELAY(4NS,7.5NS,11.5NS))}

.ENDS 74ACT352

* ----------------------------------------------------------- 74ALS352 ------
*  Dual 4-Line To 1-Line Data Selectors/Multiplexers
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-353 to 2-356
*  bss    4/11/94
*
.SUBCKT 74ALS352 A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3 1Y 2Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3
+     1Y_O 2Y_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     1g = {~1GBAR}
+     2g = {~2GBAR}
+     abar = {~A}
+     bbar = {~B}
+     1Y_O = {~((1C0 & abar & bbar & 1g) | (1C1 & A & bbar & 1g) | (1C2 & abar & B & 1g) |
+            (1C3 & A & B & 1g))}
+     2Y_O = {~((2C0 & abar & bbar & 2g) | (2C1 & A & bbar & 2g) | (2C2 & abar & B & 2g) |
+            (2C3 & A & B & 2g))}

U2DLY PINDLY(2,0,12) DPWR DGND
+     1Y_O 2Y_O
+     A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3
+     1Y 2Y
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(A,0) | CHANGED(B,0)}
+     GEN1 = {CHANGED(1GBAR,0)}
+     GEN2 = {CHANGED(2GBAR,0)}
+     DATA1 = {CHANGED(1C0,0) | CHANGED(1C1,0) | CHANGED(1C2,0) | CHANGED(1C3,0)}
+     DATA2 = {CHANGED(2C0,0) | CHANGED(2C1,0) | CHANGED(2C2,0) | CHANGED(2C3,0)}
+
+  PINDLY:
+     1Y = {
+       CASE(
+         GEN1 & TRN_LH, DELAY(4ns,-1,18ns),
+         GEN1 & TRN_HL, DELAY(4ns,-1,20ns),
+         SELECT & TRN_LH, DELAY(5ns,-1,24ns),
+         SELECT & TRN_HL, DELAY(5ns,-1,21ns),
+         DATA1 & TRN_LH, DELAY(3ns,-1,18ns),
+         DATA1 & TRN_HL, DELAY(2ns,-1,13ns),
+         DELAY(6ns,-1,25ns))}
+
+     2Y = {
+       CASE(
+         GEN2 & TRN_LH, DELAY(4ns,-1,18ns),
+         GEN2 & TRN_HL, DELAY(4ns,-1,20ns),
+         SELECT & TRN_LH, DELAY(5ns,-1,24ns),
+         SELECT & TRN_HL, DELAY(5ns,-1,21ns),
+         DATA2 & TRN_LH, DELAY(3ns,-1,18ns),
+         DATA2 & TRN_HL, DELAY(2ns,-1,13ns),
+         DELAY(6ns,-1,25ns))}

.ENDS 74ALS352
*
*
* ----------------------------------------------------------- 74AS352 ------
*  Dual 4-Line To 1-Line Data Selectors/Multiplexers
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-353 to 2-356
*  bss    4/11/94
*
.SUBCKT 74AS352 A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3 1Y 2Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3
+     1Y_O 2Y_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     1g = {~1GBAR}
+     2g = {~2GBAR}
+     abar = {~A}
+     bbar = {~B}
+     1Y_O = {~((1C0 & abar & bbar & 1g) | (1C1 & A & bbar & 1g) | (1C2 & abar & B & 1g) |
+            (1C3 & A & B & 1g))}
+     2Y_O = {~((2C0 & abar & bbar & 2g) | (2C1 & A & bbar & 2g) | (2C2 & abar & B & 2g) |
+            (2C3 & A & B & 2g))}

U2DLY PINDLY(2,0,12) DPWR DGND
+     1Y_O 2Y_O
+     A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3
+     1Y 2Y
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(A,0) | CHANGED(B,0)}
+     GEN1 = {CHANGED(1GBAR,0)}
+     GEN2 = {CHANGED(2GBAR,0)}
+     DATA1 = {CHANGED(1C0,0) | CHANGED(1C1,0) | CHANGED(1C2,0) | CHANGED(1C3,0)}
+     DATA2 = {CHANGED(2C0,0) | CHANGED(2C1,0) | CHANGED(2C2,0) | CHANGED(2C3,0)}
+
+  PINDLY:
+     1Y = {
+       CASE(
+         GEN1 & TRN_LH, DELAY(3ns,-1,7ns),
+         GEN1 & TRN_HL, DELAY(4ns,-1,12ns),
+         SELECT & TRN_LH, DELAY(4ns,-1,11ns),
+         SELECT & TRN_HL, DELAY(4ns,-1,13ns),
+         DATA1 & TRN_LH, DELAY(2ns,-1,6.5ns),
+         DATA1 & TRN_HL, DELAY(2ns,-1,6ns),
+         DELAY(5ns,-1,14ns))}
+
+     2Y = {
+       CASE(
+         GEN2 & TRN_LH, DELAY(3ns,-1,7ns),
+         GEN2 & TRN_HL, DELAY(4ns,-1,12ns),
+         SELECT & TRN_LH, DELAY(4ns,-1,11ns),
+         SELECT & TRN_HL, DELAY(4ns,-1,13ns),
+         DATA2 & TRN_LH, DELAY(2ns,-1,6.5ns),
+         DATA2 & TRN_HL, DELAY(2ns,-1,6ns),
+         DELAY(5ns,-1,14ns))}

.ENDS 74AS352
*
*
* ----------------------------------------------------------- 74F352 ------
*  Dual 4 Input Multiplexer
*
*  The FAST And LS TTL Data Book, 1992, Motorola Pages 4-161 to 4-163
*  bss    5/16/94
*
.SUBCKT 74F352 S0 S1 EABAR I0A I1A I2A I3A EBBAR I0B I1B I2B I3B ZA ZB
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     S0 S1 EABAR I0A I1A I2A I3A EBBAR I0B I1B I2B I3B
+     ZA_O ZB_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     ea = {~EABAR}
+     eb = {~EBBAR}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     ZA_O = {~((I0A & s0bar & s1bar & ea) | (I1A & S0 & s1bar & ea) | (I2A & s0bar & S1 & ea) 
+            | (I3A & S0 & S1 & ea))}
+     ZB_O = {~((I0B & s0bar & s1bar & eb) | (I1B & S0 & s1bar & eb) | (I2B & s0bar & S1 & eb) |
+            (I3B & S0 & S1 & eb))}

U2DLY PINDLY(2,0,12) DPWR DGND
+     ZA_O ZB_O
+     S0 S1 EABAR I0A I1A I2A I3A EBBAR I0B I1B I2B I3B
+     ZA ZB
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0)}
+     GEN1 = {CHANGED(EABAR,0)}
+     GEN2 = {CHANGED(EBBAR,0)}
+     DATA1 = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I2A,0) | CHANGED(I3A,0)}
+     DATA2 = {CHANGED(I0B,0) | CHANGED(I1B,0) | CHANGED(I2B,0) | CHANGED(I3B,0)}
+
+  PINDLY:
+     ZA = {
+       CASE(
+         GEN1 & TRN_LH, DELAY(2.5ns,5ns,7ns),
+         GEN1 & TRN_HL, DELAY(3ns,5ns,7ns),
+         SELECT & TRN_LH, DELAY(3.5ns,7.4ns,11ns),
+         SELECT & TRN_HL, DELAY(3ns,7ns,8.5ns),
+         DATA1 & TRN_LH, DELAY(2.5ns,4.9ns,7ns),
+         DATA1 & TRN_HL, DELAY(1.5ns,3ns,3.5ns),
+         DELAY(4.5ns,8.4ns,12ns))}
+
+     ZB = {
+       CASE(
+         GEN2 & TRN_LH, DELAY(2.5ns,5ns,7ns),
+         GEN2 & TRN_HL, DELAY(3ns,5ns,7ns),
+         SELECT & TRN_LH, DELAY(3.5ns,7.4ns,11ns),
+         SELECT & TRN_HL, DELAY(3ns,7ns,8.5ns),
+         DATA2 & TRN_LH, DELAY(2.5ns,4.9ns,7ns),
+         DATA2 & TRN_HL, DELAY(1.5ns,3ns,3.5ns),
+         DELAY(4.5ns,8.4ns,12ns))}

.ENDS 74F352
*
*
* ----------------------------------------------------------- 74LS352 ------
*  Dual 4-Line To 1-Line Data Selectors/Multiplexers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-855 to 2-857
*  bss    4/11/94
*
.SUBCKT 74LS352 A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3 1Y 2Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,2) DPWR DGND
+     A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3
+     1Y_O 2Y_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     1g = {~1GBAR}
+     2g = {~2GBAR}
+     abar = {~A}
+     bbar = {~B}
+     1Y_O = {~((1C0 & abar & bbar & 1g) | (1C1 & A & bbar & 1g) | (1C2 & abar & B & 1g) |
+            (1C3 & A & B & 1g))}
+     2Y_O = {~((2C0 & abar & bbar & 2g) | (2C1 & A & bbar & 2g) | (2C2 & abar & B & 2g) |
+            (2C3 & A & B & 2g))}

U2DLY PINDLY(2,0,12) DPWR DGND
+     1Y_O 2Y_O
+     A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3
+     1Y 2Y
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(A,0) | CHANGED(B,0)}
+     GEN1 = {CHANGED(1GBAR,0)}
+     GEN2 = {CHANGED(2GBAR,0)}
+     DATA1 = {CHANGED(1C0,0) | CHANGED(1C1,0) | CHANGED(1C2,0) | CHANGED(1C3,0)}
+     DATA2 = {CHANGED(2C0,0) | CHANGED(2C1,0) | CHANGED(2C2,0) | CHANGED(2C3,0)}
+
+  PINDLY:
+     1Y = {
+       CASE(
+         GEN1 & TRN_LH, DELAY(-1,16ns,24ns),
+         GEN1 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELECT & TRN_LH, DELAY(-1,19ns,29ns),
+         SELECT & TRN_HL, DELAY(-1,25ns,38ns),
+         DATA1 & TRN_LH, DELAY(-1,13ns,20ns),
+         DATA1 & TRN_HL, DELAY(-1,17ns,26ns),
+         DELAY(-1,26ns,39ns))}
+
+     2Y = {
+       CASE(
+         GEN2 & TRN_LH, DELAY(-1,16ns,24ns),
+         GEN2 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELECT & TRN_LH, DELAY(-1,19ns,29ns),
+         SELECT & TRN_HL, DELAY(-1,25ns,38ns),
+         DATA2 & TRN_LH, DELAY(-1,13ns,20ns),
+         DATA2 & TRN_HL, DELAY(-1,17ns,26ns),
+         DELAY(-1,26ns,39ns))}

.ENDS 74LS352

*-------------------------------------------------------------74AC353-----

* Dual 4-Input Multiplexer with Tri-State Outputs
* Motorola FACT Data, 1993, pages 5-255 to 5-261
* jat 8/29/96

.SUBCKT 74AC353
+ S0 S1 OEABAR OEBBAR I0A I1A I2A I3A I0B I1B I2B I3B ZA ZB
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(12,2) DPWR DGND
+ S0 S1 OEABAR OEBBAR I0A I1A I2A I3A I0B I1B I2B I3B
+ ZAO ZBO
+ D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+    ZAO = {~OEABAR & ((~I0A & ~S1 & ~S0) | (~I1A & ~S1 & S0) | (~I2A & S1 & ~S0) |
+          (~I3A & S1 & S0))}
+    ZBO = {~OEBBAR & ((~I0B & ~S1 & ~S0) | (~I1B & ~S1 & S0) | (~I2B & S1 & ~S0) |
+          (~I3B & S1 & S0))}

U2 PINDLY(2,2,10) DPWR DGND
+ ZAO ZBO
+ OEABAR OEBBAR
+ I0A I1A I2A I3A I0B I1B I2B I3B S0 S1
+ ZA ZB
+ IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SELECT = {CHANGED(S0,0) | CHANGED(S1,0)}
+   DATA = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I2A,0) | CHANGED(I3A,0) |
+           CHANGED(I0B,0) | CHANGED(I1B,0) | CHANGED(I2B,0) | CHANGED(I3B,0)}
+ TRISTATE:
+ ENABLE LO = OEABAR
+   ZA = {
+     CASE(
+       TRN_ZH, DELAY(1NS,-1,6NS),
+       TRN_ZL, DELAY(1NS,-1,6NS),
+       TRN_HZ, DELAY(2NS,-1,8NS),
+       TRN_LZ, DELAY(2NS,-1,7NS),
+       SELECT & TRN_LH, DELAY(3NS,-1,11NS),
+       SELECT & TRN_HL, DELAY(3NS,-1,11.5NS),
+       DATA & TRN_LH, DELAY(2NS,-1,10NS),
+       DATA & TRN_HL, DELAY(2NS,-1,9.5NS),
+       DELAY(4NS,-1,12.5NS))}
+ TRISTATE:
+ ENABLE LO = OEBBAR
+   ZB = {
+     CASE(
+       TRN_ZH, DELAY(1NS,-1,6NS),
+       TRN_ZL, DELAY(1NS,-1,6NS),
+       TRN_HZ, DELAY(2NS,-1,8NS),
+       TRN_LZ, DELAY(2NS,-1,7NS),
+       SELECT & TRN_LH, DELAY(3NS,-1,11NS),
+       SELECT & TRN_HL, DELAY(3NS,-1,11.5NS),
+       DATA & TRN_LH, DELAY(2NS,-1,10NS),
+       DATA & TRN_HL, DELAY(2NS,-1,9.5NS),
+       DELAY(4NS,-1,12.5NS))}

.ENDS 74AC353

*-------------------------------------------------------------74ACT353-----

* Dual 1 of 4 Data Selectors/Multiplexers with Tri-State Outputs
* TI Advanced CMOS Logic Databook, 1993, pages 2-365 to 2-369
* jat 12/20/95

.SUBCKT 74ACT353
+ A B 1C0 1C1 1C2 1C3 2C0 2C1 2C2 2C3 1GBAR 2GBAR 1Y 2Y
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(12,2) DPWR DGND
+ 1GBAR 1C0 1C1 1C2 1C3 A B 2C0 2C1 2C2 2C3 2GBAR
+ 1YO 2YO
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+ 1YO = {~((1C0 & (~A) & (~B)) | (1C1 & A & (~B)) | (1C2 & (~A) & B) |
+          (1C3 & A & B))}
+ 2YO = {~((2C0 & (~A) & (~B)) | (2C1 & A & (~B)) | (2C2 & (~A) & B) |
+          (2C3 & A & B))}

U2 PINDLY(2,2,10) DPWR DGND
+ 1YO 2YO
+ 1GBAR 2GBAR
+ 1C0 1C1 1C2 1C3 A B 2C0 2C1 2C2 2C3
+ 1Y 2Y
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SELECT = {CHANGED(A,0) | CHANGED(B,0)}
+   DATA = {CHANGED(1C0,0) | CHANGED(1C1,0) | CHANGED(1C2,0) | CHANGED(1C3,0) |
+           CHANGED(2C0,0) | CHANGED(2C1,0) | CHANGED(2C2,0) | CHANGED(2C3,0)}
+ TRISTATE:
+   ENABLE LO = 1GBAR
+   1Y = {
+     CASE(
+       TRN_ZH, DELAY(1.5NS,4.3NS,6.8NS),
+       TRN_ZL, DELAY(1.5NS,4.2NS,6.7NS),
+       TRN_HZ, DELAY(1.5NS,6.1NS,7.8NS),
+       TRN_LZ, DELAY(1.5NS,5.4NS,6.9NS),
+       SELECT & TRN_LH, DELAY(1.5NS,6.6NS,11.1NS),
+       SELECT & TRN_HL, DELAY(1.5NS,5.9NS,8.3NS),
+       DATA & TRN_LH, DELAY(1.5NS,6.3NS,9.8NS),
+       DATA & TRN_HL, DELAY(1.5NS,5.3NS,7.2NS),
+       DELAY(2.5NS,7.6NS,12.1NS))}
+ TRISTATE:
+   ENABLE LO = 2GBAR
+   2Y = {
+     CASE(
+       TRN_ZH, DELAY(1.5NS,4.3NS,6.8NS),
+       TRN_ZL, DELAY(1.5NS,4.2NS,6.7NS),
+       TRN_HZ, DELAY(1.5NS,6.1NS,7.8NS),
+       TRN_LZ, DELAY(1.5NS,5.4NS,6.9NS),
+       SELECT & TRN_LH, DELAY(1.5NS,6.6NS,11.1NS),
+       SELECT & TRN_HL, DELAY(1.5NS,5.9NS,8.3NS),
+       DATA & TRN_LH, DELAY(1.5NS,6.3NS,9.8NS),
+       DATA & TRN_HL, DELAY(1.5NS,5.3NS,7.2NS),
+       DELAY(2.5NS,7.6NS,12.1NS))}

.ENDS 74ACT353

* ----------------------------------------------------------- 74ALS353 ------
*  Dual 1-Of-4 Data Selectors/Multiplexers With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-357 to 2-360
*  bss    4/11/94
*
.SUBCKT 74ALS353 A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3 1Y 2Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(10,2) DPWR DGND
+     A B 1C0 1C1 1C2 1C3 2C0 2C1 2C2 2C3
+     1Y_O 2Y_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     1Y_O = {~((1C0 & abar & bbar) | (1C1 & A & bbar) | (1C2 & abar & B) |
+            (1C3 & A & B))}
+     2Y_O = {~((2C0 & abar & bbar) | (2C1 & A & bbar) | (2C2 & abar & B) |
+            (2C3 & A & B))}

U2DLY PINDLY(2,2,10) DPWR DGND
+     1Y_O 2Y_O
+     1GBAR 2GBAR
+     A B 1C0 1C1 1C2 1C3 2C0 2C1 2C2 2C3
+     1Y 2Y
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(A,0) | CHANGED(B,0)}
+     DATA1 = {CHANGED(1C0,0) | CHANGED(1C1,0) | CHANGED(1C2,0) | CHANGED(1C3,0)}
+     DATA2 = {CHANGED(2C0,0) | CHANGED(2C1,0) | CHANGED(2C2,0) | CHANGED(2C3,0)}
+
+  TRISTATE:
+     ENABLE LO=1GBAR
+     1Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(5ns,-1,24ns),
+         SELECT & TRN_HL, DELAY(5ns,-1,21ns),
+         DATA1 & TRN_LH, DELAY(4ns,-1,18ns),
+         DATA1 & TRN_HL, DELAY(3ns,-1,13ns),
+         TRN_ZH, DELAY(3ns,-1,13ns),
+         TRN_ZL, DELAY(2ns,-1,16ns),
+         TRN_HZ, DELAY(2ns,-1,10ns),
+         TRN_LZ, DELAY(2ns,-1,14ns),
+         DELAY(6ns,-1,25ns))}
+
+  TRISTATE:
+     ENABLE LO=2GBAR
+     2Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(5ns,-1,24ns),
+         SELECT & TRN_HL, DELAY(5ns,-1,21ns),
+         DATA2 & TRN_LH, DELAY(4ns,-1,18ns),
+         DATA2 & TRN_HL, DELAY(3ns,-1,13ns),
+         TRN_ZH, DELAY(3ns,-1,13ns),
+         TRN_ZL, DELAY(2ns,-1,16ns),
+         TRN_HZ, DELAY(2ns,-1,10ns),
+         TRN_LZ, DELAY(2ns,-1,14ns),
+         DELAY(6ns,-1,25ns))}

.ENDS 74ALS353
*
*
* ----------------------------------------------------------- 74AS353A ------
*  Dual 1-Of-4 Data Selectors/Multiplexers With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-357 to 2-360
*  bss    4/11/94
*
.SUBCKT 74AS353A A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3 1Y 2Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(10,2) DPWR DGND
+     A B 1C0 1C1 1C2 1C3 2C0 2C1 2C2 2C3
+     1Y_O 2Y_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     1Y_O = {~((1C0 & abar & bbar) | (1C1 & A & bbar) | (1C2 & abar & B) |
+            (1C3 & A & B))}
+     2Y_O = {~((2C0 & abar & bbar) | (2C1 & A & bbar) | (2C2 & abar & B) |
+            (2C3 & A & B))}

U2DLY PINDLY(2,2,10) DPWR DGND
+     1Y_O 2Y_O
+     1GBAR 2GBAR
+     A B 1C0 1C1 1C2 1C3 2C0 2C1 2C2 2C3
+     1Y 2Y
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(A,0) | CHANGED(B,0)}
+     DATA1 = {CHANGED(1C0,0) | CHANGED(1C1,0) | CHANGED(1C2,0) | CHANGED(1C3,0)}
+     DATA2 = {CHANGED(2C0,0) | CHANGED(2C1,0) | CHANGED(2C2,0) | CHANGED(2C3,0)}
+
+  TRISTATE:
+     ENABLE LO=1GBAR
+     1Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(3ns,-1,9ns),
+         SELECT & TRN_HL, DELAY(4ns,-1,12ns),
+         DATA1 & TRN_LH, DELAY(3ns,-1,7.5ns),
+         DATA1 & TRN_HL, DELAY(2ns,-1,6ns),
+         TRN_ZH, DELAY(3ns,-1,7.5ns),
+         TRN_ZL, DELAY(4ns,-1,12.5ns),
+         TRN_HZ, DELAY(2ns,-1,5.5ns),
+         TRN_LZ, DELAY(3ns,-1,7.5ns),
+         DELAY(5ns,-1,13.5ns))}
+
+  TRISTATE:
+     ENABLE LO=2GBAR
+     2Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(3ns,-1,9ns),
+         SELECT & TRN_HL, DELAY(4ns,-1,12ns),
+         DATA2 & TRN_LH, DELAY(3ns,-1,7.5ns),
+         DATA2 & TRN_HL, DELAY(2ns,-1,6ns),
+         TRN_ZH, DELAY(3ns,-1,7.5ns),
+         TRN_ZL, DELAY(4ns,-1,12.5ns),
+         TRN_HZ, DELAY(2ns,-1,5.5ns),
+         TRN_LZ, DELAY(3ns,-1,7.5ns),
+         DELAY(5ns,-1,13.5ns))}

.ENDS 74AS353A
*
*
* ----------------------------------------------------------- 74F353 ------
*  Dual 4-Input Selectors/Multiplexers With 3-State Outputs
*
*  The Fast TTL Logic Data Book, 1992, Philips Pages 425 to 428
*  bss    4/11/94
*
.SUBCKT 74F353 S0 S1 OEABAR I0A I1A I2A I3A OEBBAR I0B I1B I2B I3B YA YB
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(10,2) DPWR DGND
+     S0 S1 I0A I1A I2A I3A I0B I1B I2B I3B
+     YA_O YB_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     YA_O = {~((I0A & s0bar & s1bar) | (I1A & S0 & s1bar) | (I2A & s0bar & S1) |
+            (I3A & S0 & S1))}
+     YB_O = {~((I0B & s0bar & s1bar) | (I1B & S0 & s1bar) | (I2B & s0bar & S1) |
+            (I3B & S0 & S1))}

U2DLY PINDLY(2,2,10) DPWR DGND
+     YA_O YB_O
+     OEABAR OEBBAR
+     S0 S1 I0A I1A I2A I3A I0B I1B I2B I3B
+     YA YB
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0)}
+     DATA1 = {CHANGED(I0A,0) | CHANGED(I1A,0) | CHANGED(I2A,0) | CHANGED(I3A,0)}
+     DATA2 = {CHANGED(I0B,0) | CHANGED(I1B,0) | CHANGED(I2B,0) | CHANGED(I3B,0)}
+
+  TRISTATE:
+     ENABLE LO=OEABAR
+     YA = {
+       CASE(
+         SELECT & TRN_LH, DELAY(5ns,9ns,12ns),
+         SELECT & TRN_HL, DELAY(3ns,6ns,8.5ns),
+         DATA1 & TRN_LH, DELAY(3ns,5ns,7ns),
+         DATA1 & TRN_HL, DELAY(1.5ns,3ns,5ns),
+         TRN_ZH, DELAY(4ns,6ns,8ns),
+         TRN_ZL, DELAY(4ns,6.5ns,8ns),
+         TRN_HZ, DELAY(2.5ns,4ns,5.5ns),
+         TRN_LZ, DELAY(1.5ns,2.5ns,6ns),
+         DELAY(6ns,10ns,13ns))}
+
+  TRISTATE:
+     ENABLE LO=OEBBAR
+     YB = {
+       CASE(
+         SELECT & TRN_LH, DELAY(5ns,9ns,12ns),
+         SELECT & TRN_HL, DELAY(3ns,6ns,8.5ns),
+         DATA2 & TRN_LH, DELAY(3ns,5ns,7ns),
+         DATA2 & TRN_HL, DELAY(1.5ns,3ns,5ns),
+         TRN_ZH, DELAY(4ns,6ns,8ns),
+         TRN_ZL, DELAY(4ns,6.5ns,8ns),
+         TRN_HZ, DELAY(2.5ns,4ns,5.5ns),
+         TRN_LZ, DELAY(1.5ns,2.5ns,6ns),
+         DELAY(6ns,10ns,13ns))}

.ENDS 74F353
*
*
* ----------------------------------------------------------- 74LS353 ------
*  Dual 4-Line To 1-Line Data Selectors/Multiplexers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-859 to 2-861
*  bss    4/11/94
*
.SUBCKT 74LS353 A B 1GBAR 1C0 1C1 1C2 1C3 2GBAR 2C0 2C1 2C2 2C3 1Y 2Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(10,2) DPWR DGND
+     A B 1C0 1C1 1C2 1C3 2C0 2C1 2C2 2C3
+     1Y_O 2Y_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     1Y_O = {~((1C0 & abar & bbar) | (1C1 & A & bbar) | (1C2 & abar & B) |
+            (1C3 & A & B))}
+     2Y_O = {~((2C0 & abar & bbar) | (2C1 & A & bbar) | (2C2 & abar & B) |
+            (2C3 & A & B))}

U2DLY PINDLY(2,2,10) DPWR DGND
+     1Y_O 2Y_O
+     1GBAR 2GBAR
+     A B 1C0 1C1 1C2 1C3 2C0 2C1 2C2 2C3
+     1Y 2Y
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(A,0) | CHANGED(B,0)}
+     DATA1 = {CHANGED(1C0,0) | CHANGED(1C1,0) | CHANGED(1C2,0) | CHANGED(1C3,0)}
+     DATA2 = {CHANGED(2C0,0) | CHANGED(2C1,0) | CHANGED(2C2,0) | CHANGED(2C3,0)}
+
+  TRISTATE:
+     ENABLE LO=1GBAR
+     1Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,20ns,45ns),
+         SELECT & TRN_HL, DELAY(-1,21ns,32ns),
+         DATA1 & TRN_LH, DELAY(-1,11ns,25ns),
+         DATA1 & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,11ns,23ns),
+         TRN_ZL, DELAY(-1,15ns,23ns),
+         TRN_HZ, DELAY(-1,27ns,41ns),
+         TRN_LZ, DELAY(-1,12ns,27ns),
+         DELAY(-1,28ns,46ns))}
+
+  TRISTATE:
+     ENABLE LO=2GBAR
+     2Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,20ns,45ns),
+         SELECT & TRN_HL, DELAY(-1,21ns,32ns),
+         DATA2 & TRN_LH, DELAY(-1,11ns,25ns),
+         DATA2 & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,11ns,23ns),
+         TRN_ZL, DELAY(-1,15ns,23ns),
+         TRN_HZ, DELAY(-1,27ns,41ns),
+         TRN_LZ, DELAY(-1,12ns,27ns),
+         DELAY(-1,28ns,46ns))}

.ENDS 74LS353
*
*
* ----------------------------------------------------------- 74HC354 ------
*  8-Line To 1-Line Data Selectors/Multiplexers/Transparent Registers With 3-State Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-395 to 2-400
*  bss    4/12/94
*
.SUBCKT 74HC354 G1BAR G2BAR G3 SCBAR S0 S1 S2 DCBAR D0 D1 D2 D3 D4 D5 D6 D7
+     Y W
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(3) DPWR DGND
+     $D_HI $D_HI SC
+     S0 S1 S2
+     S0L S1L S2L $D_NC $D_NC $D_NC
+     D0_GFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI DC
+     D0 D1 D2 D3 D4 D5 D6 D7
+     D0L D1L D2L D3L D4L D5L D6L D7L 
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(16,5) DPWR DGND
+     G1BAR G2BAR G3 SCBAR DCBAR S0L S1L S2L D0L D1L D2L D3L D4L D5L D6L D7L
+     ENAB Y_O W_O SC DC
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     g3bar = {~G3}
+     ENAB = {~(G1BAR | G2BAR | g3bar)}
+     SC = {~SCBAR}
+     DC = {~DCBAR}
+     s0lbar = {~S0L}
+     s1lbar = {~S1L}
+     s2lbar = {~S2L}
+     ds0 = {(s0lbar & s1lbar & s2lbar & D0L)}
+     ds1 = {(S0L & s1lbar & s2lbar & D1L)}
+     ds2 = {(s0lbar & S1L & s2lbar & D2L)}
+     ds3 = {(S0L & S1L & s2lbar & D3L)}
+     ds4 = {(s0lbar & s1lbar & S2L & D4L)}
+     ds5 = {(S0L & s1lbar & S2L & D5L)}
+     ds6 = {(s0lbar & S1L & S2L & D6L)}
+     ds7 = {(S0L & S1L & S2L & D7L)}
+     Y_O = {(ds0 | ds1 | ds2 | ds3 | ds4 | ds5 | ds6 | ds7)}
+     W_O = {~Y_O}

U4DLY PINDLY(2,1,13) DPWR DGND
+     Y_O W_O
+     ENAB
+     D0 D1 D2 D3 D4 D5 D6 D7 DCBAR S0 S1 S2 SCBAR
+     Y W
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+             CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+     GATE = {CHANGED_HL(DCBAR,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+     SGATE = {CHANGED_HL(SCBAR,0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     Y W = {
+       CASE(
+         SGATE & TRN_LH, DELAY(-1,45ns,60ns),
+         SGATE & TRN_HL, DELAY(-1,45ns,60ns),
+         GATE & TRN_LH, DELAY(-1,40ns,54ns),
+         GATE & TRN_HL, DELAY(-1,40ns,54ns),
+         SELECT & TRN_LH, DELAY(-1,42ns,57ns),
+         SELECT & TRN_HL, DELAY(-1,42ns,57ns),
+         DATA & TRN_LH, DELAY(-1,29ns,47ns),
+         DATA & TRN_HL, DELAY(-1,29ns,47ns),
+         TRN_Z$, DELAY(-1,18ns,25ns),
+         TRN_$Z, DELAY(-1,24ns,33ns),
+         DELAY(-1,46ns,61ns))}

U5CON CONSTRAINT(13) DPWR DGND
+     DCBAR D0 D1 D2 D3 D4 D5 D6 D7 SCBAR S0 S1 S2
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=SCBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=DCBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=DCBAR
+     DATA(8)=D0 D1 D2 D3 D4 D5 D6 D7
+     SETUPTIME=19ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=SCBAR
+     DATA(3)=S0 S1 S2
+     SETUPTIME=19ns
+     HOLDTIME=5ns

.ENDS 74HC354

*--------------------------------------------------------------74HCT354-----

* 8-Input Multiplexer/Register with Transparent Latches, Tri-State
* Philips High-speed CMOS Logic Family Data Handbook, 1994, pages 585 to 593
* jat 9/11/96

.SUBCKT 74HCT354 LEBAR S0 S1 S2 EBAR D0 D1 D2 D3 D4 D5 D6 D7
+ OE1BAR OE2BAR OE3 Y YBAR
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(13,5) DPWR DGND
+ LEBAR A0 A1 A2 A3 A4 A5 A6 A7 OE1BAR OE2BAR OE3 EBAR
+ LE OUT ENAB OUTBAR E
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+        LE = {~LEBAR}
+        OUT = {~(A0 | A1 | A2 | A3 | A4 | A5 | A6 | A7)}
+        ENAB = {(~OE1BAR) & (~OE2BAR) & OE3}
+        OUTBAR = {~OUT}
+        E = {~EBAR}

U2 DLTCH(8) DPWR DGND
+ $D_HI $D_HI E
+ D0 D1 D2 D3 D4 D5 D6 D7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ QD0BAR QD1BAR QD2BAR QD3BAR QD4BAR QD5BAR QD6BAR QD7BAR
+ D0_GFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DLTCH(3) DPWR DGND
+ $D_HI $D_HI LE
+ S0 S1 S2
+ QS0 QS1 QS2
+ QS0BAR QS1BAR QS2BAR
+ D0_GFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 ANDA(4,8) DPWR DGND
+ QD0BAR QS0BAR QS1BAR QS2BAR
+ QD1BAR QS0    QS1BAR QS2BAR
+ QD2BAR QS0BAR QS1    QS2BAR
+ QD3BAR QS0    QS1    QS2BAR   
+ QD4BAR QS0BAR QS1BAR QS2
+ QD5BAR QS0    QS1BAR QS2
+ QD6BAR QS0BAR QS1    QS2
+ QD7BAR QS0    QS1    QS2
+ A0 A1 A2 A3 A4 A5 A6 A7
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 PINDLY(2,1,16) DPWR DGND
+ OUT OUTBAR
+ ENAB
+ D0 D1 D2 D3 D4 D5 D6 D7 EBAR S0 S1 S2 LEBAR OE1BAR OE2BAR OE3
+ Y YBAR
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+         DATA = {CHANGED(D0,0) | CHANGED(D0,0) | CHANGED(D0,0) | CHANGED(D0,0) |
+                 CHANGED(D0,0) | CHANGED(D0,0) | CHANGED(D0,0) | CHANGED(D0,0)}
+         ELATCH = {CHANGED_HL(EBAR,0)}
+         SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+         LATCH = {CHANGED_HL(LEBAR,0)}
+         ENAB12 = {CHANGED(OE1BAR,0) | CHANGED(OE2BAR,0)}
+         ENAB3 = {CHANGED(OE3,0)}
+ TRISTATE:
+    ENABLE HI = ENAB
+         Y YBAR = {
+           CASE(
+              ENAB12 & TRN_$Z, DELAY(-1,18NS,33NS),
+              ENAB3 & TRN_$Z, DELAY(-1,21NS,39NS),
+              ENAB12 & TRN_Z$, DELAY(-1,18NS,34NS),
+              ENAB3 & TRN_Z$, DELAY(-1,18NS,34NS),
+              LATCH & (TRN_LH | TRN_HL), DELAY(-1,31NS,63NS),
+              SELECT & (TRN_LH | TRN_HL), DELAY(-1,30NS,59NS),
+              ELATCH & (TRN_LH | TRN_HL), DELAY(-1,26NS,54NS),
+              DATA & (TRN_LH | TRN_HL), DELAY(-1,25NS,47NS),
+              DELAY(-1,32NS,64NS))}

U7 CONSTRAINT(13) DPWR DGND
+ EBAR D0 D1 D2 D3 D4 D5 D6 D7 LEBAR S0 S1 S2
+ IO_HCT IO_LEVEL={IO_LEVEL}
+ SETUP_HOLD:
+        CLOCK LH = EBAR
+        DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+        SETUPTIME = 4NS
+ SETUP_HOLD:
+        CLOCK LH = LEBAR
+        DATA(3) = S0 S1 S2
+        SETUPTIME = 5NS
+ WIDTH:
+        NODE = EBAR
+        MIN_LO = 6NS
+ WIDTH:
+        NODE = LEBAR
+        MIN_LO = 6NS

.ENDS 74HCT354

* ----------------------------------------------------------- 74LS354 ------
*  8-Line To 1-Line Data Selectors/Multiplexers/Registers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-863 to 2-871
*  bss    4/11/94
*
.SUBCKT 74LS354 G1BAR G2BAR G3 SCBAR S0 S1 S2 DCBAR D0 D1 D2 D3 D4 D5 D6 D7
+     Y W
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(3) DPWR DGND
+     $D_HI $D_HI SC
+     S0 S1 S2
+     S0L S1L S2L $D_NC $D_NC $D_NC
+     D0_GFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI DC
+     D0 D1 D2 D3 D4 D5 D6 D7
+     D0L D1L D2L D3L D4L D5L D6L D7L 
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(16,5) DPWR DGND
+     G1BAR G2BAR G3 SCBAR DCBAR S0L S1L S2L D0L D1L D2L D3L D4L D5L D6L D7L
+     ENAB Y_O W_O SC DC
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     g3bar = {~G3}
+     ENAB = {~(G1BAR | G2BAR | g3bar)}
+     SC = {~SCBAR}
+     DC = {~DCBAR}
+     s0lbar = {~S0L}
+     s1lbar = {~S1L}
+     s2lbar = {~S2L}
+     ds0 = {(s0lbar & s1lbar & s2lbar & D0L)}
+     ds1 = {(S0L & s1lbar & s2lbar & D1L)}
+     ds2 = {(s0lbar & S1L & s2lbar & D2L)}
+     ds3 = {(S0L & S1L & s2lbar & D3L)}
+     ds4 = {(s0lbar & s1lbar & S2L & D4L)}
+     ds5 = {(S0L & s1lbar & S2L & D5L)}
+     ds6 = {(s0lbar & S1L & S2L & D6L)}
+     ds7 = {(S0L & S1L & S2L & D7L)}
+     Y_O = {(ds0 | ds1 | ds2 | ds3 | ds4 | ds5 | ds6 | ds7)}
+     W_O = {~Y_O}

U4DLY PINDLY(2,1,16) DPWR DGND
+     Y_O W_O
+     ENAB
+     D0 D1 D2 D3 D4 D5 D6 D7 DCBAR S0 S1 S2 SCBAR G1BAR G2BAR G3
+     Y W
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+             CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+     GATE = {CHANGED_HL(DCBAR,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+     SGATE = {CHANGED_HL(SCBAR,0)}
+     ENAB12 = {CHANGED(G1BAR,0) | CHANGED(G2BAR,0)}
+     ENAB3 = {CHANGED(G3,0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     Y = {
+       CASE(
+         SGATE & TRN_LH, DELAY(-1,34ns,51ns),
+         SGATE & TRN_HL, DELAY(-1,31ns,47ns),
+         SELECT & TRN_LH, DELAY(-1,29ns,44ns),
+         SELECT & TRN_HL, DELAY(-1,24ns,45ns),
+         GATE & TRN_LH, DELAY(-1,28ns,42ns),
+         GATE & TRN_HL, DELAY(-1,26ns,39ns),
+         DATA & TRN_LH, DELAY(-1,24ns,36ns),
+         DATA & TRN_HL, DELAY(-1,23ns,35ns),
+         ENAB3 & TRN_ZH, DELAY(-1,15ns,29ns),
+         ENAB3 & TRN_ZL, DELAY(-1,19ns,29ns),
+         TRN_HZ, DELAY(-1,15ns,25ns),
+         TRN_LZ, DELAY(-1,15ns,25ns),
+         ENAB12 & TRN_ZH, DELAY(-1,14ns,27ns),
+         ENAB12 & TRN_ZL, DELAY(-1,18ns,27ns),
+         DELAY(-1,35ns,52ns))}
+
+     W = {
+       CASE(
+         SGATE & TRN_LH, DELAY(-1,27ns,41ns),
+         SGATE & TRN_HL, DELAY(-1,40ns,60ns),
+         SELECT & TRN_LH, DELAY(-1,28ns,42ns),
+         SELECT & TRN_HL, DELAY(-1,34ns,51ns),
+         GATE & TRN_LH, DELAY(-1,22ns,33ns),
+         GATE & TRN_HL, DELAY(-1,33ns,50ns),
+         DATA & TRN_LH, DELAY(-1,18ns,27ns),
+         DATA & TRN_HL, DELAY(-1,29ns,44ns),
+         ENAB3 & TRN_ZH, DELAY(-1,13ns,25ns),
+         ENAB3 & TRN_ZL, DELAY(-1,17ns,25ns),
+         TRN_$Z, DELAY(-1,15ns,25ns),
+         ENAB12 & TRN_ZH, DELAY(-1,12ns,24ns),
+         ENAB12 & TRN_ZL, DELAY(-1,16ns,24ns),
+         DELAY(-1,41ns,61ns))}

U5CON CONSTRAINT(9) DPWR DGND
+     DCBAR D0 D1 D2 D3 D4 D5 D6 D7
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  SETUP_HOLD:
+     CLOCK LH=DCBAR
+     DATA(8)=D0 D1 D2 D3 D4 D5 D6 D7
+     SETUPTIME=15ns
+     HOLDTIME=15ns

.ENDS 74LS354
*
*
* ----------------------------------------------------------- 74LS355 ------
*  8-Line To 1-Line Data Selectors/Multiplexers/Registers With Open Collector Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-863 to 2-871
*  bss    4/12/94
*
.SUBCKT 74LS355 G1BAR G2BAR G3 SCBAR S0 S1 S2 DCBAR D0 D1 D2 D3 D4 D5 D6 D7
+     Y W
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(3) DPWR DGND
+     $D_HI $D_HI SC
+     S0 S1 S2
+     S0L S1L S2L $D_NC $D_NC $D_NC
+     D0_GFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI DC
+     D0 D1 D2 D3 D4 D5 D6 D7
+     D0L D1L D2L D3L D4L D5L D6L D7L 
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(16,4) DPWR DGND
+     G1BAR G2BAR G3 SCBAR DCBAR S0L S1L S2L D0L D1L D2L D3L D4L D5L D6L D7L
+     Y_O W_O SC DC
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     g3bar = {~G3}
+     enab = {(G1BAR | G2BAR | g3bar)}
+     SC = {~SCBAR}
+     DC = {~DCBAR}
+     s0lbar = {~S0L}
+     s1lbar = {~S1L}
+     s2lbar = {~S2L}
+     ds0 = {(s0lbar & s1lbar & s2lbar & D0L)}
+     ds1 = {(S0L & s1lbar & s2lbar & D1L)}
+     ds2 = {(s0lbar & S1L & s2lbar & D2L)}
+     ds3 = {(S0L & S1L & s2lbar & D3L)}
+     ds4 = {(s0lbar & s1lbar & S2L & D4L)}
+     ds5 = {(S0L & s1lbar & S2L & D5L)}
+     ds6 = {(s0lbar & S1L & S2L & D6L)}
+     ds7 = {(S0L & S1L & S2L & D7L)}
+     YIN = {(ds0 | ds1 | ds2 | ds3 | ds4 | ds5 | ds6 | ds7)}
+     WIN = {~YIN}
+     Y_O = {YIN | enab}
+     W_O = {WIN | enab}

U4DLY PINDLY(2,0,16) DPWR DGND
+     Y_O W_O
+     D0 D1 D2 D3 D4 D5 D6 D7 DCBAR S0 S1 S2 SCBAR G1BAR G2BAR G3
+     Y W
+     IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+             CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+     GATE = {CHANGED_HL(DCBAR,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+     SGATE = {CHANGED_HL(SCBAR,0)}
+     ENAB12 = {CHANGED(G1BAR,0) | CHANGED(G2BAR,0)}
+     ENAB3 = {CHANGED(G3,0)}
+
+  PINDLY:
+     Y = {
+       CASE(
+         SGATE & TRN_LH, DELAY(-1,45ns,68ns),
+         SGATE & TRN_HL, DELAY(-1,42ns,63ns),
+         SELECT & TRN_LH, DELAY(-1,39ns,59ns),
+         SELECT & TRN_HL, DELAY(-1,36ns,49ns),
+         GATE & TRN_LH, DELAY(-1,38ns,57ns),
+         GATE & TRN_HL, DELAY(-1,31ns,47ns),
+         DATA & TRN_LH, DELAY(-1,34ns,41ns),
+         DATA & TRN_HL, DELAY(-1,26ns,39ns),
+         ENAB3 & TRN_LH, DELAY(-1,24ns,36ns),
+         ENAB3 & TRN_HL, DELAY(-1,25ns,40ns),
+         ENAB12 & TRN_LH, DELAY(-1,21ns,32ns),
+         ENAB12 & TRN_HL, DELAY(-1,22ns,33ns),
+         DELAY(-1,46ns,69ns))}
+
+     W = {
+       CASE(
+         SGATE & TRN_LH, DELAY(-1,44ns,66ns),
+         SGATE & TRN_HL, DELAY(-1,45ns,68ns),
+         SELECT & TRN_LH, DELAY(-1,32ns,48ns),
+         SELECT & TRN_HL, DELAY(-1,39ns,58ns),
+         GATE & TRN_LH, DELAY(-1,33ns,50ns),
+         GATE & TRN_HL, DELAY(-1,39ns,59ns),
+         DATA & TRN_LH, DELAY(-1,30ns,45ns),
+         DATA & TRN_HL, DELAY(-1,33ns,50ns),
+         ENAB3 & TRN_LH, DELAY(-1,19ns,31ns),
+         ENAB3 & TRN_HL, DELAY(-1,19ns,29ns),
+         ENAB12 & TRN_LH, DELAY(-1,18ns,27ns),
+         ENAB12 & TRN_HL, DELAY(-1,19ns,29ns),
+         DELAY(-1,46ns,69ns))}

U5CON CONSTRAINT(9) DPWR DGND
+     DCBAR D0 D1 D2 D3 D4 D5 D6 D7
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  SETUP_HOLD:
+     CLOCK LH=DCBAR
+     DATA(8)=D0 D1 D2 D3 D4 D5 D6 D7
+     SETUPTIME=15ns
+     HOLDTIME=15ns

.ENDS 74LS355
*
*
*--------------------------------------------------------------74HC356-----

* The74HC356 8-Input Multiplexer/Register, Tri-State
* Philips High-speed CMOS Logic Family Data Handbook, 1994, pages 595-602
* jat 7/25/95

.SUBCKT 74HC356 LEBAR S0 S1 S2 CP D0 D1 D2 D3 D4 D5 D6 D7
+ OE1BAR OE2BAR OE3 Y YBAR
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(12,4) DPWR DGND
+ LEBAR A0 A1 A2 A3 A4 A5 A6 A7 OE1BAR OE2BAR OE3
+ LE OUT ENAB OUTBAR
+ D0_GATE IO_HC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+        LE = {~LEBAR}
+        OUT = {~(A0 | A1 | A2 | A3 | A4 | A5 | A6 | A7)}
+        ENAB = {(~OE1BAR) & (~OE2BAR) & OE3}
+        OUTBAR = {~OUT}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ QD0BAR QD1BAR QD2BAR QD3BAR QD4BAR QD5BAR QD6BAR QD7BAR
+ D0_EFF IO_HC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DLTCH(3) DPWR DGND
+ $D_HI $D_HI LE
+ S0 S1 S2
+ QS0 QS1 QS2
+ QS0BAR QS1BAR QS2BAR
+ D0_GFF IO_HC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 ANDA(4,8) DPWR DGND
+ QD0BAR QS0BAR QS1BAR QS2BAR
+ QD1BAR QS0    QS1BAR QS2BAR
+ QD2BAR QS0BAR QS1    QS2BAR
+ QD3BAR QS0    QS1    QS2BAR   
+ QD4BAR QS0BAR QS1BAR QS2
+ QD5BAR QS0    QS1BAR QS2
+ QD6BAR QS0BAR QS1    QS2
+ QD7BAR QS0    QS1    QS2
+ A0 A1 A2 A3 A4 A5 A6 A7
+ D0_GATE IO_HC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 PINDLY(2,1,8) DPWR DGND
+ OUT OUTBAR
+ ENAB
+ CP S0 S1 S2 LEBAR OE1BAR OE2BAR OE3
+ Y YBAR
+ IO_HC
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+         EDGE = {CHANGED_LH(CP,0)}
+         SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+         LATCH = {CHANGED_HL(LEBAR,0)}
+         ENAB12 = {CHANGED_HL(OE1BAR,0) | CHANGED_HL(OE2BAR,0)}
+         ENAB3 = {CHANGED_LH(OE3,0)}
+         DISABLE12 = {CHANGED_LH(OE1BAR,0) | CHANGED_LH(OE2BAR,0)}
+         DISABLE3 = {CHANGED_HL(OE3,0)}
+
+ TRISTATE:
+    ENABLE HI = ENAB
+         Y YBAR = {
+           CASE(
+              DISABLE12 & TRN_$Z, DELAY(-1,18NS,31NS),
+              DISABLE3 & TRN_$Z, DELAY(-1,21NS,31NS),
+              ENAB12 & TRN_Z$, DELAY(-1,15NS,25NS),
+              ENAB3 & TRN_Z$, DELAY(-1,17NS,30NS),
+              LATCH & (TRN_LH | TRN_HL), DELAY(-1,28NS,54NS),
+              SELECT & (TRN_LH | TRN_HL), DELAY(-1,28NS,52NS),
+              EDGE & (TRN_LH | TRN_HL), DELAY(-1,24NS,48NS),
+              DELAY(-1,29NS,55NS))}

U7 CONSTRAINT(13) DPWR DGND
+ CP D0 D1 D2 D3 D4 D5 D6 D7 LEBAR S0 S1 S2
+ IO_HC IO_LEVEL={IO_LEVEL}
+ SETUP_HOLD:
+        CLOCK LH = CP
+        DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+        SETUPTIME = 13NS
+        HOLDTIME = 5NS
+ SETUP_HOLD:
+        CLOCK HL = LEBAR
+        DATA(3) = S0 S1 S2
+        SETUPTIME = 13NS
+        HOLDTIME = 5NS
+ WIDTH:
+        NODE = CP
+        MIN_LO = 20NS
+        MIN_HI = 20NS
+ WIDTH:
+        NODE = LEBAR
+        MIN_LO = 20NS

.ENDS 74HC356

*--------------------------------------------------------------74HCT356-----

* 8-Input Multiplexer/Register, Tri-State
* Philips High-speed CMOS Logic Family Data Handbook, 1994, pages 595 to 602
* jat 9/11/96

.SUBCKT 74HCT356 LEBAR S0 S1 S2 CP D0 D1 D2 D3 D4 D5 D6 D7
+ OE1BAR OE2BAR OE3 Y YBAR
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(12,4) DPWR DGND
+ LEBAR A0 A1 A2 A3 A4 A5 A6 A7 OE1BAR OE2BAR OE3
+ LE OUT ENAB OUTBAR
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+        LE = {~LEBAR}
+        OUT = {~(A0 | A1 | A2 | A3 | A4 | A5 | A6 | A7)}
+        ENAB = {(~OE1BAR) & (~OE2BAR) & OE3}
+        OUTBAR = {~OUT}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ QD0BAR QD1BAR QD2BAR QD3BAR QD4BAR QD5BAR QD6BAR QD7BAR
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DLTCH(3) DPWR DGND
+ $D_HI $D_HI LE
+ S0 S1 S2
+ QS0 QS1 QS2
+ QS0BAR QS1BAR QS2BAR
+ D0_GFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 ANDA(4,8) DPWR DGND
+ QD0BAR QS0BAR QS1BAR QS2BAR
+ QD1BAR QS0    QS1BAR QS2BAR
+ QD2BAR QS0BAR QS1    QS2BAR
+ QD3BAR QS0    QS1    QS2BAR   
+ QD4BAR QS0BAR QS1BAR QS2
+ QD5BAR QS0    QS1BAR QS2
+ QD6BAR QS0BAR QS1    QS2
+ QD7BAR QS0    QS1    QS2
+ A0 A1 A2 A3 A4 A5 A6 A7
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 PINDLY(2,1,8) DPWR DGND
+ OUT OUTBAR
+ ENAB
+ CP S0 S1 S2 LEBAR OE1BAR OE2BAR OE3
+ Y YBAR
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+         EDGE = {CHANGED_LH(CP,0)}
+         SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+         LATCH = {CHANGED_HL(LEBAR,0)}
+         ENAB12 = {CHANGED(OE1BAR,0) | CHANGED(OE2BAR,0)}
+         ENAB3 = {CHANGED(OE3,0)}
+ TRISTATE:
+    ENABLE HI = ENAB
+         Y YBAR = {
+           CASE(
+              ENAB12 & TRN_$Z, DELAY(-1,17NS,33NS),
+              ENAB3 & TRN_$Z, DELAY(-1,20NS,33NS),
+              ENAB12 & TRN_Z$, DELAY(-1,17NS,34NS),
+              ENAB3 & TRN_Z$, DELAY(-1,18NS,34NS),
+              LATCH & (TRN_LH | TRN_HL), DELAY(-1,29NS,63NS),
+              SELECT & (TRN_LH | TRN_HL), DELAY(-1,28NS,59NS),
+              EDGE & (TRN_LH | TRN_HL), DELAY(-1,26NS,51NS),
+              DELAY(-1,30NS,64NS))}

U7 CONSTRAINT(13) DPWR DGND
+ CP D0 D1 D2 D3 D4 D5 D6 D7 LEBAR S0 S1 S2
+ IO_HCT IO_LEVEL={IO_LEVEL}
+ SETUP_HOLD:
+        CLOCK LH = CP
+        DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+        SETUPTIME = 4NS
+ SETUP_HOLD:
+        CLOCK LH = LEBAR
+        DATA(3) = S0 S1 S2
+        SETUPTIME = 5NS
+ WIDTH:
+        NODE = CP
+        MIN_LO = 8NS
+        MIN_HI = 8NS
+ WIDTH:
+        NODE = LEBAR
+        MIN_LO = 6NS

.ENDS 74HCT356

* ----------------------------------------------------------- 74LS356 ------
*  8-Line To 1-Line Data Selectors/Multiplexers/Registers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-863 to 2-871
*  bss    4/12/94
*
.SUBCKT 74LS356 G1BAR G2BAR G3 SCBAR S0 S1 S2 CLK D0 D1 D2 D3 D4 D5 D6 D7
+     Y W
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(3) DPWR DGND
+     $D_HI $D_HI SC
+     S0 S1 S2
+     S0L S1L S2L $D_NC $D_NC $D_NC
+     D0_GFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     D0 D1 D2 D3 D4 D5 D6 D7
+     D0L D1L D2L D3L D4L D5L D6L D7L 
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(15,4) DPWR DGND
+     G1BAR G2BAR G3 SCBAR S0L S1L S2L D0L D1L D2L D3L D4L D5L D6L D7L
+     ENAB Y_O W_O SC
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     g3bar = {~G3}
+     ENAB = {~(G1BAR | G2BAR | g3bar)}
+     SC = {~SCBAR}
+     s0lbar = {~S0L}
+     s1lbar = {~S1L}
+     s2lbar = {~S2L}
+     ds0 = {(s0lbar & s1lbar & s2lbar & D0L)}
+     ds1 = {(S0L & s1lbar & s2lbar & D1L)}
+     ds2 = {(s0lbar & S1L & s2lbar & D2L)}
+     ds3 = {(S0L & S1L & s2lbar & D3L)}
+     ds4 = {(s0lbar & s1lbar & S2L & D4L)}
+     ds5 = {(S0L & s1lbar & S2L & D5L)}
+     ds6 = {(s0lbar & S1L & S2L & D6L)}
+     ds7 = {(S0L & S1L & S2L & D7L)}
+     Y_O = {(ds0 | ds1 | ds2 | ds3 | ds4 | ds5 | ds6 | ds7)}
+     W_O = {~Y_O}

U4DLY PINDLY(2,1,16) DPWR DGND
+     Y_O W_O
+     ENAB
+     D0 D1 D2 D3 D4 D5 D6 D7 CLK S0 S1 S2 SCBAR G1BAR G2BAR G3
+     Y W
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+             CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+     CLOCK = {CHANGED_LH(CLK,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+     SGATE = {CHANGED_HL(SCBAR,0)}
+     ENAB12 = {CHANGED(G1BAR,0) | CHANGED(G2BAR,0)}
+     ENAB3 = {CHANGED(G3,0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     Y = {
+       CASE(
+         SGATE & TRN_LH, DELAY(-1,36ns,54ns),
+         SGATE & TRN_HL, DELAY(-1,40ns,60ns),
+         SELECT & TRN_LH, DELAY(-1,30ns,45ns),
+         SELECT & TRN_HL, DELAY(-1,28ns,48ns),
+         CLOCK & TRN_LH, DELAY(-1,18ns,27ns),
+         CLOCK & TRN_HL, DELAY(-1,33ns,50ns),
+         ENAB3 & TRN_ZH, DELAY(-1,15ns,27ns),
+         ENAB3 & TRN_ZL, DELAY(-1,18ns,27ns),
+         ENAB3 & TRN_$Z, DELAY(-1,16ns,25ns),
+         ENAB12 & TRN_ZH, DELAY(-1,14ns,25ns),
+         ENAB12 & TRN_ZL, DELAY(-1,17ns,25ns),
+         ENAB12 & TRN_$Z, DELAY(-1,16ns,24ns),
+         DELAY(-1,41ns,61ns))}
+
+     W = {
+       CASE(
+         SGATE & TRN_LH, DELAY(-1,32ns,48ns),
+         SGATE & TRN_HL, DELAY(-1,36ns,54ns),
+         SELECT & TRN_LH, DELAY(-1,36ns,54ns),
+         SELECT & TRN_HL, DELAY(-1,30ns,45ns),
+         CLOCK & TRN_LH, DELAY(-1,24ns,36ns),
+         CLOCK & TRN_HL, DELAY(-1,18ns,27ns),
+         ENAB3 & TRN_ZH, DELAY(-1,14ns,25ns),
+         ENAB3 & TRN_ZL, DELAY(-1,16ns,25ns),
+         ENAB3 & TRN_$Z, DELAY(-1,16ns,25ns),
+         ENAB12 & TRN_ZH, DELAY(-1,14ns,23ns),
+         ENAB12 & TRN_ZL, DELAY(-1,16ns,23ns),
+         ENAB12 & TRN_$Z, DELAY(-1,16ns,23ns),
+         DELAY(-1,37ns,55ns))}

U5CON CONSTRAINT(9) DPWR DGND
+     CLK D0 D1 D2 D3 D4 D5 D6 D7
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=D0 D1 D2 D3 D4 D5 D6 D7
+     SETUPTIME=15ns

.ENDS 74LS356
*
*
* ----------------------------------------------------------- 74LS357 ------
*  8-Line To 1-Line Data Selectors/Multiplexers/Registers With Open Collector Outputs
*
*  The TTL Logic Data Book, Vol. 2, 1985, TI Pages 3-1001 to 3-1009
*  bss    4/12/94
*
.SUBCKT 74LS357 G1BAR G2BAR G3 SCBAR S0 S1 S2 CLK D0 D1 D2 D3 D4 D5 D6 D7
+     Y W
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(3) DPWR DGND
+     $D_HI $D_HI SC
+     S0 S1 S2
+     S0L S1L S2L $D_NC $D_NC $D_NC
+     D0_GFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     D0 D1 D2 D3 D4 D5 D6 D7
+     D0L D1L D2L D3L D4L D5L D6L D7L 
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(15,3) DPWR DGND
+     G1BAR G2BAR G3 SCBAR S0L S1L S2L D0L D1L D2L D3L D4L D5L D6L D7L
+     Y_O W_O SC
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     g3bar = {~G3}
+     enab = {(G1BAR | G2BAR | g3bar)}
+     SC = {~SCBAR}
+     s0lbar = {~S0L}
+     s1lbar = {~S1L}
+     s2lbar = {~S2L}
+     ds0 = {(s0lbar & s1lbar & s2lbar & D0L)}
+     ds1 = {(S0L & s1lbar & s2lbar & D1L)}
+     ds2 = {(s0lbar & S1L & s2lbar & D2L)}
+     ds3 = {(S0L & S1L & s2lbar & D3L)}
+     ds4 = {(s0lbar & s1lbar & S2L & D4L)}
+     ds5 = {(S0L & s1lbar & S2L & D5L)}
+     ds6 = {(s0lbar & S1L & S2L & D6L)}
+     ds7 = {(S0L & S1L & S2L & D7L)}
+     YIN = {(ds0 | ds1 | ds2 | ds3 | ds4 | ds5 | ds6 | ds7)}
+     WIN = {~YIN}
+     Y_O = {YIN | enab}
+     W_O = {WIN | enab}

U4DLY PINDLY(2,0,16) DPWR DGND
+     Y_O W_O
+     D0 D1 D2 D3 D4 D5 D6 D7 CLK S0 S1 S2 SCBAR G1BAR G2BAR G3
+     Y W
+     IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+             CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+     CLOCK = {CHANGED_LH(CLK,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+     SGATE = {CHANGED_HL(SCBAR,0)}
+     ENAB12 = {CHANGED(G1BAR,0) | CHANGED(G2BAR,0)}
+     ENAB3 = {CHANGED(G3,0)}
+
+  PINDLY:
+     Y = {
+       CASE(
+         SGATE & TRN_LH, DELAY(-1,44ns,66ns),
+         SGATE & TRN_HL, DELAY(-1,41ns,62ns),
+         SELECT & TRN_LH, DELAY(-1,38ns,57ns),
+         SELECT & TRN_HL, DELAY(-1,40ns,60ns),
+         CLOCK & TRN_LH, DELAY(-1,27ns,41ns),
+         CLOCK & TRN_HL, DELAY(-1,34ns,51ns),
+         ENAB3, DELAY(-1,24ns,36ns),
+         ENAB12, DELAY(-1,18ns,27ns),
+         DELAY(-1,45ns,67ns))}
+
+     W = {
+       CASE(
+         SGATE, DELAY(-1,41ns,62ns),
+         SELECT & TRN_LH, DELAY(-1,38ns,57ns),
+         SELECT & TRN_HL, DELAY(-1,35ns,53ns),
+         CLOCK & TRN_LH, DELAY(-1,32ns,48ns),
+         CLOCK & TRN_HL, DELAY(-1,23ns,35ns),
+         ENAB12 & TRN_LH, DELAY(-1,20ns,30ns),
+         ENAB12 & TRN_HL, DELAY(-1,21ns,32ns),
+         ENAB3 & TRN_LH, DELAY(-1,19ns,31ns),
+         ENAB3 & TRN_HL, DELAY(-1,19ns,29ns),
+         DELAY(-1,42ns,63ns))}

U5CON CONSTRAINT(9) DPWR DGND
+     CLK D0 D1 D2 D3 D4 D5 D6 D7
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=D0 D1 D2 D3 D4 D5 D6 D7
+     SETUPTIME=15ns

.ENDS 74LS357
*
*
* ----------------------------------------------------------- 74365A ------
*  Hex Bus Drivers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-873 to 2-881
*  bss    4/12/94
*
.SUBCKT 74365A G1BAR G2BAR A1 A2 A3 A4 A5 A6 Y1 Y2 Y3 Y4 Y5 Y6
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR ENAB
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3a(6) DPWR DGND
+     A1 A2 A3 A4 A5 A6
+     ENAB
+     Y1 Y2 Y3 Y4 Y5 Y6
+     DLY_365 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_365 utgate (tplhMX=16ns tphlMX=22ns tpzhMX=35ns tpzlMX=37ns
+                        tphzMX=11ns tplzMX=27ns)

.ENDS 74365A

*-------------------------------------------------------------74F365-------

* Hex Buffer/Driver with Tri State Outputs
* National Advanced Bipoloar Databook, 1995, pages 7-260 to 7-263
* jat 7/10/96

.SUBCKT 74F365 OE1BAR OE2BAR I0 I1 I2 I3 I4 I5 O0 O1 O2 O3 O4 O5
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(2,1) DPWR DGND
+ OE1BAR OE2BAR
+ ENAB
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(OE1BAR | OE2BAR)}

U2 PINDLY(6,1,0) DPWR DGND
+ I0 I1 I2 I3 I4 I5
+ ENAB
+ O0 O1 O2 O3 O4 O5
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = ENAB
+      O0 O1 O2 O3 O4 O5 = {
+        CASE(
+          TRN_ZH, DELAY(2.5NS,5.1NS,9.5NS),
+          TRN_ZL, DELAY(2.5NS,5.7NS,9NS),
+          TRN_HZ, DELAY(2NS,3.6NS,6.5NS),
+          TRN_LZ, DELAY(2NS,4.4NS,6.5NS),
+          TRN_LH, DELAY(2.5NS,4.6NS,6.5NS),
+          TRN_HL, DELAY(2.5NS,4.9NS,7NS),
+          DELAY(3.5NS,6.7NS,10.5NS))}

.ENDS 74F365

* ----------------------------------------------------------- 74HC365 ------
*  Hex Bus Drivers With 3-State Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-401 to 2-405
*  bss    4/12/94
*
.SUBCKT 74HC365 G1BAR G2BAR A1 A2 A3 A4 A5 A6 Y1 Y2 Y3 Y4 Y5 Y6
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR ENAB
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3a(6) DPWR DGND
+     A1 A2 A3 A4 A5 A6
+     ENAB
+     Y1 Y2 Y3 Y4 Y5 Y6
+     DLY_HC365 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC365 utgate (tplhTY=12ns tplhMX=19ns tphlTY=12ns tphlMX=19ns
+                        tpzhTY=26ns tpzhMX=38ns tpzlTY=26ns tpzlMX=38ns
+                        tphzTY=21ns tphzMX=35ns tplzTY=21ns tplzMX=35ns)

.ENDS 74HC365

*-------------------------------------------------------------74HCT365-------

* Hex Buffer/Line Driver; Tri-State
* Philips High-Speed CMOS Logic Family Data Handbook, 1994, pages 603 to 606
* jat 9/11/96

.SUBCKT 74HCT365 OE1BAR OE2BAR 1A 2A 3A 4A 5A 6A 1Y 2Y 3Y 4Y 5Y 6Y
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(2,1) DPWR DGND
+ OE1BAR OE2BAR
+ ENAB
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(OE1BAR | OE2BAR)}

U2 BUFA(6) DPWR DGND
+ 1A 2A 3A 4A 5A 6A 
+ 1AB 2AB 3AB 4AB 5AB 6AB
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(6,1,0) DPWR DGND
+ 1AB 2AB 3AB 4AB 5AB 6AB
+ ENAB
+ 1Y 2Y 3Y 4Y 5Y 6Y
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = ENAB
+      1Y 2Y 3Y 4Y 5Y 6Y = {
+        CASE(
+          TRN_Z$, DELAY(-1,18NS,35NS),
+          TRN_$Z, DELAY(-1,23NS,35NS),
+          (TRN_LH | TRN_HL), DELAY(-1,14NS,25NS),
+          DELAY(-1,24NS,36NS))}

.ENDS 74HCT365

* ----------------------------------------------------------- 74LS365A ------
*  Hex Bus Drivers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-873 to 2-881
*  bss    4/12/94
*
.SUBCKT 74LS365A G1BAR G2BAR A1 A2 A3 A4 A5 A6 Y1 Y2 Y3 Y4 Y5 Y6
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR ENAB
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3a(6) DPWR DGND
+     A1 A2 A3 A4 A5 A6
+     ENAB
+     Y1 Y2 Y3 Y4 Y5 Y6
+     DLY_LS365 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LS365 utgate (tplhTY=10ns tplhMX=16ns tphlTY=9ns tphlMX=22ns
+                        tpzhTY=19ns tpzhMX=35ns tpzlTY=24ns tpzlMX=40ns
+                        tphzMX=30ns tplzMX=35ns)

.ENDS 74LS365A
*
*
* ----------------------------------------------------------- 74366A ------
*  Hex Bus Drivers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-873 to 2-881
*  bss    4/12/94
*
.SUBCKT 74366A G1BAR G2BAR A1 A2 A3 A4 A5 A6 Y1 Y2 Y3 Y4 Y5 Y6
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR ENAB
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv3a(6) DPWR DGND
+     A1 A2 A3 A4 A5 A6
+     ENAB
+     Y1 Y2 Y3 Y4 Y5 Y6
+     DLY_366 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_366 utgate (tplhMX=17ns tphlMX=16ns tpzhMX=35ns tpzlMX=37ns
+                        tphzMX=11ns tplzMX=27ns)

.ENDS 74366A

*-------------------------------------------------------------74F366-------

* Hex Inverter Buffer/Driver with Tri State Outputs
* National Advanced Bipoloar Databook, 1995, pages 7-264 to 7-267
* jat 7/10/96

.SUBCKT 74F366 OE1BAR OE2BAR I0 I1 I2 I3 I4 I5 O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(8,7) DPWR DGND
+ OE1BAR OE2BAR I0 I1 I2 I3 I4 I5
+ ENAB O0BARO O1BARO O2BARO O3BARO O4BARO O5BARO
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(OE1BAR | OE2BAR)}
+   O0BARO = {~I0}
+   O1BARO = {~I1}
+   O2BARO = {~I2}
+   O3BARO = {~I3}
+   O4BARO = {~I4}
+   O5BARO = {~I5}

U2 PINDLY(6,1,0) DPWR DGND
+ O0BARO O1BARO O2BARO O3BARO O4BARO O5BARO
+ ENAB
+ O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = ENAB
+      O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR = {
+        CASE(
+          TRN_ZH, DELAY(2.5NS,4.2NS,9.5NS),
+          TRN_ZL, DELAY(2.5NS,4.2NS,9NS),
+          TRN_HZ, DELAY(2NS,3.3NS,6.5NS),
+          TRN_LZ, DELAY(2NS,4.1NS,6.5NS),
+          TRN_LH, DELAY(2.5NS,4NS,6.5NS),
+          TRN_HL, DELAY(1NS,1.8NS,5NS),
+          DELAY(3.5NS,5.2NS,10.5NS))}

.ENDS 74F366

* ----------------------------------------------------------- 74HC366 ------
*  Hex Bus Drivers With 3-State Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-401 to 2-405
*  bss    4/12/94
*
.SUBCKT 74HC366 G1BAR G2BAR A1 A2 A3 A4 A5 A6 Y1 Y2 Y3 Y4 Y5 Y6
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR ENAB
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv3a(6) DPWR DGND
+     A1 A2 A3 A4 A5 A6
+     ENAB
+     Y1 Y2 Y3 Y4 Y5 Y6
+     DLY_HC366 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC366 utgate (tplhTY=12ns tplhMX=19ns tphlTY=12ns tphlMX=19ns
+                        tpzhTY=26ns tpzhMX=38ns tpzlTY=26ns tpzlMX=38ns
+                        tphzTY=21ns tphzMX=35ns tplzTY=21ns tplzMX=35ns)

.ENDS 74HC366

*-------------------------------------------------------------74HCT366-------

* Hex Buffer/Line Driver; Tri-State; Inverting
* Philips High-Speed CMOS Logic Family Data Handbook, 1994, pages 607 to 610
* jat 9/11/96

.SUBCKT 74HCT366 OE1BAR OE2BAR 1A 2A 3A 4A 5A 6A 1YBAR 2YBAR 3YBAR 4YBAR 5YBAR 6YBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(2,1) DPWR DGND
+ OE1BAR OE2BAR
+ ENAB
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(OE1BAR | OE2BAR)}

U2 INVA(6) DPWR DGND
+ 1A 2A 3A 4A 5A 6A 
+ 1YBARO 2YBARO 3YBARO 4YBARO 5YBARO 6YBARO
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(6,1,0) DPWR DGND
+ 1YBARO 2YBARO 3YBARO 4YBARO 5YBARO 6YBARO
+ ENAB
+ 1YBAR 2YBAR 3YBAR 4YBAR 5YBAR 6YBAR
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = ENAB
+      1YBAR 2YBAR 3YBAR 4YBAR 5YBAR 6YBAR = {
+        CASE(
+          TRN_Z$, DELAY(-1,16NS,35NS),
+          TRN_$Z, DELAY(-1,20NS,35NS),
+          (TRN_LH | TRN_HL), DELAY(-1,13NS,24NS),
+          DELAY(-1,21NS,36NS))}

.ENDS 74HCT366

* ----------------------------------------------------------- 74LS366A ------
*  Hex Bus Drivers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-873 to 2-881
*  bss    4/12/94
*
.SUBCKT 74LS366A G1BAR G2BAR A1 A2 A3 A4 A5 A6 Y1 Y2 Y3 Y4 Y5 Y6
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR ENAB
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv3a(6) DPWR DGND
+     A1 A2 A3 A4 A5 A6
+     ENAB
+     Y1 Y2 Y3 Y4 Y5 Y6
+     DLY_LS366 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LS366 utgate (tplhTY=7ns tplhMX=15ns tphlTY=12ns tphlMX=18ns
+                        tpzhTY=18ns tpzhMX=35ns tpzlTY=28ns tpzlMX=45ns
+                        tphzMX=32ns tplzMX=35ns)

.ENDS 74LS366A
*
*
* ----------------------------------------------------------- 74367A ------
*  Hex Bus Drivers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-873 to 2-881
*  bss    4/12/94
*
.SUBCKT 74367A 1GBAR 2GBAR 1A1 1A2 1A3 1A4 2A1 2A2 1Y1 1Y2 1Y3 1Y4 2Y1 2Y2
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(2) DPWR DGND
+     1GBAR 2GBAR 1G 2G
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3a(4) DPWR DGND
+     1A1 1A2 1A3 1A4
+     1G
+     1Y1 1Y2 1Y3 1Y4
+     DLY_367 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(2) DPWR DGND
+     2A1 2A2
+     2G
+     2Y1 2Y2
+     DLY_367 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_367 utgate (tplhMX=16ns tphlMX=22ns tpzhMX=35ns tpzlMX=37ns
+                        tphzMX=11ns tplzMX=27ns)

.ENDS 74367A

*-------------------------------------------------------------74ACT367-------

* Hex Buffer with Tri State Outputs
* National FACT Advanced CMOS Logic Databook, 1993, pages 4-197 to 4-199
* jat 8/29/96

.SUBCKT 74ACT367 OE1BAR OE2BAR I0 I1 I2 I3 I4 I5 O0 O1 O2 O3 O4 O5
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 PINDLY(6,2,0) DPWR DGND
+ I0 I1 I2 I3 I4 I5
+ OE1BAR OE2BAR
+ O0 O1 O2 O3 O4 O5
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE LO = OE1BAR
+      O0 O1 O2 O5= {
+        CASE(
+          TRN_ZH, DELAY(1NS,8NS,10.5NS),
+          TRN_ZL, DELAY(1NS,9.5NS,12NS),
+          TRN_HZ, DELAY(1NS,9.5NS,12NS),
+          TRN_LZ, DELAY(1NS,8NS,10.5NS),
+          TRN_LH, DELAY(1NS,6.5NS,9NS),
+          TRN_HL, DELAY(1NS,6.5NS,9NS),
+          DELAY(2NS,10.5NS,13NS))}
+ TRISTATE:
+   ENABLE LO = OE2BAR
+      O3 O4 = {
+        CASE(
+          TRN_ZH, DELAY(1NS,8NS,10.5NS),
+          TRN_ZL, DELAY(1NS,9.5NS,12NS),
+          TRN_HZ, DELAY(1NS,9.5NS,12NS),
+          TRN_LZ, DELAY(1NS,8NS,10.5NS),
+          TRN_LH, DELAY(1NS,6.5NS,9NS),
+          TRN_HL, DELAY(1NS,6.5NS,9NS),
+          DELAY(2NS,10.5NS,13NS))}

.ENDS 74ACT367

*-------------------------------------------------------------74F367-------

* Hex Buffer/Driver 4 Bit Plus 2 Bit with Tri State Outputs
* Motorola FAST and LS TTL Data, 1992, pages 4-169 to 4-170
* jat 7/10/96

.SUBCKT 74F367 OE1BAR OE2BAR I0 I1 I2 I3 I4 I5 O0 O1 O2 O3 O4 O5
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 PINDLY(6,2,0) DPWR DGND
+ I0 I1 I2 I3 I4 I5
+ OE1BAR OE2BAR
+ O0 O1 O2 O3 O4 O5
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE LO = OE1BAR
+      O0 O1 O2 O3 = {
+        CASE(
+          TRN_ZH, DELAY(2.5NS,5.5NS,7.5NS),
+          TRN_ZL, DELAY(3NS,6.5NS,8.5NS),
+          TRN_HZ, DELAY(2.5NS,4.5NS,6.5NS),
+          TRN_LZ, DELAY(1.5NS,4NS,6NS),
+          TRN_LH, DELAY(2NS,4.5NS,6.5NS),
+          TRN_HL, DELAY(3NS,5.5NS,7NS),
+          DELAY(4NS,7.5NS,9.5NS))}
+ TRISTATE:
+   ENABLE LO = OE2BAR
+      O4 O5 = {
+        CASE(
+          TRN_ZH, DELAY(2.5NS,5.5NS,7.5NS),
+          TRN_ZL, DELAY(3NS,6.5NS,8.5NS),
+          TRN_HZ, DELAY(2.5NS,4.5NS,6.5NS),
+          TRN_LZ, DELAY(1.5NS,4NS,6NS),
+          TRN_LH, DELAY(2NS,4.5NS,6.5NS),
+          TRN_HL, DELAY(3NS,5.5NS,7NS),
+          DELAY(4NS,7.5NS,9.5NS))}

.ENDS 74F367

* ----------------------------------------------------------- 74HC367 ------
*  Hex Bus Drivers With 3-State Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-401 to 2-405
*  bss    4/12/94
*
.SUBCKT 74HC367 1GBAR 2GBAR 1A1 1A2 1A3 1A4 2A1 2A2 1Y1 1Y2 1Y3 1Y4 2Y1 2Y2
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(2) DPWR DGND
+     1GBAR 2GBAR 1G 2G
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3a(4) DPWR DGND
+     1A1 1A2 1A3 1A4
+     1G
+     1Y1 1Y2 1Y3 1Y4
+     DLY_HC367 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(2) DPWR DGND
+     2A1 2A2
+     2G
+     2Y1 2Y2
+     DLY_HC367 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC367 utgate (tplhTY=12ns tplhMX=19ns tphlTY=12ns tphlMX=19ns
+                        tpzhTY=26ns tpzhMX=38ns tpzlTY=26ns tpzlMX=38ns
+                        tphzTY=21ns tphzMX=35ns tplzTY=21ns tplzMX=35ns)

.ENDS 74HC367

*-------------------------------------------------------------74HCT367-------

* Hex Buffer/Line Driver; Tri-State
* Philips High-Speed CMOS Logic Family Data Handbook, 1994, pages 611 to 614
* jat 9/11/96

.SUBCKT 74HCT367 1OEBAR 2OEBAR 1A 2A 3A 4A 5A 6A 1Y 2Y 3Y 4Y 5Y 6Y
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 BUFA(6) DPWR DGND
+ 1A 2A 3A 4A 5A 6A 
+ 1AB 2AB 3AB 4AB 5AB 6AB
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(6,2,0) DPWR DGND
+ 1AB 2AB 3AB 4AB 5AB 6AB
+ 1OEBAR 2OEBAR
+ 1Y 2Y 3Y 4Y 5Y 6Y
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE LO = 1OEBAR
+      1Y 2Y 3Y 4Y = {
+        CASE(
+          TRN_Z$, DELAY(-1,16NS,35NS),
+          TRN_$Z, DELAY(-1,13NS,35NS),
+          (TRN_LH | TRN_HL), DELAY(-1,14NS,25NS),
+          DELAY(-1,17NS,36NS))}
+ TRISTATE:
+   ENABLE LO = 2OEBAR
+      5Y 6Y = {
+        CASE(
+          TRN_Z$, DELAY(-1,16NS,35NS),
+          TRN_$Z, DELAY(-1,13NS,35NS),
+          (TRN_LH | TRN_HL), DELAY(-1,14NS,25NS),
+          DELAY(-1,17NS,36NS))}

.ENDS 74HCT367

* ----------------------------------------------------------- 74LS367A ------
*  Hex Bus Drivers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-873 to 2-881
*  bss    4/12/94
*
.SUBCKT 74LS367A 1GBAR 2GBAR 1A1 1A2 1A3 1A4 2A1 2A2 1Y1 1Y2 1Y3 1Y4 2Y1 2Y2
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(2) DPWR DGND
+     1GBAR 2GBAR 1G 2G
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3a(4) DPWR DGND
+     1A1 1A2 1A3 1A4
+     1G
+     1Y1 1Y2 1Y3 1Y4
+     DLY_LS367 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(2) DPWR DGND
+     2A1 2A2
+     2G
+     2Y1 2Y2
+     DLY_LS367 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LS367 utgate (tplhTY=10ns tplhMX=16ns tphlTY=9ns tphlMX=22ns
+                        tpzhTY=19ns tpzhMX=35ns tpzlTY=24ns tpzlMX=40ns
+                        tphzMX=30ns tplzMX=35ns)

.ENDS 74LS367A
*
*
* ----------------------------------------------------------- 74368A ------
*  Hex Bus Drivers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-873 to 2-881
*  bss    4/12/94
*
.SUBCKT 74368A 1GBAR 2GBAR 1A1 1A2 1A3 1A4 2A1 2A2 1Y1 1Y2 1Y3 1Y4 2Y1 2Y2
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(2) DPWR DGND
+     1GBAR 2GBAR 1G 2G
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv3a(4) DPWR DGND
+     1A1 1A2 1A3 1A4
+     1G
+     1Y1 1Y2 1Y3 1Y4
+     DLY_368 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(2) DPWR DGND
+     2A1 2A2
+     2G
+     2Y1 2Y2
+     DLY_368 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_368 utgate (tplhMX=17ns tphlMX=16ns tpzhMX=35ns tpzlMX=37ns
+                        tphzMX=11ns tplzMX=27ns)

.ENDS 74368A

*-------------------------------------------------------------74ACT368----

* Hex Inverter Buffer with Tri State Outputs
* National FACT Advanced CMOS Logic Databook, 1993, pages 4-200 to 4-202
* jat 8/29/96

.SUBCKT 74ACT368 OE1BAR OE2BAR I0 I1 I2 I3 I4 I5 O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(6,6) DPWR DGND
+ I0 I1 I2 I3 I4 I5
+ O0BARO O1BARO O2BARO O3BARO O4BARO O5BARO
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   O0BARO = {~I0}
+   O1BARO = {~I1}
+   O2BARO = {~I2}
+   O3BARO = {~I3}
+   O4BARO = {~I4}
+   O5BARO = {~I5}

U2 PINDLY(6,2,0) DPWR DGND
+ O0BARO O1BARO O2BARO O3BARO O4BARO O5BARO
+ OE1BAR OE2BAR
+ O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE LO = OE1BAR
+      O0BAR O1BAR O2BAR O5BAR= {
+        CASE(
+          TRN_ZH, DELAY(1NS,8NS,10NS),
+          TRN_ZL, DELAY(1NS,8NS,12NS),
+          TRN_HZ, DELAY(1NS,9NS,12NS),
+          TRN_LZ, DELAY(1NS,8.5NS,11NS),
+          TRN_LH, DELAY(1NS,6.5NS,9NS),
+          TRN_HL, DELAY(1NS,6NS,9NS),
+          DELAY(2NS,9.5NS,13NS))}
+ TRISTATE:
+   ENABLE LO = OE2BAR
+      O3BAR O4BAR = {
+        CASE(
+          TRN_ZH, DELAY(1NS,8NS,10NS),
+          TRN_ZL, DELAY(1NS,8NS,12NS),
+          TRN_HZ, DELAY(1NS,9NS,12NS),
+          TRN_LZ, DELAY(1NS,8.5NS,11NS),
+          TRN_LH, DELAY(1NS,6.5NS,9NS),
+          TRN_HL, DELAY(1NS,6NS,9NS),
+          DELAY(2NS,9.5NS,13NS))}

.ENDS 74ACT368

*-------------------------------------------------------------74F368-------

* Hex Inverter Buffer/Driver with Tri State Outputs
* National Advanced Bipoloar Databook, 1995, pages 7-264 to 7-267
* jat 7/10/96

.SUBCKT 74F368 OE1BAR OE2BAR I0 I1 I2 I3 I4 I5 O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(6,6) DPWR DGND
+ I0 I1 I2 I3 I4 I5
+ O0BARO O1BARO O2BARO O3BARO O4BARO O5BARO
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   O0BARO = {~I0}
+   O1BARO = {~I1}
+   O2BARO = {~I2}
+   O3BARO = {~I3}
+   O4BARO = {~I4}
+   O5BARO = {~I5}

U2 PINDLY(6,2,0) DPWR DGND
+ O0BARO O1BARO O2BARO O3BARO O4BARO O5BARO
+ OE1BAR OE2BAR
+ O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE LO = OE1BAR
+      O0BAR O1BAR O2BAR O3BAR = {
+        CASE(
+          TRN_ZH, DELAY(2.5NS,4.2NS,7.5NS),
+          TRN_ZL, DELAY(3NS,5.6NS,8.5NS),
+          TRN_HZ, DELAY(2NS,3.3NS,6.5NS),
+          TRN_LZ, DELAY(2NS,4.1NS,6.5NS),
+          TRN_LH, DELAY(2.5NS,4NS,6.5NS),
+          TRN_HL, DELAY(1NS,1.8NS,5NS),
+          DELAY(4NS,6.6NS,10.5NS))}
+ TRISTATE:
+   ENABLE LO = OE2BAR
+      O4BAR O5BAR = {
+        CASE(
+          TRN_ZH, DELAY(2.5NS,4.2NS,7.5NS),
+          TRN_ZL, DELAY(3NS,5.6NS,8.5NS),
+          TRN_HZ, DELAY(2NS,3.3NS,6.5NS),
+          TRN_LZ, DELAY(2NS,4.1NS,6.5NS),
+          TRN_LH, DELAY(2.5NS,4NS,6.5NS),
+          TRN_HL, DELAY(1NS,1.8NS,5NS),
+          DELAY(4NS,6.6NS,10.5NS))}

.ENDS 74F368

* ----------------------------------------------------------- 74HC368 ------
*  Hex Bus Drivers With 3-State Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-401 to 2-405
*  bss    4/12/94
*
.SUBCKT 74HC368 1GBAR 2GBAR 1A1 1A2 1A3 1A4 2A1 2A2 1Y1 1Y2 1Y3 1Y4 2Y1 2Y2
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(2) DPWR DGND
+     1GBAR 2GBAR 1G 2G
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv3a(4) DPWR DGND
+     1A1 1A2 1A3 1A4
+     1G
+     1Y1 1Y2 1Y3 1Y4
+     DLY_HC368 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(2) DPWR DGND
+     2A1 2A2
+     2G
+     2Y1 2Y2
+     DLY_HC368 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC368 utgate (tplhTY=12ns tplhMX=19ns tphlTY=12ns tphlMX=19ns
+                        tpzhTY=26ns tpzhMX=38ns tpzlTY=26ns tpzlMX=38ns
+                        tphzTY=21ns tphzMX=35ns tplzTY=21ns tplzMX=35ns)

.ENDS 74HC368

*-------------------------------------------------------------74HCT368-------

* Hex Buffer/Line Driver; Tri-State; Inverting
* Philips High-Speed CMOS Logic Family Data Handbook, 1994, pages 615 to 618
* jat 9/11/96

.SUBCKT 74HCT368 1OEBAR 2OEBAR 1A 2A 3A 4A 5A 6A 1YBAR 2YBAR 3YBAR 4YBAR 5YBAR 6YBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 INVA(6) DPWR DGND
+ 1A 2A 3A 4A 5A 6A 
+ 1YBARO 2YBARO 3YBARO 4YBARO 5YBARO 6YBARO
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(6,2,0) DPWR DGND
+ 1YBARO 2YBARO 3YBARO 4YBARO 5YBARO 6YBARO
+ 1OEBAR 2OEBAR
+ 1YBAR 2YBAR 3YBAR 4YBAR 5YBAR 6YBAR
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE LO = 1OEBAR
+      1YBAR 2YBAR 3YBAR 4YBAR = {
+        CASE(
+          TRN_Z$, DELAY(-1,17NS,35NS),
+          TRN_$Z, DELAY(-1,20NS,35NS),
+          (TRN_LH | TRN_HL), DELAY(-1,13NS,24NS),
+          DELAY(-1,21NS,36NS))}
+ TRISTATE:
+   ENABLE LO = 2OEBAR
+      5YBAR 6YBAR = {
+        CASE(
+          TRN_Z$, DELAY(-1,17NS,35NS),
+          TRN_$Z, DELAY(-1,20NS,35NS),
+          (TRN_LH | TRN_HL), DELAY(-1,13NS,24NS),
+          DELAY(-1,21NS,36NS))}

.ENDS 74HCT368

* ----------------------------------------------------------- 74LS368A ------
*  Hex Bus Drivers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-873 to 2-881
*  bss    4/12/94
*
.SUBCKT 74LS368A 1GBAR 2GBAR 1A1 1A2 1A3 1A4 2A1 2A2 1Y1 1Y2 1Y3 1Y4 2Y1 2Y2
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(2) DPWR DGND
+     1GBAR 2GBAR 1G 2G
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv3a(4) DPWR DGND
+     1A1 1A2 1A3 1A4
+     1G
+     1Y1 1Y2 1Y3 1Y4
+     DLY_LS368 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(2) DPWR DGND
+     2A1 2A2
+     2G
+     2Y1 2Y2
+     DLY_LS368 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LS368 utgate (tplhTY=7ns tplhMX=15ns tphlTY=12ns tphlMX=18ns
+                        tpzhTY=18ns tpzhMX=35ns tpzlTY=28ns tpzlMX=45ns
+                        tphzMX=32ns tplzMX=35ns)

.ENDS 74LS368A
*
*
* ----------------------------------------------------------- 74AC373 ------
*  Octal Transparent Latch With Tri-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-188 to 4-193
*  bss    4/13/94
*
.SUBCKT 74AC373 OEBAR LE D0 D1 D2 D3 D4 D5 D6 D7 O0 O1 O2 O3 O4 O5 O6 O7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     $D_HI $D_HI LE
+     D0 D1 D2 D3 D4 D5 D6 D7
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     O0B O1B O2B O3B O4B O5B O6B O7B
+     DLY1_AC373 IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     OEBAR OE
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(8) DPWR DGND
+     O0B O1B O2B O3B O4B O5B O6B O7B
+     OE
+     O0 O1 O2 O3 O4 O5 O6 O7
+     DLY2_AC373 IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_AC373 ugff( tpgqlhMN=1.5ns tpgqlhTY=7ns tpgqlhMX=9.5ns
+                                  tpgqhlMN=1.5ns tpgqhlTY=7.5ns tpgqhlMX=9.5ns
+                                  tpdqlhMN=1.5ns tpdqlhTY=7ns tpdqlhMX=9.5ns
+                                  tpdqhlMN=1.5ns tpdqhlTY=7ns tpdqhlMX=9.5ns
+                                  twghMN=4.5ns tsudgMN=4.5ns thdgMN=1ns)

.model DLY2_AC373 utgate (tplzMN=1.5ns tplzTY=6.5ns tplzMX=8.5ns
+                                  tphzMN=1.5ns tphzTY=8ns tphzMX=11ns
+                                  tpzlMN=1.5ns tpzlTY=6.5ns tpzlMX=8.5ns
+                                  tpzhMN=1.5ns tpzhTY=7ns tpzhMX=8.5ns)

.ENDS 74AC373
*
*
* ----------------------------------------------------------- 74ACT373 ------
*  Octal Transparent Latch With Tri-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-188 to 4-193
*  bss    4/13/94
*
.SUBCKT 74ACT373 OEBAR LE D0 D1 D2 D3 D4 D5 D6 D7 O0 O1 O2 O3 O4 O5 O6 O7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     $D_HI $D_HI LE
+     D0 D1 D2 D3 D4 D5 D6 D7
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     O0B O1B O2B O3B O4B O5B O6B O7B
+     DLY1_ACT373 IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     OEBAR OE
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(8) DPWR DGND
+     O0B O1B O2B O3B O4B O5B O6B O7B
+     OE
+     O0 O1 O2 O3 O4 O5 O6 O7
+     DLY2_ACT373 IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_ACT373 ugff( tpgqhlMN=2.5ns tpgqhlTY=8.5ns tpgqhlMX=11ns
+                                  tpgqlhMN=2ns tpgqlhTY=8ns tpgqlhMX=10ns
+                                  tpdqhlMN=2.5ns tpdqhlTY=8.5ns tpdqhlMX=10ns
+                                  tpdqlhMN=2ns tpdqlhTY=8ns tpdqlhMX=10ns
+                                  twghMN=8ns tsudgMN=8ns thdgMN=1ns)

.model DLY2_ACT373 utgate (tplzMN=1.5ns tplzTY=7.5ns tplzMX=8.5ns
+                                  tphzMN=2.5ns tphzTY=9ns tphzMX=11ns
+                                  tpzlMN=2ns tpzlTY=7.5ns tpzlMX=9ns
+                                  tpzhMN=2ns tpzhTY=8ns tpzhMX=9.5ns)

.ENDS 74ACT373
*
*
* ----------------------------------------------------------- 74ALS373 ------
*  Octal D-Type Transparent Latch With Tri-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-361 to 2-366
*  bss    4/13/94
*
.SUBCKT 74ALS373 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     DLY1_ALS373 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(8) DPWR DGND
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     DLY2_ALS373 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_ALS373 ugff( tpgqhlMN=6ns tpgqhlMX=22ns tpgqlhMN=7ns 
+                                  tpgqlhMX=23ns tpdqhlMN=2ns tpdqhlMX=12ns                                
+                                  tpdqlhMN=4ns tpdqlhMX=16ns
+                                  twghMN=10ns tsudgMN=10ns thdgMN=7ns)

.model DLY2_ALS373 utgate (tplzMN=2ns tplzMX=12ns tphzMN=2ns tphzMX=10ns                                 
+                                  tpzlMN=5ns tpzlMX=20ns tpzhMN=6ns tpzhMX=18ns)
                                 
.ENDS 74ALS373
*
*
* ----------------------------------------------------------- 74AS373 ------
*  Octal D-Type Transparent Latch With Tri-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-361 to 2-366
*  bss    4/13/94
*
.SUBCKT 74AS373 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     DLY1_AS373 IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(8) DPWR DGND
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     DLY2_AS373 IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_AS373 ugff( tpgqhlMN=6.5ns tpgqhlMX=11.5ns tpgqlhMN=5ns 
+                                  tpgqlhMX=7.5ns tpdqhlMN=3.5ns tpdqhlMX=6ns                                
+                                  tpdqlhMN=3.5ns tpdqlhMX=6ns
+                                  twghMN=4.5ns tsudgMN=2ns thdgMN=3ns)

.model DLY2_AS373 utgate (tplzMN=3ns tplzMX=7ns tphzMN=3ns tphzMX=6.5ns
+                                  tpzlMN=4.5ns tpzlMX=9.5ns tpzhMN=2ns tpzhMX=6.5ns)
                                 
.ENDS 74AS373
*
*
* ----------------------------------------------------------- 74F373 ------
*  Octal D-Type Transparent Latch With Tri-State Outputs
*
*  The F Logic Data Book, 1994, TI Pages 2-361 to 2-366
*  bss    4/13/94
*
.SUBCKT 74F373 OEBAR LE 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     $D_HI $D_HI LE
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     DLY1_F373 IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     OEBAR OE
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(8) DPWR DGND
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     OE
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     DLY2_F373 IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_F373 ugff( tpgqhlMN=4.2ns tpgqhlTY=8.6ns tpgqhlMX=11.5ns
+                                  tpgqlhMN=2.2ns tpgqlhTY=4.8ns tpgqlhMX=7ns
+                                  tpdqhlMN=2.2ns tpdqhlTY=4.9ns tpdqhlMX=7ns
+                                  tpdqlhMN=1.2ns tpdqlhTY=3.3ns tpdqlhMX=5ns
+                                  twghMN=6ns tsudgMN=2ns thdgMN=3ns)

.model DLY2_F373 utgate (tplzMN=1.2ns tplzTY=3.4ns tplzMX=6ns
+                                  tphzMN=1.2ns tphzTY=4.1ns tphzMX=6.5ns
+                                  tpzlMN=1.2ns tpzlTY=5.2ns tpzlMX=7.5ns
+                                  tpzhMN=1.2ns tpzhTY=4.6ns tpzhMX=11ns)
                                 
.ENDS 74F373
*
*
* ----------------------------------------------------------- 74HC373 ------
*  Octal D-Type Transparent Latch With Tri-State Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-407 to 2-411
*  bss    4/13/94
*
.SUBCKT 74HC373 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     DLY1_HC373 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(8) DPWR DGND
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     DLY2_HC373 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_HC373 ugff(tpgqhlTY=18ns tpgqhlMX=35ns
+                                  tpgqlhTY=18ns tpgqlhMX=35ns
+                                  tpdqhlTY=15ns tpdqhlMX=30ns
+                                  tpdqlhTY=15ns tpdqlhMX=30ns
+                                  twghMN=20ns tsudgMN=13ns thdgMN=12ns)

.model DLY2_HC373 utgate (tplzTY=15ns tplzMX=30ns tphzTY=15ns tphzMX=30ns
+                                  tpzlTY=17ns tpzlMX=30ns tpzhTY=17ns tpzhMX=30ns)

.ENDS 74HC373

*-----------------------------------------------------------------74HC373A---

* Octal Tri-State Non-Inverting Transparent Latch
* Motorola High-Speed CMOS Data, 1993, pages 5-315 to 5-318
* jat 9/11/96

.SUBCKT 74HC373A
+ LATCH OUTENAB D0 D1 D2 D3 D4 D5 D6 D7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(8) DPWR DGND
+ $D_HI $D_HI LATCH
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,9) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ OUTENAB
+ LATCH D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   OPEN = {CHANGED_LH(LATCH,0)}
+   DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+           CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+ TRISTATE:
+ ENABLE LO = OUTENAB
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+      TRN_Z$, DELAY(-1,-1,30NS),
+      TRN_$Z, DELAY(-1,-1,30NS),
+      OPEN & (TRN_LH | TRN_HL), DELAY(-1,-1,28NS),
+      DATA & (TRN_LH | TRN_HL), DELAY(-1,-1,25NS),
+      DELAY(-1,-1,31NS))}

U3 CONSTRAINT(9) DPWR DGND
+ LATCH D0 D1 D2 D3 D4 D5 D6 D7
+ IO_HC IO_LEVEL={IO_LEVEL}
+ WIDTH:
+  NODE = LATCH
+  MIN_HI = 12NS
+ SETUP_HOLD:
+  CLOCK HL = LATCH
+  DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+  SETUPTIME = 5NS
+  HOLDTIME = 5NS

.ENDS 74HC373A

* ----------------------------------------------------------- 74HCT373 ------
*  Octal D-Type Transparent Latch With Tri-State Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-413 to 2-416
*  bss    4/13/94
*
.SUBCKT 74HCT373 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     DLY1_HCT373 IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(8) DPWR DGND
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     DLY2_HCT373 IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_HCT373 ugff(tpgqhlTY=28ns tpgqhlMX=35ns
+                                  tpgqlhTY=28ns tpgqlhMX=35ns
+                                  tpdqhlTY=25ns tpdqhlMX=35ns
+                                  tpdqlhTY=25ns tpdqlhMX=35ns
+                                  twghMN=25ns tsudgMN=13ns thdgMN=10ns)

.model DLY2_HCT373 utgate (tplzTY=23ns tplzMX=35ns tphzTY=23ns tphzMX=35ns
+                                  tpzlTY=26ns tpzlMX=35ns tpzhTY=26ns tpzhMX=35ns)

.ENDS 74HCT373

*-----------------------------------------------------------------74HCT373A---

* Octal Tri-State Non-Inverting Transparent Latch
* Motorola High-Speed CMOS Data, 1993, pages 5-319 to 5-322
* jat 9/11/96

.SUBCKT 74HCT373A
+ LATCH OUTENAB D0 D1 D2 D3 D4 D5 D6 D7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(8) DPWR DGND
+ $D_HI $D_HI LATCH
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,9) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ OUTENAB
+ LATCH D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   OPEN = {CHANGED_LH(LATCH,0)}
+   DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+           CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+ TRISTATE:
+ ENABLE LO = OUTENAB
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+      TRN_Z$, DELAY(-1,-1,35NS),
+      TRN_$Z, DELAY(-1,-1,30NS),
+      OPEN & (TRN_LH | TRN_HL), DELAY(-1,-1,32NS),
+      DATA & (TRN_LH | TRN_HL), DELAY(-1,-1,28NS),
+      DELAY(-1,-1,36NS))}

U3 CONSTRAINT(9) DPWR DGND
+ LATCH D0 D1 D2 D3 D4 D5 D6 D7
+ IO_HCT IO_LEVEL={IO_LEVEL}
+ WIDTH:
+  NODE = LATCH
+  MIN_HI = 12NS
+ SETUP_HOLD:
+  CLOCK HL = LATCH
+  DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+  SETUPTIME = 10NS
+  HOLDTIME = 10NS

.ENDS 74HCT373A

* ----------------------------------------------------------- 74LS373 ------
*  Octal D-Type Transparent Latch With Tri-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-883 to 2-890
*  bss    4/13/94
*
.SUBCKT 74LS373 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     DLY1_LS373 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(8) DPWR DGND
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     DLY2_LS373 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_LS373 ugff(tpgqhlTY=20ns tpgqhlMX=30ns
+                                  tpgqlhTY=18ns tpgqlhMX=30ns
+                                  tpdqhlTY=12ns tpdqhlMX=18ns
+                                  tpdqlhTY=12ns tpdqlhMX=18ns
+                                  twghMN=15ns tsudgMN=5ns thdgMN=20ns)

.model DLY2_LS373 utgate (tplzTY=12ns tplzMX=20ns tphzTY=15ns tphzMX=25ns
+                                  tpzlTY=25ns tpzlMX=36ns tpzhTY=15ns tpzhMX=28ns)

.ENDS 74LS373
*
*
* ----------------------------------------------------------- 74S373 ------
*  Octal D-Type Transparent Latch With Tri-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-883 to 2-890
*  bss    4/13/94
*
.SUBCKT 74S373 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 buf DPWR DGND
+     C GATE
+     D0_GATE IO_S_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI GATE
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     DLY1_S373 IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 inv3a(8) DPWR DGND
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     DLY2_S373 IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_S373 ugff(tpgqhlTY=7ns tpgqhlMX=14ns
+                                  tpgqlhTY=12ns tpgqlhMX=18ns
+                                  tpdqhlTY=7ns tpdqhlMX=12ns
+                                  tpdqlhTY=7ns tpdqlhMX=12ns
+                                  twghMN=6ns thdgMN=10ns)

.model DLY2_S373 utgate (tplzTY=8ns tplzMX=12ns tphzTY=6ns tphzMX=9ns
+                                  tpzlTY=11ns tpzlMX=18ns tpzhTY=8ns tpzhMX=15ns)

.ENDS 74S373
*
*
* ----------------------------------------------------------- 74AC374 ------
*  Octal D Flip Flop With Tri-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-194 to 4-199
*  bss    4/13/94
*
.SUBCKT 74AC374 OEBAR CP D0 D1 D2 D3 D4 D5 D6 D7 O0 O1 O2 O3 O4 O5 O6 O7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CP
+     D0 D1 D2 D3 D4 D5 D6 D7
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     O0B O1B O2B O3B O4B O5B O6B O7B
+     DLY1_AC374 IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     OEBAR OE
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(8) DPWR DGND
+     O0B O1B O2B O3B O4B O5B O6B O7B
+     OE
+     O0 O1 O2 O3 O4 O5 O6 O7
+     DLY2_AC374 IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_AC374 ueff( tpclkqhlMN=2.5ns tpclkqhlTY=8ns tpclkqhlMX=9.5ns
+                                  tpclkqlhMN=2ns tpclkqlhTY=7ns tpclkqlhMX=9ns
+                                  twclklMN=4.5ns twclkhMN=4.5ns tsudclkMN=4.5ns thdclkMN=1.5ns)

.model DLY2_AC374 utgate (tplzMN=1.5ns tplzTY=6.5ns tplzMX=8.5ns
+                                  tphzMN=2ns tphzTY=8ns tphzMX=11ns
+                                  tpzlMN=2ns tpzlTY=6.5ns tpzlMX=8.5ns
+                                  tpzhMN=2ns tpzhTY=7ns tpzhMX=8.5ns)

.ENDS 74AC374
*
*
* ----------------------------------------------------------- 74ACT374 ------
*  Octal D Flip Flop With Tri-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-194 to 4-199
*  bss    4/13/94
*
.SUBCKT 74ACT374 OEBAR CP D0 D1 D2 D3 D4 D5 D6 D7 O0 O1 O2 O3 O4 O5 O6 O7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CP
+     D0 D1 D2 D3 D4 D5 D6 D7
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     O0B O1B O2B O3B O4B O5B O6B O7B
+     DLY1_ACT374 IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     OEBAR OE
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(8) DPWR DGND
+     O0B O1B O2B O3B O4B O5B O6B O7B
+     OE
+     O0 O1 O2 O3 O4 O5 O6 O7
+     DLY2_ACT374 IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_ACT374 ueff( tpclkqhlMN=2ns tpclkqhlTY=8.5ns tpclkqhlMX=10ns
+                                  tpclkqlhMN=2ns tpclkqlhTY=8ns tpclkqlhMX=9.5ns
+                                  twclklMN=8ns twclkhMN=8ns tsudclkMN=8ns thdclkMN=1.5ns)

.model DLY2_ACT374 utgate (tplzMN=1.5ns tplzTY=7ns tplzMX=8.5ns
+                                  tphzMN=1.5ns tphzTY=8.5ns tphzMX=11.5ns
+                                  tpzlMN=1.5ns tpzlTY=8ns tpzlMX=9ns
+                                  tpzhMN=2ns tpzhTY=8ns tpzhMX=9.5ns)

.ENDS 74ACT374
*
*
* ----------------------------------------------------------- 74ALS374 ------
*  Octal D-Type Edge Triggered Flip Flop With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-367 to 2-372
*  bss    4/13/94
*
.SUBCKT 74ALS374 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     DLY1_ALS374 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(8) DPWR DGND
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     DLY2_ALS374 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_ALS374 ueff(tpclkqhlMN=3ns tpclkqhlMX=12ns tpclkqlhMN=5ns tpclkqlhMX=16ns                                 
+                                  twclklMN=14ns twclkhMN=14ns tsudclkMN=10ns)

.model DLY2_ALS374 utgate (tplzMN=3ns tplzMX=18ns tphzMN=2ns tphzMX=10ns                                 
+                                  tpzlMN=7ns tpzlMX=18ns tpzhMN=5ns tpzhMX=17ns)
                                 
.ENDS 74ALS374

*-----------------------------------------------------------------74ALS374A---

* Octal Tri-State D-Type Edge-Triggered Flip-Flop
* National Advanced Bipolar Logic Databook, 1995, pages 9-120 to 9-123
* jat 8/21/96

.SUBCKT 74ALS374A
+ 1D 2D 3D 4D 5D 6D 7D 8D CLOCK OUTBAR 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI $D_HI CLOCK
+ 1D 2D 3D 4D 5D 6D 7D 8D 
+ Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,0) DPWR DGND
+ Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+ OUTBAR
+ 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+ IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+ ENABLE LO = OUTBAR
+   1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q = {
+     CASE(
+      TRN_ZH, DELAY(3NS,-1,17NS),
+      TRN_ZL, DELAY(5NS,-1,18NS),
+      TRN_HZ, DELAY(1NS,-1,10NS),
+      TRN_LZ, DELAY(2NS,-1,18NS),
+      TRN_LH, DELAY(3NS,-1,12NS),
+      TRN_HL, DELAY(5NS,-1,16NS),
+      DELAY(6NS,-1,19NS))}

U3 CONSTRAINT(9) DPWR DGND
+ CLOCK 1D 2D 3D 4D 5D 6D 7D 8D
+ IO_ALS00 IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CLOCK
+  MAXFREQ = 35MEG
+ WIDTH:
+  NODE = CLOCK
+  MIN_LO = 14NS
+  MIN_HI = 14NS
+ SETUP_HOLD:
+  CLOCK LH = CLOCK
+  DATA(8) = 1D 2D 3D 4D 5D 6D 7D 8D
+  SETUPTIME = 10NS

.ENDS 74ALS374A

* ----------------------------------------------------------- 74AS374 ------
*  Octal D-Type Edge Triggered Flip Flop With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-367 to 2-372 
*  bss    4/13/94
*
.SUBCKT 74AS374 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     DLY1_AS374 IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(8) DPWR DGND
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     DLY2_AS374 IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_AS374 ueff(tpclkqhlMN=3ns tpclkqhlMX=8ns tpclkqlhMN=4ns tpclkqlhMX=9ns                                 
+                                  twclklMN=3ns twclkhMN=4ns tsudclkMN=2ns thdclkMN=2ns)

.model DLY2_AS374 utgate (tplzMN=2ns tplzMX=6ns tphzMN=2ns tphzMX=6ns                                 
+                                  tpzlMN=3ns tpzlMX=10ns tpzhMN=2ns tpzhMX=6ns)
         
.ENDS 74AS374
*
*
* ----------------------------------------------------------- 74F374 ------
*  Octal D-Type Edge Triggered Flip Flop With 3-State Outputs
*
*  The F Logic Data Book, 1994, TI Pages 2-227 to 2-230 
*  bss    4/13/94
*
.SUBCKT 74F374 OEBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     DLY1_F374 IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     OEBAR OE
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(8) DPWR DGND
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     OE
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     DLY2_F374 IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_F374 ueff( tpclkqhlMN=3.2ns tpclkqhlTY=6.1ns tpclkqhlMX=8.5ns
+                                  tpclkqlhMN=3.2ns tpclkqlhTY=6.1ns tpclkqlhMX=8.5ns
+                                  twclklMN=6ns twclkhMN=7ns tsudclkMN=2ns thdclkMN=2ns)

.model DLY2_F374 utgate (tplzMN=1.2ns tplzTY=3.9ns tplzMX=5.5ns
+                                  tphzMN=1.2ns tphzTY=4.9ns tphzMX=7ns
+                                  tpzlMN=1.2ns tpzlTY=5.4ns tpzlMX=7.5ns
+                                  tpzhMN=1.2ns tpzhTY=8.6ns tpzhMX=11.5ns)
         
.ENDS 74F374
*
*
* ----------------------------------------------------------- 74HC374 ------
*  Octal D-Type Edge Triggered Flip Flop With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-417 to 2-421 
*  bss    4/13/94
*
.SUBCKT 74HC374 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     DLY1_HC374 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(8) DPWR DGND
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     DLY2_HC374 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_HC374 ueff(tpclkqhlTY=17ns tpclkqhlMX=36ns tpclkqlhTY=17ns tpclkqlhMX=36ns                                 
+                                  twclklMN=20ns twclkhMN=20ns tsudclkMN=25ns thdclkMN=5ns)

.model DLY2_HC374 utgate (tplzTY=17ns tplzMX=30ns tphzTY=17ns tphzMX=30ns                                 
+                                  tpzlTY=16ns tpzlMX=30ns tpzhTY=16ns tpzhMX=30ns)
         
.ENDS 74HC374

*-----------------------------------------------------------------74HC374A---

* Octal Tri-State Non-Inverting D Flip-Flop
* Motorola High-Speed CMOS Data, 1993, pages 5-323 to 5-326
* jat 9/11/96

.SUBCKT 74HC374A
+ CLOCK OUTENAB D0 D1 D2 D3 D4 D5 D6 D7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI $D_HI CLOCK
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,0) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ OUTENAB
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+ ENABLE LO = OUTENAB
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+      TRN_Z$, DELAY(-1,-1,30NS),
+      TRN_$Z, DELAY(-1,-1,30NS),
+      (TRN_LH | TRN_HL), DELAY(-1,-1,25NS),
+      DELAY(-1,-1,31NS))}

U3 CONSTRAINT(9) DPWR DGND
+ CLOCK D0 D1 D2 D3 D4 D5 D6 D7
+ IO_HC IO_LEVEL={IO_LEVEL}
+ WIDTH:
+  NODE = CLOCK
+  MIN_HI = 12NS
+  MIN_LO = 12NS
+ FREQ:
+  NODE = CLOCK
+  MAXFREQ = 30MEG
+ SETUP_HOLD:
+  CLOCK LH = CLOCK
+  DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+  SETUPTIME = 10NS
+  HOLDTIME = 5NS

.ENDS 74HC374A

* ----------------------------------------------------------- 74HCT374 ------
*  Octal D-Type Edge Triggered Flip Flop With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-423 to 2-426 
*  bss    4/13/94
*
.SUBCKT 74HCT374 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     DLY1_HCT374 IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(8) DPWR DGND
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     DLY2_HCT374 IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_HCT374 ueff(tpclkqhlTY=30ns tpclkqhlMX=36ns tpclkqlhTY=30ns tpclkqlhMX=36ns                                 
+                                  twclklMN=20ns twclkhMN=20ns tsudclkMN=25ns thdclkMN=10ns)

.model DLY2_HCT374 utgate (tplzTY=23ns tplzMX=30ns tphzTY=23ns tphzMX=30ns                                 
+                                  tpzlTY=26ns tpzlMX=30ns tpzhTY=26ns tpzhMX=30ns)
         
.ENDS 74HCT374

*-----------------------------------------------------------------74HCT374A---

* Octal Tri-State Non-Inverting D Flip-Flop
* Motorola High-Speed CMOS Data, 1993, pages 5-323 to 5-326
* jat 9/11/96

.SUBCKT 74HCT374A
+ CLOCK OUTENAB D0 D1 D2 D3 D4 D5 D6 D7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI $D_HI CLOCK
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,0) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ OUTENAB
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+ ENABLE LO = OUTENAB
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+      TRN_Z$, DELAY(-1,-1,30NS),
+      TRN_$Z, DELAY(-1,-1,30NS),
+      (TRN_LH | TRN_HL), DELAY(-1,-1,31NS),
+      DELAY(-1,-1,32NS))}

U3 CONSTRAINT(9) DPWR DGND
+ CLOCK D0 D1 D2 D3 D4 D5 D6 D7
+ IO_HCT IO_LEVEL={IO_LEVEL}
+ WIDTH:
+  NODE = CLOCK
+  MIN_HI = 12NS
+  MIN_LO = 12NS
+ FREQ:
+  NODE = CLOCK
+  MAXFREQ = 30MEG
+ SETUP_HOLD:
+  CLOCK LH = CLOCK
+  DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+  SETUPTIME = 12NS
+  HOLDTIME = 5NS

.ENDS 74HCT374A

* ----------------------------------------------------------- 74LS374 ------
*  Octal D-Type Edge Triggered Flip Flop With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-883 to 2-891 
*  bss    4/13/94
*
.SUBCKT 74LS374 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     DLY1_LS374 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv3a(8) DPWR DGND
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     DLY2_LS374 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_LS374 ueff(tpclkqhlTY=15ns tpclkqhlMX=28ns tpclkqlhTY=19ns tpclkqlhMX=28ns                                 
+                                  twclklMN=15ns twclkhMN=15ns tsudclkMN=20ns)

.model DLY2_LS374 utgate (tplzTY=12ns tplzMX=20ns tphzTY=15ns tphzMX=28ns                                 
+                                  tpzlTY=21ns tpzlMX=28ns tpzhTY=20ns tpzhMX=26ns)
         
.ENDS 74LS374
*
*
* ----------------------------------------------------------- 74S374 ------
*  Octal D-Type Edge Triggered Flip Flop With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-883 to 2-891 
*  bss    4/13/94
*
.SUBCKT 74S374 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 buf DPWR DGND
+     CLK CLOCK
+     D0_GATE IO_S_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CLOCK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     DLY1_S374 IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 inv3a(8) DPWR DGND
+     1QB 2QB 3QB 4QB 5QB 6QB 7QB 8QB
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     DLY2_S374 IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY1_S374 ueff(tpclkqhlTY=8ns tpclkqhlMX=15ns tpclkqlhTY=11ns tpclkqlhMX=17ns                                 
+                                  twclklMN=7.3ns twclkhMN=6ns tsudclkMN=5ns thdclkMN=2ns)

.model DLY2_S374 utgate (tplzTY=7ns tplzMX=12ns tphzTY=5ns tphzMX=9ns                                 
+                                  tpzlTY=11ns tpzlMX=18ns tpzhTY=8ns tpzhMX=15ns)
         
.ENDS 74S374
*
*
* ----------------------------------------------------------- 74HC375 ------
*  4 Bit Bistable Latches
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-427 to 2-429
*  bss    4/14/94
*
.SUBCKT 74HC375 C 1D 2D 1Q 1QBAR 2Q 2QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(2) DPWR DGND
+     $D_HI $D_HI C 1D 2D 1Q 2Q 1QBAR 2QBAR
+     DLY_HC375 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC375 ugff (twghMN=20ns tsudgMN=25ns thdgMN=5ns
+                             tpgqlhTY=15ns tpgqlhMX=26ns tpgqhlTY=15ns
+                             tpgqhlMX=26ns tpdqlhTY=14ns tpdqlhMX=24ns
+                             tpdqhlTY=14ns tpdqhlMX=24ns)

.ENDS 74HC375
*
*
* ----------------------------------------------------------- 74LS375 ------
*  4-Bit Bistable Latches
*
*  The TTL Logic Data Book, 1988, TI Pages 2-891 to 2-892 
*  bss    4/13/94
*
.SUBCKT 74LS375 C 1D 2D 1Q 1QBAR 2Q 2QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(2) DPWR DGND
+     $D_HI $D_HI C 1D 2D 1Q_O 2Q_O 1QBAR_O 2QBAR_O
+     DLY_LS375 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(4,0,3) DPWR DGND
+     1Q_O 1QBAR_O 2Q_O 2QBAR_O
+     C 1D 2D
+     1Q 1QBAR 2Q 2QBAR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA={CHANGED(1D,0) | CHANGED(2D,0)}
+     CLK = {CHANGED_LH(C,0)}
+
+  PINDLY:
+     1Q 2Q = {
+        CASE(
+           CLK & TRN_LH, DELAY(-1,15ns,27ns),
+           CLK & TRN_HL, DELAY(-1,14ns,25ns),
+           DATA & TRN_LH, DELAY(-1,15ns,27ns),
+           DATA & TRN_HL, DELAY(-1,9ns,17ns),
+           DELAY(-1,16ns,28ns))}
+
+     1QBAR 2QBAR = {
+        CASE(
+           CLK & TRN_LH, DELAY(-1,16ns,30ns),
+           CLK & TRN_HL, DELAY(-1,7ns,15ns),
+           DATA & TRN_LH, DELAY(-1,12ns,20ns),
+           DATA & TRN_HL, DELAY(-1,7ns,15ns),
+           DELAY(-1,17ns,31ns))}

.model DLY_LS375 ugff (twghMN=20ns tsudgMN=20ns)

.ENDS 74LS375
*
*
* ----------------------------------------------------------- 74376 ------
*  Quad J-KBAR Flip-Flops
*
*  The TTL Logic Data Book, 1988, TI Pages 2-893 to 2-894 
*  bss    4/14/94
*
.SUBCKT 74376 CLRBAR CLK 1J 1KBAR 2J 2KBAR 3J 3KBAR 4J 4KBAR 1Q 2Q 3Q 4Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(5) DPWR DGND
+     CLK 1KBAR 2KBAR 3KBAR 4KBAR
+     CLKBAR 1K 2K 3K 4K
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(4) DPWR DGND
+     $D_HI CLRBAR CLKBAR
+     1J 2J 3J 4J 1K 2K 3K 4K
+     1Q 2Q 3Q 4Q $D_NC $D_NC $D_NC $D_NC
+     DLY_376 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_376 ueff (tppcqhlTY=17ns tppcqhlMX=30ns tpclkqlhTY=22ns tpclkqlhMX=35ns
+                         tpclkqhlTY=24ns tpclkqhlMX=35ns twclklMN=12ns twclkhMN=22ns
+                         twpclMN=12ns tsupcclkhMN=10ns thdclkMN=20ns)

.ENDS 74376
*
*
* ----------------------------------------------------------- 74AC377 ------
*  Octal D Flip Flop With Clock Enable
*
*  The Advanced CMOS Logic Data Book, 1993, TI Pages 2-395 to 2-399
*  bss    4/14/94
*  This part is shown in the data book as a 74AC11377
*
.SUBCKT 74AC377 CLKENBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLKIN
+     1D 2D 3D 4D 5D 6D 7D 8D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     CLK CLKBAR
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nora(2,2) DPWR DGND
+     CLKENBAR NOREN2 CLKBAR NOREN1
+     NOREN1 NOREN2
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 and(2) DPWR DGND
+     NOREN1 CLK CLKIN
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(8,0,0) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q = {
+       CASE(
+         TRN_LH, DELAY(3.3ns,6.6ns,9.9ns),
+         TRN_HL, DELAY(4.1ns,7.8ns,11.5ns),
+         DELAY(5.1ns,8.8ns,12.5ns))}

U6CON CONSTRAINT(10) DPWR DGND
+     CLKENBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_AC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=100MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=5ns
+     MIN_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLKENBAR
+     SETUPTIME=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=4ns
+     WHEN={CLKENBAR!='1}

.ENDS 74AC377
*
*
* ----------------------------------------------------------- 74ACT377 ------
*  Octal D Flip Flop With Clock Enable
*
*  The Advanced CMOS Logic Data Book, 1993, TI Pages 2-401 to 2-404
*  bss    4/14/94
*  This part is shown in the data book as a 74ACT11377
*
.SUBCKT 74ACT377 CLKENBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     D1IN D2IN D3IN D4IN D5IN D6IN D7IN D8IN
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(17,8) DPWR DGND
+     CLKENBAR 1D 2D 3D 4D 5D 6D 7D 8D 
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     D1IN D2IN D3IN D4IN D5IN D6IN D7IN D8IN
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     D1IN = {((~CLKENBAR & 1D) | (CLKENBAR & 1Q_O))}
+     D2IN = {((~CLKENBAR & 2D) | (CLKENBAR & 2Q_O))}
+     D3IN = {((~CLKENBAR & 3D) | (CLKENBAR & 3Q_O))}
+     D4IN = {((~CLKENBAR & 4D) | (CLKENBAR & 4Q_O))}
+     D5IN = {((~CLKENBAR & 5D) | (CLKENBAR & 5Q_O))}
+     D6IN = {((~CLKENBAR & 6D) | (CLKENBAR & 6Q_O))}
+     D7IN = {((~CLKENBAR & 7D) | (CLKENBAR & 7Q_O))}
+     D8IN = {((~CLKENBAR & 8D) | (CLKENBAR & 8Q_O))}

U3DLY PINDLY(8,0,0) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q = {
+       CASE(
+         TRN_LH, DELAY(4.5ns,9.1ns,12.2ns),
+         TRN_HL, DELAY(4.8ns,9.6ns,12.7ns),
+         DELAY(5.8ns,10.6ns,13.7ns))}

U4CON CONSTRAINT(10) DPWR DGND
+     CLKENBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_ACT IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=100MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=5ns
+     MIN_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLKENBAR
+     SETUPTIME_HI=4ns
+     SETUPTIME_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=4ns
+     HOLDTIME_HI=1ns
+     WHEN={CLKENBAR!='1}

.ENDS 74ACT377

*-----------------------------------------------------------------74F377---

* Octal D-Type Flip-Flop with Clock Enable
* National Advanced Bipolar Logic Databook, 1995, pages 7-276 to 7-279
* jat 7/10/96

.SUBCKT 74F377
+ D0 D1 D2 D3 D4 D5 D6 D7 CP CEBAR Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(17,8) DPWR DGND
+ CEBAR D0 D1 D2 D3 D4 D5 D6 D7 Q_0 Q_1 Q_2 Q_3 Q_4 Q_5 Q_6 Q_7
+ FFD0 FFD1 FFD2 FFD3 FFD4 FFD5 FFD6 FFD7
+ D0_GATE IO_F
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+        FFD0 = {(CEBAR | D0) & ((~CEBAR) | Q_0)}
+        FFD1 = {(CEBAR | D1) & ((~CEBAR) | Q_1)}
+        FFD2 = {(CEBAR | D2) & ((~CEBAR) | Q_2)}
+        FFD3 = {(CEBAR | D3) & ((~CEBAR) | Q_3)}
+        FFD4 = {(CEBAR | D4) & ((~CEBAR) | Q_4)}
+        FFD5 = {(CEBAR | D5) & ((~CEBAR) | Q_5)}
+        FFD6 = {(CEBAR | D6) & ((~CEBAR) | Q_6)}
+        FFD7 = {(CEBAR | D7) & ((~CEBAR) | Q_7)}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CP
+ FFD0 FFD1 FFD2 FFD3 FFD4 FFD5 FFD6 FFD7
+ Q_0 Q_1 Q_2 Q_3 Q_4 Q_5 Q_6 Q_7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(8,0,1) DPWR DGND
+ Q_0 Q_1 Q_2 Q_3 Q_4 Q_5 Q_6 Q_7
+ CP
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_F
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+         POSEDGE = {CHANGED_LH(CP,0)}
+ PINDLY:
+         Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+           CASE(
+             POSEDGE & TRN_LH, DELAY(3NS,-1,7NS),
+             POSEDGE & TRN_HL, DELAY(4NS,-1,9NS),
+             DELAY(5NS,-1,10NS))}

U4 CONSTRAINT(10) DPWR DGND
+ CP D0 D1 D2 D3 D4 D5 D6 D7 CEBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ SETUP_HOLD:
+        CLOCK LH = CP
+        DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+        SETUPTIME_HI = 3NS
+        SETUPTIME_LO = 3.5NS
+        HOLDTIME_HI = .5NS
+        HOLDTIME_LO = 1NS
+ SETUP_HOLD:
+        CLOCK LH = CP
+        DATA(1) = CEBAR
+        SETUPTIME_HI = 4.1NS
+        SETUPTIME_LO = 3.5NS
+        HOLDTIME_HI = .5NS
+        HOLDTIME_LO = 2NS
+ WIDTH:
+        NODE = CP
+        MIN_LO = 6NS
+        MIN_HI = 6NS
+ FREQ:
+        NODE = CP
+        MAXFREQ = 130MEG

.ENDS 74F377

* ----------------------------------------------------------- 74F377A ------
*  Octal D Flip Flop With Clock Enable
*
*  The F Logic Data Book, 1994, TI Pages 2-231 to 2-234
*  bss    4/14/94
*
.SUBCKT 74F377A CEBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     D1IN D2IN D3IN D4IN D5IN D6IN D7IN D8IN
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(17,8) DPWR DGND
+     CEBAR 1D 2D 3D 4D 5D 6D 7D 8D 
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     D1IN D2IN D3IN D4IN D5IN D6IN D7IN D8IN
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     D1IN = {((~CEBAR & 1D) | (CEBAR & 1Q_O))}
+     D2IN = {((~CEBAR & 2D) | (CEBAR & 2Q_O))}
+     D3IN = {((~CEBAR & 3D) | (CEBAR & 3Q_O))}
+     D4IN = {((~CEBAR & 4D) | (CEBAR & 4Q_O))}
+     D5IN = {((~CEBAR & 5D) | (CEBAR & 5Q_O))}
+     D6IN = {((~CEBAR & 6D) | (CEBAR & 6Q_O))}
+     D7IN = {((~CEBAR & 7D) | (CEBAR & 7Q_O))}
+     D8IN = {((~CEBAR & 8D) | (CEBAR & 8Q_O))}

U3DLY PINDLY(8,0,0) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q = {
+       CASE(
+         TRN_LH, DELAY(4ns,6.5ns,8.5ns),
+         TRN_HL, DELAY(4ns,7ns,9ns),
+         DELAY(5ns,8ns,10ns))}

U4CON CONSTRAINT(10) DPWR DGND
+     CEBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=110MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=5ns
+     MIN_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CEBAR
+     SETUPTIME_HI=2.5ns
+     SETUPTIME_LO=4.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=2ns
+     HOLDTIME=1ns
+     WHEN={CEBAR!='1}

.ENDS 74F377A
*
*
* ----------------------------------------------------------- 74HC377 ------
*  Octal D Flip Flop With Clock Enable
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-431 to 2-435
*  bss    4/14/94
*
.SUBCKT 74HC377 GBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLKIN
+     1D 2D 3D 4D 5D 6D 7D 8D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     CLK CLKBAR
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nora(2,2) DPWR DGND
+     GBAR NOREN2 CLKBAR NOREN1
+     NOREN1 NOREN2
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 and(2) DPWR DGND
+     NOREN1 CLK CLKIN
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(8,0,0) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q = {
+       CASE(
+         TRN_LH, DELAY(-1,15ns,32ns),
+         TRN_HL, DELAY(-1,15ns,32ns),
+         DELAY(-1,16ns,33ns))}

U6CON CONSTRAINT(10) DPWR DGND
+     GBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=GBAR
+     SETUPTIME=25ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=25ns
+     HOLDTIME=5ns
+     WHEN={GBAR!='1}

.ENDS 74HC377
*
*
*-----------------------------------------------------------------74HCT377---
*
* The 74HCT377 Octal D-Type Flip-Flop with Data Enable
* (8 Page Fax) Harris High-Speed CMOS Logic, File Number 1675
* jat 7/26/95

.SUBCKT 74HCT377
+ D0 D1 D2 D3 D4 D5 D6 D7 CP EBAR Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(17,8) DPWR DGND
+ EBAR D0 D1 D2 D3 D4 D5 D6 D7 Q_0 Q_1 Q_2 Q_3 Q_4 Q_5 Q_6 Q_7
+ FFD0 FFD1 FFD2 FFD3 FFD4 FFD5 FFD6 FFD7
+ D0_GATE IO_HCT
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+        FFD0 = {(EBAR | D0) & ((~EBAR) | Q_0)}
+        FFD1 = {(EBAR | D1) & ((~EBAR) | Q_1)}
+        FFD2 = {(EBAR | D2) & ((~EBAR) | Q_2)}
+        FFD3 = {(EBAR | D3) & ((~EBAR) | Q_3)}
+        FFD4 = {(EBAR | D4) & ((~EBAR) | Q_4)}
+        FFD5 = {(EBAR | D5) & ((~EBAR) | Q_5)}
+        FFD6 = {(EBAR | D6) & ((~EBAR) | Q_6)}
+        FFD7 = {(EBAR | D7) & ((~EBAR) | Q_7)}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CP
+ FFD0 FFD1 FFD2 FFD3 FFD4 FFD5 FFD6 FFD7
+ Q_0 Q_1 Q_2 Q_3 Q_4 Q_5 Q_6 Q_7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_HCT
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(8,0,1) DPWR DGND
+ Q_0 Q_1 Q_2 Q_3 Q_4 Q_5 Q_6 Q_7
+ CP
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_HCT
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+         POSEDGE = {CHANGED_LH(CP,0)}
+ PINDLY:
+         Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+           CASE(
+             POSEDGE & (TRN_LH | TRN_HL), DELAY(-1,-1,38NS),
+             DELAY(-1,-1,39NS))}

U4 CONSTRAINT(10) DPWR DGND
+ CP D0 D1 D2 D3 D4 D5 D6 D7 EBAR
+ IO_HCT IO_LEVEL={IO_LEVEL}
+ SETUP_HOLD:
+        CLOCK LH = CP
+        DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+        SETUPTIME = 15NS
+        HOLDTIME = 3NS
+ SETUP_HOLD:
+        CLOCK LH = CP
+        DATA(1) = EBAR
+        SETUPTIME = 15NS
+        HOLDTIME = 5NS
+ WIDTH:
+        NODE = CP
+        MIN_LO = 25NS
+        MIN_HI = 25NS
+ FREQ:
+        NODE = CP
+        MAXFREQ = 20MEG

.ENDS 74HCT377
*
*
* ----------------------------------------------------------- 74LS377 ------
*  Octal D Flip Flop With Clock Enable
*
*  The TTL Logic Data Book, 1988, TI Pages 2-895 to 2-898
*  bss    4/14/94
*
.SUBCKT 74LS377 GBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLKIN
+     1D 2D 3D 4D 5D 6D 7D 8D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     CLK CLKBAR
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nora(2,2) DPWR DGND
+     GBAR NOREN2 CLKBAR NOREN1
+     NOREN1 NOREN2
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 and(2) DPWR DGND
+     NOREN1 CLK CLKIN
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(8,0,0) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q = {
+       CASE(
+         TRN_LH, DELAY(-1,17ns,27ns),
+         TRN_HL, DELAY(-1,18ns,27ns),
+         DELAY(-1,19ns,28ns))}

U6CON CONSTRAINT(10) DPWR DGND
+     GBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=30MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=GBAR
+     SETUPTIME_HI=10ns
+     SETUPTIME_LO=25ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=20ns
+     HOLDTIME=5ns
+     WHEN={GBAR!='1}

.ENDS 74LS377

*-----------------------------------------------------------------74AC378--

* Parallel D Register with Enable
* National FACT Advanced CMOS Logic Databook, 1993, pages 4-221 to 4-224
* jat 8/29/96

.SUBCKT 74AC378 EBAR CP D0 D1 D2 D3 D4 D5 Q0 Q1 Q2 Q3 Q4 Q5
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

UX LOGICEXP(2,1) DPWR DGND
+ CP EBAR
+ CLK
+ D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  CLK = {CP & ~EBAR}

U1 DFF(6) DPWR DGND
+ $D_HI $D_HI CLK
+ D0 D1 D2 D3 D4 D5
+ Q0O Q1O Q2O Q3O Q4O Q5O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(6,0,0) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O
+ Q0 Q1 Q2 Q3 Q4 Q5
+ IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ PINDLY:
+   Q0 Q1 Q2 Q3 Q4 Q5 = {
+     CASE(
+       TRN_LH, DELAY(1.5NS,6NS,8NS),
+       TRN_HL, DELAY(1.5NS,5.5NS,7.5NS),
+       DELAY(2.5NS,7NS,9NS))}

U3 CONSTRAINT(8) DPWR DGND
+ CP D0 D1 D2 D3 D4 D5 EBAR
+ IO_AC IO_LEVEL={IO_LEVEL}
+ SETUP_HOLD:
+        CLOCK LH = CP
+        DATA(6) = D0 D1 D2 D3 D4 D5
+        SETUPTIME = 1NS
+        HOLDTIME = 1NS
+ SETUP_HOLD:
+        CLOCK LH = CP
+        DATA(1) = EBAR
+        HOLDTIME = 1NS
+ WIDTH:
+        NODE = CP
+        MIN_LO = 2NS
+        MIN_HI = 2NS
+ FREQ:
+        NODE = CP
+        MAXFREQ = 200MEG

.ENDS 74AC378

*-----------------------------------------------------------------74ACT378--

* Parallel D Register with Enable
* Motorola FACT Data, 1993, pages 5-280 to 5-285
* jat 8/29/96

.SUBCKT 74ACT378 EBAR CP D0 D1 D2 D3 D4 D5 Q0 Q1 Q2 Q3 Q4 Q5
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

UX LOGICEXP(2,1) DPWR DGND
+ CP EBAR
+ CLK
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  CLK = {CP & ~EBAR}

U1 DFF(6) DPWR DGND
+ $D_HI $D_HI CLK
+ D0 D1 D2 D3 D4 D5
+ Q0O Q1O Q2O Q3O Q4O Q5O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(6,0,0) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O
+ Q0 Q1 Q2 Q3 Q4 Q5
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ PINDLY:
+   Q0 Q1 Q2 Q3 Q4 Q5 = {
+     CASE(
+       TRN_LH, DELAY(2NS,-1,10NS),
+       TRN_HL, DELAY(2NS,-1,11NS),
+       DELAY(3NS,-1,12NS))}

U3 CONSTRAINT(8) DPWR DGND
+ CP D0 D1 D2 D3 D4 D5 EBAR
+ IO_ACT IO_LEVEL={IO_LEVEL}
+ SETUP_HOLD:
+        CLOCK LH = CP
+        DATA(6) = D0 D1 D2 D3 D4 D5
+        HOLDTIME = 1NS
+ SETUP_HOLD:
+        CLOCK LH = CP
+        DATA(1) = EBAR
+        HOLDTIME = 2.5NS
+ WIDTH:
+        NODE = CP
+        MIN_LO = 3NS
+        MIN_HI = 3NS
+ FREQ:
+        NODE = CP
+        MAXFREQ = 140MEG

.ENDS 74ACT378

* ----------------------------------------------------------- 74F378 ------
*  Hex D Flip Flop With Clock Enable
*
*  The F Logic Data Book, 1994, TI Pages 2-235 to 2-237
*  bss    4/14/94
*
.SUBCKT 74F378 CEBAR CLK 1D 2D 3D 4D 5D 6D 1Q 2Q 3Q 4Q 5Q 6Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(6) DPWR DGND
+     $D_HI $D_HI CLKIN
+     1D 2D 3D 4D 5D 6D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     CLK CLKBAR
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nora(2,2) DPWR DGND
+     CEBAR NOREN2 CLKBAR NOREN1
+     NOREN1 NOREN2
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 and(2) DPWR DGND
+     NOREN1 CLK CLKIN
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(6,0,0) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O
+     1Q 2Q 3Q 4Q 5Q 6Q
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     1Q 2Q 3Q 4Q 5Q 6Q = {
+       CASE(
+         TRN_LH, DELAY(3.3ns,4.5ns,6.1ns),
+         TRN_HL, DELAY(3ns,4.2ns,6ns),
+         DELAY(4.3ns,5.5ns,7.1ns))}

U6CON CONSTRAINT(8) DPWR DGND
+     CEBAR CLK 1D 2D 3D 4D 5D 6D
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=110MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=4ns
+     MIN_LO=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CEBAR
+     SETUPTIME_HI=3.5ns
+     SETUPTIME_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(6)=1D 2D 3D 4D 5D 6D
+     SETUPTIME=5ns
+     HOLDTIME=1ns
+     WHEN={CEBAR!='1}

.ENDS 74F378
*
*
* ----------------------------------------------------------- 74HC378 ------
*  Hex D Flip Flop With Clock Enable
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-431 to 2-435
*  bss    4/14/94
*
.SUBCKT 74HC378 GBAR CLK 1D 2D 3D 4D 5D 6D 1Q 2Q 3Q 4Q 5Q 6Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(6) DPWR DGND
+     $D_HI $D_HI CLKIN
+     1D 2D 3D 4D 5D 6D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     CLK CLKBAR
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nora(2,2) DPWR DGND
+     GBAR NOREN2 CLKBAR NOREN1
+     NOREN1 NOREN2
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 and(2) DPWR DGND
+     NOREN1 CLK CLKIN
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(6,0,0) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O
+     1Q 2Q 3Q 4Q 5Q 6Q
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     1Q 2Q 3Q 4Q 5Q 6Q = {
+       CASE(
+         TRN_LH, DELAY(-1,15ns,32ns),
+         TRN_HL, DELAY(-1,15ns,32ns),
+         DELAY(-1,16ns,33ns))}

U6CON CONSTRAINT(8) DPWR DGND
+     GBAR CLK 1D 2D 3D 4D 5D 6D
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=GBAR
+     SETUPTIME=25ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(6)=1D 2D 3D 4D 5D 6D
+     SETUPTIME=25ns
+     HOLDTIME=5ns
+     WHEN={GBAR!='1}

.ENDS 74HC378
*
*
* ----------------------------------------------------------- 74LS378 ------
*  Octal D Flip Flop With Clock Enable
*
*  The TTL Logic Data Book, 1988, TI Pages 2-895 to 2-898
*  bss    4/14/94
*
.SUBCKT 74LS378 GBAR CLK 1D 2D 3D 4D 5D 6D 1Q 2Q 3Q 4Q 5Q 6Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(6) DPWR DGND
+     $D_HI $D_HI CLKIN
+     1D 2D 3D 4D 5D 6D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     CLK CLKBAR
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nora(2,2) DPWR DGND
+     GBAR NOREN2 CLKBAR NOREN1
+     NOREN1 NOREN2
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 and(2) DPWR DGND
+     NOREN1 CLK CLKIN
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(6,0,0) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O
+     1Q 2Q 3Q 4Q 5Q 6Q
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     1Q 2Q 3Q 4Q 5Q 6Q = {
+       CASE(
+         TRN_LH, DELAY(-1,17ns,27ns),
+         TRN_HL, DELAY(-1,18ns,27ns),
+         DELAY(-1,19ns,29ns))}

U6CON CONSTRAINT(8) DPWR DGND
+     GBAR CLK 1D 2D 3D 4D 5D 6D
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=30MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=GBAR
+     SETUPTIME_HI=10ns
+     SETUPTIME_LO=25ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(6)=1D 2D 3D 4D 5D 6D
+     SETUPTIME=20ns
+     HOLDTIME=5ns
+     WHEN={GBAR!='1}

.ENDS 74LS378
*
*
* ----------------------------------------------------------- 74F379 ------
*  Quad Parallel Register
*
*  The FAST And LS TTL Data Book, 1992, Motorola Pages 4-183 to 4-185
*  bss    5/16/94
*
.SUBCKT 74F379 EBAR CP D0 D1 D2 D3 Q0 Q1 Q2 Q3 Q0BAR Q1BAR Q2BAR Q3BAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI $D_HI CLKIN
+     D0 D1 D2 D3
+     Q0_O Q1_O Q2_O Q3_O
+     Q0BAR_O Q1BAR_O Q2BAR_O Q3BAR_O
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     CP CLKBAR
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nora(2,2) DPWR DGND
+     EBAR NOREN2 CLKBAR NOREN1
+     NOREN1 NOREN2
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 and(2) DPWR DGND
+     NOREN1 CP CLKIN
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(8,0,0) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O Q0BAR_O Q1BAR_O Q2BAR_O Q3BAR_O
+     Q0 Q1 Q2 Q3 Q0BAR Q1BAR Q2BAR Q3BAR
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     Q0 Q1 Q2 Q3 Q0BAR Q1BAR Q2BAR Q3BAR = {
+       CASE(
+         TRN_LH, DELAY(3.5ns,5ns,6.5ns),
+         TRN_HL, DELAY(5ns,6.5ns,8.5ns),
+         DELAY(6ns,7.5ns,9.5ns))}

U6CON CONSTRAINT(6) DPWR DGND
+     EBAR CP D0 D1 D2 D3
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CP
+     MIN_HI=4ns
+     MIN_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(1)=EBAR
+     SETUPTIME=6ns
+     HOLDTIME=2ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(4)=D0 D1 D2 D3
+     SETUPTIME=3ns
+     HOLDTIME=1ns
+     WHEN={EBAR!='1}

.ENDS 74F379
*
*
* ----------------------------------------------------------- 74HC379 ------
*  Quad D Flip Flop With Clock Enable
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-431 to 2-435
*  bss    4/14/94
*
.SUBCKT 74HC379 GBAR CLK 1D 2D 3D 4D 1Q 2Q 3Q 4Q 1QBAR 2QBAR 3QBAR 4QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI $D_HI CLKIN
+     1D 2D 3D 4D
+     1Q_O 2Q_O 3Q_O 4Q_O
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     CLK CLKBAR
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nora(2,2) DPWR DGND
+     GBAR NOREN2 CLKBAR NOREN1
+     NOREN1 NOREN2
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 and(2) DPWR DGND
+     NOREN1 CLK CLKIN
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(8,0,0) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O
+     1Q 2Q 3Q 4Q 1QBAR 2QBAR 3QBAR 4QBAR
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     1Q 2Q 3Q 4Q 1QBAR 2QBAR 3QBAR 4QBAR = {
+       CASE(
+         TRN_LH, DELAY(-1,15ns,32ns),
+         TRN_HL, DELAY(-1,15ns,32ns),
+         DELAY(-1,16ns,33ns))}

U6CON CONSTRAINT(6) DPWR DGND
+     GBAR CLK 1D 2D 3D 4D
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=GBAR
+     SETUPTIME=25ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(4)=1D 2D 3D 4D
+     SETUPTIME=25ns
+     HOLDTIME=5ns
+     WHEN={GBAR!='1}

.ENDS 74HC379
*
*
* ----------------------------------------------------------- 74LS379 ------
*  Quad D Flip Flop With Clock Enable
*
*  The TTL Logic Data Book, 1988, TI Pages 2-895 to 2-898
*  bss    4/14/94
*
.SUBCKT 74LS379 GBAR CLK 1D 2D 3D 4D 1Q 2Q 3Q 4Q 1QBAR 2QBAR 3QBAR 4QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI $D_HI CLKIN
+     1D 2D 3D 4D
+     1Q_O 2Q_O 3Q_O 4Q_O
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     CLK CLKBAR
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nora(2,2) DPWR DGND
+     GBAR NOREN2 CLKBAR NOREN1
+     NOREN1 NOREN2
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 and(2) DPWR DGND
+     NOREN1 CLK CLKIN
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(8,0,0) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O
+     1Q 2Q 3Q 4Q 1QBAR 2QBAR 3QBAR 4QBAR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     1Q 2Q 3Q 4Q 1QBAR 2QBAR 3QBAR 4QBAR = {
+       CASE(
+         TRN_LH, DELAY(-1,17ns,27ns),
+         TRN_HL, DELAY(-1,18ns,27ns),
+         DELAY(-1,19ns,28ns))}

U6CON CONSTRAINT(6) DPWR DGND
+     GBAR CLK 1D 2D 3D 4D
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=30MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=GBAR
+     SETUPTIME_HI=10ns
+     SETUPTIME_LO=25ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(4)=1D 2D 3D 4D
+     SETUPTIME=20ns
+     HOLDTIME=5ns
+     WHEN={GBAR!='1}

.ENDS 74LS379

