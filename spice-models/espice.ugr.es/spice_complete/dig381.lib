* Digital Library 74F381 - 

* ----------------------------------------------------------- 74F381 ------
*  Arithmetic Logic Unit
*
*  The Fast TTL Logic Data Book, 1992, Philips Pages 455 to 460
*  bss    4/14/94
*
.SUBCKT 74F381 S0 S1 S2 Cn A0 A1 A2 A3 B0 B1 B2 B3 GBAR PBAR F0 F1 F2 F3
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,6) DPWR DGND
+     S0 S1 S2 Cn A0 A1 A2 A3 B0 B1 B2 B3
+     GBAR_O PBAR_O F0_O F1_O F2_O F3_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a0bar = {~A0}
+     a1bar = {~A1}
+     a2bar = {~A2}
+     a3bar = {~A3}
+     b0bar = {~B0}
+     b1bar = {~B1}
+     b2bar = {~B2}
+     b3bar = {~B3}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     s2bar = {~S2}
+
+     self1 = {~(s0bar & S1)}
+     self2 = {~(S0 & S1 & s2bar)}
+     self3 = {~((s0bar & S2) | (s1bar & S2))}
+     self4 = {~(s0bar & s1bar)}
+     self5 = {~(s1bar & s2bar)}
+     selout = {~((s0bar & s1bar) | S2)}
+
+     out0a = {~((a0bar & b0bar & self5 & self1) | (self4 & self1 & self2 & A0 & b0bar) |
+            (self5 & self2 & a0bar & B0))}
+     out0b = {~((a0bar & b0bar & self4 & self2 & self3) | (self5 & self1 & A0 & b0bar) |
+            (self5 & self1 & a0bar & B0) | (self4 & self2 & A0 & B0))}
+     out1a = {~((a1bar & b1bar & self1 & self5) | (self4 & self1 & self2 & A1 & b1bar) |
+            (self5 & self2 & a1bar & B1))}
+     out1b = {~((a1bar & b1bar & self4 & self2 & self3) | (self5 & self1 & A1 & b1bar) |
+            (self5 & self1 & a1bar & B1) | (self4 & self2 & A1 & B1))}
+     out2a = {~((a2bar & b2bar & self1 & self5) | (self4 & self1 & self2 & A2 & b2bar) |
+            (self5 & self2 & a2bar & B2))}
+     out2b = {~((a2bar & b2bar & self4 & self2 & self3) | (self5 & self1 & A2 & b2bar) |
+            (self5 & self1 & a2bar & B2) | (self4 & self2 & A2 & B2))}
+     out3a = {~((a3bar & b3bar & self1 & self5) | (self4 & self1 & self2 & A3 & b3bar) |
+            (self5 & self2 & a3bar & B3))}
+     out3b = {~((a3bar & b3bar & self4 & self2 & self3) | (self5 & self1 & A3 & b3bar) |
+            (self5 & self1 & a3bar & B3) | (self4 & self2 & A3 & B3))}
+
+     F0_O = {(~(Cn & selout) ^ out0b)}
+     f1in = {~((Cn & out0a & selout) | (out0a & out0b & selout))}
+     F1_O = {f1in ^ out1b}
+     f2in = {~((Cn & out0a & out1a & selout) | (out0a & out1a & out0b & selout) |
+            (out1a & out1b & selout))}
+     F2_O = {f2in ^ out2b}
+     f3in = {~((Cn & out0a & out1a & out2a & selout) | (out0a & out1a & out2a & out0b & selout) |
+            (out1a & out2a & out1b & selout) | (out2a & out2b & selout))}
+     F3_O = {f3in ^ out3b}
+     PBAR_O = {~(out0a & out1a & out2a & out3a)}
+     GBAR_O = {~((out0a & out1a & out2a & out3a & out0b) | (out1a & out2a & out3a & out1b) |
+            (out2a & out3a & out2b) | (out3a & out3b))}

U2DLY PINDLY(6,0,12) DPWR DGND
+     F0_O F1_O F2_O F3_O PBAR_O GBAR_O
+     Cn A0 A1 A2 A3 B0 B1 B2 B3 S0 S1 S2
+     F0 F1 F2 F3 PBAR GBAR
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) |
+            CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+     CARRY = {CHANGED(Cn,0)}
+
+  PINDLY:
+     F0 F1 F2 F3 = {
+       CASE(
+         SELECT & TRN_LH, DELAY(5ns,9ns,20ns),
+         SELECT & TRN_HL, DELAY(4ns,7.5ns,10.5ns),
+         DATA & TRN_LH, DELAY(3.5ns,7ns,13ns),
+         DATA & TRN_HL, DELAY(3ns,6ns,9ns),
+         CARRY & TRN_LH, DELAY(2.5ns,6ns,11ns),
+         CARRY & TRN_HL, DELAY(2.5ns,4.5ns,6.5ns),
+         DELAY(6ns,10ns,21ns))}
+
+     PBAR = {
+       CASE(
+         SELECT & TRN_LH, DELAY(5ns,7.5ns,11ns),
+         SELECT & TRN_HL, DELAY(5.5ns,8.5ns,12.5ns),
+         DATA & TRN_LH, DELAY(3ns,5.5ns,8ns),
+         DATA & TRN_HL, DELAY(3.5ns,6ns,8.5ns),
+         DELAY(6.5ns,9.5ns,13.5ns))}
+
+     GBAR = {
+       CASE(
+         SELECT & TRN_LH, DELAY(5ns,7.5ns,11ns),
+         SELECT & TRN_HL, DELAY(5.5ns,8.5ns,12.5ns),
+         DATA & TRN_LH, DELAY(3.5ns,6.5ns,9ns),
+         DATA & TRN_HL, DELAY(3ns,6ns,8.5ns),
+         DELAY(6.5ns,9.5ns,13.5ns))}

.ENDS 74F381
*
*
* ----------------------------------------------------------- 74LS381 ------
*  Arithmetic Logic Unit
*
*  The TTL Logic Data Book, 1988, TI Pages 2-899 to 2-906
*  bss    4/19/94
*
.SUBCKT 74LS381 S0 S1 S2 Cn A0 A1 A2 A3 B0 B1 B2 B3 GBAR PBAR F0 F1 F2 F3
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,6) DPWR DGND
+     S0 S1 S2 Cn A0 A1 A2 A3 B0 B1 B2 B3
+     GBAR_O PBAR_O F0_O F1_O F2_O F3_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a0bar = {~A0}
+     a1bar = {~A1}
+     a2bar = {~A2}
+     a3bar = {~A3}
+     b0bar = {~B0}
+     b1bar = {~B1}
+     b2bar = {~B2}
+     b3bar = {~B3}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     s2bar = {~S2}
+
+     self1 = {~((S0 & s1bar & s2bar) | (s0bar & S1 & s2bar) | (S0 & S1 & S2))}
+     self2 = {~((S0 & s1bar) | (S0 & S2) | (s0bar & S1))}
+     self3 = {~((S0 & S1) | (s1bar & S2))}
+     self4 = {~(S0 & s1bar & s2bar)}
+     self5 = {~(S0 & S1 & s2bar)}
+     self6 = {~(s0bar & S1 & s2bar)}
+     selout = {((S0 & s2bar) | (S1 & s2bar))}
+
+     out0a = {~((self3 & A0 & b0bar) | (self2 & A0 & B0) | (self3 & a0bar & B0) |
+               (self1 & a0bar & b0bar))}
+     out0b = {~((self6 & A0 & b0bar) | (self5 & A0 & B0) | (self4 & a0bar & B0) |
+               (a0bar & b0bar))}
+     out1a = {~((self3 & A1 & b1bar) | (self2 & A1 & B1) | (self3 & a1bar & B1) |
+               (self1 & a1bar & b1bar))}
+     out1b = {~((self6 & A1 & b1bar) | (self5 & A1 & B1) | (self4 & a1bar & B1) |
+               (a1bar & b1bar))}
+     out2a = {~((self3 & A2 & b2bar) | (self2 & A2 & B2) | (self3 & a2bar & B2) |
+               (self1 & a2bar & b2bar))}
+     out2b = {~((self6 & A2 & b2bar) | (self5 & A2 & B2) | (self4 & a2bar & B2) |
+               (a2bar & b2bar))}
+     out3a = {~((self3 & A3 & b3bar) | (self2 & A3 & B3) | (self3 & a3bar & B3) |
+               (self1 & a3bar & b3bar))}
+     out3b = {~((self6 & A3 & b3bar) | (self5 & A3 & B3) | (self4 & a3bar & B3) |
+               (a3bar & b3bar))}
+
+     F0_O = {~((~(selout & Cn)) ^ out0a)}
+     F1_O = {~((~((selout & Cn & out0a) | (selout & out0b))) ^ out1a)}
+     F2_O = {~((~((selout & Cn & out0a & out1a) | (selout & out1a & out0b) | (selout & out1b))) ^ 
+                out2a)}
+     F3_O = {~((~((selout & Cn & out0a & out1a & out2a) | (selout & out1a & out2a & out0b) |
+                (selout & out2a & out1b) | (selout & out2b))) ^ out3a)}
+     PBAR_O = {~(out0a & out1a & out2a & out3a)}
+     GBAR_O = {~((out1a & out2a & out3a & out0b) | (out2a & out3a & out1b) | (out3a & out2b) |
+                 out3b)}

U2DLY PINDLY(6,0,12) DPWR DGND
+     F0_O F1_O F2_O F3_O PBAR_O GBAR_O
+     Cn A0 A1 A2 A3 B0 B1 B2 B3 S0 S1 S2
+     F0 F1 F2 F3 PBAR GBAR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) |
+            CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+     CARRY = {CHANGED(Cn,0)}
+
+  PINDLY:
+     F0 F1 F2 F3 = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,35ns,53ns),
+         SELECT & TRN_HL, DELAY(-1,34ns,51ns),
+         DATA & TRN_LH, DELAY(-1,20ns,30ns),
+         DATA & TRN_HL, DELAY(-1,15ns,23ns),
+         CARRY & TRN_LH, DELAY(-1,18ns,27ns),
+         CARRY & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,36ns,54ns))}
+
+     PBAR = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,31ns,47ns),
+         SELECT & TRN_HL, DELAY(-1,32ns,48ns),
+         DATA & TRN_LH, DELAY(-1,21ns,33ns),
+         DATA & TRN_HL, DELAY(-1,23ns,33ns),
+         DELAY(-1,33ns,49ns))}
+
+     GBAR = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,31ns,47ns),
+         SELECT & TRN_HL, DELAY(-1,32ns,48ns),
+         DATA & TRN_LH, DELAY(-1,20ns,30ns),
+         DATA & TRN_HL, DELAY(-1,21ns,33ns),
+         DELAY(-1,33ns,49ns))}

.ENDS 74LS381
*
*
* ----------------------------------------------------------- 74S381 ------
*  Arithmetic Logic Unit
*
*  The TTL Logic Data Book, 1988, TI Pages 2-899 to 2-906
*  bss    4/19/94
*
.SUBCKT 74S381 S0 S1 S2 Cn A0 A1 A2 A3 B0 B1 B2 B3 GBAR PBAR F0 F1 F2 F3
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,6) DPWR DGND
+     S0 S1 S2 Cn A0 A1 A2 A3 B0 B1 B2 B3
+     GBAR_O PBAR_O F0_O F1_O F2_O F3_O
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a0bar = {~A0}
+     a1bar = {~A1}
+     a2bar = {~A2}
+     a3bar = {~A3}
+     b0bar = {~B0}
+     b1bar = {~B1}
+     b2bar = {~B2}
+     b3bar = {~B3}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     s2bar = {~S2}
+
+     self1 = {~((S0 & s1bar & s2bar) | (s0bar & S1 & s2bar) | (S0 & S1 & S2))}
+     self2 = {~((S0 & s1bar) | (S0 & S2) | (s0bar & S1))}
+     self3 = {~((S0 & S1) | (s1bar & S2))}
+     self4 = {~(S0 & s1bar & s2bar)}
+     self5 = {~(S0 & S1 & s2bar)}
+     self6 = {~(s0bar & S1 & s2bar)}
+     selout = {((S0 & s2bar) | (S1 & s2bar))}
+
+     out0a = {~((self3 & A0 & b0bar) | (self2 & A0 & B0) | (self3 & a0bar & B0) |
+               (self1 & a0bar & b0bar))}
+     out0b = {~((self6 & A0 & b0bar) | (self5 & A0 & B0) | (self4 & a0bar & B0) |
+               (a0bar & b0bar))}
+     out1a = {~((self3 & A1 & b1bar) | (self2 & A1 & B1) | (self3 & a1bar & B1) |
+               (self1 & a1bar & b1bar))}
+     out1b = {~((self6 & A1 & b1bar) | (self5 & A1 & B1) | (self4 & a1bar & B1) |
+               (a1bar & b1bar))}
+     out2a = {~((self3 & A2 & b2bar) | (self2 & A2 & B2) | (self3 & a2bar & B2) |
+               (self1 & a2bar & b2bar))}
+     out2b = {~((self6 & A2 & b2bar) | (self5 & A2 & B2) | (self4 & a2bar & B2) |
+               (a2bar & b2bar))}
+     out3a = {~((self3 & A3 & b3bar) | (self2 & A3 & B3) | (self3 & a3bar & B3) |
+               (self1 & a3bar & b3bar))}
+     out3b = {~((self6 & A3 & b3bar) | (self5 & A3 & B3) | (self4 & a3bar & B3) |
+               (a3bar & b3bar))}
+
+     F0_O = {~((~(selout & Cn)) ^ out0a)}
+     F1_O = {~((~((selout & Cn & out0a) | (selout & out0b))) ^ out1a)}
+     F2_O = {~((~((selout & Cn & out0a & out1a) | (selout & out1a & out0b) | (selout & out1b))) ^ 
+                out2a)}
+     F3_O = {~((~((selout & Cn & out0a & out1a & out2a) | (selout & out1a & out2a & out0b) |
+                (selout & out2a & out1b) | (selout & out2b))) ^ out3a)}
+     PBAR_O = {~(out0a & out1a & out2a & out3a)}
+     GBAR_O = {~((out1a & out2a & out3a & out0b) | (out2a & out3a & out1b) | (out3a & out2b) |
+                 out3b)}

U2DLY PINDLY(6,0,12) DPWR DGND
+     F0_O F1_O F2_O F3_O PBAR_O GBAR_O
+     Cn A0 A1 A2 A3 B0 B1 B2 B3 S0 S1 S2
+     F0 F1 F2 F3 PBAR GBAR
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) |
+            CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+     CARRY = {CHANGED(Cn,0)}
+
+  PINDLY:
+     F0 F1 F2 F3 = {
+       CASE(
+         SELECT, DELAY(-1,18ns,30ns),
+         DATA & TRN_LH, DELAY(-1,18ns,27ns),
+         DATA & TRN_HL, DELAY(-1,16ns,25ns),
+         CARRY, DELAY(-1,10ns,17ns),
+         DELAY(-1,19ns,31ns))}
+
+     PBAR = {
+       CASE(
+         SELECT, DELAY(-1,18ns,30ns),
+         DATA, DELAY(-1,11ns,18ns),
+         DELAY(-1,19ns,31ns))}
+
+     GBAR = {
+       CASE(
+         SELECT, DELAY(-1,18ns,30ns),
+         DATA, DELAY(-1,12ns,20ns),
+         DELAY(-1,19ns,31ns))}

.ENDS 74S381
*
*
* ----------------------------------------------------------- 74F382 ------
*  Arithmetic Logic Unit
*
*  The Fast TTL Logic Data Book, 1992, Philips Pages 461 to 466
*  bss    4/19/94
*
.SUBCKT 74F382 S0 S1 S2 Cn A0 A1 A2 A3 B0 B1 B2 B3 Cn4 OVR F0 F1 F2 F3
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,6) DPWR DGND
+     S0 S1 S2 Cn A0 A1 A2 A3 B0 B1 B2 B3
+     Cn4_O OVR_O F0_O F1_O F2_O F3_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a0bar = {~A0}
+     a1bar = {~A1}
+     a2bar = {~A2}
+     a3bar = {~A3}
+     b0bar = {~B0}
+     b1bar = {~B1}
+     b2bar = {~B2}
+     b3bar = {~B3}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     s2bar = {~S2}
+
+     self1 = {~(s0bar & S1)}
+     self2 = {~(S0 & S1 & s2bar)}
+     self3 = {~((s0bar & S2) | (s1bar & S2))}
+     self4 = {~(s0bar & s1bar)}
+     self5 = {~(s1bar & s2bar)}
+     selout = {~((s0bar & s1bar) | S2)}
+
+     out0a = {~((a0bar & b0bar & self5 & self1) | (self4 & self1 & self2 & A0 & b0bar) |
+            (self5 & self2 & a0bar & B0))}
+     out0b = {~((a0bar & b0bar & self4 & self2 & self3) | (self5 & self1 & A0 & b0bar) |
+            (self5 & self1 & a0bar & B0) | (self4 & self2 & A0 & B0))}
+     out1a = {~((a1bar & b1bar & self1 & self5) | (self4 & self1 & self2 & A1 & b1bar) |
+            (self5 & self2 & a1bar & B1))}
+     out1b = {~((a1bar & b1bar & self4 & self2 & self3) | (self5 & self1 & A1 & b1bar) |
+            (self5 & self1 & a1bar & B1) | (self4 & self2 & A1 & B1))}
+     out2a = {~((a2bar & b2bar & self1 & self5) | (self4 & self1 & self2 & A2 & b2bar) |
+            (self5 & self2 & a2bar & B2))}
+     out2b = {~((a2bar & b2bar & self4 & self2 & self3) | (self5 & self1 & A2 & b2bar) |
+            (self5 & self1 & a2bar & B2) | (self4 & self2 & A2 & B2))}
+     out3a = {~((a3bar & b3bar & self1 & self5) | (self4 & self1 & self2 & A3 & b3bar) |
+            (self5 & self2 & a3bar & B3))}
+     out3b = {~((a3bar & b3bar & self4 & self2 & self3) | (self5 & self1 & A3 & b3bar) |
+            (self5 & self1 & a3bar & B3) | (self4 & self2 & A3 & B3))}
+
+     F0_O = {(~(Cn & selout) ^ out0b)}
+     f1in = {~((Cn & out0a & selout) | (out0a & out0b & selout))}
+     F1_O = {f1in ^ out1b}
+     f2in = {~((Cn & out0a & out1a & selout) | (out0a & out1a & out0b & selout) |
+            (out1a & out1b & selout))}
+     F2_O = {f2in ^ out2b}
+     f3in = {~((Cn & out0a & out1a & out2a & selout) | (out0a & out1a & out2a & out0b & selout) |
+            (out1a & out2a & out1b & selout) | (out2a & out2b & selout))}
+     F3_O = {f3in ^ out3b}
+     pbar = {~(Cn & out0a & out1a & out2a & out3a)}
+     gbar = {~((out0a & out1a & out2a & out3a & out0b) | (out1a & out2a & out3a & out1b) |
+            (out2a & out3a & out2b) | (out3a & out3b))}
+     OVR_O = {(gbar & pbar) ^ f3in}
+     Cn4_O = {~(pbar & gbar)}

U2DLY PINDLY(6,0,12) DPWR DGND
+     F0_O F1_O F2_O F3_O OVR_O Cn4_O
+     Cn A0 A1 A2 A3 B0 B1 B2 B3 S0 S1 S2
+     F0 F1 F2 F3 OVR Cn4
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) |
+            CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+     CARRY = {CHANGED(Cn,0)}
+
+  PINDLY:
+     F0 F1 F2 F3 = {
+       CASE(
+         SELECT & TRN_LH, DELAY(5.5ns,9ns,15ns),
+         SELECT & TRN_HL, DELAY(5.5ns,7.5ns,10.5ns),
+         DATA & TRN_LH, DELAY(3.5ns,8ns,13.5ns),
+         DATA & TRN_HL, DELAY(3ns,6ns,10ns),
+         CARRY & TRN_LH, DELAY(3ns,7ns,12ns),
+         CARRY & TRN_HL, DELAY(2.5ns,4.5ns,6.5ns),
+         DELAY(6.5ns,10ns,16ns))}
+
+     OVR = {
+       CASE(
+         SELECT & TRN_LH, DELAY(7ns,10.5ns,14.5ns),
+         SELECT & TRN_HL, DELAY(5ns,8ns,11ns),
+         DATA & TRN_LH, DELAY(6ns,9ns,12.5ns),
+         DATA & TRN_HL, DELAY(3.5ns,6.5ns,9ns),
+         CARRY & TRN_LH, DELAY(4.5ns,9ns,13.5ns),
+         CARRY & TRN_HL, DELAY(3ns,5ns,6.5ns),
+         DELAY(8ns,11.5ns,15.5ns))}
+
+     Cn4 = {
+       CASE(
+         SELECT & TRN_LH, DELAY(7ns,10.5ns,14.5ns),
+         SELECT & TRN_HL, DELAY(5ns,8ns,11ns),
+         DATA & TRN_LH, DELAY(3.5ns,7ns,10.5ns),
+         DATA & TRN_HL, DELAY(3.5ns,6.5ns,9.5ns),
+         CARRY & TRN_LH, DELAY(3ns,4.5ns,6ns),
+         CARRY & TRN_HL, DELAY(3.5ns,5ns,6.5ns),
+         DELAY(8ns,11.5ns,15.5ns))}

.ENDS 74F382
*
*
* ----------------------------------------------------------- 74LS382A ------
*  Arithmetic Logic Unit
*
*  The TTL Logic Data Book, 1988, TI Pages 2-899 to 2-906
*  bss    4/19/94
*
.SUBCKT 74LS382A S0 S1 S2 Cn A0 A1 A2 A3 B0 B1 B2 B3 Cn4 OVR F0 F1 F2 F3
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(12,6) DPWR DGND
+     S0 S1 S2 Cn A0 A1 A2 A3 B0 B1 B2 B3
+     Cn4_O OVR_O F0_O F1_O F2_O F3_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a0bar = {~A0}
+     a1bar = {~A1}
+     a2bar = {~A2}
+     a3bar = {~A3}
+     b0bar = {~B0}
+     b1bar = {~B1}
+     b2bar = {~B2}
+     b3bar = {~B3}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     s2bar = {~S2}
+
+     self1 = {~((S0 & s1bar & s2bar) | (s0bar & S1 & s2bar) | (S0 & S1 & S2))}
+     self2 = {~((S0 & s1bar) | (S0 & S2) | (s0bar & S1))}
+     self3 = {~((S0 & S1) | (s1bar & S2))}
+     self4 = {~(S0 & s1bar & s2bar)}
+     self5 = {~(S0 & S1 & s2bar)}
+     self6 = {~(s0bar & S1 & s2bar)}
+     selout = {((S0 & s2bar) | (S1 & s2bar))}
+
+     out0a = {~((self3 & A0 & b0bar) | (self2 & A0 & B0) | (self3 & a0bar & B0) |
+               (self1 & a0bar & b0bar))}
+     out0b = {~((self6 & A0 & b0bar) | (self5 & A0 & B0) | (self4 & a0bar & B0) |
+               (a0bar & b0bar))}
+     out1a = {~((self3 & A1 & b1bar) | (self2 & A1 & B1) | (self3 & a1bar & B1) |
+               (self1 & a1bar & b1bar))}
+     out1b = {~((self6 & A1 & b1bar) | (self5 & A1 & B1) | (self4 & a1bar & B1) |
+               (a1bar & b1bar))}
+     out2a = {~((self3 & A2 & b2bar) | (self2 & A2 & B2) | (self3 & a2bar & B2) |
+               (self1 & a2bar & b2bar))}
+     out2b = {~((self6 & A2 & b2bar) | (self5 & A2 & B2) | (self4 & a2bar & B2) |
+               (a2bar & b2bar))}
+     out3a = {~((self3 & A3 & b3bar) | (self2 & A3 & B3) | (self3 & a3bar & B3) |
+               (self1 & a3bar & b3bar))}
+     out3b = {~((self6 & A3 & b3bar) | (self5 & A3 & B3) | (self4 & a3bar & B3) |
+               (a3bar & b3bar))}
+
+     F0_O = {~((~(selout & Cn)) ^ out0a)}
+     F1_O = {~((~((selout & Cn & out0a) | (selout & out0b))) ^ out1a)}
+     F2_O = {~((~((selout & Cn & out0a & out1a) | (selout & out1a & out0b) | (selout & out1b))) ^ 
+                out2a)}
+     f3in = {~((selout & Cn & out0a & out1a & out2a) | (selout & out1a & out2a & out0b) |
+                (selout & out2a & out1b) | (selout & out2b))}
+     F3_O = {~(f3in ^ out3a)}
+     pbar = {(Cn & out0a & out1a & out2a & out3a)}
+     gbar = {~((out1a & out2a & out3a & out0b) | (out2a & out3a & out1b) | (out3a & out2b) |
+                 out3b | pbar)}
+     OVR_O = {f3in ^ gbar}
+     Cn4_O = {~gbar}

U2DLY PINDLY(6,0,12) DPWR DGND
+     F0_O F1_O F2_O F3_O Cn4_O OVR_O
+     Cn A0 A1 A2 A3 B0 B1 B2 B3 S0 S1 S2
+     F0 F1 F2 F3 Cn4 OVR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) |
+            CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+     CARRY = {CHANGED(Cn,0)}
+
+  PINDLY:
+     F0 F1 F2 F3 = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,35ns,53ns),
+         SELECT & TRN_HL, DELAY(-1,34ns,51ns),
+         DATA & TRN_LH, DELAY(-1,20ns,30ns),
+         DATA & TRN_HL, DELAY(-1,15ns,23ns),
+         CARRY & TRN_LH, DELAY(-1,18ns,27ns),
+         CARRY & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,36ns,54ns))}
+
+     OVR = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,38ns,57ns),
+         SELECT & TRN_HL, DELAY(-1,36ns,54ns),
+         DATA & TRN_LH, DELAY(-1,23ns,35ns),
+         DATA & TRN_HL, DELAY(-1,27ns,41ns),
+         CARRY & TRN_LH, DELAY(-1,10ns,15ns),
+         CARRY & TRN_HL, DELAY(-1,13ns,23ns),
+         DELAY(-1,39ns,58ns))}
+
+     Cn4 = {
+       CASE(
+         SELECT & TRN_LH, DELAY(-1,38ns,57ns),
+         SELECT & TRN_HL, DELAY(-1,36ns,54ns),
+         DATA & TRN_LH, DELAY(-1,28ns,42ns),
+         DATA & TRN_HL, DELAY(-1,26ns,39ns),
+         CARRY & TRN_LH, DELAY(-1,13ns,21ns),
+         CARRY & TRN_HL, DELAY(-1,11ns,20ns),
+         DELAY(-1,39ns,58ns))}

.ENDS 74LS382A

*-------------------------------------------------------------74F385-------

* Quad Serial Adder/Subtractor
* National FAST Advanced Schottky TTL Databook, 1988, pages 4-301 to 4-305
* jat 7/10/96

.SUBCKT 74F385 MRBAR CP A1 A2 A3 A4 B1 B2 B3 B4 S1 S2 S3 S4 F1 F2 F3 F4
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(22,16) DPWR DGND
+ MRBAR A1 A2 A3 A4 B1 B2 B3 B4 S1 S2 S3 S4 CP C1O C2O C3O C4O C1BARO C2BARO
+ C3BARO C4BARO
+ SET1 SET2 SET3 SET4 CLR1 CLR2 CLR3 CLR4 DC1 DC2 DC3 DC4 DS1 DS2 DS3 DS4
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+    SET1 = {~(~MRBAR & S1)}
+    SET2 = {~(~MRBAR & S2)}
+    SET3 = {~(~MRBAR & S3)}
+    SET4 = {~(~MRBAR & S4)}
+    CLR1 = {~(~MRBAR & ~S1)}
+    CLR2 = {~(~MRBAR & ~S2)}
+    CLR3 = {~(~MRBAR & ~S3)}
+    CLR4 = {~(~MRBAR & ~S4)}
+    XNOR1 = {~(~B1 ^ ~S1)}
+    XNOR2 = {~(~B2 ^ ~S2)}
+    XNOR3 = {~(~B3 ^ ~S3)}
+    XNOR4 = {~(~B4 ^ ~S4)}
+    DC1 = {~((~A1 & XNOR1) | (~A1 & C1BARO) | (XNOR1 & C1BARO))}
+    DC2 = {~((~A2 & XNOR2) | (~A2 & C2BARO) | (XNOR2 & C2BARO))}
+    DC3 = {~((~A3 & XNOR3) | (~A3 & C3BARO) | (XNOR3 & C3BARO))}
+    DC4 = {~((~A4 & XNOR4) | (~A4 & C4BARO) | (XNOR4 & C4BARO))}
+    DS1 = {XNOR1 ^ (~(~A1 ^ C1BARO))}
+    DS2 = {XNOR2 ^ (~(~A2 ^ C2BARO))}
+    DS3 = {XNOR3 ^ (~(~A3 ^ C3BARO))}
+    DS4 = {XNOR4 ^ (~(~A4 ^ C4BARO))}

U2 DFF(1) DPWR DGND
+ SET1 CLR1 CP
+ DC1 C1O C1BARO 
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(1) DPWR DGND
+ SET2 CLR2 CP
+ DC2 C2O C2BARO 
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(1) DPWR DGND
+ SET3 CLR3 CP
+ DC3 C3O C3BARO 
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 DFF(1) DPWR DGND
+ SET4 CLR4 CP
+ DC4 C4O C4BARO 
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 DFF(4) DPWR DGND
+ $D_HI MRBAR CP
+ DS1 DS2 DS3 DS4
+ F1O F2O F3O F4O
+ $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 PINDLY(4,0,2) DPWR DGND
+ F1O F2O F3O F4O
+ MRBAR CP
+ F1 F2 F3 F4
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    RESET = {CHANGED_HL(MRBAR,0)}
+    EDGE = {CHANGED_LH(CP,0)}
+ PINDLY:
+    F1 F2 F3 F4 = {
+      CASE(
+        RESET & TRN_HL, DELAY(5.5NS,9NS,12NS),
+        EDGE & TRN_LH, DELAY(3.5NS,6NS,8NS),
+        EDGE & TRN_HL, DELAY(4NS,7NS,9NS),
+        DELAY(6.5NS,10NS,13NS))}

U8 CONSTRAINT(14) DPWR DGND
+ A1 A2 A3 A4 B1 B2 B3 B4 S1 S2 S3 S4 CP MRBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CP
+   MAXFREQ = 100MEG
+ WIDTH:
+   NODE = CP
+   MIN_LO = 6NS
+   MIN_HI = 6NS
+ WIDTH:
+   NODE = MRBAR
+   MIN_LO = 6NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(12) = A1 A2 A3 A4 B1 B2 B3 B4 S1 S2 S3 S4
+   SETUPTIME = 15NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(1) = MRBAR
+   SETUPTIME_HI = 8.5NS

.ENDS 74F385

*-------------------------------------------------------------74LS385-------

* Quad Serial Adder/Subtractor
* TI Logic Data Book, 1988, pages 2-913 to 2-915
* jat 8/8/96

.SUBCKT 74LS385 CLRBAR CLK 1A 2A 3A 4A 1B 2B 3B 4B 1S/ABAR 2S/ABAR
+ 3S/ABAR 4S/ABAR 1S 2S 3S 4S
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(22,16) DPWR DGND
+ CLRBAR 1A 2A 3A 4A 1B 2B 3B 4B 1S/ABAR 2S/ABAR 3S/ABAR 4S/ABAR CLK
+ C1O C2O C3O C4O C1BARO C2BARO C3BARO C4BARO
+ SET1 SET2 SET3 SET4 CLR1 CLR2 CLR3 CLR4 DC1 DC2 DC3 DC4 DS1 DS2 DS3 DS4
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+    SET1 = {~(~CLRBAR & 1S/ABAR)}
+    SET2 = {~(~CLRBAR & 2S/ABAR)}
+    SET3 = {~(~CLRBAR & 3S/ABAR)}
+    SET4 = {~(~CLRBAR & 4S/ABAR)}
+    CLR1 = {~(~CLRBAR & ~1S/ABAR)}
+    CLR2 = {~(~CLRBAR & ~2S/ABAR)}
+    CLR3 = {~(~CLRBAR & ~3S/ABAR)}
+    CLR4 = {~(~CLRBAR & ~4S/ABAR)}
+    XNOR1 = {~(~1B ^ ~1S/ABAR)}
+    XNOR2 = {~(~2B ^ ~2S/ABAR)}
+    XNOR3 = {~(~3B ^ ~3S/ABAR)}
+    XNOR4 = {~(~4B ^ ~4S/ABAR)}
+    DC1 = {~((~1A & XNOR1) | (~1A & C1BARO) | (XNOR1 & C1BARO))}
+    DC2 = {~((~2A & XNOR2) | (~2A & C2BARO) | (XNOR2 & C2BARO))}
+    DC3 = {~((~3A & XNOR3) | (~3A & C3BARO) | (XNOR3 & C3BARO))}
+    DC4 = {~((~4A & XNOR4) | (~4A & C4BARO) | (XNOR4 & C4BARO))}
+    DS1 = {XNOR1 ^ (~(~1A ^ C1BARO))}
+    DS2 = {XNOR2 ^ (~(~2A ^ C2BARO))}
+    DS3 = {XNOR3 ^ (~(~3A ^ C3BARO))}
+    DS4 = {XNOR4 ^ (~(~4A ^ C4BARO))}

U2 DFF(1) DPWR DGND
+ SET1 CLR1 CLK
+ DC1 C1O C1BARO 
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(1) DPWR DGND
+ SET2 CLR2 CLK
+ DC2 C2O C2BARO 
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(1) DPWR DGND
+ SET3 CLR3 CLK
+ DC3 C3O C3BARO 
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 DFF(1) DPWR DGND
+ SET4 CLR4 CLK
+ DC4 C4O C4BARO 
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 DFF(4) DPWR DGND
+ $D_HI CLRBAR CLK
+ DS1 DS2 DS3 DS4
+ S1O S2O S3O S4O
+ $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 PINDLY(4,0,2) DPWR DGND
+ S1O S2O S3O S4O
+ CLRBAR CLK
+ 1S 2S 3S 4S
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    RESET = {CHANGED_HL(CLRBAR,0)}
+    EDGE = {CHANGED_LH(CLK,0)}
+ PINDLY:
+    1S 2S 3S 4S = {
+      CASE(
+        RESET & TRN_HL, DELAY(-1,18NS,30NS),
+        EDGE & TRN_LH, DELAY(-1,14NS,22NS),
+        EDGE & TRN_HL, DELAY(-1,18NS,27NS),
+        DELAY(-1,19NS,28NS))}

U8 CONSTRAINT(13) DPWR DGND
+ 1A 2A 3A 4A 1B 2B 3B 4B 1S/ABAR 2S/ABAR 3S/ABAR 4S/ABAR CLK
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLK
+   MAXFREQ = 30MEG
+ WIDTH:
+   NODE = CLK
+   MIN_LO = 16NS
+   MIN_HI = 16NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(12) = 1A 2A 3A 4A 1B 2B 3B 4B 1S/ABAR 2S/ABAR 3S/ABAR 4S/ABAR
+   SETUPTIME = 10NS
+   HOLDTIME = 3NS

.ENDS 74LS385

*--------------------------------------------------------------74LS386----

* Quad 2 Input Exclusive NOR Gate
* Motorola FAST and LS TTL Logic Data, 1992, pages 5-338 to 5-339
* jat 8/8/96

.SUBCKT 74LS386 A B Y
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 XOR DPWR DGND
+ A B YO
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(1,0,2) DPWR DGND
+ YO
+ A B
+ Y
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ PINDLY:
+  Y = {
+   CASE(
+    CHANGED(A,0) & B=='1 & TRN_LH, DELAY(-1,20NS,30NS),
+    CHANGED(B,0) & A=='1 & TRN_LH, DELAY(-1,20NS,30NS),
+    CHANGED(A,0) & B=='1 & TRN_HL, DELAY(-1,13NS,22NS),
+    CHANGED(B,0) & A=='1 & TRN_HL, DELAY(-1,13NS,22NS),
+    CHANGED(A,0) & B=='0 & TRN_LH, DELAY(-1,12NS,23NS),
+    CHANGED(B,0) & A=='0 & TRN_LH, DELAY(-1,12NS,23NS),
+    CHANGED(A,0) & B=='0 & TRN_HL, DELAY(-1,10NS,17NS),
+    CHANGED(B,0) & A=='0 & TRN_HL, DELAY(-1,10NS,17NS),
+    DELAY(-1,21NS,31NS))}

.ENDS 74LS386

* ----------------------------------------------------------- 74HC386 ------
*  Quad 2-Input Exclusive-Or Gates
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-437 to 2-438
*  bss    4/19/94
*
.SUBCKT 74HC386 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 xor DPWR DGND
+     1A 1B 1Y
+     DLY_HC386 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC386 ugate (tplhTY=12ns tplhMX=20ns tphlTY=12ns tphlMX=20ns)

.ENDS 74HC386
*
*
* ----------------------------------------------------------- 74LS386A ------
*  Quad 2-Input Exclusive-Or Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-917 to 2-918
*  bss    4/19/94
*
.SUBCKT 74LS386A 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 xor DPWR DGND
+     1A 1B 1Y_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(1,0,2) DPWR DGND
+     1Y_O
+     1A 1B
+     1Y
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ACH = {CHANGED(1A,0)}
+     BCH = {CHANGED(1B,0)}
+
+  PINDLY:
+     1Y = {
+       CASE(
+         ACH & 1B=='0 & TRN_LH, DELAY(-1,12ns,23ns),
+         BCH & 1A=='0 & TRN_LH, DELAY(-1,12ns,23ns),
+         ACH & 1B=='0 & TRN_HL, DELAY(-1,10ns,17ns),
+         BCH & 1A=='0 & TRN_HL, DELAY(-1,10ns,17ns),
+         ACH & 1B=='1 & TRN_LH, DELAY(-1,20ns,30ns),
+         BCH & 1A=='1 & TRN_LH, DELAY(-1,20ns,30ns),
+         ACH & 1B=='1 & TRN_HL, DELAY(-1,13ns,22ns),
+         BCH & 1A=='1 & TRN_HL, DELAY(-1,13ns,22ns),
+         DELAY(-1,21ns,31ns))}

.ENDS 74LS386A
*
*
* ----------------------------------------------------------- 74390 ------
*  Dual 4-Bit Decade Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-919 to 2-927
*  bss    4/19/94
*
.SUBCKT 74390 1CKA 1CKB 1CLR 1QA 1QB 1QC 1QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(1) DPWR DGND
+     $D_HI CLEAR 1CKA $D_HI $D_HI 1QA_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     $D_HI CLEAR CLKB $D_HI $D_HI 1QB_O 1QBBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     $D_HI CLEAR 1QB_O $D_HI $D_HI 1QC_O 1QCBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     $D_HI CLEAR CLKD $D_HI $D_HI 1QD_O 1QDBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(5,3) DPWR DGND
+     1CKB 1CLR 1QDBAR 1QBBAR 1QCBAR
+     CLKB CLKD CLEAR
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     CLEAR = {~1CLR}
+     CLKB = {1CKB & 1QDBAR}
+     CLKD = {1CKB & (~((1QBBAR & 1QDBAR) | (1QCBAR & 1QDBAR)))}

U6DLY PINDLY(4,0,3) DPWR DGND
+     1QA_O 1QB_O 1QC_O 1QD_O
+     1CLR 1CKA 1CKB
+     1QA 1QB 1QC 1QD
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     BLANK = {CHANGED_LH(1CLR,0)}
+     CLOCKA = {CHANGED_HL(1CKA,0)}
+     CLOCKB = {CHANGED_HL(1CKB,0)}
+
+  PINDLY:
+     1QA = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKA & TRN_LH, DELAY(-1,12ns,20ns),
+         CLOCKA & TRN_HL, DELAY(-1,13ns,20ns),
+         DELAY(-1,25ns,40ns))}
+
+     1QB = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKB & TRN_LH, DELAY(-1,13ns,21ns),
+         CLOCKB & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,25ns,40ns))}
+
+     1QC = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKB & TRN_LH, DELAY(-1,24ns,39ns),
+         CLOCKB & TRN_HL, DELAY(-1,26ns,39ns),
+         CLOCKA & TRN_LH, DELAY(-1,37ns,60ns),
+         CLOCKA & TRN_HL, DELAY(-1,39ns,60ns),
+         DELAY(-1,40ns,61ns))}
+
+     1QD = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKB & TRN_LH, DELAY(-1,13ns,21ns),
+         CLOCKB & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,25ns,40ns))}

U7CON CONSTRAINT(3) DPWR DGND
+     1CKA 1CKB 1CLR
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=1CKA
+     MAXFREQ=25MEG
+
+  FREQ:
+     NODE=1CKB
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=1CKA
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1CKB
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=1CLR
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=1CKA
+     DATA(1)=1CLR
+     SETUPTIME_LO=25ns
+
+  SETUP_HOLD:
+     CLOCK HL=1CKB
+     DATA(1)=1CLR
+     SETUPTIME_LO=25ns

.ENDS 74390
*
*
* ----------------------------------------------------------- 74HC390 ------
*  Dual 4-Bit Decade Counters
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-439 to 2-445
*  bss    4/20/94
*
.SUBCKT 74HC390 1CKA 1CKB 1CLR 1QA 1QB 1QC 1QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(1) DPWR DGND
+     $D_HI CLEAR 1CKA $D_HI $D_HI 1QA_O $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     $D_HI CLEAR CLKB $D_HI $D_HI 1QB_O 1QBBAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     $D_HI CLEAR 1QB_O $D_HI $D_HI 1QC_O 1QCBAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     $D_HI CLEAR CLKD $D_HI $D_HI 1QD_O 1QDBAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(5,3) DPWR DGND
+     1CKB 1CLR 1QDBAR 1QBBAR 1QCBAR
+     CLKB CLKD CLEAR
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     CLEAR = {~1CLR}
+     CLKB = {1CKB & 1QDBAR}
+     CLKD = {1CKB & (~((1QBBAR & 1QDBAR) | (1QCBAR & 1QDBAR)))}

U6DLY PINDLY(4,0,3) DPWR DGND
+     1QA_O 1QB_O 1QC_O 1QD_O
+     1CLR 1CKA 1CKB
+     1QA 1QB 1QC 1QD
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     BLANK = {CHANGED_LH(1CLR,0)}
+     CLOCKA = {CHANGED_HL(1CKA,0)}
+     CLOCKB = {CHANGED_HL(1CKB,0)}
+
+  PINDLY:
+     1QA = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,17ns,33ns),
+         CLOCKA & TRN_LH, DELAY(-1,16ns,24ns),
+         CLOCKA & TRN_HL, DELAY(-1,16ns,24ns),
+         DELAY(-1,18ns,34ns))}
+
+     1QB = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,17ns,33ns),
+         CLOCKB & TRN_LH, DELAY(-1,18ns,26ns),
+         CLOCKB & TRN_HL, DELAY(-1,18ns,26ns),
+         DELAY(-1,19ns,34ns))}
+
+     1QC = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,17ns,33ns),
+         CLOCKB & TRN_LH, DELAY(-1,26ns,37ns),
+         CLOCKB & TRN_HL, DELAY(-1,26ns,37ns),
+         DELAY(-1,27ns,38ns))}
+
+     1QD = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,17ns,33ns),
+         CLOCKB & TRN_LH, DELAY(-1,18ns,26ns),
+         CLOCKB & TRN_HL, DELAY(-1,18ns,26ns),
+         DELAY(-1,19ns,27ns))}

U7CON CONSTRAINT(3) DPWR DGND
+     1CKA 1CKB 1CLR
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=1CKA
+     MAXFREQ=25MEG
+
+  FREQ:
+     NODE=1CKB
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=1CKA
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1CKB
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1CLR
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=1CKA
+     DATA(1)=1CLR
+     SETUPTIME_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK HL=1CKB
+     DATA(1)=1CLR
+     SETUPTIME_LO=5ns

.ENDS 74HC390
*
*
* ----------------------------------------------------------- 74HCT390 ------
*  Dual 4-Bit Decade Counters
*
*  The High-Speed CMOS Logic Data Book, 1994, Philips Pages 637 to 642
*  bss    4/20/94
*
.SUBCKT 74HCT390 1CP0 1CP1 1MR 1Q0 1Q1 1Q2 1Q3
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(1) DPWR DGND
+     $D_HI CLEAR 1CP0 $D_HI $D_HI 1Q0_O $D_NC
+     D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     $D_HI CLEAR CLKB $D_HI $D_HI 1Q1_O 1Q1BAR
+     D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     $D_HI CLEAR 1Q1_O $D_HI $D_HI 1Q2_O 1Q2BAR
+     D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     $D_HI CLEAR CLKD $D_HI $D_HI 1Q3_O 1Q3BAR
+     D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(5,3) DPWR DGND
+     1CP1 1MR 1Q3BAR 1Q1BAR 1Q2BAR
+     CLKB CLKD CLEAR
+     D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     CLEAR = {~1MR}
+     CLKB = {1CP1 & 1Q3BAR}
+     CLKD = {1CP1 & (~((1Q1BAR & 1Q3BAR) | (1Q2BAR & 1Q3BAR)))}

U6DLY PINDLY(4,0,3) DPWR DGND
+     1Q0_O 1Q1_O 1Q2_O 1Q3_O
+     1MR 1CP0 1CP1
+     1Q0 1Q1 1Q2 1Q3
+     IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     BLANK = {CHANGED_LH(1MR,0)}
+     CLOCKA = {CHANGED_HL(1CP0,0)}
+     CLOCKB = {CHANGED_HL(1CP1,0)}
+
+  PINDLY:
+     1Q0 = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,21ns,36ns),
+         CLOCKA, DELAY(-1,21ns,34ns),
+         DELAY(-1,22ns,37ns))}
+
+     1Q1 = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,21ns,36ns),
+         CLOCKB, DELAY(-1,22ns,38ns),
+         DELAY(-1,23ns,39ns))}
+
+     1Q2 = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,21ns,36ns),
+         CLOCKB, DELAY(-1,30ns,51ns),
+         DELAY(-1,31ns,52ns))}
+
+     1Q3 = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,21ns,36ns),
+         CLOCKB, DELAY(-1,22ns,38ns),
+         DELAY(-1,23ns,39ns))}

U7CON CONSTRAINT(3) DPWR DGND
+     1CP0 1CP1 1MR
+     IO_HCT IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=1CP0
+     MAXFREQ=18MEG
+
+  FREQ:
+     NODE=1CP1
+     MAXFREQ=18MEG
+
+  WIDTH:
+     NODE=1CP0
+     MIN_HI=27ns
+     MIN_LO=27ns
+
+  WIDTH:
+     NODE=1CP1
+     MIN_HI=27ns
+     MIN_LO=27ns
+
+  WIDTH:
+     NODE=1MR
+     MIN_HI=26ns
+
+  SETUP_HOLD:
+     CLOCK HL=1CP0
+     DATA(1)=1MR
+     SETUPTIME_LO=22ns
+
+  SETUP_HOLD:
+     CLOCK HL=1CP1
+     DATA(1)=1MR
+     SETUPTIME_LO=22ns

.ENDS 74HCT390
*
*
* ----------------------------------------------------------- 74LS390 ------
*  Dual 4-Bit Decade Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-919 to 2-927
*  bss    4/20/94
*
.SUBCKT 74LS390 1CKA 1CKB 1CLR 1QA 1QB 1QC 1QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(1) DPWR DGND
+     $D_HI CLEAR 1CKA $D_HI $D_HI 1QA_O $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     $D_HI CLEAR CLKB $D_HI $D_HI 1QB_O 1QBBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     $D_HI CLEAR 1QB_O $D_HI $D_HI 1QC_O 1QCBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     $D_HI CLEAR CLKD $D_HI $D_HI 1QD_O 1QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(5,3) DPWR DGND
+     1CKB 1CLR 1QDBAR 1QBBAR 1QCBAR
+     CLKB CLKD CLEAR
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     CLEAR = {~1CLR}
+     CLKB = {1CKB & 1QDBAR}
+     CLKD = {1CKB & (~((1QBBAR & 1QDBAR) | (1QCBAR & 1QDBAR)))}

U6DLY PINDLY(4,0,3) DPWR DGND
+     1QA_O 1QB_O 1QC_O 1QD_O
+     1CLR 1CKA 1CKB
+     1QA 1QB 1QC 1QD
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     BLANK = {CHANGED_LH(1CLR,0)}
+     CLOCKA = {CHANGED_HL(1CKA,0)}
+     CLOCKB = {CHANGED_HL(1CKB,0)}
+
+  PINDLY:
+     1QA = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKA & TRN_LH, DELAY(-1,12ns,20ns),
+         CLOCKA & TRN_HL, DELAY(-1,13ns,20ns),
+         DELAY(-1,25ns,40ns))}
+
+     1QB = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKB & TRN_LH, DELAY(-1,13ns,21ns),
+         CLOCKB & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,25ns,40ns))}
+
+     1QC = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKB & TRN_LH, DELAY(-1,24ns,39ns),
+         CLOCKB & TRN_HL, DELAY(-1,26ns,39ns),
+         CLOCKA & TRN_LH, DELAY(-1,37ns,60ns),
+         CLOCKA & TRN_HL, DELAY(-1,39ns,60ns),
+         DELAY(-1,40ns,61ns))}
+
+     1QD = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKB & TRN_LH, DELAY(-1,13ns,21ns),
+         CLOCKB & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,25ns,40ns))}

U7CON CONSTRAINT(3) DPWR DGND
+     1CKA 1CKB 1CLR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=1CKA
+     MAXFREQ=25MEG
+
+  FREQ:
+     NODE=1CKB
+     MAXFREQ=12.5MEG
+
+  WIDTH:
+     NODE=1CKA
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1CKB
+     MIN_HI=40ns
+     MIN_LO=40ns
+
+  WIDTH:
+     NODE=1CLR
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=1CKA
+     DATA(1)=1CLR
+     SETUPTIME_LO=25ns
+
+  SETUP_HOLD:
+     CLOCK HL=1CKB
+     DATA(1)=1CLR
+     SETUPTIME_LO=25ns

.ENDS 74LS390
*
*
* ----------------------------------------------------------- 74393 ------
*  Dual 4-Bit Binary Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-919 to 2-927
*  bss    4/20/94
*
.SUBCKT 74393 1A 1CLR 1QA 1QB 1QC 1QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(1) DPWR DGND
+     $D_HI CLEAR 1A $D_HI $D_HI 1QA_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     $D_HI CLEAR 1QA_O $D_HI $D_HI 1QB_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     $D_HI CLEAR 1QB_O $D_HI $D_HI 1QC_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     $D_HI CLEAR 1QC_O $D_HI $D_HI 1QD_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 inv DPWR DGND
+     1CLR CLEAR
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6DLY PINDLY(4,0,2) DPWR DGND
+     1QA_O 1QB_O 1QC_O 1QD_O
+     1CLR 1A
+     1QA 1QB 1QC 1QD
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     BLANK = {CHANGED_LH(1CLR,0)}
+     CLOCKA = {CHANGED_HL(1A,0)}
+
+  PINDLY:
+     1QA = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKA & TRN_LH, DELAY(-1,12ns,20ns),
+         CLOCKA & TRN_HL, DELAY(-1,13ns,20ns),
+         DELAY(-1,25ns,40ns))}
+
*The Propagation Times For 1QB And 1QC Were Interpolated From The Delay Times
*Of 1QA And 1QD
+     1QB = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKA & TRN_LH, DELAY(-1,22ns,34ns),
+         CLOCKA & TRN_HL, DELAY(-1,22ns,34ns),
+         DELAY(-1,25ns,40ns))}
+
+     1QC = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKA & TRN_LH, DELAY(-1,31ns,47ns),
+         CLOCKA & TRN_HL, DELAY(-1,31ns,47ns),
+         DELAY(-1,32ns,48ns))}
+
+     1QD = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKA & TRN_LH, DELAY(-1,40ns,60ns),
+         CLOCKA & TRN_HL, DELAY(-1,40ns,60ns),
+         DELAY(-1,41ns,61ns))}

U7CON CONSTRAINT(2) DPWR DGND
+     1A 1CLR
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=1A
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=1A
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1CLR
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=1A
+     DATA(1)=1CLR
+     SETUPTIME_LO=25ns

.ENDS 74393
*
*
* ----------------------------------------------------------- 74F393 ------
*  Dual 4-Bit Binary Counters
*
*  The Fast TTL Logic Data Book, 1992, Philips Pages 472 to 476
*  bss    4/20/94
*
.SUBCKT 74F393 CPA MRA Q0A Q1A Q2A Q3A
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(1) DPWR DGND
+     $D_HI CLEAR CPA $D_HI $D_HI Q0A_O $D_NC
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     $D_HI CLEAR Q0A_O $D_HI $D_HI Q1A_O $D_NC
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     $D_HI CLEAR Q1A_O $D_HI $D_HI Q2A_O $D_NC
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     $D_HI CLEAR Q2A_O $D_HI $D_HI Q3A_O $D_NC
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 inv DPWR DGND
+     MRA CLEAR
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6DLY PINDLY(4,0,2) DPWR DGND
+     Q0A_O Q1A_O Q2A_O Q3A_O
+     MRA CPA
+     Q0A Q1A Q2A Q3A
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     BLANK = {CHANGED_LH(MRA,0)}
+     CLOCKA = {CHANGED_HL(CPA,0)}
+
+  PINDLY:
+     Q0A = {
+       CASE(
+         BLANK & TRN_HL, DELAY(4ns,6ns,9ns),
+         CLOCKA & TRN_LH, DELAY(3.5ns,5.5ns,8ns),
+         CLOCKA & TRN_HL, DELAY(5ns,7ns,10ns),
+         DELAY(6ns,8ns,11ns))}
+
+     Q1A = {
+       CASE(
+         BLANK & TRN_HL, DELAY(4ns,6ns,9ns),
+         CLOCKA & TRN_LH, DELAY(5ns,7ns,10ns),
+         CLOCKA & TRN_HL, DELAY(7.5ns,9.5ns,12ns),
+         DELAY(8.5ns,10.5ns,13ns))}
+
+     Q2A = {
+       CASE(
+         BLANK & TRN_HL, DELAY(4ns,6ns,9ns),
+         CLOCKA & TRN_LH, DELAY(8ns,10ns,13ns),
+         CLOCKA & TRN_HL, DELAY(9.5ns,11.5ns,14.5ns),
+         DELAY(10.5ns,12.5ns,15.5ns))}
+
+     Q3A = {
+       CASE(
+         BLANK & TRN_HL, DELAY(4ns,6ns,9ns),
+         CLOCKA & TRN_LH, DELAY(10.5ns,12.5ns,15.5ns),
+         CLOCKA & TRN_HL, DELAY(12ns,14ns,16.5ns),
+         DELAY(13ns,15ns,17.5ns))}

U7CON CONSTRAINT(2) DPWR DGND
+     CPA MRA
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CPA
+     MAXFREQ=100MEG
+
+  WIDTH:
+     NODE=CPA
+     MIN_HI=5ns
+     MIN_LO=4ns
+
+  WIDTH:
+     NODE=MRA
+     MIN_HI=4.5ns
+
+  SETUP_HOLD:
+     CLOCK HL=CPA
+     DATA(1)=MRA
+     SETUPTIME_LO=3ns

.ENDS 74F393
*
*
* ----------------------------------------------------------- 74HC393 ------
*  Dual 4-Bit Binary Counters
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-439 to 2-445
*  bss    4/20/94
*
.SUBCKT 74HC393 1A 1CLR 1QA 1QB 1QC 1QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(1) DPWR DGND
+     $D_HI CLEAR 1A $D_HI $D_HI 1QA_O $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     $D_HI CLEAR 1QA_O $D_HI $D_HI 1QB_O $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     $D_HI CLEAR 1QB_O $D_HI $D_HI 1QC_O $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     $D_HI CLEAR 1QC_O $D_HI $D_HI 1QD_O $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 inv DPWR DGND
+     1CLR CLEAR
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6DLY PINDLY(4,0,2) DPWR DGND
+     1QA_O 1QB_O 1QC_O 1QD_O
+     1CLR 1A
+     1QA 1QB 1QC 1QD
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     BLANK = {CHANGED_LH(1CLR,0)}
+     CLOCKA = {CHANGED_HL(1A,0)}
+
+  PINDLY:
+     1QA = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,17ns,33ns),
+         CLOCKA, DELAY(-1,15ns,24ns),
+         DELAY(-1,18ns,34ns))}
+
+     1QB = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,17ns,33ns),
+         CLOCKA, DELAY(-1,22ns,38ns),
+         DELAY(-1,23ns,39ns))}
+
+     1QC = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,17ns,33ns),
+         CLOCKA, DELAY(-1,28ns,48ns),
+         DELAY(-1,29ns,49ns))}
+
+     1QD = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,17ns,33ns),
+         CLOCKA, DELAY(-1,32ns,58ns),
+         DELAY(-1,33ns,59ns))}

U7CON CONSTRAINT(2) DPWR DGND
+     1A 1CLR
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=1A
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=1A
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1CLR
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=1A
+     DATA(1)=1CLR
+     SETUPTIME_LO=5ns

.ENDS 74HC393
*
*
* ----------------------------------------------------------- 74HCT393 ------
*  Dual 4-Bit Binary Counters
*
*  The High-Speed CMOS Logic Data Book, 1994, Philips Pages 643 to 647
*  bss    4/20/94
*
.SUBCKT 74HCT393 1CP 1MR 1Q0 1Q1 1Q2 1Q3
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(1) DPWR DGND
+     $D_HI CLEAR 1CP $D_HI $D_HI 1Q0_O $D_NC
+     D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     $D_HI CLEAR 1Q0_O $D_HI $D_HI 1Q1_O $D_NC
+     D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     $D_HI CLEAR 1Q1_O $D_HI $D_HI 1Q2_O $D_NC
+     D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     $D_HI CLEAR 1Q2_O $D_HI $D_HI 1Q3_O $D_NC
+     D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 inv DPWR DGND
+     1MR CLEAR
+     D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6DLY PINDLY(4,0,2) DPWR DGND
+     1Q0_O 1Q1_O 1Q2_O 1Q3_O
+     1MR 1CP
+     1Q0 1Q1 1Q2 1Q3
+     IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     BLANK = {CHANGED_LH(1MR,0)}
+     CLOCKA = {CHANGED_HL(1CP,0)}
+
+  PINDLY:
+     1Q0 = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,18ns,32ns),
+         CLOCKA, DELAY(-1,15ns,25ns),
+         DELAY(-1,19ns,33ns))}
+
+     1Q1 = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,18ns,32ns),
+         CLOCKA, DELAY(-1,21ns,35ns),
+         DELAY(-1,22ns,36ns))}
+
+     1Q2 = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,18ns,32ns),
+         CLOCKA, DELAY(-1,27ns,45ns),
+         DELAY(-1,28ns,46ns))}
+
+     1Q3 = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,18ns,32ns),
+         CLOCKA, DELAY(-1,33ns,55ns),
+         DELAY(-1,34ns,56ns))}

U7CON CONSTRAINT(2) DPWR DGND
+     1CP 1MR
+     IO_HCT IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=1CP
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=1CP
+     MIN_HI=24ns
+     MIN_LO=24ns
+
+  WIDTH:
+     NODE=1MR
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=1CP
+     DATA(1)=1MR
+     SETUPTIME_LO=5ns

.ENDS 74HCT393
*
*
* ----------------------------------------------------------- 74LS393 ------
*  Dual 4-Bit Binary Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-919 to 2-927
*  bss    4/20/94
*
.SUBCKT 74LS393 1A 1CLR 1QA 1QB 1QC 1QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(1) DPWR DGND
+     $D_HI CLEAR 1A $D_HI $D_HI 1QA_O $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     $D_HI CLEAR 1QA_O $D_HI $D_HI 1QB_O $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     $D_HI CLEAR 1QB_O $D_HI $D_HI 1QC_O $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     $D_HI CLEAR 1QC_O $D_HI $D_HI 1QD_O $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 inv DPWR DGND
+     1CLR CLEAR
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6DLY PINDLY(4,0,2) DPWR DGND
+     1QA_O 1QB_O 1QC_O 1QD_O
+     1CLR 1A
+     1QA 1QB 1QC 1QD
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     BLANK = {CHANGED_LH(1CLR,0)}
+     CLOCKA = {CHANGED_HL(1A,0)}
+
+  PINDLY:
+     1QA = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKA & TRN_LH, DELAY(-1,12ns,20ns),
+         CLOCKA & TRN_HL, DELAY(-1,13ns,20ns),
+         DELAY(-1,25ns,40ns))}
+
*The Propagation Times For 1QB And 1QC Were Interpolated From The Delay Times
*Of 1QA And 1QD
+     1QB = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKA & TRN_LH, DELAY(-1,22ns,34ns),
+         CLOCKA & TRN_HL, DELAY(-1,22ns,34ns),
+         DELAY(-1,25ns,40ns))}
+
+     1QC = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKA & TRN_LH, DELAY(-1,31ns,47ns),
+         CLOCKA & TRN_HL, DELAY(-1,31ns,47ns),
+         DELAY(-1,32ns,48ns))}
+
+     1QD = {
+       CASE(
+         BLANK & TRN_HL, DELAY(-1,24ns,39ns),
+         CLOCKA & TRN_LH, DELAY(-1,40ns,60ns),
+         CLOCKA & TRN_HL, DELAY(-1,40ns,60ns),
+         DELAY(-1,41ns,61ns))}

U7CON CONSTRAINT(2) DPWR DGND
+     1A 1CLR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=1A
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=1A
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1CLR
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=1A
+     DATA(1)=1CLR
+     SETUPTIME_LO=25ns

.ENDS 74LS393

*--------------------------------------------------------------74F395----

* 4 Bit Cascadable Shift Register with Tri-State Outputs
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 477 to 482
* jat 7/10/96

.SUBCKT 74F395 D0 D1 D2 D3 Q0 Q1 Q2 Q3 DS QS PE CPBAR OEBAR MRBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,8) DPWR DGND
+ DS PE D0 D1 D2 D3 Q0O Q1O Q2O
+ J0 J1 J2 J3 K0 K1 K2 K3
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   J0 = {(DS & ~PE) | (D0 & PE)}
+   K0 = {~J0}
+   J1 = {(Q0O & ~PE) | (D1 & PE)}
+   K1 = {~J1}
+   J2 = {(Q1O & ~PE) | (D2 & PE)}
+   K2 = {~J2}
+   J3 = {(Q2O & ~PE) | (D3 & PE)}
+   K3 = {~J3}

U2 JKFF(4) DPWR DGND
+ $D_HI MRBAR CPBAR
+ J0 J1 J2 J3 K0 K1 K2 K3
+ Q0O Q1O Q2O Q3O $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(5,1,2) DPWR DGND
+ Q0O Q1O Q2O Q3O Q3O
+ OEBAR
+ CPBAR MRBAR
+ Q0 Q1 Q2 Q3 QS
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLEAR = {CHANGED_HL(MRBAR,0)}
+   EDGE = {CHANGED_HL(CPBAR,0)}
+ TRISTATE:
+    ENABLE LO = OEBAR
+    Q0 Q1 Q2 Q3 = {
+      CASE(
+         TRN_ZH, DELAY(4NS,6.5NS,9NS),
+         TRN_ZL, DELAY(3.5NS,6NS,8NS),
+         TRN_HZ, DELAY(1NS,2.5NS,4.5NS),
+         TRN_LZ, DELAY(1NS,3.5NS,5.5NS),
+         CLEAR & TRN_HL, DELAY(5NS,7.5NS,10NS),
+         EDGE & TRN_LH, DELAY(3.5NS,6NS,8.5NS),
+         EDGE & TRN_HL, DELAY(5NS,8NS,11NS),
+         DELAY(6NS,9NS,12NS))}
+ PINDLY:
+    QS = {
+      CASE(
+         CLEAR & TRN_HL, DELAY(4.5NS,7NS,9NS),
+         EDGE & TRN_LH, DELAY(4.5NS,6NS,8.5NS),
+         EDGE & TRN_HL, DELAY(5.5NS,7.5NS,10NS),
+         DELAY(6.5NS,8.5NS,11NS))}

U4 CONSTRAINT(8) DPWR DGND
+ D0 D1 D2 D3 DS CPBAR PE MRBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CPBAR
+   MAXFREQ = 120MEG
+ WIDTH:
+   NODE = CPBAR
+   MIN_HI = 5NS
+   MIN_LO = 4NS
+ WIDTH:
+   NODE = MRBAR
+   MIN_LO = 2.5NS
+ SETUP_HOLD:
+   CLOCK HL = CPBAR
+   DATA(5) = D0 D1 D2 D3 DS
+   SETUPTIME_HI = 2.5NS
+   SETUPTIME_LO = 1.5NS
+   HOLDTIME = 1.5NS
+ SETUP_HOLD:
+   CLOCK HL = CPBAR
+   DATA(1) = PE
+   SETUPTIME_HI = 6.5NS
+   SETUPTIME_LO = 6NS
+ SETUP_HOLD:
+   CLOCK HL = CPBAR
+   DATA(1) = MRBAR
+   SETUPTIME_HI = 6NS

.ENDS 74F395

*-------------------------------------------------------------74LS395----

* 4-Bit Shift Register with Tri-State Outputs
* Motorola FAST and LS TTL Logic Databook, 1992, pages 5-345 to 5-348
* jat 8/8/96

.SUBCKT 74LS395 S P0 P1 P2 P3 DS MRBAR CPBAR OEBAR O0 O1 O2 O3 Q3
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(10,5) DPWR DGND
+ S P0 P1 P2 P3 DS Q0O Q1O Q2O CPBAR
+ D0 D1 D2 D3 CP
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   D0 = {(P0 & S) | (DS & ~S)}
+   D1 = {(P1 & S) | (Q0O & ~S)}
+   D2 = {(P2 & S) | (Q1O & ~S)}
+   D3 = {(P3 & S) | (Q2O & ~S)}
+   CP = {~CPBAR}

U2 DFF(4) DPWR DGND
+ $D_HI MRBAR CP
+ D0 D1 D2 D3
+ Q0O Q1O Q2O Q3O
+ $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(5,1,1) DPWR DGND
+ Q0O Q1O Q2O Q3O Q3O
+ OEBAR
+ MRBAR
+ O0 O1 O2 O3 Q3
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+  CLEAR = {CHANGED_HL(MRBAR,0)}
+ TRISTATE:
+ ENABLE LO = OEBAR
+  O0 O1 O2 O3 = {
+   CASE(
+     TRN_ZH, DELAY(-1,15NS,25NS),
+     TRN_ZL, DELAY(-1,17NS,25NS),
+     TRN_HZ, DELAY(-1,11NS,17NS),
+     TRN_LZ, DELAY(-1,12NS,20NS),
+     CLEAR & TRN_HL, DELAY(-1,22NS,35NS),
+     TRN_LH, DELAY(-1,15NS,30NS),
+     TRN_HL, DELAY(-1,25NS,30NS),
+     DELAY(-1,26NS,36NS))}
+ PINDLY:
+  Q3 = {
+   CASE(
+     CLEAR & TRN_HL, DELAY(-1,22NS,35NS),
+     TRN_LH, DELAY(-1,15NS,30NS),
+     TRN_HL, DELAY(-1,25NS,30NS),
+     DELAY(-1,26NS,36NS))}

U4 CONSTRAINT(7) DPWR DGND
+ P0 P1 P2 P3 CPBAR S DS
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CPBAR
+  MAXFREQ = 45MEG
+ WIDTH:
+  NODE = CPBAR
+  MIN_LO = 16NS
+  MIN_HI = 16NS
+ SETUP_HOLD:
+  CLOCK HL = CPBAR
+  DATA(5) = DS P0 P1 P2 P3
+  SETUPTIME = 20NS
+  HOLDTIME = 10NS
+ SETUP_HOLD:
+  CLOCK HL = CPBAR
+  DATA(1) = S
+  SETUPTIME = 40NS

.ENDS 74LS395

* ----------------------------------------------------------- 74LS395A ------
*  4-Bit Cascadable Shift Registers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-929 to 2-932
*  bss    4/20/94
*
.SUBCKT 74LS395A CLRBAR OCBAR LD/SHB CLK SER A B C D QA QB QC QD QDC
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(4) DPWR DGND
+     $D_HI CLRBAR CLK
+     J1 J2 J3 J4 K1 K2 K3 K4
+     QA_I QB_I QC_I QD_I QABAR QBBAR QCBAR QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(13,12) DPWR DGND
+     A B C D LD/SHB SER QA_I QB_I QC_I QABAR QBBAR QCBAR QDBAR
+     J1 J2 J3 J4 K1 K2 K3 K4 QA_O QB_O QC_O QD_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     ldb/sh = {~LD/SHB}
+     J1 = {(ldb/sh & SER) | (LD/SHB & A)}
+     J2 = {(ldb/sh & QA_I) | (LD/SHB & B)}
+     J3 = {(ldb/sh & QB_I) | (LD/SHB & C)}
+     J4 = {(ldb/sh & QC_I) | (LD/SHB & D)}
+     K1 = {~J1}
+     K2 = {~J2}
+     K3 = {~J3}
+     K4 = {~J4}
+     QA_O = {~QABAR}
+     QB_O = {~QBBAR}
+     QC_O = {~QCBAR}
+     QD_O = {~QDBAR}

U3DLY PINDLY(5,1,1) DPWR DGND
+     QA_O QB_O QC_O QD_O QD_I
+     OCBAR
+     CLRBAR
+     QA QB QC QD QDC
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     QA QB QC QD = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,22ns,35ns),
+         TRN_ZH, DELAY(-1,15ns,25ns),
+         TRN_ZL, DELAY(-1,17ns,25ns),
+         TRN_HZ, DELAY(-1,11ns,17ns),
+         TRN_LZ, DELAY(-1,12ns,20ns),
+         TRN_LH, DELAY(-1,15ns,30ns),
+         TRN_HL, DELAY(-1,20ns,30ns),
+         DELAY(-1,23ns,36ns))}
+
+  PINDLY:
+     QDC = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,22ns,35ns),
+         TRN_LH, DELAY(-1,15ns,30ns),
+         TRN_HL, DELAY(-1,20ns,30ns),
+         DELAY(-1,23ns,36ns))}

U4CON CONSTRAINT(9) DPWR DGND
+     A B C D LD/SHB SER CLK CLRBAR OCBAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=30MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=16ns
+     MIN_LO=16ns
+
+  SETUP_HOLD:
+     CLOCK HL=CLK
+     DATA(1)=LD/SHB
+     SETUPTIME=40ns
+     HOLDTIME=10ns
+     WHEN={CLRBAR!='0}
+
+  SETUP_HOLD:
+     CLOCK HL=CLK
+     DATA(5)=A B C D SER
+     SETUPTIME=20ns
+     HOLDTIME=10ns
+     WHEN={CLRBAR!='0}

.ENDS 74LS395A
*
*
* ----------------------------------------------------------- 74LS396 ------
*  Octal Storage Registers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-933 to 2-935
*  bss    4/20/94
*
.SUBCKT 74LS396 GBAR CLK D1 D2 D3 D4 1Q1 2Q1 1Q2 2Q2 1Q3 2Q3 1Q4 2Q4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI $D_HI CLK
+     D1 D2 D3 D4
+     QD1 QD2 QD3 QD4 1QD1BAR 1QD2BAR 1QD3BAR 1QD4BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(4) DPWR DGND
+     $D_HI $D_HI CLK
+     QD1 QD2 QD3 QD4
+     $D_NC $D_NC $D_NC $D_NC 2QD1BAR 2QD2BAR 2QD3BAR 2QD4BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nora(2,8) DPWR DGND
+     1QD1BAR GBAR 2QD1BAR GBAR 1QD2BAR GBAR 2QD2BAR GBAR
+     1QD3BAR GBAR 2QD3BAR GBAR 1QD4BAR GBAR 2QD4BAR GBAR
+     1Q1 2Q1 1Q2 2Q2 1Q3 2Q3 1Q4 2Q4
+     DLY_LS396 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4CON CONSTRAINT(5) DPWR DGND
+     D1 D2 D3 D4 CLK
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=30MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(4)=D1 D2 D3 D4
+     SETUPTIME=20ns
+     HOLDTIME=5ns

.model DLY_LS396 ugate (tplhTY=20ns tplhMX=30ns tphlTY=20ns tphlMX=30ns)

.ENDS 74LS396
*
*
* ----------------------------------------------------------- 74F398 ------
*  Quad 2-Port Register
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 2-483 to 2-488
*  bss    4/20/94
*
.SUBCKT 74F398 S CP I0A I1A I0B I1B I0C I1C I0D I1D QA QABAR QB QBBAR
+     QC QCBAR QD QDBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI $D_HI CP
+     D1 D2 D3 D4
+     QA_O QB_O QC_O QD_O QABAR_O QBBAR_O QCBAR_O QDBAR_O
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(9,4) DPWR DGND
+     S I0A I1A I0B I1B I0C I1C I0D I1D
+     D1 D2 D3 D4
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbar = {~S}
+     D1 = {(I0A & sbar) | (I1A & S)}
+     D2 = {(I0B & sbar) | (I1B & S)}
+     D3 = {(I0C & sbar) | (I1C & S)}
+     D4 = {(I0D & sbar) | (I1D & S)}

U3DLY PINDLY(8,0,0) DPWR DGND
+     QA_O QB_O QC_O QD_O QABAR_O QBBAR_O QCBAR_O QDBAR_O
+     QA QB QC QD QABAR QBBAR QCBAR QDBAR
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     QA QABAR QB QBBAR QC QCBAR QD QDBAR = {
+       CASE(
+         TRN_LH, DELAY(3ns,5.7ns,7.5ns),
+         TRN_HL, DELAY(3ns,6.5ns,8.5ns),
+         DELAY(4ns,7.5ns,9.5ns))}

U4CON CONSTRAINT(10) DPWR DGND
+     CP S I0A I1A I0B I1B I0C I1C I0D I1D
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CP
+     MIN_HI=4ns
+     MIN_LO=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(1)=S
+     SETUPTIME=8.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(8)=I0A I1A I0B I1B I0C I1C I0D I1D
+     SETUPTIME=3ns
+     HOLDTIME=1ns

.ENDS 74F398
*
*
* ----------------------------------------------------------- 74LS398 ------
*  Quad 2-Input Multiplexers With Storage
*
*  The TTL Logic Data Book, Vol. 2, 1985, TI Pages 3-1073 to 3-1075
*  bss    4/20/94
*
.SUBCKT 74LS398 WS CLK A1 A2 B1 B2 C1 C2 D1 D2 QA QABAR QB QBBAR
+     QC QCBAR QD QDBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI $D_HI CLK
+     D1IN D2IN D3IN D4IN
+     QA_O QB_O QC_O QD_O QABAR_O QBBAR_O QCBAR_O QDBAR_O
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(9,4) DPWR DGND
+     WS A1 A2 B1 B2 C1 C2 D1 D2
+     D1IN D2IN D3IN D4IN
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     wsbar = {~WS}
+     D1IN = {(A1 & wsbar) | (A2 & WS)}
+     D2IN = {(B1 & wsbar) | (B2 & WS)}
+     D3IN = {(C1 & wsbar) | (C2& WS)}
+     D4IN = {(D1 & wsbar) | (D2 & WS)}

U3DLY PINDLY(8,0,0) DPWR DGND
+     QA_O QB_O QC_O QD_O QABAR_O QBBAR_O QCBAR_O QDBAR_O
+     QA QB QC QD QABAR QBBAR QCBAR QDBAR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     QA QABAR QB QBBAR QC QCBAR QD QDBAR = {
+       CASE(
+         TRN_LH, DELAY(-1,18ns,27ns),
+         TRN_HL, DELAY(-1,21ns,32ns),
+         DELAY(-1,22ns,33ns))}

U4CON CONSTRAINT(10) DPWR DGND
+     CLK WS A1 A2 B1 B2 C1 C2 D1 D2
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=WS
+     SETUPTIME=45ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=A1 A2 B1 B2 C1 C2 D1 D2
+     SETUPTIME=25ns

.ENDS 74LS398

*-------------------------------------------------------------74AC399------

* Quad 2-Port Register
* National FACT Advanced CMOS Logic Databook, 1993, pages 4-225 to 4-230
* jat 8/29/96

.SUBCKT 74AC399 S CP I0A I1A I0B I1B I0C I1C I0D I1D QA QB QC QD
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,4) DPWR DGND
+ I0A I1A I0B I1B I0C I1C I0D I1D S
+ DA DB DC DD
+ D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   DA = {(I0A & ~S) | (I1A & S)}
+   DB = {(I0B & ~S) | (I1B & S)}
+   DC = {(I0C & ~S) | (I1C & S)}
+   DD = {(I0D & ~S) | (I1D & S)}

U2 DFF(4) DPWR DGND
+ $D_HI $D_HI CP
+ DA DB DC DD QAO QBO QCO QDO $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(4,0,0) DPWR DGND
+ QAO QBO QCO QDO
+ QA QB QC QD
+ IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ PINDLY:
+   QA QB QC QD = {
+     CASE(
+       TRN_LH, DELAY(2NS,5NS,8NS),
+       TRN_HL, DELAY(2NS,5NS,7.5NS),
+       DELAY(3NS,6NS,9NS))}

U4 CONSTRAINT(10) DPWR DGND
+ I0A I1A I0B I1B I0C I1C I0D I1D CP S
+ IO_AC IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CP
+  MAXFREQ = 190MEG
+ WIDTH:
+  NODE = CP
+  MIN_HI = 2NS
+  MIN_LO = 2NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(8) = I0A I1A I0B I1B I0C I1C I0D I1D
+  SETUPTIME = 1.5NS
+  HOLDTIME = 0.5NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(1) = S
+  SETUPTIME = 2NS
+  HOLDTIME = 0.5NS

.ENDS 74AC399

*-------------------------------------------------------------74ACT399------

* Quad 2-Port Register
* National FACT Advanced CMOS Logic Databook, 1993, pages 4-225 to 4-230
* jat 8/29/96

.SUBCKT 74ACT399 S CP I0A I1A I0B I1B I0C I1C I0D I1D QA QB QC QD
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,4) DPWR DGND
+ I0A I1A I0B I1B I0C I1C I0D I1D S
+ DA DB DC DD
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   DA = {(I0A & ~S) | (I1A & S)}
+   DB = {(I0B & ~S) | (I1B & S)}
+   DC = {(I0C & ~S) | (I1C & S)}
+   DD = {(I0D & ~S) | (I1D & S)}

U2 DFF(4) DPWR DGND
+ $D_HI $D_HI CP
+ DA DB DC DD QAO QBO QCO QDO $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(4,0,0) DPWR DGND
+ QAO QBO QCO QDO
+ QA QB QC QD
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ PINDLY:
+   QA QB QC QD = {
+     CASE(
+       TRN_LH, DELAY(1.5NS,7NS,8NS),
+       TRN_HL, DELAY(2NS,6NS,9NS),
+       DELAY(3NS,8NS,10NS))}

U4 CONSTRAINT(10) DPWR DGND
+ I0A I1A I0B I1B I0C I1C I0D I1D CP S
+ IO_ACT IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CP
+  MAXFREQ = 180MEG
+ WIDTH:
+  NODE = CP
+  MIN_HI = 5.5NS
+  MIN_LO = 5.5NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(8) = I0A I1A I0B I1B I0C I1C I0D I1D
+  SETUPTIME = 3NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(1) = S
+  SETUPTIME = 3NS

.ENDS 74ACT399

* ----------------------------------------------------------- 74F399 ------
*  Quad 2-Port Register
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 2-483 to 2-488
*  bss    4/20/94
*
.SUBCKT 74F399 S CP I0A I1A I0B I1B I0C I1C I0D I1D QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI $D_HI CP
+     D1 D2 D3 D4
+     QA_O QB_O QC_O QD_O $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(9,4) DPWR DGND
+     S I0A I1A I0B I1B I0C I1C I0D I1D
+     D1 D2 D3 D4
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbar = {~S}
+     D1 = {(I0A & sbar) | (I1A & S)}
+     D2 = {(I0B & sbar) | (I1B & S)}
+     D3 = {(I0C & sbar) | (I1C & S)}
+     D4 = {(I0D & sbar) | (I1D & S)}

U3DLY PINDLY(4,0,0) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     QA QB QC QD
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     QA QB QC QD = {
+       CASE(
+         TRN_LH, DELAY(3ns,5.7ns,7.5ns),
+         TRN_HL, DELAY(3ns,6.5ns,8.5ns),
+         DELAY(4ns,7.5ns,9.5ns))}

U4CON CONSTRAINT(10) DPWR DGND
+     CP S I0A I1A I0B I1B I0C I1C I0D I1D
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CP
+     MIN_HI=4ns
+     MIN_LO=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(1)=S
+     SETUPTIME=8.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(8)=I0A I1A I0B I1B I0C I1C I0D I1D
+     SETUPTIME=3ns
+     HOLDTIME=1ns

.ENDS 74F399
*
*
* ----------------------------------------------------------- 74LS399 ------
*  Quad 2-Input Multiplexers With Storage
*
*  The TTL Logic Data Book, 1988, TI Pages 2-937 to 2-939
*  bss    4/20/94
*
.SUBCKT 74LS399 WS CLK A1 A2 B1 B2 C1 C2 D1 D2 QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI $D_HI CLK
+     D1IN D2IN D3IN D4IN
+     QA_O QB_O QC_O QD_O $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(9,4) DPWR DGND
+     WS A1 A2 B1 B2 C1 C2 D1 D2
+     D1IN D2IN D3IN D4IN
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     wsbar = {~WS}
+     D1IN = {(A1 & wsbar) | (A2 & WS)}
+     D2IN = {(B1 & wsbar) | (B2 & WS)}
+     D3IN = {(C1 & wsbar) | (C2& WS)}
+     D4IN = {(D1 & wsbar) | (D2 & WS)}

U3DLY PINDLY(4,0,0) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     QA QB QC QD
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     QA QB QC QD = {
+       CASE(
+         TRN_LH, DELAY(-1,18ns,27ns),
+         TRN_HL, DELAY(-1,21ns,32ns),
+         DELAY(-1,22ns,33ns))}

U4CON CONSTRAINT(10) DPWR DGND
+     CLK WS A1 A2 B1 B2 C1 C2 D1 D2
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=WS
+     SETUPTIME=45ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=A1 A2 B1 B2 C1 C2 D1 D2
+     SETUPTIME=25ns

.ENDS 74LS399

*-------------------------------------------------------------74F412------

* Multi-Mode Buffered Latch with Tri-State Outputs
* National FAST Advanced Scottky TTL Logic Databook, 1988, pages 4-354 to 
* 4-358, jat 7/11/96

.SUBCKT 74F412 M CLRBAR STB S1BAR S2 D0 D1 D2 D3 D4 D5 D6 D7 O0 O1 O2 O3 O4
+ O5 O6 O7 INTBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(6,4) DPWR DGND
+ STB M S1BAR S2 CLRBAR QFF
+ GATE OE SET INTBARO
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   GATE = {(STB & ~M) | (M & (~S1BAR & S2))}
+   OE = {M | (~S1BAR & S2)}
+   SET = {CLRBAR & (S1BAR | ~S2)}
+   INTBARO = {QFF & (S1BAR | ~S2)}

U2 DFF(1) DPWR DGND
+ SET $D_HI STB
+ $D_LO QFF $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DLTCH(8) DPWR DGND
+ $D_HI CLRBAR GATE
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(9,1,13) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 INTBARO
+ OE
+ D0 D1 D2 D3 D4 D5 D6 D7 S1BAR S2 CLRBAR STB M
+ O0 O1 O2 O3 O4 O5 O6 O7 INTBAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+           CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+   SSSTB = {CHANGED(S1BAR,0) | CHANGED(S2,0) | CHANGED(STB,0)}
+   SS = {CHANGED(S1BAR,0) | CHANGED(S2,0)}
+   CLEAR = {CHANGED_HL(CLRBAR,0)}
+   STROBE = {CHANGED_LH(STB,0)}
+   S1 = {CHANGED(S1BAR,0)}
+   S22 = {CHANGED(S2,0)}
+   MM = {CHANGED(M,0)}
+ TRISTATE:
+   ENABLE HI = OE
+   O0 O1 O2 O3 O4 O5 O6 O7 = {
+     CASE(
+       S1 & TRN_ZH, DELAY(8NS,12.5NS,18NS),
+       S1 & TRN_ZL, DELAY(6.5NS,11NS,14NS),
+       S1 & TRN_HZ, DELAY(4.5NS,8NS,10.5NS),
+       S1 & TRN_LZ, DELAY(6.5NS,11NS,14NS),
+       S22 & TRN_ZH, DELAY(7.5NS,12.5NS,16NS),
+       S22 & TRN_ZL, DELAY(5NS,9NS,11.5NS),
+       S22 & TRN_HZ, DELAY(4.5NS,7.5NS,9.5NS),
+       S22 & TRN_LZ, DELAY(5.5NS,9.5NS,12NS),
+       MM & TRN_ZH, DELAY(5NS,8.5NS,11NS),
+       MM & TRN_ZL, DELAY(5NS,8.5NS,11NS),
+       MM & TRN_HZ, DELAY(4NS,7NS,9NS),
+       MM & TRN_LZ, DELAY(5NS,8.5NS,11NS),
+       CLEAR & TRN_HL, DELAY(7.5NS,12.5NS,16NS),
+       SSSTB & TRN_LH, DELAY(8.5NS,14.5NS,18.5NS),
+       SSSTB & TRN_HL, DELAY(7.5NS,12.5NS,16NS),
+       DATA & TRN_LH, DELAY(3.5NS,6.5NS,8.5NS),
+       DATA & TRN_HL, DELAY(2.5NS,5NS,6.5NS),
+       DELAY(9.5NS,15.5NS,19NS))}
+ PINDLY:
+   INTBAR = {
+     CASE(
+       SS & TRN_LH, DELAY(4.5NS,7.5NS,9.5NS),
+       SS & TRN_HL, DELAY(4.5NS,8NS,10.5NS),
+       STROBE & TRN_HL, DELAY(6.5NS,11NS,14NS),
+       DELAY(7.5NS,12NS,15NS))}

U5 CONSTRAINT(12) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 S1BAR S2 STB CLRBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ WIDTH:
+  NODE = S1BAR
+  MIN_HI = 8NS
+  MIN_LO = 8NS
+ WIDTH:
+  NODE = S2
+  MIN_HI = 8NS
+  MIN_LO = 8NS
+ WIDTH:
+  NODE = STB
+  MIN_HI = 8NS
+  MIN_LO = 8NS
+ WIDTH:
+  NODE = CLRBAR
+  MIN_LO = 8NS
+ SETUP_HOLD:
+   CLOCK HL = S1BAR
+   DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+   HOLDTIME = 8NS
+ SETUP_HOLD:
+   CLOCK LH = S2
+   DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+   HOLDTIME = 8NS
+ SETUP_HOLD:
+   CLOCK LH = STB
+   DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+   HOLDTIME = 8NS

.ENDS 74F412

* ----------------------------------------------------------- 74S412 ------
*  Multi-Mode Buffered Latches
*
*  The TTL Logic Data Book, Vol. 2, 1985, TI Pages 3-1077 to 3-1081
*  bss    4/20/94
*
.SUBCKT 74S412 STB M S1BAR S2 DI1 DI2 DI3 DI4 DI5 DI6 DI7 DI8 CLRBAR
+     INTBAR DO1 DO2 DO3 DO4 DO5 DO6 DO7 DO8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(1) DPWR DGND
+     PRE1 $D_HI STBBAR $D_LO $D_NC QINTBAR
+     D0_EFF IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI CLRBAR GATE
+     DI1 DI2 DI3 DI4 DI5 DI6 DI7 DI8
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(6,6) DPWR DGND
+     CLRBAR STB M S1BAR S2 QINTBAR
+     PRE1 GATE OE INTBAR_O SEL STBBAR
+     D0_GATE IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     STBBAR = {~STB}
+     s1 = {~S1BAR}
+     SEL = {s1 & S2}
+     INTBAR_O = {~(SEL | QINTBAR)}
+     clr = {~CLRBAR}
+     PRE1 = {~(clr | SEL)}
+     mbar = {~M}
+     OE = {SEL | M}
+     GATE = {(STB & mbar) | (SEL & M)}

U4DLY PINDLY(9,1,13) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 INTBAR_O
+     OE
+     STB M S1BAR S2 CLRBAR DI1 DI2 DI3 DI4 DI5 DI6 DI7 DI8
+     DO1 DO2 DO3 DO4 DO5 DO6 DO7 DO8 INTBAR
+     IO_S MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(DI1,0) | CHANGED(DI2,0) | CHANGED(DI3,0) | CHANGED(DI4,0) |
+           CHANGED(DI5,0) | CHANGED(DI6,0) | CHANGED(DI7,0) | CHANGED(DI8,0)}
+     SELECT = {CHANGED(S1BAR,0) | CHANGED(S2,0)}
+     MODE = {CHANGED(M,0)}
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     STROBE = {CHANGED(STB,0)}
+
+  TRISTATE:
+     ENABLE HI=OE
+     DO1 DO2 DO3 DO4 DO5 DO6 DO7 DO8 = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,18ns,27ns),
+         (STROBE | SELECT) & TRN_LH, DELAY(-1,18ns,27ns),
+         (STROBE | SELECT) & TRN_HL, DELAY(-1,15ns,25ns),
+         DATA & TRN_LH, DELAY(-1,12ns,20ns),
+         DATA & TRN_HL, DELAY(-1,10ns,20ns),
+         TRN_ZH, DELAY(-1,21ns,35ns),
+         TRN_ZL, DELAY(-1,25ns,40ns),
+         TRN_HZ, DELAY(-1,9ns,20ns),
+         TRN_LZ, DELAY(-1,12ns,20ns),
+         DELAY(-1,26ns,41ns))}
+
+  PINDLY:
+     INTBAR = {
+       CASE(
+         STROBE & TRN_HL, DELAY(-1,16ns,25ns),
+         SELECT & TRN_LH, DELAY(-1,12ns,20ns),
+         DELAY(-1,17ns,26ns))}

U5CON CONSTRAINT(12) DPWR DGND
+     STB SEL CLRBAR DI1 DI2 DI3 DI4 DI5 DI6 DI7 DI8 GATE
+     IO_S IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=STB
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=SEL
+     MIN_HI=25ns
+     MIN_LO=25ns
+     MESSAGE="Pulse Width Error - S1BAR & S2"
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=25ns
+
+  SETUP_HOLD:
+     CLOCK HL=GATE
+     DATA(8)=DI1 DI2 DI3 DI4 DI5 DI6 DI7 DI8
+     SETUPTIME=15ns
+     HOLDTIME=20ns

.ENDS 74S412
*
*
* ----------------------------------------------------------- 74425 ------
*  Quad Bus Buffers With 3-State Outputs
*
*  The TTL Logic Data Book, Vol. 2, 1985, TI Pages 3-1089 to 3-1091
*  bss    4/20/94
*
.SUBCKT 74425 A GBAR Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     GBAR G
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3 DPWR DGND
+     A G Y
+     DLY_425 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_425 utgate (tplhTY=8ns tplhMX=13ns tphlTY=12ns tphlMX=18ns
+                    tplzTY=7ns tplzMX=12ns tphzTY=5ns tphzMX=8ns
+                    tpzlTY=16ns tpzlMX=25ns tpzhTY=11ns tpzhMX=17ns)

.ENDS 74425
*
*
* ----------------------------------------------------------- 74426 ------
*  Quad Bus Buffers With 3-State Outputs
*
*  The TTL Logic Data Book, Vol. 2, 1985, TI Pages 3-1089 to 3-1091
*  bss    4/20/94
*
.SUBCKT 74426 A G Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 buf3 DPWR DGND
+     A G Y
+     DLY_426 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_426 utgate (tplhTY=8ns tplhMX=13ns tphlTY=12ns tphlMX=18ns
+                    tplzTY=12ns tplzMX=18ns tphzTY=10ns tphzMX=16ns
+                    tpzlTY=16ns tpzlMX=25ns tpzhTY=11ns tpzhMX=18ns)

.ENDS 74426

*-------------------------------------------------------------74F432------

* Multi-Mode Buffered Latch with Tri-State Outputs
* National FAST Advanced Scottky TTL Logic Databook, 1988, pages 4-368 to 
* 4-373, jat 7/11/96

.SUBCKT 74F432 M CLRBAR STB S1BAR S2 D0 D1 D2 D3 D4 D5 D6 D7 O0BAR O1BAR
+ O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR INTBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(6,4) DPWR DGND
+ STB M S1BAR S2 CLRBAR QFF
+ GATE OE SET INTBARO
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   GATE = {(STB & ~M) | (M & (~S1BAR & S2))}
+   OE = {M | (~S1BAR & S2)}
+   SET = {CLRBAR & (S1BAR | ~S2)}
+   INTBARO = {QFF & (S1BAR | ~S2)}

U2 DFF(1) DPWR DGND
+ SET $D_HI STB
+ $D_LO QFF $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DLTCH(8) DPWR DGND
+ $D_HI CLRBAR GATE
+ D0 D1 D2 D3 D4 D5 D6 D7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(9,1,13) DPWR DGND
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR INTBARO
+ OE
+ D0 D1 D2 D3 D4 D5 D6 D7 S1BAR S2 CLRBAR STB M
+ O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR INTBAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+           CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+   SSSTB = {CHANGED(S1BAR,0) | CHANGED(S2,0) | CHANGED(STB,0)}
+   SS = {CHANGED(S1BAR,0) | CHANGED(S2,0)}
+   CLEAR = {CHANGED_HL(CLRBAR,0)}
+   STROBE = {CHANGED_LH(STB,0)}
+   S1 = {CHANGED(S1BAR,0)}
+   S22 = {CHANGED(S2,0)}
+   MM = {CHANGED(M,0)}
+ TRISTATE:
+   ENABLE HI = OE
+   O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR = {
+     CASE(
+       (S1 | S22) & TRN_ZH, DELAY(4.5NS,13NS,18NS),
+       (S1 | S22) & TRN_ZL, DELAY(5NS,11NS,15NS),
+       (S1 | S22) & TRN_HZ, DELAY(4NS,8NS,11NS),
+       (S1 | S22) & TRN_LZ, DELAY(5NS,11NS,15.5NS),
+       MM & TRN_ZH, DELAY(6NS,8.5NS,14NS),
+       MM & TRN_ZL, DELAY(6NS,8.5NS,13NS),
+       MM & TRN_HZ, DELAY(4.5NS,6.5NS,9.5NS),
+       MM & TRN_LZ, DELAY(5.5NS,9.5NS,12NS),
+       CLEAR & TRN_HL, DELAY(7NS,15NS,18.5NS),
+       MM & TRN_LH, DELAY(9NS,15NS,19NS),
+       MM & TRN_HL, DELAY(6.5NS,1NS,14NS),
+       SSSTB & TRN_LH, DELAY(8.5NS,16NS,21NS),
+       SSSTB & TRN_HL, DELAY(6.5NS,12.5NS,16NS),
+       DATA & TRN_LH, DELAY(3.5NS,8.5NS,10.5NS),
+       DATA & TRN_HL, DELAY(2.5NS,5.5NS,7NS),
+       DELAY(10NS,17NS,22NS))}
+ PINDLY:
+   INTBAR = {
+     CASE(
+       S1 & TRN_LH, DELAY(4NS,7.5NS,9.5NS),
+       S1 & TRN_HL, DELAY(5.5NS,7.5NS,12NS),
+       S22 & TRN_LH, DELAY(4NS,7.5NS,9.5NS),
+       S22 & TRN_HL, DELAY(4.5NS,7.5NS,9.5NS),
+       STROBE & TRN_HL, DELAY(6NS,11.5NS,14.5NS),
+       DELAY(7NS,12.5NS,15.5NS))}

U5 CONSTRAINT(12) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 S1BAR S2 STB CLRBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ WIDTH:
+  NODE = S1BAR
+  MIN_HI = 9NS
+  MIN_LO = 7NS
+ WIDTH:
+  NODE = S2
+  MIN_HI = 7NS
+  MIN_LO = 9NS
+ WIDTH:
+  NODE = STB
+  MIN_HI = 5NS
+  MIN_LO = 5NS
+ WIDTH:
+  NODE = CLRBAR
+  MIN_LO = 10NS
+ SETUP_HOLD:
+   CLOCK HL = S1BAR
+   DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+   HOLDTIME_HI = 11NS
+   HOLDTIME_LO = 8.5NS
+ SETUP_HOLD:
+   CLOCK LH = S2
+   DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+   HOLDTIME_HI = 9NS
+   HOLDTIME_LO = 7NS
+ SETUP_HOLD:
+   CLOCK LH = STB
+   DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+   HOLDTIME_HI = 13NS
+   HOLDTIME_LO = 10NS

.ENDS 74F432

*------------------------------------------------------------74LS440----

* 74LS440 Quadruple Tridirectional Bus Transceivers with Open-Collector
* Outputs and Noninverting logic
* Note that on the logic diagram, S0 and S1 need to be reversed for 
* the AND-OR-INVERT logic section, but preserved as shown for 
* the 3 enable AND gates.
* The TTL Data Book, 1988, 2-951 to 2-956
* jat 8/8/95

.SUBCKT 74LS440
+ CSBAR GABAR GBBAR GCBAR S0 S1 A1 A2 A3 A4 B1 B2 B3 B4 C1 C2 C3 C4
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 INVA(12) DPWR DGND
+ A1 A2 A3 A4 B1 B2 B3 B4 C1 C2 C3 C4
+ A1BAR A2BAR A3BAR A4BAR B1BAR B2BAR B3BAR B4BAR C1BAR C2BAR C3BAR C4BAR
+ D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 LOGICEXP(18,12) DPWR DGND
+ S0 S1 A1BAR A2BAR A3BAR A4BAR B1BAR B2BAR B3BAR B4BAR C1BAR C2BAR 
+ C3BAR C4BAR CSBAR GABAR GBBAR GCBAR 
+ OUT_A1 OUT_B1 OUT_C1 OUT_A2 OUT_B2 OUT_C2 OUT_A3 OUT_B3 OUT_C3 OUT_A4
+ OUT_B4 OUT_C4
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+ S1BAR = {~S1}
+ S0BAR = {~S0}
+ SXNOR = {~(S0 ^ S1)}
+ ENABA = {(~CSBAR) & (~GABAR) & (~SXNOR)}
+ ENABB = {(~CSBAR) & (~GBBAR) & (~S0)}
+ ENABC = {(~CSBAR) & (~GCBAR) & (~S1)}
+ OUT_A1 = {~((S0 & B1BAR & S1BAR & ENABA) | (S0BAR & C1BAR & S1 & ENABA))}
+ OUT_B1 = {~((S0BAR & A1BAR & S1BAR & ENABB) | (S0BAR & C1BAR & S1 & ENABB))}
+ OUT_C1 = {~((S0BAR & A1BAR & S1BAR & ENABC) | (S0 & B1BAR & S1BAR & ENABC))}
+ OUT_A2 = {~((S0 & B2BAR & S1BAR & ENABA) | (S0BAR & C2BAR & S1 & ENABA))}
+ OUT_B2 = {~((S0BAR & A2BAR & S1BAR & ENABB) | (S0BAR & C2BAR & S1 & ENABB))}
+ OUT_C2 = {~((S0BAR & A2BAR & S1BAR & ENABC) | (S0 & B2BAR & S1BAR & ENABC))}
+ OUT_A3 = {~((S0 & B3BAR & S1BAR & ENABA) | (S0BAR & C3BAR & S1 & ENABA))}
+ OUT_B3 = {~((S0BAR & A3BAR & S1BAR & ENABB) | (S0BAR & C3BAR & S1 & ENABB))}
+ OUT_C3 = {~((S0BAR & A3BAR & S1BAR & ENABC) | (S0 & B3BAR & S1BAR & ENABC))}
+ OUT_A4 = {~((S0 & B4BAR & S1BAR & ENABA) | (S0BAR & C4BAR & S1 & ENABA))}
+ OUT_B4 = {~((S0BAR & A4BAR & S1BAR & ENABB) | (S0BAR & C4BAR & S1 & ENABB))}
+ OUT_C4 = {~((S0BAR & A4BAR & S1BAR & ENABC) | (S0 & B4BAR & S1BAR & ENABC))}

U3 PINDLY(12,0,6) DPWR DGND
+ OUT_A1 OUT_B1 OUT_C1 OUT_A2 OUT_B2 OUT_C2 OUT_A3 OUT_B3 OUT_C3 OUT_A4
+ OUT_B4 OUT_C4
+ GABAR GBBAR GCBAR S0 S1 CSBAR
+ A1 B1 C1 A2 B2 C2 A3 B3 C3 A4 B4 C4
+ IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+          ENABGA = {CHANGED(GABAR,0)}
+          ENABGB = {CHANGED(GBBAR,0)}
+          ENABGC = {CHANGED(GCBAR,0)}
+          SELECT = {CHANGED(S0,0) | CHANGED(S1,0)}
+          CHIP = {CHANGED(CSBAR,0)}
+ PINDLY:
+     A1 A2 A3 A4 = {
+       CASE(
+          CHIP & TRN_LH, DELAY(-1,31NS,45NS),
+          CHIP & TRN_HL, DELAY(-1,28NS,45NS),
+          ENABGA & TRN_LH, DELAY(-1,29NS,45NS),
+          ENABGA & TRN_HL, DELAY(-1,27NS,40NS),
+          SELECT & TRN_LH, DELAY(-1,33NS,50NS),
+          SELECT & TRN_HL, DELAY(-1,32NS,50NS),
+          TRN_LH, DELAY(-1,24NS,35NS),
+          TRN_HL, DELAY(-1,20NS,30NS),
+          DELAY(-1,34NS,51NS))}
+     B1 B2 B3 B4 = {
+       CASE(
+          CHIP & TRN_LH, DELAY(-1,31NS,45NS),
+          CHIP & TRN_HL, DELAY(-1,28NS,45NS),
+          ENABGB & TRN_LH, DELAY(-1,29NS,45NS),
+          ENABGB & TRN_HL, DELAY(-1,27NS,40NS),
+          SELECT & TRN_LH, DELAY(-1,33NS,50NS),
+          SELECT & TRN_HL, DELAY(-1,32NS,50NS),
+          TRN_LH, DELAY(-1,24NS,35NS),
+          TRN_HL, DELAY(-1,20NS,30NS),
+          DELAY(-1,34NS,51NS))}
+     C1 C2 C3 C4 = {
+       CASE(
+          CHIP & TRN_LH, DELAY(-1,31NS,45NS),
+          CHIP & TRN_HL, DELAY(-1,28NS,45NS),
+          ENABGC & TRN_LH, DELAY(-1,29NS,45NS),
+          ENABGC & TRN_HL, DELAY(-1,27NS,40NS),
+          SELECT & TRN_LH, DELAY(-1,33NS,50NS),
+          SELECT & TRN_HL, DELAY(-1,32NS,50NS),
+          TRN_LH, DELAY(-1,24NS,35NS),
+          TRN_HL, DELAY(-1,20NS,30NS),
+          DELAY(-1,34NS,51NS))}

.ENDS 74LS440
*
*
*------------------------------------------------------------74LS441----

* 74LS441 Quadruple Tridirectional Bus Transceivers with Open-Collector
* Outputs and Inverting Logic
* Note that on the logic diagram, S0 and S1 need to be reversed for 
* the AND-OR-INVERT logic section, but preserved as shown for 
* the 3 enable AND gates.
* The TTL Data Book, 1988, 2-951 to 2-956
* jat 8/9/95

.SUBCKT 74LS441
+ CSBAR GABAR GBBAR GCBAR S0 S1 A1 A2 A3 A4 B1 B2 B3 B4 C1 C2 C3 C4
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 BUFA(12) DPWR DGND
+ A1 A2 A3 A4 B1 B2 B3 B4 C1 C2 C3 C4
+ A1ST A2ST A3ST A4ST B1ST B2ST B3ST B4ST C1ST C2ST C3ST C4ST
+ D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 LOGICEXP(18,12) DPWR DGND
+ S0 S1 A1ST A2ST A3ST A4ST B1ST B2ST B3ST B4ST C1ST C2ST C3ST C4ST
+ CSBAR GABAR GBBAR GCBAR 
+ OUT_A1 OUT_B1 OUT_C1 OUT_A2 OUT_B2 OUT_C2 OUT_A3 OUT_B3 OUT_C3 OUT_A4
+ OUT_B4 OUT_C4
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+ S1BAR = {~S1}
+ S0BAR = {~S0}
+ SXNOR = {~(S0 ^ S1)}
+ ENABA = {(~CSBAR) & (~GABAR) & (~SXNOR)}
+ ENABB = {(~CSBAR) & (~GBBAR) & (~S0)}
+ ENABC = {(~CSBAR) & (~GCBAR) & (~S1)}
+ OUT_A1 = {~((S0 & B1ST & S1BAR & ENABA) | (S0BAR & C1ST & S1 & ENABA))}
+ OUT_B1 = {~((S0BAR & A1ST & S1BAR & ENABB) | (S0BAR & C1ST & S1 & ENABB))}
+ OUT_C1 = {~((S0BAR & A1ST & S1BAR & ENABC) | (S0 & B1ST & S1BAR & ENABC))}
+ OUT_A2 = {~((S0 & B2ST & S1BAR & ENABA) | (S0BAR & C2ST & S1 & ENABA))}
+ OUT_B2 = {~((S0BAR & A2ST & S1BAR & ENABB) | (S0BAR & C2ST & S1 & ENABB))}
+ OUT_C2 = {~((S0BAR & A2ST & S1BAR & ENABC) | (S0 & B2ST & S1BAR & ENABC))}
+ OUT_A3 = {~((S0 & B3ST & S1BAR & ENABA) | (S0BAR & C3ST & S1 & ENABA))}
+ OUT_B3 = {~((S0BAR & A3ST & S1BAR & ENABB) | (S0BAR & C3ST & S1 & ENABB))}
+ OUT_C3 = {~((S0BAR & A3ST & S1BAR & ENABC) | (S0 & B3ST & S1BAR & ENABC))}
+ OUT_A4 = {~((S0 & B4ST & S1BAR & ENABA) | (S0BAR & C4ST & S1 & ENABA))}
+ OUT_B4 = {~((S0BAR & A4ST & S1BAR & ENABB) | (S0BAR & C4ST & S1 & ENABB))}
+ OUT_C4 = {~((S0BAR & A4ST & S1BAR & ENABC) | (S0 & B4ST & S1BAR & ENABC))}

U3 PINDLY(12,0,6) DPWR DGND
+ OUT_A1 OUT_B1 OUT_C1 OUT_A2 OUT_B2 OUT_C2 OUT_A3 OUT_B3 OUT_C3 OUT_A4
+ OUT_B4 OUT_C4
+ GABAR GBBAR GCBAR S0 S1 CSBAR
+ A1 B1 C1 A2 B2 C2 A3 B3 C3 A4 B4 C4
+ IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+          ENABGA = {CHANGED(GABAR,0)}
+          ENABGB = {CHANGED(GBBAR,0)}
+          ENABGC = {CHANGED(GCBAR,0)}
+          SELECT = {CHANGED(S0,0) | CHANGED(S1,0)}
+          CHIP = {CHANGED(CSBAR,0)}
+ PINDLY:
+     A1 A2 A3 A4 = {
+       CASE(
+          CHIP & TRN_LH, DELAY(-1,26NS,40NS),
+          CHIP & TRN_HL, DELAY(-1,21NS,30NS),
+          ENABGA & TRN_LH, DELAY(-1,23NS,35NS),
+          ENABGA & TRN_HL, DELAY(-1,20NS,30NS),
+          SELECT & TRN_LH, DELAY(-1,27NS,40NS),
+          SELECT & TRN_HL, DELAY(-1,26NS,40NS),
+          TRN_LH, DELAY(-1,21NS,30NS),
+          TRN_HL, DELAY(-1,9NS,15NS),
+          DELAY(-1,28NS,41NS))}
+     B1 B2 B3 B4 = {
+       CASE(
+          CHIP & TRN_LH, DELAY(-1,26NS,40NS),
+          CHIP & TRN_HL, DELAY(-1,21NS,30NS),
+          ENABGB & TRN_LH, DELAY(-1,23NS,35NS),
+          ENABGB & TRN_HL, DELAY(-1,20NS,30NS),
+          SELECT & TRN_LH, DELAY(-1,27NS,40NS),
+          SELECT & TRN_HL, DELAY(-1,26NS,40NS),
+          TRN_LH, DELAY(-1,21NS,30NS),
+          TRN_HL, DELAY(-1,9NS,15NS),
+          DELAY(-1,28NS,41NS))}
+     C1 C2 C3 C4 = {
+       CASE(
+          CHIP & TRN_LH, DELAY(-1,26NS,40NS),
+          CHIP & TRN_HL, DELAY(-1,21NS,30NS),
+          ENABGC & TRN_LH, DELAY(-1,23NS,35NS),
+          ENABGC & TRN_HL, DELAY(-1,20NS,30NS),
+          SELECT & TRN_LH, DELAY(-1,27NS,40NS),
+          SELECT & TRN_HL, DELAY(-1,26NS,40NS),
+          TRN_LH, DELAY(-1,21NS,30NS),
+          TRN_HL, DELAY(-1,9NS,15NS),
+          DELAY(-1,28NS,41NS))}

.ENDS 74LS441
*
*
* ----------------------------------------------------------- 74LS442 ------
*  Quad Tridirectional Bus Transceivers With Tri-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-951 to 2-956
*  bss    4/20/94
*
.SUBCKT 74LS442 S0 S1 CSBAR GABAR GBBAR GCBAR A1 B1 C1 A2 B2 C2
+     A3 B3 C3 A4 B4 C4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(12) DPWR DGND
+     A1 B1 C1 A2 B2 C2 A3 B3 C3 A4 B4 C4
+     A1BAR B1BAR C1BAR A2BAR B2BAR C2BAR A3BAR B3BAR C3BAR 
+     A4BAR B4BAR C4BAR
+     D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(30,15) DPWR DGND
+     S0 S1 CSBAR GABAR GBBAR GCBAR A1 B1 C1 A2 B2 C2 A3 B3 C3 A4 B4 C4
+     A1BAR B1BAR C1BAR A2BAR B2BAR C2BAR A3BAR B3BAR C3BAR 
+     A4BAR B4BAR C4BAR
+     ENAB1 ENAB2 ENAB3 A1O B1O C1O A2O B2O C2O A3O B3O C3O A4O B4O C4O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     sel = {~(S0 ^ S1)}
+     ENAB1 = {~(S1 | GCBAR | CSBAR)}
+     ENAB2 = {~(S0 | GBBAR | CSBAR)}
+     ENAB3 = {~(sel | GABAR | CSBAR)}
+
+     A1O = {~((s1bar & B1BAR & S0) | (S1 & C1BAR & s0bar))}
+     B1O = {~((s1bar & A1BAR & s0bar) | (S1 & C1BAR & s0bar))}
+     C1O = {~((s1bar & A1BAR & s0bar) | (s1bar & B1BAR & S0))}
+     A2O = {~((s1bar & B2BAR & S0) | (S1 & C2BAR & s0bar))}
+     B2O = {~((s1bar & A2BAR & s0bar) | (S1 & C2BAR & s0bar))}
+     C2O = {~((s1bar & A2BAR & s0bar) | (s1bar & B2BAR & S0))}
+     A3O = {~((s1bar & B3BAR & S0) | (S1 & C3BAR & s0bar))}
+     B3O = {~((s1bar & A3BAR & s0bar) | (S1 & C3BAR & s0bar))}
+     C3O = {~((s1bar & A3BAR & s0bar) | (s1bar & B3BAR & S0))}
+     A4O = {~((s1bar & B4BAR & S0) | (S1 & C4BAR & s0bar))}
+     B4O = {~((s1bar & A4BAR & s0bar) | (S1 & C4BAR & s0bar))}
+     C4O = {~((s1bar & A4BAR & s0bar) | (s1bar & B4BAR & S0))}

U3DLY PINDLY(12,3,6) DPWR DGND
+     A1O B1O C1O A2O B2O C2O A3O B3O C3O A4O B4O C4O
+     ENAB1 ENAB2 ENAB3
+     S0 S1 CSBAR GABAR GBBAR GCBAR
+     A1 B1 C1 A2 B2 C2 A3 B3 C3 A4 B4 C4
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     MODE = {CHANGED(S0,0) | CHANGED(S1,0)}
+     SELECT = {CHANGED_HL(CSBAR,0)}
+     ENABLEA = {CHANGED_HL(GABAR,0)}
+     ENABLEB = {CHANGED_HL(GBBAR,0)}
+     ENABLEC = {CHANGED_HL(GCBAR,0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB3
+     A1 A2 A3 A4 = {
+       CASE(
+         MODE & TRN_ZL, DELAY(-1,28ns,42ns),
+         SELECT & TRN_ZL, DELAY(-1,23ns,36ns),
+         ENABLEA & TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_ZH, DELAY(-1,21ns,32ns),
+         TRN_LZ, DELAY(-1,14ns,35ns),
+         TRN_HZ, DELAY(-1,14ns,25ns),
+         TRN_LH, DELAY(-1,10ns,14ns),
+         TRN_HL, DELAY(-1,13ns,20ns),
+         DELAY(-1,29ns,43ns))}
+
+  TRISTATE:
+     ENABLE HI=ENAB2
+     B1 B2 B3 B4 = {
+       CASE(
+         MODE & TRN_ZL, DELAY(-1,28ns,42ns),
+         SELECT & TRN_ZL, DELAY(-1,23ns,36ns),
+         ENABLEB & TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_ZH, DELAY(-1,21ns,32ns),
+         TRN_LZ, DELAY(-1,14ns,35ns),
+         TRN_HZ, DELAY(-1,14ns,25ns),
+         TRN_LH, DELAY(-1,10ns,14ns),
+         TRN_HL, DELAY(-1,13ns,20ns),
+         DELAY(-1,29ns,43ns))}
+
+  TRISTATE:
+     ENABLE HI=ENAB1
+     C1 C2 C3 C4 = {
+       CASE(
+         MODE & TRN_ZL, DELAY(-1,28ns,42ns),
+         SELECT & TRN_ZL, DELAY(-1,23ns,36ns),
+         ENABLEC & TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_ZH, DELAY(-1,21ns,32ns),
+         TRN_LZ, DELAY(-1,14ns,35ns),
+         TRN_HZ, DELAY(-1,14ns,25ns),
+         TRN_LH, DELAY(-1,10ns,14ns),
+         TRN_HL, DELAY(-1,13ns,20ns),
+         DELAY(-1,29ns,43ns))}

.ENDS 74LS442
*
*
* ----------------------------------------------------------- 74LS443 ------
*  Quad Tridirectional Bus Transceivers With Tri-State Outputs
*
*  The TTL Logic Data Book, Vol. 2, 1985, TI Pages 3-1097 to 3-1102
*  bss    4/22/94
*
.SUBCKT 74LS443 S0 S1 CSBAR GABAR GBBAR GCBAR A1 B1 C1 A2 B2 C2
+     A3 B3 C3 A4 B4 C4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 bufa(12) DPWR DGND
+     A1 B1 C1 A2 B2 C2 A3 B3 C3 A4 B4 C4
+     A1BUF B1BUF C1BUF A2BUF B2BUF C2BUF 
+     A3BUF B3BUF C3BUF A4BUF B4BUF C4BUF
+     D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(30,15) DPWR DGND
+     S0 S1 CSBAR GABAR GBBAR GCBAR A1 B1 C1 A2 B2 C2 A3 B3 C3 A4 B4 C4
+     A1BUF B1BUF C1BUF A2BUF B2BUF C2BUF 
+     A3BUF B3BUF C3BUF A4BUF B4BUF C4BUF
+     ENAB1 ENAB2 ENAB3 A1O B1O C1O A2O B2O C2O A3O B3O C3O A4O B4O C4O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     sel = {~(S0 ^ S1)}
+     ENAB1 = {~(S1 | GCBAR | CSBAR)}
+     ENAB2 = {~(S0 | GBBAR | CSBAR)}
+     ENAB3 = {~(sel | GABAR | CSBAR)}
+
+     A1O = {~((S1 & C1BUF & s0bar) | (s1bar & B1BUF & S0))}
+     B1O = {~((s1bar & A1BUF & s0bar) | (S1 & C1BUF & s0bar))}
+     C1O = {~((s1bar & A1BUF & s0bar) | (s1bar & B1BUF & S0))}
+     A2O = {~((S1 & C2BUF & s0bar) | (s1bar & B2BUF & S0))}
+     B2O = {~((s1bar & A2BUF & s0bar) | (S1 & C2BUF & s0bar))}
+     C2O = {~((s1bar & A2BUF & s0bar) | (s1bar & B2BUF & S0))}
+     A3O = {~((S1 & C3BUF & s0bar) | (s1bar & B3BUF & S0))}
+     B3O = {~((s1bar & A3BUF & s0bar) | (S1 & C3BUF & s0bar))}
+     C3O = {~((s1bar & A3BUF & s0bar) | (s1bar & B3BUF & S0))}
+     A4O = {~((S1 & C4BUF & s0bar) | (s1bar & B4BUF & S0))}
+     B4O = {~((s1bar & A4BUF & s0bar) | (S1 & C4BUF & s0bar))}
+     C4O = {~((s1bar & A4BUF & s0bar) | (s1bar & B4BUF & S0))}

U3DLY PINDLY(12,3,6) DPWR DGND
+     A1O B1O C1O A2O B2O C2O A3O B3O C3O A4O B4O C4O
+     ENAB1 ENAB2 ENAB3
+     S0 S1 CSBAR GABAR GBBAR GCBAR
+     A1 B1 C1 A2 B2 C2 A3 B3 C3 A4 B4 C4
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     MODE = {CHANGED(S0,0) | CHANGED(S1,0)}
+     SELECT = {CHANGED_HL(CSBAR,0)}
+     ENABLEA = {CHANGED(GABAR,0)}
+     ENABLEB = {CHANGED(GBBAR,0)}
+     ENABLEC = {CHANGED(GCBAR,0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB3
+     A1 A2 A3 A4 = {
+       CASE(
+         MODE & TRN_ZL, DELAY(-1,28ns,42ns),
+         SELECT & TRN_ZL, DELAY(-1,24ns,36ns),
+         ENABLEA & TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_ZH, DELAY(-1,20ns,32ns),
+         TRN_LZ, DELAY(-1,15ns,25ns),
+         TRN_HZ, DELAY(-1,15ns,25ns),
+         TRN_LH, DELAY(-1,9ns,14ns),
+         TRN_HL, DELAY(-1,7ns,13ns),
+         DELAY(-1,29ns,43ns))}
+
+  TRISTATE:
+     ENABLE HI=ENAB2
+     B1 B2 B3 B4 = {
+       CASE(
+         MODE & TRN_ZL, DELAY(-1,28ns,42ns),
+         SELECT & TRN_ZL, DELAY(-1,24ns,36ns),
+         ENABLEB & TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_ZH, DELAY(-1,20ns,32ns),
+         TRN_LZ, DELAY(-1,15ns,25ns),
+         TRN_HZ, DELAY(-1,15ns,25ns),
+         TRN_LH, DELAY(-1,9ns,14ns),
+         TRN_HL, DELAY(-1,7ns,13ns),
+         DELAY(-1,29ns,43ns))}
+
+  TRISTATE:
+     ENABLE HI=ENAB1
+     C1 C2 C3 C4 = {
+       CASE(
+         MODE & TRN_ZL, DELAY(-1,28ns,42ns),
+         SELECT & TRN_ZL, DELAY(-1,24ns,36ns),
+         ENABLEC & TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_ZH, DELAY(-1,20ns,32ns),
+         TRN_LZ, DELAY(-1,15ns,25ns),
+         TRN_HZ, DELAY(-1,15ns,25ns),
+         TRN_LH, DELAY(-1,9ns,14ns),
+         TRN_HL, DELAY(-1,7ns,13ns),
+         DELAY(-1,29ns,43ns))}

.ENDS 74LS443
*
*
* ----------------------------------------------------------- 74LS444 ------
*  Quad Tridirectional Bus Transceivers With Tri-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-951 to 2-956
*  bss    4/20/94
*
.SUBCKT 74LS444 S0 S1 CSBAR GABAR GBBAR GCBAR A1 B1 C1 A2 B2 C2
+     A3 B3 C3 A4 B4 C4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(8) DPWR DGND
+     B1 C1 B2 C2 B3 C3 B4 C4
+     B1BAR C1BAR B2BAR C2BAR B3BAR C3BAR B4BAR C4BAR
+     D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 bufa(12) DPWR DGND
+     A1 B1 C1 A2 B2 C2 A3 B3 C3 A4 B4 C4
+     A1BUF B1BUF C1BUF A2BUF B2BUF C2BUF A3BUF B3BUF C3BUF A4BUF B4BUF C4BUF
+     D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(38,15) DPWR DGND
+     S0 S1 CSBAR GABAR GBBAR GCBAR A1 B1 C1 A2 B2 C2 A3 B3 C3 A4 B4 C4
+     B1BAR C1BAR B2BAR C2BAR B3BAR C3BAR B4BAR C4BAR
+     A1BUF B1BUF C1BUF A2BUF B2BUF C2BUF A3BUF B3BUF C3BUF A4BUF B4BUF C4BUF
+     ENAB1 ENAB2 ENAB3 A1O B1O C1O A2O B2O C2O A3O B3O C3O A4O B4O C4O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     s0bar = {~S0}
+     s1bar = {~S1}
+     sel = {~(S0 ^ S1)}
+     ENAB1 = {~(S1 | GCBAR | CSBAR)}
+     ENAB2 = {~(S0 | GBBAR | CSBAR)}
+     ENAB3 = {~(sel | GABAR | CSBAR)}
+
+     A1O = {~((S1 & C1BUF & s0bar) | (s1bar & B1BUF & S0))}
+     B1O = {~((s1bar & A1BUF & s0bar) | (S1 & C1BAR & s0bar))}
+     C1O = {~((s1bar & A1BUF & s0bar) | (s1bar & B1BAR & S0))}
+     A2O = {~((S1 & C2BUF & s0bar) | (s1bar & B2BUF & S0))}
+     B2O = {~((s1bar & A2BUF & s0bar) | (S1 & C2BAR & s0bar))}
+     C2O = {~((s1bar & A2BUF & s0bar) | (s1bar & B2BAR & S0))}
+     A3O = {~((S1 & C3BUF & s0bar) | (s1bar & B3BUF & S0))}
+     B3O = {~((s1bar & A3BUF & s0bar) | (S1 & C3BAR & s0bar))}
+     C3O = {~((s1bar & A3BUF & s0bar) | (s1bar & B3BAR & S0))}
+     A4O = {~((S1 & C4BUF & s0bar) | (s1bar & B4BUF & S0))}
+     B4O = {~((s1bar & A4BUF & s0bar) | (S1 & C4BAR & s0bar))}
+     C4O = {~((s1bar & A4BUF & s0bar) | (s1bar & B4BAR & S0))}

U4DLY PINDLY(12,3,18) DPWR DGND
+     A1O B1O C1O A2O B2O C2O A3O B3O C3O A4O B4O C4O
+     ENAB1 ENAB2 ENAB3
+     S0 S1 CSBAR GABAR GBBAR GCBAR
+     A1 B1 C1 A2 B2 C2 A3 B3 C3 A4 B4 C4
+     A1 B1 C1 A2 B2 C2 A3 B3 C3 A4 B4 C4
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     MODE = {CHANGED(S0,0) | CHANGED(S1,0)}
+     SELECT = {CHANGED_HL(CSBAR,0)}
+     ENABLEA = {CHANGED(GABAR,0)}
+     ENABLEB = {CHANGED(GBBAR,0)}
+     ENABLEC = {CHANGED(GCBAR,0)}
+     ACH = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0)}
+     BCH = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0)}
+     CCH = {CHANGED(C1,0) | CHANGED(C2,0) | CHANGED(C3,0) | CHANGED(C4,0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB3
+     A1 A2 A3 A4 = {
+       CASE(
+         MODE & TRN_ZL, DELAY(-1,28ns,42ns),
+         SELECT & TRN_ZL, DELAY(-1,23ns,36ns),
+         ENABLEA & TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_ZH, DELAY(-1,24ns,32ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,14ns,25ns),
+         TRN_LH, DELAY(-1,9ns,14ns),
+         TRN_HL, DELAY(-1,7ns,13ns),
+         DELAY(-1,29ns,43ns))}
+
+  TRISTATE:
+     ENABLE HI=ENAB2
+     B1 B2 B3 B4 = {
+       CASE(
+         MODE & TRN_ZL, DELAY(-1,28ns,42ns),
+         SELECT & TRN_ZL, DELAY(-1,23ns,36ns),
+         ENABLEB & TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_ZH, DELAY(-1,24ns,32ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,14ns,25ns),
+         CCH & TRN_LH, DELAY(-1,10ns,14ns),
+         CCH & TRN_HL, DELAY(-1,13ns,20ns),
+         ACH & TRN_LH, DELAY(-1,9ns,14ns),
+         ACH & TRN_HL, DELAY(-1,7ns,13ns),
+         DELAY(-1,29ns,43ns))}
+
+  TRISTATE:
+     ENABLE HI=ENAB1
+     C1 C2 C3 C4 = {
+       CASE(
+         MODE & TRN_ZL, DELAY(-1,28ns,42ns),
+         SELECT & TRN_ZL, DELAY(-1,23ns,36ns),
+         ENABLEC & TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_ZH, DELAY(-1,24ns,32ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,14ns,25ns),
+         BCH & TRN_LH, DELAY(-1,10ns,14ns),
+         BCH & TRN_HL, DELAY(-1,13ns,20ns),
+         ACH & TRN_LH, DELAY(-1,9ns,14ns),
+         ACH & TRN_HL, DELAY(-1,7ns,13ns),
+         DELAY(-1,29ns,43ns))}

.ENDS 74LS444
*
*
* ----------------------------------------------------------- 74LS445 ------
*  BCD-To-Decimal Decoders/Drivers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-957 to 2-957
*  bss    4/21/94
*
.SUBCKT 74LS445 A B C D O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(4,10) DPWR DGND
+     A B C D
+     O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+     DLY_LS445 IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     dbar = {~D}
+     O0 = {~(abar & bbar & cbar & dbar)}
+     O1 = {~(A & bbar & cbar & dbar)}
+     O2 = {~(abar & B & cbar & dbar)}
+     O3 = {~(A & B & cbar & dbar)}
+     O4 = {~(abar & bbar & C & dbar)}
+     O5 = {~(A & bbar & C & dbar)}
+     O6 = {~(abar & B & C & dbar)}
+     O7 = {~(A & B & C & dbar)}
+     O8 = {~(abar & bbar & cbar & D)}
+     O9 = {~(A & bbar & cbar & D)}

.model DLY_LS445 ugate (tplhMX=50ns tphlMX=50ns)

.ENDS 74LS445
*
*
* ----------------------------------------------------------- 74LS446 ------
*  Quad Bus Transceivers With Individual Direction Controls
*
*  The TTL Logic Data Book, 1988, TI Pages 2-959 to 2-962
*  bss    4/22/94
*
.SUBCKT 74LS446 GBABAR GABBAR DIR1 DIR2 DIR3 DIR4 A1 A2 A3 A4 B1 B2 B3 B4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(8) DPWR DGND
+     A1 A2 A3 A4 B1 B2 B3 B4
+     B1_O B2_O B3_O B4_O A1_O A2_O A3_O A4_O
+     D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(6,8) DPWR DGND
+     GBABAR GABBAR DIR1 DIR2 DIR3 DIR4
+     EN1AB EN1BA EN2AB EN2BA EN3AB EN3BA EN4AB EN4BA
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     dir1bar = {~DIR1}
+     dir2bar = {~DIR2}
+     dir3bar = {~DIR3}
+     dir4bar = {~DIR4}
+     gba = {~GBABAR}
+     gab = {~GABBAR}
+
+     EN1AB = {gab & DIR1}
+     EN1BA = {gba & dir1bar}
+     EN2AB = {gab & DIR2}
+     EN2BA = {gba & dir2bar}
+     EN3AB = {gab & DIR3}
+     EN3BA = {gba & dir3bar}
+     EN4AB = {gab & DIR4}
+     EN4BA = {gba & dir4bar}

U3DLY PINDLY(8,8,0) DPWR DGND
+     A1_O A2_O A3_O A4_O B1_O B2_O B3_O B4_O
+     EN1AB EN1BA EN2AB EN2BA EN3AB EN3BA EN4AB EN4BA
+     A1 A2 A3 A4 B1 B2 B3 B4
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  TRISTATE:
+     ENABLE HI=EN1BA
+     A1 = {
+       CASE(
+         TRN_LH, DELAY(-1,8ns,13ns),
+         TRN_HL, DELAY(-1,7ns,12ns),
+         TRN_ZL, DELAY(-1,24ns,40ns),
+         TRN_ZH, DELAY(-1,15ns,25ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,25ns,41ns))}
+
+  TRISTATE:
+     ENABLE HI=EN1AB
+     B1 = {
+       CASE(
+         TRN_LH, DELAY(-1,8ns,13ns),
+         TRN_HL, DELAY(-1,7ns,12ns),
+         TRN_ZL, DELAY(-1,24ns,40ns),
+         TRN_ZH, DELAY(-1,15ns,25ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,25ns,41ns))}
+
+  TRISTATE:
+     ENABLE HI=EN2BA
+     A2 = {
+       CASE(
+         TRN_LH, DELAY(-1,8ns,13ns),
+         TRN_HL, DELAY(-1,7ns,12ns),
+         TRN_ZL, DELAY(-1,24ns,40ns),
+         TRN_ZH, DELAY(-1,15ns,25ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,25ns,41ns))}
+
+  TRISTATE:
+     ENABLE HI=EN2AB
+     B2 = {
+       CASE(
+         TRN_LH, DELAY(-1,8ns,13ns),
+         TRN_HL, DELAY(-1,7ns,12ns),
+         TRN_ZL, DELAY(-1,24ns,40ns),
+         TRN_ZH, DELAY(-1,15ns,25ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,25ns,41ns))}
+
+  TRISTATE:
+     ENABLE HI=EN3BA
+     A3 = {
+       CASE(
+         TRN_LH, DELAY(-1,8ns,13ns),
+         TRN_HL, DELAY(-1,7ns,12ns),
+         TRN_ZL, DELAY(-1,24ns,40ns),
+         TRN_ZH, DELAY(-1,15ns,25ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,25ns,41ns))}
+
+  TRISTATE:
+     ENABLE HI=EN3AB
+     B3 = {
+       CASE(
+         TRN_LH, DELAY(-1,8ns,13ns),
+         TRN_HL, DELAY(-1,7ns,12ns),
+         TRN_ZL, DELAY(-1,24ns,40ns),
+         TRN_ZH, DELAY(-1,15ns,25ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,25ns,41ns))}
+
+  TRISTATE:
+     ENABLE HI=EN4BA
+     A4 = {
+       CASE(
+         TRN_LH, DELAY(-1,8ns,13ns),
+         TRN_HL, DELAY(-1,7ns,12ns),
+         TRN_ZL, DELAY(-1,24ns,40ns),
+         TRN_ZH, DELAY(-1,15ns,25ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,25ns,41ns))}
+
+  TRISTATE:
+     ENABLE HI=EN4AB
+     B4 = {
+       CASE(
+         TRN_LH, DELAY(-1,8ns,13ns),
+         TRN_HL, DELAY(-1,7ns,12ns),
+         TRN_ZL, DELAY(-1,24ns,40ns),
+         TRN_ZH, DELAY(-1,15ns,25ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,25ns,41ns))}

.ENDS 74LS446
*
*
* ----------------------------------------------------------- 74LS447 ------
*  BCD To Seven Segment Decoder/Driver
*
*  The TTL Logic Data Book, Vol. 2, 1985, TI Pages 3-1109 to 3-1111
*  bss    4/22/94
*
.SUBCKT 74LS447  A B C D BI/RBO RBIBAR LTBAR
+      OA OB OC OD OE OF OG
+      optional: DPWR=$G_DPWR DGND=$G_DGND
+      params: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP (7,8) DPWR DGND
+      A B C D BI/RBO RBIBAR LTBAR
+      O_A O_B O_C O_D O_E O_F O_G BI/RBO
+      D0_GATE IO_LS IO_LEVEL={IO_LEVEL}
+
+    LOGIC:
+      alt = {~(A & LTBAR)}
+      blt = {~(B & LTBAR)}
+      clt = {~(C & LTBAR)}
+      dbar = {~D}
+      abi = {~(alt & BI/RBO)}
+      bbi = {~(blt & BI/RBO)}
+      cbi = {~(clt & BI/RBO)}
+      dbi = {~(dbar & BI/RBO)}
+      rbi = {~RBIBAR}
+
+      O_A = {(bbi & dbi) | (alt & blt & cbi) | (abi & blt & clt & dbar)}
+      O_B = {(bbi & dbi) | (abi & blt & cbi) | (alt & bbi & cbi)}
+      O_C = {(cbi & dbi) | (alt & bbi & clt)}
+      O_D = {(abi & blt & clt & dbar) | (alt & blt & cbi) | (abi & bbi & cbi)}
+      O_E = {abi | (blt & cbi)}
+      O_F  = {(abi & bbi) | (bbi & clt) | (abi & clt & dbar)}
+      O_G = {(abi & bbi & cbi) | (blt & clt & dbar & LTBAR)}
+      BI/RBO = {~(LTBAR & rbi & dbar & clt & blt & alt)}

U2 PINDLY (7,0,0) DPWR DGND
+    O_A O_B O_C O_D O_E O_F O_G
+    OA OB OC OD OE OF OG
+    IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     OA OB OC OD OE OF OG = {
+         DELAY(-1,-1,100ns)}

.ENDS 74LS447
*
*
*------------------------------------------------------------74LS448----

* 74LS448 Quadruple Tridirectional Bus Transceivers with Open-Collector
* Outputs and Inverting/Noninverting Logic
* Note that on the logic diagram, S0 and S1 need to be reversed for 
* the AND-OR-INVERT logic section, but preserved as shown for 
* the 3 enable AND gates.
* The TTL Data Book Volume 2, 1985, 3-1097 to 3-1102
* jat 8/9/95

.SUBCKT 74LS448
+ CSBAR GABAR GBBAR GCBAR S0 S1 A1 A2 A3 A4 B1 B2 B3 B4 C1 C2 C3 C4
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 BUFA(12) DPWR DGND
+ A1 A2 A3 A4 B1 B2 B3 B4 C1 C2 C3 C4
+ A1ST A2ST A3ST A4ST B1ST B2ST B3ST B4ST C1ST C2ST C3ST C4ST
+ D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 INVA(8) DPWR DGND
+ B1 B2 B3 B4 C1 C2 C3 C4
+ B1BAR B2BAR B3BAR B4BAR C1BAR C2BAR C3BAR C4BAR
+ D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 LOGICEXP(26,12) DPWR DGND
+ S0 S1 A1ST A2ST A3ST A4ST B1ST B2ST B3ST B4ST C1ST C2ST C3ST C4ST
+ B1BAR B2BAR B3BAR B4BAR C1BAR C2BAR C3BAR C4BAR
+ CSBAR GABAR GBBAR GCBAR 
+ OUT_A1 OUT_B1 OUT_C1 OUT_A2 OUT_B2 OUT_C2 OUT_A3 OUT_B3 OUT_C3 OUT_A4
+ OUT_B4 OUT_C4
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+ S1BAR = {~S1}
+ S0BAR = {~S0}
+ SXNOR = {~(S0 ^ S1)}
+ ENABA = {(~CSBAR) & (~GABAR) & (~SXNOR)}
+ ENABB = {(~CSBAR) & (~GBBAR) & (~S0)}
+ ENABC = {(~CSBAR) & (~GCBAR) & (~S1)}
+ OUT_A1 = {~((S0 & B1ST & S1BAR & ENABA) | (S0BAR & C1ST & S1 & ENABA))}
+ OUT_B1 = {~((S0BAR & A1ST & S1BAR & ENABB) | (S0BAR & C1BAR & S1 & ENABB))}
+ OUT_C1 = {~((S0BAR & A1ST & S1BAR & ENABC) | (S0 & B1BAR & S1BAR & ENABC))}
+ OUT_A2 = {~((S0 & B2ST & S1BAR & ENABA) | (S0BAR & C2ST & S1 & ENABA))}
+ OUT_B2 = {~((S0BAR & A2ST & S1BAR & ENABB) | (S0BAR & C2BAR & S1 & ENABB))}
+ OUT_C2 = {~((S0BAR & A2ST & S1BAR & ENABC) | (S0 & B2BAR & S1BAR & ENABC))}
+ OUT_A3 = {~((S0 & B3ST & S1BAR & ENABA) | (S0BAR & C3ST & S1 & ENABA))}
+ OUT_B3 = {~((S0BAR & A3ST & S1BAR & ENABB) | (S0BAR & C3BAR & S1 & ENABB))}
+ OUT_C3 = {~((S0BAR & A3ST & S1BAR & ENABC) | (S0 & B3BAR & S1BAR & ENABC))}
+ OUT_A4 = {~((S0 & B4ST & S1BAR & ENABA) | (S0BAR & C4ST & S1 & ENABA))}
+ OUT_B4 = {~((S0BAR & A4ST & S1BAR & ENABB) | (S0BAR & C4BAR & S1 & ENABB))}
+ OUT_C4 = {~((S0BAR & A4ST & S1BAR & ENABC) | (S0 & B4BAR & S1BAR & ENABC))}

U4 PINDLY(12,0,18) DPWR DGND
+ OUT_A1 OUT_B1 OUT_C1 OUT_A2 OUT_B2 OUT_C2 OUT_A3 OUT_B3 OUT_C3 OUT_A4
+ OUT_B4 OUT_C4
+ GABAR GBBAR GCBAR S0 S1 CSBAR A1 B1 C1 A2 B2 C2 A3 B3 C3 A4 B4 C4
+ A1 B1 C1 A2 B2 C2 A3 B3 C3 A4 B4 C4
+ IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+ ENABGA = {CHANGED(GABAR,0)}
+ ENABGB = {CHANGED(GBBAR,0)}
+ ENABGC = {CHANGED(GCBAR,0)}
+ SELECT = {CHANGED(S0,0) | CHANGED(S1,0)}
+ CHIP = {CHANGED(CSBAR,0)}
+ FROMA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0)}
+ FROMB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0)}
+ FROMC = {CHANGED(C1,0) | CHANGED(C2,0) | CHANGED(C3,0) | CHANGED(C4,0)}
+ PINDLY:
+     A1 A2 A3 A4 = {
+       CASE(
+          CHIP & TRN_LH, DELAY(-1,25NS,40NS),
+          CHIP & TRN_HL, DELAY(-1,22NS,35NS),
+          ENABGA & TRN_LH, DELAY(-1,25NS,40NS),
+          ENABGA & TRN_HL, DELAY(-1,22NS,35NS),
+          SELECT & TRN_LH, DELAY(-1,26NS,40NS),
+          SELECT & TRN_HL, DELAY(-1,27NS,40NS),
+          TRN_LH, DELAY(-1,21NS,30NS),
+          TRN_HL, DELAY(-1,9NS,15NS),
+          DELAY(-1,28NS,41NS))}
+     B1 B2 B3 B4 = {
+       CASE(
+          CHIP & TRN_LH, DELAY(-1,25NS,40NS),
+          CHIP & TRN_HL, DELAY(-1,22NS,35NS),
+          ENABGB & TRN_LH, DELAY(-1,25NS,40NS),
+          ENABGB & TRN_HL, DELAY(-1,22NS,35NS),
+          SELECT & TRN_LH, DELAY(-1,26NS,40NS),
+          SELECT & TRN_HL, DELAY(-1,27NS,40NS),
+          FROMA & TRN_LH, DELAY(-1,21NS,30NS),
+          FROMA & TRN_HL, DELAY(-1,9NS,15NS),
+          FROMC & TRN_LH, DELAY(-1,24NS,35NS),
+          FROMC & TRN_HL, DELAY(-1,20NS,30NS),
+          DELAY(-1,28NS,41NS))}
+     C1 C2 C3 C4 = {
+       CASE(
+          CHIP & TRN_LH, DELAY(-1,25NS,40NS),
+          CHIP & TRN_HL, DELAY(-1,22NS,35NS),
+          ENABGC & TRN_LH, DELAY(-1,25NS,40NS),
+          ENABGC & TRN_HL, DELAY(-1,22NS,35NS),
+          SELECT & TRN_LH, DELAY(-1,26NS,40NS),
+          SELECT & TRN_HL, DELAY(-1,27NS,40NS),
+          FROMA & TRN_LH, DELAY(-1,21NS,30NS),
+          FROMA & TRN_HL, DELAY(-1,9NS,15NS),
+          FROMB & TRN_LH, DELAY(-1,24NS,35NS),
+          FROMB & TRN_HL, DELAY(-1,20NS,30NS),
+          TRN_LH, DELAY(-1,21NS,30NS),
+          TRN_HL, DELAY(-1,9NS,15NS),
+          DELAY(-1,28NS,41NS))}

.ENDS 74LS448
*
*
* ----------------------------------------------------------- 74LS449 ------
*  Quad Bus Transceivers With Individual Direction Controls
*
*  The TTL Logic Data Book, 1988, TI Pages 2-959 to 2-962
*  bss    4/22/94
*
.SUBCKT 74LS449 GBABAR GABBAR DIR1 DIR2 DIR3 DIR4 A1 A2 A3 A4 B1 B2 B3 B4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 bufa(8) DPWR DGND
+     A1 A2 A3 A4 B1 B2 B3 B4
+     B1_O B2_O B3_O B4_O A1_O A2_O A3_O A4_O
+     D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(6,8) DPWR DGND
+     GBABAR GABBAR DIR1 DIR2 DIR3 DIR4
+     EN1AB EN1BA EN2AB EN2BA EN3AB EN3BA EN4AB EN4BA
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     dir1bar = {~DIR1}
+     dir2bar = {~DIR2}
+     dir3bar = {~DIR3}
+     dir4bar = {~DIR4}
+     gba = {~GBABAR}
+     gab = {~GABBAR}
+
+     EN1AB = {gab & DIR1}
+     EN1BA = {gba & dir1bar}
+     EN2AB = {gab & DIR2}
+     EN2BA = {gba & dir2bar}
+     EN3AB = {gab & DIR3}
+     EN3BA = {gba & dir3bar}
+     EN4AB = {gab & DIR4}
+     EN4BA = {gba & dir4bar}

U3DLY PINDLY(8,8,0) DPWR DGND
+     A1_O A2_O A3_O A4_O B1_O B2_O B3_O B4_O
+     EN1AB EN1BA EN2AB EN2BA EN3AB EN3BA EN4AB EN4BA
+     A1 A2 A3 A4 B1 B2 B3 B4
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  TRISTATE:
+     ENABLE HI=EN1BA
+     A1 = {
+       CASE(
+         TRN_LH, DELAY(-1,10ns,15ns),
+         TRN_HL, DELAY(-1,11ns,17ns),
+         TRN_ZL, DELAY(-1,21ns,35ns),
+         TRN_ZH, DELAY(-1,18ns,30ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,22ns,36ns))}
+
+  TRISTATE:
+     ENABLE HI=EN1AB
+     B1 = {
+       CASE(
+         TRN_LH, DELAY(-1,10ns,15ns),
+         TRN_HL, DELAY(-1,11ns,17ns),
+         TRN_ZL, DELAY(-1,21ns,35ns),
+         TRN_ZH, DELAY(-1,18ns,30ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,22ns,36ns))}
+
+  TRISTATE:
+     ENABLE HI=EN2BA
+     A2 = {
+       CASE(
+         TRN_LH, DELAY(-1,10ns,15ns),
+         TRN_HL, DELAY(-1,11ns,17ns),
+         TRN_ZL, DELAY(-1,21ns,35ns),
+         TRN_ZH, DELAY(-1,18ns,30ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,22ns,36ns))}
+
+  TRISTATE:
+     ENABLE HI=EN2AB
+     B2 = {
+       CASE(
+         TRN_LH, DELAY(-1,10ns,15ns),
+         TRN_HL, DELAY(-1,11ns,17ns),
+         TRN_ZL, DELAY(-1,21ns,35ns),
+         TRN_ZH, DELAY(-1,18ns,30ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,22ns,36ns))}
+
+  TRISTATE:
+     ENABLE HI=EN3BA
+     A3 = {
+       CASE(
+         TRN_LH, DELAY(-1,10ns,15ns),
+         TRN_HL, DELAY(-1,11ns,17ns),
+         TRN_ZL, DELAY(-1,21ns,35ns),
+         TRN_ZH, DELAY(-1,18ns,30ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,22ns,36ns))}
+
+  TRISTATE:
+     ENABLE HI=EN3AB
+     B3 = {
+       CASE(
+         TRN_LH, DELAY(-1,10ns,15ns),
+         TRN_HL, DELAY(-1,11ns,17ns),
+         TRN_ZL, DELAY(-1,21ns,35ns),
+         TRN_ZH, DELAY(-1,18ns,30ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,22ns,36ns))}
+
+  TRISTATE:
+     ENABLE HI=EN4BA
+     A4 = {
+       CASE(
+         TRN_LH, DELAY(-1,10ns,15ns),
+         TRN_HL, DELAY(-1,11ns,17ns),
+         TRN_ZL, DELAY(-1,21ns,35ns),
+         TRN_ZH, DELAY(-1,18ns,30ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,22ns,36ns))}
+
+  TRISTATE:
+     ENABLE HI=EN4AB
+     B4 = {
+       CASE(
+         TRN_LH, DELAY(-1,10ns,15ns),
+         TRN_HL, DELAY(-1,11ns,17ns),
+         TRN_ZL, DELAY(-1,21ns,35ns),
+         TRN_ZH, DELAY(-1,18ns,30ns),
+         TRN_LZ, DELAY(-1,14ns,25ns),
+         TRN_HZ, DELAY(-1,10ns,15ns),
+         DELAY(-1,22ns,36ns))}

.ENDS 74LS449

*-------------------------------------------------------------74LS450---

* 16:1 Multiplexer
* National LS/S/TTL Logic Databook, 1989, pages 2-407 to 2-409
* jat 8/8/96

.SUBCKT 74LS450 A B C D E0 E1 E2 E3 E4 E5 E6 E7 E8 E9 E10 E11 E12 E13 E14 E15
+ Y W
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(20,2) DPWR DGND
+ A B C D E0 E1 E2 E3 E4 E5 E6 E7 E8 E9 E10 E11 E12 E13 E14 E15
+ Y W
+ DLY_LS450 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  Y = {(E0 & ~D & ~C & ~B & ~A) | (E1 & ~D & ~C & ~B & A) |
+       (E2 & ~D & ~C & B & ~A) | (E3 & ~D & ~C & B & A) |
+       (E4 & ~D & C & ~B & ~A) | (E5 & ~D & C & ~B & A) |
+       (E6 & ~D & C & B & ~A) | (E7 & ~D & C & B & A) |
+       (E8 & D & ~C & ~B & ~A) | (E9 & D & ~C & ~B & A) |
+       (E10 & D & ~C & B & ~A) | (E11 & D & ~C & B & A) |
+       (E12 & D & C & ~B & ~A) | (E13 & D & C & ~B & A) |
+       (E14 & D & C & B & ~A) | (E15 & D & C & B & A)}
+  W = {~Y}

.MODEL DLY_LS450 UGATE(TPLHTY=25NS TPLHMX=40NS TPHLTY=25NS TPHLMX=40NS)

.ENDS 74LS450

*-------------------------------------------------------------74LS450A---

* 16:1 Multiplexer
* National LS/S/TTL Logic Databook, 1989, pages 2-410 to 2-413
* jat 8/8/96

.SUBCKT 74LS450A A B C D E0 E1 E2 E3 E4 E5 E6 E7 E8 E9 E10 E11 E12 E13 E14 E15
+ Y W
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(20,2) DPWR DGND
+ A B C D E0 E1 E2 E3 E4 E5 E6 E7 E8 E9 E10 E11 E12 E13 E14 E15
+ Y W
+ DLY_LS450A IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  Y = {(E0 & ~D & ~C & ~B & ~A) | (E1 & ~D & ~C & ~B & A) |
+       (E2 & ~D & ~C & B & ~A) | (E3 & ~D & ~C & B & A) |
+       (E4 & ~D & C & ~B & ~A) | (E5 & ~D & C & ~B & A) |
+       (E6 & ~D & C & B & ~A) | (E7 & ~D & C & B & A) |
+       (E8 & D & ~C & ~B & ~A) | (E9 & D & ~C & ~B & A) |
+       (E10 & D & ~C & B & ~A) | (E11 & D & ~C & B & A) |
+       (E12 & D & C & ~B & ~A) | (E13 & D & C & ~B & A) |
+       (E14 & D & C & B & ~A) | (E15 & D & C & B & A)}
+  W = {~Y}

.MODEL DLY_LS450A UGATE(TPLHTY=15NS TPLHMX=30NS TPHLTY=15NS TPHLMX=30NS)

.ENDS 74LS450A

*-------------------------------------------------------------74LS451---

* Dual 8:1 Multiplexer
* National LS/S/TTL Logic Databook, 1989, pages 2-414 to 2-416
* jat 8/8/96

.SUBCKT 74LS451 A B C S 1D0 1D1 1D2 1D3 1D4 1D5 1D6 1D7
+ 2D0 2D1 2D2 2D3 2D4 2D5 2D6 2D7 1Y 2Y
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(20,2) DPWR DGND
+ A B C S 1D0 1D1 1D2 1D3 1D4 1D5 1D6 1D7 2D0 2D1 2D2 2D3 2D4 2D5 2D6 2D7
+ 1Y 2Y
+ DLY_LS451 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  1Y = {~((1D0 & ~S & ~C & ~B & ~A) | (1D1 & ~S & ~C & ~B & A) |
+        (1D2 & ~S & ~C & B & ~A) | (1D3 & ~S & ~C & B & A) |
+        (1D4 & ~S & C & ~B & ~A) | (1D5 & ~S & C & ~B & A) |
+        (1D6 & ~S & C & B & ~A) | (1D7 & ~S & C & B & A))}
+  2Y = {~((2D0 & ~S & ~C & ~B & ~A) | (2D1 & ~S & ~C & ~B & A) |
+        (2D2 & ~S & ~C & B & ~A) | (2D3 & ~S & ~C & B & A) |
+        (2D4 & ~S & C & ~B & ~A) | (2D5 & ~S & C & ~B & A) |
+        (2D6 & ~S & C & B & ~A) | (2D7 & ~S & C & B & A))}

.MODEL DLY_LS451 UGATE(TPLHTY=25NS TPLHMX=40NS TPHLTY=25NS TPHLMX=40NS)

.ENDS 74LS451

*-------------------------------------------------------------74LS451A---

* Dual 8:1 Multiplexer
* National LS/S/TTL Logic Databook, 1989, pages 2-417 to 2-420
* jat 8/8/96

.SUBCKT 74LS451A A B C S 1D0 1D1 1D2 1D3 1D4 1D5 1D6 1D7
+ 2D0 2D1 2D2 2D3 2D4 2D5 2D6 2D7 1Y 2Y
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(20,2) DPWR DGND
+ A B C S 1D0 1D1 1D2 1D3 1D4 1D5 1D6 1D7 2D0 2D1 2D2 2D3 2D4 2D5 2D6 2D7
+ 1Y 2Y
+ DLY_LS451A IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  1Y = {~((1D0 & ~S & ~C & ~B & ~A) | (1D1 & ~S & ~C & ~B & A) |
+        (1D2 & ~S & ~C & B & ~A) | (1D3 & ~S & ~C & B & A) |
+        (1D4 & ~S & C & ~B & ~A) | (1D5 & ~S & C & ~B & A) |
+        (1D6 & ~S & C & B & ~A) | (1D7 & ~S & C & B & A))}
+  2Y = {~((2D0 & ~S & ~C & ~B & ~A) | (2D1 & ~S & ~C & ~B & A) |
+        (2D2 & ~S & ~C & B & ~A) | (2D3 & ~S & ~C & B & A) |
+        (2D4 & ~S & C & ~B & ~A) | (2D5 & ~S & C & ~B & A) |
+        (2D6 & ~S & C & B & ~A) | (2D7 & ~S & C & B & A))}

.MODEL DLY_LS451A UGATE(TPLHTY=15NS TPLHMX=25NS TPHLTY=15NS TPHLMX=25NS)

.ENDS 74LS451A

*-------------------------------------------------------------74LS453---

* Quad 4:1 Multiplexer
* National LS/S/TTL Logic Databook, 1989, pages 2-421 to 2-423
* jat 8/8/96

.SUBCKT 74LS453 A B 1C0 1C1 1C2 1C3 2C0 2C1 2C2 2C3 3C0 3C1 3C2 3C3 4C0
+ 4C1 4C2 4C3 1Y 2Y 3Y 4Y
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(18,4) DPWR DGND
+ A B 1C0 1C1 1C2 1C3 2C0 2C1 2C2 2C3 3C0 3C1 3C2 3C3 4C0 4C1 4C2 4C3
+ 1Y 2Y 3Y 4Y
+ DLY_LS453 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  1Y = {(1C0 & ~B & ~A) | (1C1 & ~B & A) | (1C2 & B & ~A) | (1C3 & B & A)}
+  2Y = {(2C0 & ~B & ~A) | (2C1 & ~B & A) | (2C2 & B & ~A) | (2C3 & B & A)}
+  3Y = {(3C0 & ~B & ~A) | (3C1 & ~B & A) | (3C2 & B & ~A) | (3C3 & B & A)}
+  4Y = {(4C0 & ~B & ~A) | (4C1 & ~B & A) | (4C2 & B & ~A) | (4C3 & B & A)}

.MODEL DLY_LS453 UGATE(TPLHTY=25NS TPLHMX=40NS TPHLTY=25NS TPHLMX=40NS)

.ENDS 74LS453

*-------------------------------------------------------------74LS453A---

* Quad 4:1 Multiplexer
* National LS/S/TTL Logic Databook, 1989, pages 2-424 to 2-427
* jat 8/8/96

.SUBCKT 74LS453A A B 1C0 1C1 1C2 1C3 2C0 2C1 2C2 2C3 3C0 3C1 3C2 3C3 4C0
+ 4C1 4C2 4C3 1Y 2Y 3Y 4Y
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(18,4) DPWR DGND
+ A B 1C0 1C1 1C2 1C3 2C0 2C1 2C2 2C3 3C0 3C1 3C2 3C3 4C0 4C1 4C2 4C3
+ 1Y 2Y 3Y 4Y
+ DLY_LS453A IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  1Y = {(1C0 & ~B & ~A) | (1C1 & ~B & A) | (1C2 & B & ~A) | (1C3 & B & A)}
+  2Y = {(2C0 & ~B & ~A) | (2C1 & ~B & A) | (2C2 & B & ~A) | (2C3 & B & A)}
+  3Y = {(3C0 & ~B & ~A) | (3C1 & ~B & A) | (3C2 & B & ~A) | (3C3 & B & A)}
+  4Y = {(4C0 & ~B & ~A) | (4C1 & ~B & A) | (4C2 & B & ~A) | (4C3 & B & A)}

.MODEL DLY_LS453A UGATE(TPLHTY=15NS TPLHMX=25NS TPHLTY=15NS TPHLMX=25NS)

.ENDS 74LS453A

*-------------------------------------------------------------74F455-------

* Octal Buffer/Driver with Parity, Inverting, Tri-State
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 494 to 500
* jat 7/11/96

.SUBCKT 74F455 PI OE0BAR OE1BAR D0 D1 D2 D3 D4 D5 D6 D7 Q0BAR Q1BAR Q2BAR
+ Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR EVEN ODD
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(11,11) DPWR DGND
+ PI D0 D1 D2 D3 D4 D5 D6 D7 OE0BAR OE1BAR
+ ENAB EVENO ODDO Q0BARO Q1BARO Q2BARO Q3BARO Q4BARO Q5BARO Q6BARO Q7BARO
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(OE0BAR | OE1BAR)}
+   Q0BARO = {~D0}
+   Q1BARO = {~D1}
+   Q2BARO = {~D2}
+   Q3BARO = {~D3}
+   Q4BARO = {~D4}
+   Q5BARO = {~D5}
+   Q6BARO = {~D6}
+   Q7BARO = {~D7}
+   AND1 = {PI & ~D0 & ~D1}
+   AND2 = {~PI & D0 & ~D1}
+   AND3 = {~PI & ~D0 & D1}
+   AND4 = {PI & D0 & D1}
+   AND5 = {D2 & ~D3 & ~D4}
+   AND6 = {~D2 & D3 & ~D4}
+   AND7 = {~D2 & ~D3 & D4}
+   AND8 = {D2 & D3 & D4}
+   AND9 = {D5 & ~D6 & ~D7}
+   AND10 = {~D5 & D6 & ~D7}
+   AND11= {~D5 & ~D6 & D7}
+   AND12 = {D5 & D6 & D7}
+   NOR1 = {~(AND1 | AND2 | AND3 | AND4)}
+   NOR2 = {~(AND5 | AND6 | AND7 | AND8)}
+   NOR3 = {~(AND9 | AND10 | AND11 | AND12)}
+   ODDO = {(NOR3 & NOR2 & ~NOR1) | (NOR3 & ~NOR2 & NOR1) |
+           (~NOR3 & NOR2 & NOR1) | (~NOR3 & ~NOR2 & ~NOR1)}
+   EVENO = {~ODDO}

U2 PINDLY(10,1,0) DPWR DGND
+ Q0BARO Q1BARO Q2BARO Q3BARO Q4BARO Q5BARO Q6BARO Q7BARO EVENO ODDO
+ ENAB
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR EVEN ODD
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = ENAB
+   Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR= {
+     CASE(
+        TRN_ZH, DELAY(2.5NS,4NS,8NS),
+        TRN_ZL, DELAY(4NS,8NS,10.5NS),
+        TRN_HZ, DELAY(1.5NS,4NS,6.5NS),
+        TRN_LZ, DELAY(2NS,5NS,7.5NS),
+        TRN_LH, DELAY(2NS,4.5NS,6.5NS),
+        TRN_HL, DELAY(1NS,2NS,4NS),
+        DELAY(5NS,9NS,11.5NS))}
+ TRISTATE:
+   ENABLE HI = ENAB
+   EVEN ODD = {
+     CASE(
+        TRN_ZH, DELAY(2.5NS,4NS,8NS),
+        TRN_ZL, DELAY(4NS,8NS,10.5NS),
+        TRN_HZ, DELAY(1.5NS,4NS,6.5NS),
+        TRN_LZ, DELAY(2NS,5NS,7.5NS),
+        TRN_LH, DELAY(5.5NS,10NS,13NS),
+        TRN_HL, DELAY(5.5NS,11NS,14.5NS),
+        DELAY(6.5NS,12NS,15.5NS))}

.ENDS 74F455

*-------------------------------------------------------------74F456-------

* Octal Buffer/Driver with Parity, Non-Inverting, Tri-State
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 494 to 500
* jat 7/11/96

.SUBCKT 74F456 PI OE0BAR OE1BAR D0 D1 D2 D3 D4 D5 D6 D7 Q0 Q1 Q2
+ Q3 Q4 Q5 Q6 Q7 EVEN ODD
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(11,3) DPWR DGND
+ PI D0 D1 D2 D3 D4 D5 D6 D7 OE0BAR OE1BAR
+ ENAB EVENO ODDO
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(OE0BAR | OE1BAR)}
+   AND1 = {PI & ~D0 & ~D1}
+   AND2 = {~PI & D0 & ~D1}
+   AND3 = {~PI & ~D0 & D1}
+   AND4 = {PI & D0 & D1}
+   AND5 = {D2 & ~D3 & ~D4}
+   AND6 = {~D2 & D3 & ~D4}
+   AND7 = {~D2 & ~D3 & D4}
+   AND8 = {D2 & D3 & D4}
+   AND9 = {D5 & ~D6 & ~D7}
+   AND10 = {~D5 & D6 & ~D7}
+   AND11= {~D5 & ~D6 & D7}
+   AND12 = {D5 & D6 & D7}
+   NOR1 = {~(AND1 | AND2 | AND3 | AND4)}
+   NOR2 = {~(AND5 | AND6 | AND7 | AND8)}
+   NOR3 = {~(AND9 | AND10 | AND11 | AND12)}
+   ODDO = {(NOR3 & NOR2 & ~NOR1) | (NOR3 & ~NOR2 & NOR1) |
+           (~NOR3 & NOR2 & NOR1) | (~NOR3 & ~NOR2 & ~NOR1)}
+   EVENO = {~ODDO}

U2 PINDLY(10,1,0) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 EVENO ODDO
+ ENAB
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 EVEN ODD
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = ENAB
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+        TRN_ZH, DELAY(2.5NS,4NS,8NS),
+        TRN_ZL, DELAY(4NS,8NS,10.5NS),
+        TRN_HZ, DELAY(1.5NS,4NS,6.5NS),
+        TRN_LZ, DELAY(2NS,5NS,7.5NS),
+        TRN_LH, DELAY(2NS,4.5NS,6.5NS),
+        TRN_HL, DELAY(2.5NS,5NS,7NS),
+        DELAY(5NS,9NS,11.5NS))}
+ TRISTATE:
+   ENABLE HI = ENAB
+   EVEN ODD = {
+     CASE(
+        TRN_ZH, DELAY(2.5NS,4NS,8NS),
+        TRN_ZL, DELAY(4NS,8NS,10.5NS),
+        TRN_HZ, DELAY(1.5NS,4NS,6.5NS),
+        TRN_LZ, DELAY(2NS,5NS,7.5NS),
+        TRN_LH, DELAY(5.5NS,10NS,13NS),
+        TRN_HL, DELAY(5.5NS,11NS,14.5NS),
+        DELAY(6.5NS,12NS,15.5NS))}

.ENDS 74F456

*-------------------------------------------------------------74LS460---

* 10-Bit Comparator
* National LS/S/TTL Logic Databook, 1989, pages 2-428 to 2-430
* jat 8/13/96

.SUBCKT 74LS460 A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 B0 B1 B2 B3 B4 B5 B6 B7 B8 B9
+ NE EQ
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(20,2) DPWR DGND
+ A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 B0 B1 B2 B3 B4 B5 B6 B7 B8 B9
+ NE EQ
+ DLY_LS460 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   EQ = {~((A0 ^ B0) | (A1 ^ B1) | (A2 ^ B2) | (A3 ^ B3) | (A4 ^ B4) |
+           (A5 ^ B5) | (A6 ^ B6) | (A7 ^ B7) | (A8 ^ B8) | (A9 ^ B9))}
+   NE = {~EQ}

.MODEL DLY_LS460 UGATE(TPLHTY=25NS TPLHMX=40NS TPHLTY=25NS TPHLMX=40NS)

.ENDS 74LS460

*-------------------------------------------------------------74LS460A---

* 10-Bit Comparator
* National LS/S/TTL Logic Databook, 1989, pages 2-431 to 2-434
* jat 8/13/96

.SUBCKT 74LS460A A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 B0 B1 B2 B3 B4 B5 B6 B7 B8 B9
+ NE EQ
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(20,2) DPWR DGND
+ A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 B0 B1 B2 B3 B4 B5 B6 B7 B8 B9
+ NE EQ
+ DLY_LS460A IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   EQ = {~((A0 ^ B0) | (A1 ^ B1) | (A2 ^ B2) | (A3 ^ B3) | (A4 ^ B4) |
+           (A5 ^ B5) | (A6 ^ B6) | (A7 ^ B7) | (A8 ^ B8) | (A9 ^ B9))}
+   NE = {~EQ}

.MODEL DLY_LS460A UGATE(TPLHMX=30NS TPHLMX=30NS)

.ENDS 74LS460A

*-------------------------------------------------------------74LS461---

* Octal Counter
* National LS/S/TTL Logic Databook, 1989, pages 2-435 to 2-437
* jat 8/13/96

.SUBCKT 74LS461 CK I0 I1 CIBAR OEBAR D0 D1 D2 D3 D4 D5 D6 D7 COBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(19,9) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O I0 I1 D0 D1 D2 D3 D4 D5 D6 D7 CIBAR
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7 COBARO
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  AND0 = {~CIBAR & I0 & I1}
+  AND1 = {AND0 & Q0O & I0 & I1}
+  AND2 = {AND1 & Q1O & I0 & I1}
+  AND3 = {AND2 & Q2O & I0 & I1}
+  AND4 = {AND3 & Q3O & I0 & I1}
+  AND5 = {AND4 & Q4O & I0 & I1}
+  AND6 = {AND5 & Q5O & I0 & I1}
+  AND7 = {AND6 & Q6O & I0 & I1}
+  DATA0 = {((Q0O & I0) | (~I0 & I1 & D0)) ^ AND0}
+  DATA1 = {((Q1O & I0) | (~I0 & I1 & D1)) ^ (AND0 & Q0O & I0 & I1)}
+  DATA2 = {((Q2O & I0) | (~I0 & I1 & D2)) ^ (AND1 & Q1O & I0 & I1)}
+  DATA3 = {((Q3O & I0) | (~I0 & I1 & D3)) ^ (AND2 & Q2O & I0 & I1)}
+  DATA4 = {((Q4O & I0) | (~I0 & I1 & D4)) ^ (AND3 & Q3O & I0 & I1)}
+  DATA5 = {((Q5O & I0) | (~I0 & I1 & D5)) ^ (AND4 & Q4O & I0 & I1)}
+  DATA6 = {((Q6O & I0) | (~I0 & I1 & D6)) ^ (AND5 & Q5O & I0 & I1)}
+  DATA7 = {((Q7O & I0) | (~I0 & I1 & D7)) ^ (AND6 & Q6O & I0 & I1)}
+  COBARO = {~(~CIBAR & Q0O & Q1O & Q2O & Q3O & Q4O & Q5O & Q6O & Q7O)}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CK
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(9,1,2) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O COBARO
+ OEBAR
+ CK CIBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 COBAR
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+  EDGE = {CHANGED_LH(CK,0)}
+  CARRY = {CHANGED(CIBAR,0)}
+ TRISTATE:
+  ENABLE LO = OEBAR
+  Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+    CASE(
+      TRN_Z$, DELAY(-1,35NS,45NS),
+      TRN_$Z, DELAY(-1,35NS,45NS),
+      TRN_LH, DELAY(-1,20NS,30NS),
+      TRN_HL, DELAY(-1,20NS,30NS),
+      DELAY(-1,36NS,46NS))}
+ PINDLY:
+  COBAR = {
+    CASE(
+      EDGE & TRN_LH, DELAY(-1,55NS,80NS),
+      EDGE & TRN_HL, DELAY(-1,55NS,80NS),
+      CARRY & TRN_LH, DELAY(-1,35NS,50NS),
+      CARRY & TRN_HL, DELAY(-1,35NS,50NS),
+      DELAY(-1,56NS,81NS))}

U4 CONSTRAINT(12) DPWR DGND
+ CK D0 D1 D2 D3 D4 D5 D6 D7 CIBAR I0 I1
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CK
+  MAXFREQ = 12.5MEG
+ WIDTH:
+  NODE = CK
+  MIN_HI = 25NS
+  MIN_LO = 35NS
+ SETUP_HOLD:
+  CLOCK LH = CK
+  DATA(11) = D0 D1 D2 D3 D4 D5 D6 D7 CIBAR I0 I1
+  SETUPTIME = 50NS

.ENDS 74LS461

*-------------------------------------------------------------74LS461A---

* Octal Counter
* National LS/S/TTL Logic Databook, 1989, pages 2-438 to 2-441
* jat 8/13/96

.SUBCKT 74LS461A CK I0 I1 CIBAR OEBAR D0 D1 D2 D3 D4 D5 D6 D7 COBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(19,9) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O I0 I1 D0 D1 D2 D3 D4 D5 D6 D7 CIBAR
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7 COBARO
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  AND0 = {~CIBAR & I0 & I1}
+  AND1 = {AND0 & Q0O & I0 & I1}
+  AND2 = {AND1 & Q1O & I0 & I1}
+  AND3 = {AND2 & Q2O & I0 & I1}
+  AND4 = {AND3 & Q3O & I0 & I1}
+  AND5 = {AND4 & Q4O & I0 & I1}
+  AND6 = {AND5 & Q5O & I0 & I1}
+  AND7 = {AND6 & Q6O & I0 & I1}
+  DATA0 = {((Q0O & I0) | (~I0 & I1 & D0)) ^ AND0}
+  DATA1 = {((Q1O & I0) | (~I0 & I1 & D1)) ^ (AND0 & Q0O & I0 & I1)}
+  DATA2 = {((Q2O & I0) | (~I0 & I1 & D2)) ^ (AND1 & Q1O & I0 & I1)}
+  DATA3 = {((Q3O & I0) | (~I0 & I1 & D3)) ^ (AND2 & Q2O & I0 & I1)}
+  DATA4 = {((Q4O & I0) | (~I0 & I1 & D4)) ^ (AND3 & Q3O & I0 & I1)}
+  DATA5 = {((Q5O & I0) | (~I0 & I1 & D5)) ^ (AND4 & Q4O & I0 & I1)}
+  DATA6 = {((Q6O & I0) | (~I0 & I1 & D6)) ^ (AND5 & Q5O & I0 & I1)}
+  DATA7 = {((Q7O & I0) | (~I0 & I1 & D7)) ^ (AND6 & Q6O & I0 & I1)}
+  COBARO = {~(~CIBAR & Q0O & Q1O & Q2O & Q3O & Q4O & Q5O & Q6O & Q7O)}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CK
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(9,1,0) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O COBARO
+ OEBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 COBAR
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+  ENABLE LO = OEBAR
+  Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+    CASE(
+      TRN_Z$, DELAY(-1,19NS,30NS),
+      TRN_$Z, DELAY(-1,15NS,30NS),
+      TRN_LH, DELAY(-1,10NS,15NS),
+      TRN_HL, DELAY(-1,10NS,15NS),
+      DELAY(-1,20NS,31NS))}
+ PINDLY:
+  COBAR = {
+    CASE(
+      (TRN_LH | TRN_HL), DELAY(-1,23NS,30NS),
+      DELAY(-1,24NS,31NS))}

U4 CONSTRAINT(12) DPWR DGND
+ CK D0 D1 D2 D3 D4 D5 D6 D7 CIBAR I0 I1
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CK
+  MAXFREQ = 32MEG
+ WIDTH:
+  NODE = CK
+  MIN_HI = 7NS
+  MIN_LO = 15NS
+ SETUP_HOLD:
+  CLOCK LH = CK
+  DATA(11) = D0 D1 D2 D3 D4 D5 D6 D7 CIBAR I0 I1
+  SETUPTIME = 20NS

.ENDS 74LS461A

* ----------------------------------------------------------- 74ALS465A ------
*  Octal Buffers With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-373 to 2-377
*  bss    4/25/94
*
.SUBCKT 74ALS465A G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR GEN
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3a(8) DPWR DGND
+     A1 A2 A3 A4 A5 A6 A7 A8
+     GEN
+     Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     DLY_ALS465 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS465 utgate (tplhMN=2ns tplhMX=13ns tphlMN=4ns tphlMX=12ns
+                                      tpzhMN=4ns tpzhMX=23ns tpzlMN=5ns tpzlMX=25ns
+                                      tphzMN=2ns tphzMX=10ns tplzMN=3ns tplzMX=18ns)

.ENDS 74ALS465A
*
*
* ----------------------------------------------------------- 74LS465 ------
*  Octal Buffers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-963 to 2-966
*  bss    4/25/94
*
.SUBCKT 74LS465 G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR GEN
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3a(8) DPWR DGND
+     A1 A2 A3 A4 A5 A6 A7 A8
+     GEN
+     Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     DLY_LS465 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LS465 utgate (tplhTY=9ns tplhMX=15ns tphlTY=12ns tphlMX=18ns
+                                      tpzhTY=25ns tpzhMX=40ns tpzlTY=29ns tpzlMX=45ns
+                                      tphzTY=25ns tphzMX=40ns tplzTY=30ns tplzMX=45ns)

.ENDS 74LS465
*
*
* ----------------------------------------------------------- 74ALS466A ------
*  Octal Buffers With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-373 to 2-377
*  bss    4/25/94
*
.SUBCKT 74ALS466A G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR GEN
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv3a(8) DPWR DGND
+     A1 A2 A3 A4 A5 A6 A7 A8
+     GEN
+     Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     DLY_ALS466 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS466 utgate (tplhMN=3ns tplhMX=12ns tphlMN=2ns tphlMX=9ns
+                                      tpzhMN=4ns tpzhMX=16ns tpzlMN=7ns tpzlMX=23ns
+                                      tphzMN=2ns tphzMX=10ns tplzMN=2ns tplzMX=17ns)

.ENDS 74ALS466A
*
*
* ----------------------------------------------------------- 74LS466 ------
*  Octal Buffers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-963 to 2-966
*  bss    4/25/94
*
.SUBCKT 74LS466 G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR GEN
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv3a(8) DPWR DGND
+     A1 A2 A3 A4 A5 A6 A7 A8
+     GEN
+     Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     DLY_LS466 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LS466 utgate (tplhTY=7ns tplhMX=12ns tphlTY=9ns tphlMX=15ns
+                                      tpzhTY=25ns tpzhMX=40ns tpzlTY=29ns tpzlMX=45ns
+                                      tphzTY=25ns tphzMX=40ns tplzTY=30ns tplzMX=45ns)

.ENDS 74LS466
*
*
* ----------------------------------------------------------- 74ALS467A ------
*  Octal Buffers With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-373 to 2-377
*  bss    4/25/94
*
.SUBCKT 74ALS467A 1GBAR 1A1 1A2 1A3 1A4 1Y1 1Y2 1Y3 1Y4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1GBAR GEN
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3a(4) DPWR DGND
+     1A1 1A2 1A3 1A4
+     GEN
+     1Y1 1Y2 1Y3 1Y4
+     DLY_ALS467 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS467 utgate (tplhMN=2ns tplhMX=13ns tphlMN=4ns tphlMX=12ns
+                                      tpzhMN=4ns tpzhMX=23ns tpzlMN=5ns tpzlMX=25ns
+                                      tphzMN=2ns tphzMX=10ns tplzMN=3ns tplzMX=18ns)

.ENDS 74ALS467A
*
*
* ----------------------------------------------------------- 74LS467 ------
*  Octal Buffers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-963 to 2-966
*  bss    4/25/94
*
.SUBCKT 74LS467 1GBAR 1A1 1A2 1A3 1A4 1Y1 1Y2 1Y3 1Y4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1GBAR GEN
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3a(4) DPWR DGND
+     1A1 1A2 1A3 1A4
+     GEN
+     1Y1 1Y2 1Y3 1Y4
+     DLY_LS467 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LS467 utgate (tplhTY=9ns tplhMX=15ns tphlTY=12ns tphlMX=18ns
+                                      tpzhTY=25ns tpzhMX=40ns tpzlTY=29ns tpzlMX=45ns
+                                      tphzTY=25ns tphzMX=40ns tplzTY=30ns tplzMX=45ns)

.ENDS 74LS467
*
*
* ----------------------------------------------------------- 74ALS468A ------
*  Octal Buffers With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-373 to 2-377
*  bss    4/25/94
*
.SUBCKT 74ALS468A 1GBAR 1A1 1A2 1A3 1A4 1Y1 1Y2 1Y3 1Y4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1GBAR GEN
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv3a(4) DPWR DGND
+     1A1 1A2 1A3 1A4
+     GEN
+     1Y1 1Y2 1Y3 1Y4
+     DLY_ALS468 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS468 utgate (tplhMN=3ns tplhMX=12ns tphlMN=2ns tphlMX=9ns
+                                      tpzhMN=4ns tpzhMX=16ns tpzlMN=7ns tpzlMX=23ns
+                                      tphzMN=2ns tphzMX=10ns tplzMN=2ns tplzMX=17ns)

.ENDS 74ALS468A
*
*
* ----------------------------------------------------------- 74LS468 ------
*  Octal Buffers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-963 to 2-966
*  bss    4/25/94
*
.SUBCKT 74LS468 1GBAR 1A1 1A2 1A3 1A4 1Y1 1Y2 1Y3 1Y4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1GBAR GEN
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv3a(4) DPWR DGND
+     1A1 1A2 1A3 1A4
+     GEN
+     1Y1 1Y2 1Y3 1Y4
+     DLY_LS468 IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LS468 utgate (tplhTY=7ns tplhMX=12ns tphlTY=9ns tphlMX=15ns
+                                      tpzhTY=25ns tpzhMX=40ns tpzlTY=29ns tpzlMX=45ns
+                                      tphzTY=25ns tphzMX=40ns tplzTY=30ns tplzMX=45ns)

.ENDS 74LS468

*-------------------------------------------------------------74LS469---

* 8 Bit Up/Down Counter
* National LS/S/TTL Logic Databook, 1989, pages 2-446 to 2-448
* jat 8/13/96

.SUBCKT 74LS469 CK LDBAR UDBAR CBIBAR OEBAR D0 D1 D2 D3 D4 D5 D6 D7 CBOBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(27,9) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O LDBAR UDBAR D0 D1 D2 D3 D4 D5 D6 D7 CBIBAR
+ Q0BARO Q1BARO Q2BARO Q3BARO Q4BARO Q5BARO Q6BARO Q7BARO
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7 CBOBARO
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  AND0TOP = {~CBIBAR & LDBAR & ~UDBAR}
+  AND0BOT = {~CBIBAR & LDBAR & UDBAR}
+  AND1TOP = {AND0TOP & Q0O & LDBAR & ~UDBAR}
+  AND1BOT = {AND0BOT & Q0BARO & LDBAR & UDBAR}
+  AND2TOP = {AND1TOP & Q1O & LDBAR & ~UDBAR}
+  AND2BOT = {AND1BOT & Q1BARO & LDBAR & UDBAR}
+  AND3TOP = {AND2TOP & Q2O & LDBAR & ~UDBAR}
+  AND3BOT = {AND2BOT & Q2BARO & LDBAR & UDBAR}
+  AND4TOP = {AND3TOP & Q3O & LDBAR & ~UDBAR}
+  AND4BOT = {AND3BOT & Q3BARO & LDBAR & UDBAR}
+  AND5TOP = {AND4TOP & Q4O & LDBAR & ~UDBAR}
+  AND5BOT = {AND4BOT & Q4BARO & LDBAR & UDBAR}
+  AND6TOP = {AND5TOP & Q5O & LDBAR & ~UDBAR}
+  AND6BOT = {AND5BOT & Q5BARO & LDBAR & UDBAR}
+  AND7TOP = {AND6TOP & Q6O & LDBAR & ~UDBAR}
+  AND7BOT = {AND6BOT & Q6BARO & LDBAR & UDBAR}
+  DATA0 = {((Q0O & LDBAR) | (~LDBAR & D0)) ^ (AND0TOP | AND0BOT)}
+  DATA1 = {((Q1O & LDBAR) | (~LDBAR & D1)) ^ (AND1TOP | AND1BOT)}
+  DATA2 = {((Q2O & LDBAR) | (~LDBAR & D2)) ^ (AND2TOP | AND2BOT)}
+  DATA3 = {((Q3O & LDBAR) | (~LDBAR & D3)) ^ (AND3TOP | AND3BOT)}
+  DATA4 = {((Q4O & LDBAR) | (~LDBAR & D4)) ^ (AND4TOP | AND4BOT)}
+  DATA5 = {((Q5O & LDBAR) | (~LDBAR & D5)) ^ (AND5TOP | AND5BOT)}
+  DATA6 = {((Q6O & LDBAR) | (~LDBAR & D6)) ^ (AND6TOP | AND6BOT)}
+  DATA7 = {((Q7O & LDBAR) | (~LDBAR & D7)) ^ (AND7TOP | AND7BOT)}
+  CBOBARO = {~((~CBIBAR & ~UDBAR & Q0O & Q1O & Q2O & Q3O & Q4O & Q5O & Q6O & Q7O) |
+               (~CBIBAR & UDBAR & Q0BARO & Q1BARO & Q2BARO & Q3BARO & Q4BARO & Q5BARO & Q6BARO & Q7BARO))}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CK
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ Q0BARO Q1BARO Q2BARO Q3BARO Q4BARO Q5BARO Q6BARO Q7BARO
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(9,1,2) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O CBOBARO
+ OEBAR
+ CK CBIBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 CBOBAR
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+  EDGE = {CHANGED_LH(CK,0)}
+  CARRY = {CHANGED(CBIBAR,0)}
+ TRISTATE:
+  ENABLE LO = OEBAR
+  Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+    CASE(
+      TRN_Z$, DELAY(-1,20NS,35NS),
+      TRN_$Z, DELAY(-1,20NS,35NS),
+      TRN_LH, DELAY(-1,20NS,30NS),
+      TRN_HL, DELAY(-1,20NS,30NS),
+      DELAY(-1,21NS,36NS))}
+ PINDLY:
+  CBOBAR = {
+    CASE(
+      EDGE & TRN_LH, DELAY(-1,55NS,80NS),
+      EDGE & TRN_HL, DELAY(-1,55NS,80NS),
+      CARRY & TRN_LH, DELAY(-1,35NS,50NS),
+      CARRY & TRN_HL, DELAY(-1,35NS,50NS),
+      DELAY(-1,56NS,81NS))}

U4 CONSTRAINT(12) DPWR DGND
+ CK D0 D1 D2 D3 D4 D5 D6 D7 CBIBAR LDBAR UDBAR
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CK
+  MAXFREQ = 12.5MEG
+ WIDTH:
+  NODE = CK
+  MIN_HI = 25NS
+  MIN_LO = 35NS
+ SETUP_HOLD:
+  CLOCK LH = CK
+  DATA(11) = D0 D1 D2 D3 D4 D5 D6 D7 CBIBAR LDBAR UDBAR
+  SETUPTIME = 50NS

.ENDS 74LS469

*-------------------------------------------------------------74LS469A---

* 8 Bit Up/Down Counter
* National LS/S/TTL Logic Databook, 1989, pages 2-449 to 2-452
* jat 8/13/96

.SUBCKT 74LS469A CK LDBAR UDBAR CBIBAR OEBAR D0 D1 D2 D3 D4 D5 D6 D7 CBOBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(27,9) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O LDBAR UDBAR D0 D1 D2 D3 D4 D5 D6 D7 CBIBAR
+ Q0BARO Q1BARO Q2BARO Q3BARO Q4BARO Q5BARO Q6BARO Q7BARO
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7 CBOBARO
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  AND0TOP = {~CBIBAR & LDBAR & ~UDBAR}
+  AND0BOT = {~CBIBAR & LDBAR & UDBAR}
+  AND1TOP = {AND0TOP & Q0O & LDBAR & ~UDBAR}
+  AND1BOT = {AND0BOT & Q0BARO & LDBAR & UDBAR}
+  AND2TOP = {AND1TOP & Q1O & LDBAR & ~UDBAR}
+  AND2BOT = {AND1BOT & Q1BARO & LDBAR & UDBAR}
+  AND3TOP = {AND2TOP & Q2O & LDBAR & ~UDBAR}
+  AND3BOT = {AND2BOT & Q2BARO & LDBAR & UDBAR}
+  AND4TOP = {AND3TOP & Q3O & LDBAR & ~UDBAR}
+  AND4BOT = {AND3BOT & Q3BARO & LDBAR & UDBAR}
+  AND5TOP = {AND4TOP & Q4O & LDBAR & ~UDBAR}
+  AND5BOT = {AND4BOT & Q4BARO & LDBAR & UDBAR}
+  AND6TOP = {AND5TOP & Q5O & LDBAR & ~UDBAR}
+  AND6BOT = {AND5BOT & Q5BARO & LDBAR & UDBAR}
+  AND7TOP = {AND6TOP & Q6O & LDBAR & ~UDBAR}
+  AND7BOT = {AND6BOT & Q6BARO & LDBAR & UDBAR}
+  DATA0 = {((Q0O & LDBAR) | (~LDBAR & D0)) ^ (AND0TOP | AND0BOT)}
+  DATA1 = {((Q1O & LDBAR) | (~LDBAR & D1)) ^ (AND1TOP | AND1BOT)}
+  DATA2 = {((Q2O & LDBAR) | (~LDBAR & D2)) ^ (AND2TOP | AND2BOT)}
+  DATA3 = {((Q3O & LDBAR) | (~LDBAR & D3)) ^ (AND3TOP | AND3BOT)}
+  DATA4 = {((Q4O & LDBAR) | (~LDBAR & D4)) ^ (AND4TOP | AND4BOT)}
+  DATA5 = {((Q5O & LDBAR) | (~LDBAR & D5)) ^ (AND5TOP | AND5BOT)}
+  DATA6 = {((Q6O & LDBAR) | (~LDBAR & D6)) ^ (AND6TOP | AND6BOT)}
+  DATA7 = {((Q7O & LDBAR) | (~LDBAR & D7)) ^ (AND7TOP | AND7BOT)}
+  CBOBARO = {~((~CBIBAR & ~UDBAR & Q0O & Q1O & Q2O & Q3O & Q4O & Q5O & Q6O & Q7O) |
+               (~CBIBAR & UDBAR & Q0BARO & Q1BARO & Q2BARO & Q3BARO & Q4BARO & Q5BARO & Q6BARO & Q7BARO))}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CK
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ Q0BARO Q1BARO Q2BARO Q3BARO Q4BARO Q5BARO Q6BARO Q7BARO
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(9,1,0) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O CBOBARO
+ OEBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 CBOBAR
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+  ENABLE LO = OEBAR
+  Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+    CASE(
+      TRN_Z$, DELAY(-1,19NS,30NS),
+      TRN_$Z, DELAY(-1,15NS,30NS),
+      TRN_LH, DELAY(-1,10NS,15NS),
+      TRN_HL, DELAY(-1,10NS,15NS),
+      DELAY(-1,20NS,31NS))}
+ PINDLY:
+  CBOBAR = {
+    CASE(
+      (TRN_LH | TRN_HL), DELAY(-1,23NS,30NS),
+      DELAY(-1,24NS,31NS))}

U4 CONSTRAINT(12) DPWR DGND
+ CK D0 D1 D2 D3 D4 D5 D6 D7 CBIBAR LDBAR UDBAR
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CK
+  MAXFREQ = 32MEG
+ WIDTH:
+  NODE = CK
+  MIN_HI = 7NS
+  MIN_LO = 15NS
+ SETUP_HOLD:
+  CLOCK LH = CK
+  DATA(11) = D0 D1 D2 D3 D4 D5 D6 D7 CBIBAR LDBAR UDBAR
+  SETUPTIME = 20NS

.ENDS 74LS469A

*-------------------------------------------------------------74ACT470----

* 8-Bit Registered Bus Transceivers with 3-State Outputs
* TI Advanced CMOS Logic Data Book, 1993, pages 2-405 to 2-409
* jat 12/26/95

.SUBCKT 74ACT470
+ OEBABAR OEABBAR CEBABAR CEABBAR CLKBA CLKAB A1 A2 A3 A4 A5 A6 A7 A8 B1
+ B2 B3 B4 B5 B6 B7 B8
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(6,4) DPWR DGND
+ CLKAB CLKBA CEABBAR CEBABAR OEABBAR OEBABAR
+ CLOCKAB CLOCKBA ENABAB ENABBA
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   CLOCKAB = {CLKAB & (~CEABBAR)}
+   CLOCKBA = {CLKBA & (~CEBABAR)}
+   ENABAB = {~(OEABBAR | CEABBAR)}
+   ENABBA = {~(OEBABAR | CEBABAR)}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CLOCKAB
+ A1 A2 A3 A4 A5 A6 A7 A8
+ B1O B2O B3O B4O B5O B6O B7O B8O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(8) DPWR DGND
+ $D_HI $D_HI CLOCKBA
+ B1 B2 B3 B4 B5 B6 B7 B8
+ A1O A2O A3O A4O A5O A6O A7O A8O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(16,2,6) DPWR DGND
+ A1O A2O A3O A4O A5O A6O A7O A8O B1O B2O B3O B4O B5O B6O B7O B8O
+ ENABAB ENABBA
+ OEABBAR OEBABAR CEABBAR CEBABAR CLKAB CLKBA
+ A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   OUTAB = {CHANGED(OEABBAR,0)}
+   OUTBA = {CHANGED(OEBABAR,0)}
+   CLKENAB = {CHANGED(CEABBAR,0)}
+   CLKENBA = {CHANGED(CEBABAR,0)}
+   CAB = {CHANGED_LH(CLKAB,0)}
+   CBA = {CHANGED_LH(CLKBA,0)}
+ TRISTATE:
+   ENABLE HI = ENABAB
+   B1 B2 B3 B4 B5 B6 B7 B8 = {
+    CASE(
+      OUTAB & TRN_ZH, DELAY(3NS,7NS,9.5NS),
+      OUTAB & TRN_ZL, DELAY(4.3NS,8.6NS,11.4NS),
+      OUTAB & TRN_HZ, DELAY(4.5NS,7.9NS,9.6NS),
+      OUTAB & TRN_LZ, DELAY(5.1NS,7.7NS,9.5NS),
+      CLKENAB & TRN_ZH, DELAY(3.4NS,7.3NS,10NS),
+      CLKENAB & TRN_ZL, DELAY(4.6NS,9NS,11.9NS),
+      CLKENAB & TRN_HZ, DELAY(4.8NS,7.9NS,9.9NS),
+      CLKENAB & TRN_LZ, DELAY(5.1NS,7.9NS,9.8NS),
+      CAB & TRN_LH, DELAY(3.4NS,7.3NS,9NS),
+      CAB & TRN_HL, DELAY(4.2NS,8.3NS,10.2NS),
+      DELAY(6.1NS,10NS,12.9NS))}
+ TRISTATE:
+   ENABLE HI = ENABBA
+   A1 A2 A3 A4 A5 A6 A7 A8 = {
+    CASE(
+      OUTBA & TRN_ZH, DELAY(3NS,7NS,9.5NS),
+      OUTBA & TRN_ZL, DELAY(4.3NS,8.6NS,11.4NS),
+      OUTBA & TRN_HZ, DELAY(4.5NS,7.9NS,9.6NS),
+      OUTBA & TRN_LZ, DELAY(5.1NS,7.7NS,9.5NS),
+      CLKENBA & TRN_ZH, DELAY(3.4NS,7.3NS,10NS),
+      CLKENBA & TRN_ZL, DELAY(4.6NS,9NS,11.9NS),
+      CLKENBA & TRN_HZ, DELAY(4.8NS,7.9NS,9.9NS),
+      CLKENBA & TRN_LZ, DELAY(5.1NS,7.9NS,9.8NS),
+      CBA & TRN_LH, DELAY(3.4NS,7.3NS,9NS),
+      CBA & TRN_HL, DELAY(4.2NS,8.3NS,10.2NS),
+      DELAY(6.1NS,10NS,12.9NS))}

U5 CONSTRAINT(20) DPWR DGND
+ CLKAB CLKBA A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 CEABBAR CEBABAR
+ IO_ACT IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLKAB
+   MAXFREQ = 90MEG
+ FREQ:
+   NODE = CLKBA
+   MAXFREQ = 90MEG
+ WIDTH:
+   NODE = CLKAB
+   MIN_LO = 5.5NS
+   MIN_HI = 5.5NS
+ WIDTH:
+   NODE = CLKBA
+   MIN_LO = 5.5NS
+   MIN_HI = 5.5NS
+ SETUP_HOLD:
+   CLOCK LH = CLKAB
+   DATA(8) = A1 A2 A3 A4 A5 A6 A7 A8
+   SETUPTIME = 2NS
+   HOLDTIME = 3NS
+ SETUP_HOLD:
+   CLOCK LH = CLKBA
+   DATA(8) = B1 B2 B3 B4 B5 B6 B7 B8
+   SETUPTIME = 2NS
+   HOLDTIME = 3NS
+  SETUP_HOLD:
+   CLOCK LH = CEABBAR
+   DATA(8) = A1 A2 A3 A4 A5 A6 A7 A8
+   SETUPTIME = 2NS
+   HOLDTIME = 3NS
+  SETUP_HOLD:
+   CLOCK LH = CEBABAR
+   DATA(8) = B1 B2 B3 B4 B5 B6 B7 B8
+   SETUPTIME = 2NS
+   HOLDTIME = 3NS

.ENDS 74ACT470

* ----------------------------------------------------------- 74490 ------
*  Dual 4-Bit Decade Counters
*
*  The TTL Logic Data Book, Vol. 2, 1985, TI Pages 3-1117 to 3-1125
*  bss    4/25/94
*
.SUBCKT 74490 1CLR 1SET9 1CLK 1QA 1QB 1QC 1QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(1) DPWR DGND
+     SETBAR CLRBAR 1CLK $D_HI $D_HI 1QA_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     $D_HI NAND9 CLKB $D_HI $D_HI 1QB_O 1QBBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     $D_HI NAND9 1QB_O $D_HI $D_HI 1QC_O 1QCBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     SETBAR CLRBAR CLKD $D_HI $D_HI 1QD_O 1QDBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(6,5) DPWR DGND
+     1SET9 1CLR 1QA_O 1QBBAR 1QCBAR 1QDBAR
+     SETBAR CLRBAR CLKB CLKD NAND9
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     SETBAR = {~1SET9}
+     CLRBAR = {~1CLR}
+     CLKB = {1QA_O & 1QDBAR}
+     CLKD = {(1QA_O & (~((1QBBAR & 1QDBAR) | (1QCBAR & 1QDBAR))))}
+     NAND9 = {SETBAR & CLRBAR}

U6DLY PINDLY(4,0,3) DPWR DGND
+     1QA_O 1QB_O 1QC_O 1QD_O
+     1CLR 1SET9 1CLK
+     1QA 1QB 1QC 1QD
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_HL(1CLK,0)}
+     SET = {CHANGED_LH(1SET9,0)}
+     CLEAR = {CHANGED_LH(1CLR,0)}
+
+  PINDLY:
+     1QA = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,24ns,39ns),
+         SET & TRN_LH, DELAY(-1,24ns,39ns),
+         CLOCK & TRN_LH, DELAY(-1,12ns,20ns),
+         CLOCK & TRN_HL, DELAY(-1,13ns,20ns),
+         DELAY(-1,25ns,40ns))}
+
+     1QB = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,24ns,39ns),
+         SET & TRN_HL, DELAY(-1,20ns,36ns),
+         CLOCK & TRN_LH, DELAY(-1,24ns,39ns),
+         CLOCK & TRN_HL, DELAY(-1,26ns,39ns),
+         DELAY(-1,27ns,40ns))}
+
+     1QC = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,24ns,39ns),
+         SET & TRN_HL, DELAY(-1,20ns,36ns),
+         CLOCK & TRN_LH, DELAY(-1,32ns,54ns),
+         CLOCK & TRN_HL, DELAY(-1,36ns,54ns),
+         DELAY(-1,37ns,55ns))}
+
+     1QD = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,24ns,39ns),
+         SET & TRN_LH, DELAY(-1,24ns,39ns),
+         CLOCK & TRN_LH, DELAY(-1,24ns,39ns),
+         CLOCK & TRN_HL, DELAY(-1,26ns,39ns),
+         DELAY(-1,27ns,40ns))}

U7CON CONSTRAINT(3) DPWR DGND
+     1CLR 1SET9 1CLK
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=1CLK
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=1CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1CLR
+     MIN_HI=20ns
+
+  WIDTH:
+     NODE=1SET9
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=1CLK
+     DATA(2)=1CLR 1SET9
+     SETUPTIME_LO=25ns

.ENDS 74490
*
*
* ----------------------------------------------------------- 74HC490 ------
*  Dual 4-Bit Decade Counters
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-447 to 2-450
*  bss    4/25/94
*
.SUBCKT 74HC490 1CLR 1SET9 1CLK 1QA 1QB 1QC 1QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(1) DPWR DGND
+     SETBAR CLRBAR 1CLK $D_HI $D_HI 1QA_O $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     $D_HI NAND9 CLKB $D_HI $D_HI 1QB_O 1QBBAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     $D_HI NAND9 1QB_O $D_HI $D_HI 1QC_O 1QCBAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     SETBAR CLRBAR CLKD $D_HI $D_HI 1QD_O 1QDBAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(6,5) DPWR DGND
+     1SET9 1CLR 1QA_O 1QBBAR 1QCBAR 1QDBAR
+     SETBAR CLRBAR CLKB CLKD NAND9
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     SETBAR = {~1SET9}
+     CLRBAR = {~1CLR}
+     CLKB = {1QA_O & 1QDBAR}
+     CLKD = {(1QA_O & (~((1QBBAR & 1QDBAR) | (1QCBAR & 1QDBAR))))}
+     NAND9 = {SETBAR & CLRBAR}

U6DLY PINDLY(4,0,3) DPWR DGND
+     1QA_O 1QB_O 1QC_O 1QD_O
+     1CLR 1SET9 1CLK
+     1QA 1QB 1QC 1QD
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_HL(1CLK,0)}
+     SET = {CHANGED_LH(1SET9,0)}
+     CLEAR = {CHANGED_LH(1CLR,0)}
+
+  PINDLY:
+     1QA = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,17ns,26ns),
+         SET & TRN_LH, DELAY(-1,19ns,37ns),
+         CLOCK, DELAY(-1,15ns,25ns),
+         DELAY(-1,20ns,38ns))}
+
+     1QB = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,17ns,26ns),
+         SET & TRN_HL, DELAY(-1,18ns,28ns),
+         CLOCK, DELAY(-1,23ns,37ns),
+         DELAY(-1,24ns,38ns))}
+
+     1QC = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,17ns,26ns),
+         SET & TRN_HL, DELAY(-1,18ns,28ns),
+         CLOCK, DELAY(-1,30ns,47ns),
+         DELAY(-1,31ns,48ns))}
+
+     1QD = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,17ns,26ns),
+         SET & TRN_LH, DELAY(-1,19ns,37ns),
+         CLOCK, DELAY(-1,23ns,37ns),
+         DELAY(-1,24ns,38ns))}

U7CON CONSTRAINT(3) DPWR DGND
+     1CLR 1SET9 1CLK
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=1CLK
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=1CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1CLR
+     MIN_HI=20ns
+
+  WIDTH:
+     NODE=1SET9
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=1CLK
+     DATA(2)=1CLR 1SET9
+     SETUPTIME_LO=5ns

.ENDS 74HC490
*
*
* ----------------------------------------------------------- 74LS490 ------
*  Dual 4-Bit Decade Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-967 to 2-971
*  bss    4/25/94
*
.SUBCKT 74LS490 1CLR 1SET9 1CLK 1QA 1QB 1QC 1QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(1) DPWR DGND
+     SETBAR CLRBAR 1CLK $D_HI $D_HI 1QA_O $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     $D_HI NAND9 CLKB $D_HI $D_HI 1QB_O 1QBBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     $D_HI NAND9 1QB_O $D_HI $D_HI 1QC_O 1QCBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     SETBAR CLRBAR CLKD $D_HI $D_HI 1QD_O 1QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(6,5) DPWR DGND
+     1SET9 1CLR 1QA_O 1QBBAR 1QCBAR 1QDBAR
+     SETBAR CLRBAR CLKB CLKD NAND9
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     SETBAR = {~1SET9}
+     CLRBAR = {~1CLR}
+     CLKB = {1QA_O & 1QDBAR}
+     CLKD = {(1QA_O & (~((1QBBAR & 1QDBAR) | (1QCBAR & 1QDBAR))))}
+     NAND9 = {SETBAR & CLRBAR}

U6DLY PINDLY(4,0,3) DPWR DGND
+     1QA_O 1QB_O 1QC_O 1QD_O
+     1CLR 1SET9 1CLK
+     1QA 1QB 1QC 1QD
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_HL(1CLK,0)}
+     SET = {CHANGED_LH(1SET9,0)}
+     CLEAR = {CHANGED_LH(1CLR,0)}
+
+  PINDLY:
+     1QA = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,24ns,39ns),
+         SET & TRN_LH, DELAY(-1,24ns,39ns),
+         CLOCK & TRN_LH, DELAY(-1,12ns,20ns),
+         CLOCK & TRN_HL, DELAY(-1,13ns,20ns),
+         DELAY(-1,25ns,40ns))}
+
+     1QB = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,24ns,39ns),
+         SET & TRN_HL, DELAY(-1,20ns,36ns),
+         CLOCK & TRN_LH, DELAY(-1,24ns,39ns),
+         CLOCK & TRN_HL, DELAY(-1,26ns,39ns),
+         DELAY(-1,27ns,40ns))}
+
+     1QC = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,24ns,39ns),
+         SET & TRN_HL, DELAY(-1,20ns,36ns),
+         CLOCK & TRN_LH, DELAY(-1,32ns,54ns),
+         CLOCK & TRN_HL, DELAY(-1,36ns,54ns),
+         DELAY(-1,37ns,55ns))}
+
+     1QD = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,24ns,39ns),
+         SET & TRN_LH, DELAY(-1,24ns,39ns),
+         CLOCK & TRN_LH, DELAY(-1,24ns,39ns),
+         CLOCK & TRN_HL, DELAY(-1,26ns,39ns),
+         DELAY(-1,27ns,40ns))}

U7CON CONSTRAINT(3) DPWR DGND
+     1CLR 1SET9 1CLK
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=1CLK
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=1CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1CLR
+     MIN_HI=20ns
+
+  WIDTH:
+     NODE=1SET9
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=1CLK
+     DATA(2)=1CLR 1SET9
+     SETUPTIME_LO=25ns

.ENDS 74LS490

*-------------------------------------------------------------74LS491---

* 10-Bit Counter
* National LS/S/TTL Logic Databook, 1989, pages 2-456 to 2-458
* jat 8/13/96

.SUBCKT 74LS491 CK LDBAR CNTBAR UPBAR SET CINBAR D0 D1 D2D7 D8 D9 OEBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(29,10) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O Q8O Q9O LDBAR UPBAR CNTBAR SET CINBAR
+ D0 D1 D2D7 D8 D9
+ Q0BARO Q1BARO Q2BARO Q3BARO Q4BARO Q5BARO Q6BARO Q7BARO Q8BARO
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7 DATA8 DATA9
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  AND0TOP = {LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND0BOT = {~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND1TOP = {AND0TOP & Q0O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND1BOT = {AND0BOT & Q0BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND2TOP = {AND1TOP & Q1O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND2BOT = {AND1BOT & Q1BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND3TOP = {AND2TOP & Q2O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND3BOT = {AND2BOT & Q2BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND4TOP = {AND3TOP & Q3O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND4BOT = {AND3BOT & Q3BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND5TOP = {AND4TOP & Q4O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND5BOT = {AND4BOT & Q4BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND6TOP = {AND5TOP & Q5O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND6BOT = {AND5BOT & Q5BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND7TOP = {AND6TOP & Q6O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND7BOT = {AND6BOT & Q6BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND8TOP = {AND7TOP & Q7O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND8BOT = {AND7BOT & Q7BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND9TOP = {AND8TOP & Q8O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND9BOT = {AND8BOT & Q8BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  DATA0 = {SET | (((Q0O & LDBAR & ~SET) | (~LDBAR & ~SET & D0)) ^ (AND0TOP | AND0BOT))}
+  DATA1 = {SET | (((Q1O & LDBAR & ~SET) | (~LDBAR & ~SET & D1)) ^ (AND1TOP | AND1BOT))}
+  DATA2 = {SET | (((Q2O & LDBAR & ~SET) | (~LDBAR & ~SET & D2D7)) ^ (AND2TOP | AND2BOT))}
+  DATA3 = {SET | (((Q3O & LDBAR & ~SET) | (~LDBAR & ~SET & D2D7)) ^ (AND3TOP | AND3BOT))}
+  DATA4 = {SET | (((Q4O & LDBAR & ~SET) | (~LDBAR & ~SET & D2D7)) ^ (AND4TOP | AND4BOT))}
+  DATA5 = {SET | (((Q5O & LDBAR & ~SET) | (~LDBAR & ~SET & D2D7)) ^ (AND5TOP | AND5BOT))}
+  DATA6 = {SET | (((Q6O & LDBAR & ~SET) | (~LDBAR & ~SET & D2D7)) ^ (AND6TOP | AND6BOT))}
+  DATA7 = {SET | (((Q7O & LDBAR & ~SET) | (~LDBAR & ~SET & D2D7)) ^ (AND7TOP | AND7BOT))}
+  DATA8 = {SET | (((Q8O & LDBAR & ~SET) | (~LDBAR & ~SET & D8)) ^ (AND8TOP | AND8BOT))}
+  DATA9 = {SET | (((Q9O & LDBAR & ~SET) | (~LDBAR & ~SET & D9)) ^ (AND9TOP | AND9BOT))}

U2 DFF(10) DPWR DGND
+ $D_HI $D_HI CK
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7 DATA8 DATA9
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O Q8O Q9O
+ Q0BARO Q1BARO Q2BARO Q3BARO Q4BARO Q5BARO Q6BARO Q7BARO Q8BARO $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(10,1,0) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O Q8O Q9O
+ OEBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+  ENABLE LO = OEBAR
+  Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 = {
+    CASE(
+      TRN_Z$, DELAY(-1,35NS,45NS),
+      TRN_$Z, DELAY(-1,35NS,45NS),
+      TRN_LH, DELAY(-1,20NS,30NS),
+      TRN_HL, DELAY(-1,20NS,30NS),
+      DELAY(-1,36NS,46NS))}

U4 CONSTRAINT(11) DPWR DGND
+ CK D0 D1 D2D7 D8 D9 LDBAR CNTBAR UPBAR SET CINBAR
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CK
+  MAXFREQ = 12.5MEG
+ WIDTH:
+  NODE = CK
+  MIN_HI = 40NS
+  MIN_LO = 35NS
+ SETUP_HOLD:
+  CLOCK LH = CK
+  DATA(10) = D0 D1 D2D7 D8 D9 LDBAR CNTBAR UPBAR SET CINBAR
+  SETUPTIME = 50NS

.ENDS 74LS491

*-------------------------------------------------------------74LS491A---

* 10-Bit Counter
* National LS/S/TTL Logic Databook, 1989, pages 2-459 to 2-462
* jat 8/13/96

.SUBCKT 74LS491A CK LDBAR CNTBAR UPBAR SET CINBAR D0 D1 D2D7 D8 D9 OEBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(29,10) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O Q8O Q9O LDBAR UPBAR CNTBAR SET CINBAR
+ D0 D1 D2D7 D8 D9
+ Q0BARO Q1BARO Q2BARO Q3BARO Q4BARO Q5BARO Q6BARO Q7BARO Q8BARO
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7 DATA8 DATA9
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  AND0TOP = {LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND0BOT = {~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND1TOP = {AND0TOP & Q0O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND1BOT = {AND0BOT & Q0BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND2TOP = {AND1TOP & Q1O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND2BOT = {AND1BOT & Q1BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND3TOP = {AND2TOP & Q2O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND3BOT = {AND2BOT & Q2BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND4TOP = {AND3TOP & Q3O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND4BOT = {AND3BOT & Q3BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND5TOP = {AND4TOP & Q4O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND5BOT = {AND4BOT & Q4BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND6TOP = {AND5TOP & Q5O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND6BOT = {AND5BOT & Q5BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND7TOP = {AND6TOP & Q6O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND7BOT = {AND6BOT & Q6BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND8TOP = {AND7TOP & Q7O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND8BOT = {AND7BOT & Q7BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  AND9TOP = {AND8TOP & Q8O & LDBAR & ~CINBAR & ~SET & ~UPBAR & ~CNTBAR}
+  AND9BOT = {AND8BOT & Q8BARO & ~CINBAR & ~SET & ~CNTBAR & UPBAR & LDBAR}
+  DATA0 = {SET | (((Q0O & LDBAR & ~SET) | (~LDBAR & ~SET & D0)) ^ (AND0TOP | AND0BOT))}
+  DATA1 = {SET | (((Q1O & LDBAR & ~SET) | (~LDBAR & ~SET & D1)) ^ (AND1TOP | AND1BOT))}
+  DATA2 = {SET | (((Q2O & LDBAR & ~SET) | (~LDBAR & ~SET & D2D7)) ^ (AND2TOP | AND2BOT))}
+  DATA3 = {SET | (((Q3O & LDBAR & ~SET) | (~LDBAR & ~SET & D2D7)) ^ (AND3TOP | AND3BOT))}
+  DATA4 = {SET | (((Q4O & LDBAR & ~SET) | (~LDBAR & ~SET & D2D7)) ^ (AND4TOP | AND4BOT))}
+  DATA5 = {SET | (((Q5O & LDBAR & ~SET) | (~LDBAR & ~SET & D2D7)) ^ (AND5TOP | AND5BOT))}
+  DATA6 = {SET | (((Q6O & LDBAR & ~SET) | (~LDBAR & ~SET & D2D7)) ^ (AND6TOP | AND6BOT))}
+  DATA7 = {SET | (((Q7O & LDBAR & ~SET) | (~LDBAR & ~SET & D2D7)) ^ (AND7TOP | AND7BOT))}
+  DATA8 = {SET | (((Q8O & LDBAR & ~SET) | (~LDBAR & ~SET & D8)) ^ (AND8TOP | AND8BOT))}
+  DATA9 = {SET | (((Q9O & LDBAR & ~SET) | (~LDBAR & ~SET & D9)) ^ (AND9TOP | AND9BOT))}

U2 DFF(10) DPWR DGND
+ $D_HI $D_HI CK
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7 DATA8 DATA9
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O Q8O Q9O
+ Q0BARO Q1BARO Q2BARO Q3BARO Q4BARO Q5BARO Q6BARO Q7BARO Q8BARO $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(10,1,0) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O Q8O Q9O
+ OEBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+  ENABLE LO = OEBAR
+  Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 = {
+    CASE(
+      TRN_Z$, DELAY(-1,19NS,30NS),
+      TRN_$Z, DELAY(-1,15NS,30NS),
+      TRN_LH, DELAY(-1,10NS,15NS),
+      TRN_HL, DELAY(-1,10NS,15NS),
+      DELAY(-1,20NS,31NS))}

U4 CONSTRAINT(11) DPWR DGND
+ CK D0 D1 D2D7 D8 D9 LDBAR CNTBAR UPBAR SET CINBAR
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CK
+  MAXFREQ = 32MEG
+ WIDTH:
+  NODE = CK
+  MIN_HI = 7NS
+  MIN_LO = 15NS
+ SETUP_HOLD:
+  CLOCK LH = CK
+  DATA(10) = D0 D1 D2D7 D8 D9 LDBAR CNTBAR UPBAR SET CINBAR
+  SETUPTIME = 20NS

.ENDS 74LS491A

*-------------------------------------------------------------74LS498---

* Octal Shift Register
* National LS/S/TTL Logic Databook, 1989, pages 2-463 to 2-465
* jat 8/13/96

.SUBCKT 74LS498 CK I0 I1 LIRO RILO OEBAR D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(20,10) DPWR DGND
+ I0 I1 LIRO RILO D0 D1 D2 D3 D4 D5 D6 D7 Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7 RILOENAB LIROENAB
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   DATA0 = {(~I0 & I1 & LIRO) | (I0 & I1 & D0) | (~I0 & ~I1 & Q0O) | (I0 & ~I1 & Q1O)}
+   DATA1 = {(~I0 & I1 & Q0O) | (I0 & I1 & D1) | (~I0 & ~I1 & Q1O) | (I0 & ~I1 & Q2O)}
+   DATA2 = {(~I0 & I1 & Q1O) | (I0 & I1 & D2) | (~I0 & ~I1 & Q2O) | (I0 & ~I1 & Q3O)}
+   DATA3 = {(~I0 & I1 & Q2O) | (I0 & I1 & D3) | (~I0 & ~I1 & Q3O) | (I0 & ~I1 & Q4O)}
+   DATA4 = {(~I0 & I1 & Q3O) | (I0 & I1 & D4) | (~I0 & ~I1 & Q4O) | (I0 & ~I1 & Q5O)}
+   DATA5 = {(~I0 & I1 & Q4O) | (I0 & I1 & D5) | (~I0 & ~I1 & Q5O) | (I0 & ~I1 & Q6O)}
+   DATA6 = {(~I0 & I1 & Q5O) | (I0 & I1 & D6) | (~I0 & ~I1 & Q6O) | (I0 & ~I1 & Q7O)}
+   DATA7 = {(~I0 & I1 & Q6O) | (I0 & I1 & D7) | (~I0 & ~I1 & Q7O) | (I0 & ~I1 & RILO)}
+   RILOENAB = {I1 & ~I0}
+   LIROENAB = {~I1 & I0}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CK
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(10,3,3) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O Q0O Q7O
+ OEBAR RILOENAB LIROENAB
+ CK I0 I1
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 LIRO RILO
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+  EDGE = {CHANGED_LH(CK,0)}
+  SELECT = {CHANGED(I0,0) | CHANGED(I1,0)}
+ TRISTATE:
+  ENABLE LO = OEBAR
+  Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+    CASE(
+      TRN_Z$, DELAY(-1,35NS,45NS),
+      TRN_$Z, DELAY(-1,35NS,45NS),
+      TRN_LH, DELAY(-1,20NS,30NS),
+      TRN_HL, DELAY(-1,20NS,30NS),
+      DELAY(-1,36NS,46NS))}
+ TRISTATE:
+  ENABLE HI = LIROENAB
+  LIRO = {
+    CASE(
+      TRN_Z$, DELAY(-1,35NS,45NS),
+      TRN_$Z, DELAY(-1,35NS,45NS),
+      SELECT & (TRN_LH | TRN_HL), DELAY(-1,35NS,50NS),
+      EDGE & (TRN_LH | TRN_HL), DELAY(-1,55NS,80NS),
+      DELAY(-1,56NS,81NS))}
+ TRISTATE:
+  ENABLE HI = RILOENAB
+  RILO = {
+    CASE(
+      TRN_Z$, DELAY(-1,35NS,45NS),
+      TRN_$Z, DELAY(-1,35NS,45NS),
+      SELECT & (TRN_LH | TRN_HL), DELAY(-1,35NS,50NS),
+      EDGE & (TRN_LH | TRN_HL), DELAY(-1,55NS,80NS),
+      DELAY(-1,56NS,81NS))}

U4 CONSTRAINT(13) DPWR DGND
+ CK D0 D1 D2 D3 D4 D5 D6 D7 I0 I1 RILO LIRO
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CK
+  MAXFREQ = 12.5MEG
+ WIDTH:
+  NODE = CK
+  MIN_HI = 25NS
+  MIN_LO = 35NS
+ SETUP_HOLD:
+  CLOCK LH = CK
+  DATA(12) = D0 D1 D2 D3 D4 D5 D6 D7 I0 I1 RILO LIRO
+  SETUPTIME = 50NS

.ENDS 74LS498

*-------------------------------------------------------------74LS498A---

* Octal Shift Register
* National LS/S/TTL Logic Databook, 1989, pages 2-466 to 2-469
* jat 8/13/96

.SUBCKT 74LS498A CK I0 I1 LIRO RILO OEBAR D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(20,10) DPWR DGND
+ I0 I1 LIRO RILO D0 D1 D2 D3 D4 D5 D6 D7 Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7 RILOENAB LIROENAB
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   DATA0 = {(~I0 & I1 & LIRO) | (I0 & I1 & D0) | (~I0 & ~I1 & Q0O) | (I0 & ~I1 & Q1O)}
+   DATA1 = {(~I0 & I1 & Q0O) | (I0 & I1 & D1) | (~I0 & ~I1 & Q1O) | (I0 & ~I1 & Q2O)}
+   DATA2 = {(~I0 & I1 & Q1O) | (I0 & I1 & D2) | (~I0 & ~I1 & Q2O) | (I0 & ~I1 & Q3O)}
+   DATA3 = {(~I0 & I1 & Q2O) | (I0 & I1 & D3) | (~I0 & ~I1 & Q3O) | (I0 & ~I1 & Q4O)}
+   DATA4 = {(~I0 & I1 & Q3O) | (I0 & I1 & D4) | (~I0 & ~I1 & Q4O) | (I0 & ~I1 & Q5O)}
+   DATA5 = {(~I0 & I1 & Q4O) | (I0 & I1 & D5) | (~I0 & ~I1 & Q5O) | (I0 & ~I1 & Q6O)}
+   DATA6 = {(~I0 & I1 & Q5O) | (I0 & I1 & D6) | (~I0 & ~I1 & Q6O) | (I0 & ~I1 & Q7O)}
+   DATA7 = {(~I0 & I1 & Q6O) | (I0 & I1 & D7) | (~I0 & ~I1 & Q7O) | (I0 & ~I1 & RILO)}
+   RILOENAB = {I1 & ~I0}
+   LIROENAB = {~I1 & I0}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CK
+ DATA0 DATA1 DATA2 DATA3 DATA4 DATA5 DATA6 DATA7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(10,3,2) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O Q0O Q7O
+ OEBAR RILOENAB LIROENAB
+ I0 I1
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 LIRO RILO
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+  SELECT = {CHANGED(I0,0) | CHANGED(I1,0)}
+ TRISTATE:
+  ENABLE LO = OEBAR
+  Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+    CASE(
+      TRN_Z$, DELAY(-1,19NS,30NS),
+      TRN_$Z, DELAY(-1,15NS,30NS),
+      TRN_LH, DELAY(-1,10NS,15NS),
+      TRN_HL, DELAY(-1,10NS,15NS),
+      DELAY(-1,20NS,31NS))}
+ TRISTATE:
+  ENABLE HI = LIROENAB
+  LIRO = {
+    CASE(
+      TRN_Z$, DELAY(-1,19NS,30NS),
+      TRN_$Z, DELAY(-1,15NS,30NS),
+      SELECT & (TRN_LH | TRN_HL), DELAY(-1,23NS,30NS),
+      DELAY(-1,24NS,31NS))}
+ TRISTATE:
+  ENABLE HI = RILOENAB
+  RILO = {
+    CASE(
+      TRN_Z$, DELAY(-1,19NS,30NS),
+      TRN_$Z, DELAY(-1,15NS,30NS),
+      SELECT & (TRN_LH | TRN_HL), DELAY(-1,23NS,30NS),
+      DELAY(-1,24NS,31NS))}

U4 CONSTRAINT(13) DPWR DGND
+ CK D0 D1 D2 D3 D4 D5 D6 D7 I0 I1 RILO LIRO
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CK
+  MAXFREQ = 32MEG
+ WIDTH:
+  NODE = CK
+  MIN_HI = 7NS
+  MIN_LO = 15NS
+ SETUP_HOLD:
+  CLOCK LH = CK
+  DATA(12) = D0 D1 D2 D3 D4 D5 D6 D7 I0 I1 RILO LIRO
+  SETUPTIME = 20NS

.ENDS 74LS498A

* ----------------------------------------------------------- 74ALS518 ------
*  8-Bit Identity Comparators
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-379 to 2-384
*  bss    4/25/94
*
.SUBCKT 74ALS518 GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 PEQQ
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(17,1) DPWR DGND
+     GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     PEQQ
+     DLY_ALS518 IO_ALS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     p0bar = {~P0}
+     p1bar = {~P1}
+     p2bar = {~P2}
+     p3bar = {~P3}
+     p4bar = {~P4}
+     p5bar = {~P5}
+     p6bar = {~P6}
+     p7bar = {~P7}
+     q0bar = {~Q0}
+     q1bar = {~Q1}
+     q2bar = {~Q2}
+     q3bar = {~Q3}
+     q4bar = {~Q4}
+     q5bar = {~Q5}
+     q6bar = {~Q6}
+     q7bar = {~Q7}
+     gen = {~GBAR}
+
+     eq0 = {~(p0bar ^ q0bar)}
+     eq1 = {~(p1bar ^ q1bar)}
+     eq2 = {~(p2bar ^ q2bar)}
+     eq3 = {~(p3bar ^ q3bar)}
+     eq4 = {~(p4bar ^ q4bar)}
+     eq5 = {~(p5bar ^ q5bar)}
+     eq6 = {~(p6bar ^ q6bar)}
+     eq7 = {~(p7bar ^ q7bar)}
+
+     PEQQ = {gen & eq0 & eq1 & eq2 & eq3 & eq4 & eq5 & eq6 & eq7}

.model DLY_ALS518 ugate (tplhMN=15ns tplhMX=33ns tphlMN=3ns tphlMX=15ns)

.ENDS 74ALS518
*
*
* ----------------------------------------------------------- 74ALS519 ------
*  8-Bit Identity Comparators
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-379 to 2-384
*  bss    4/25/94
*
.SUBCKT 74ALS519 GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 PEQQ
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(17,1) DPWR DGND
+     GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     PEQQ
+     DLY_ALS519 IO_ALS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     p0bar = {~P0}
+     p1bar = {~P1}
+     p2bar = {~P2}
+     p3bar = {~P3}
+     p4bar = {~P4}
+     p5bar = {~P5}
+     p6bar = {~P6}
+     p7bar = {~P7}
+     q0bar = {~Q0}
+     q1bar = {~Q1}
+     q2bar = {~Q2}
+     q3bar = {~Q3}
+     q4bar = {~Q4}
+     q5bar = {~Q5}
+     q6bar = {~Q6}
+     q7bar = {~Q7}
+     gen = {~GBAR}
+
+     eq0 = {~(p0bar ^ q0bar)}
+     eq1 = {~(p1bar ^ q1bar)}
+     eq2 = {~(p2bar ^ q2bar)}
+     eq3 = {~(p3bar ^ q3bar)}
+     eq4 = {~(p4bar ^ q4bar)}
+     eq5 = {~(p5bar ^ q5bar)}
+     eq6 = {~(p6bar ^ q6bar)}
+     eq7 = {~(p7bar ^ q7bar)}
+
+     PEQQ = {gen & eq0 & eq1 & eq2 & eq3 & eq4 & eq5 & eq6 & eq7}

.model DLY_ALS519 ugate (tplhMN=15ns tplhMX=33ns tphlMN=3ns tphlMX=15ns)

.ENDS 74ALS519
*
*
* ----------------------------------------------------------- 74AC520 ------
*  8-Bit Identity Comparators
*
*  The Advanced CMOS Logic Data Book, 1993, TI Pages 2-411 to 2-415
*  bss    4/25/94
*  This part is shown in the data book as a 74AC11520
*
.SUBCKT 74AC520 GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 PEQQ
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(17,1) DPWR DGND
+     GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     PEQQ_O
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     p0bar = {~P0}
+     p1bar = {~P1}
+     p2bar = {~P2}
+     p3bar = {~P3}
+     p4bar = {~P4}
+     p5bar = {~P5}
+     p6bar = {~P6}
+     p7bar = {~P7}
+     q0bar = {~Q0}
+     q1bar = {~Q1}
+     q2bar = {~Q2}
+     q3bar = {~Q3}
+     q4bar = {~Q4}
+     q5bar = {~Q5}
+     q6bar = {~Q6}
+     q7bar = {~Q7}
+     gen = {~GBAR}
+
+     eq0 = {~(p0bar ^ q0bar)}
+     eq1 = {~(p1bar ^ q1bar)}
+     eq2 = {~(p2bar ^ q2bar)}
+     eq3 = {~(p3bar ^ q3bar)}
+     eq4 = {~(p4bar ^ q4bar)}
+     eq5 = {~(p5bar ^ q5bar)}
+     eq6 = {~(p6bar ^ q6bar)}
+     eq7 = {~(p7bar ^ q7bar)}
+
+     PEQQ_O = {~(gen & eq0 & eq1 & eq2 & eq3 & eq4 & eq5 & eq6 & eq7)}

U2DLY PINDLY(1,0,1) DPWR DGND
+     PEQQ_O
+     GBAR
+     PEQQ
+     IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENABLE = {CHANGED(GBAR,0)}
+
+  PINDLY:
+     PEQQ = {
+       CASE(
+         ENABLE & TRN_LH, DELAY(1.5ns,4.9ns,6.6ns),
+         ENABLE & TRN_HL, DELAY(1.5ns,4.8ns,7.1ns),
+         TRN_LH, DELAY(1.5ns,8.1ns,11.1ns),
+         TRN_HL, DELAY(1.5ns,7.1ns,10.1ns),
+         DELAY(2.5ns,9.1ns,12.1ns))}

.ENDS 74AC520
*
*
* ----------------------------------------------------------- 74ACT520 ------
*  8-Bit Identity Comparators
*
*  The Advanced CMOS Logic Data Book, 1993, TI Pages 2-417 to 2-421
*  bss    4/25/94
*  This part is shown in the data book as a 74ACT11520
*
.SUBCKT 74ACT520 GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 PEQQ
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(17,1) DPWR DGND
+     GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     PEQQ_O
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     p0bar = {~P0}
+     p1bar = {~P1}
+     p2bar = {~P2}
+     p3bar = {~P3}
+     p4bar = {~P4}
+     p5bar = {~P5}
+     p6bar = {~P6}
+     p7bar = {~P7}
+     q0bar = {~Q0}
+     q1bar = {~Q1}
+     q2bar = {~Q2}
+     q3bar = {~Q3}
+     q4bar = {~Q4}
+     q5bar = {~Q5}
+     q6bar = {~Q6}
+     q7bar = {~Q7}
+     gen = {~GBAR}
+
+     eq0 = {~(p0bar ^ q0bar)}
+     eq1 = {~(p1bar ^ q1bar)}
+     eq2 = {~(p2bar ^ q2bar)}
+     eq3 = {~(p3bar ^ q3bar)}
+     eq4 = {~(p4bar ^ q4bar)}
+     eq5 = {~(p5bar ^ q5bar)}
+     eq6 = {~(p6bar ^ q6bar)}
+     eq7 = {~(p7bar ^ q7bar)}
+
+     PEQQ_O = {~(gen & eq0 & eq1 & eq2 & eq3 & eq4 & eq5 & eq6 & eq7)}

U2DLY PINDLY(1,0,1) DPWR DGND
+     PEQQ_O
+     GBAR
+     PEQQ
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENABLE = {CHANGED(GBAR,0)}
+
+  PINDLY:
+     PEQQ = {
+       CASE(
+         ENABLE & TRN_LH, DELAY(1.5ns,6.4ns,8.5ns),
+         ENABLE & TRN_HL, DELAY(1.5ns,5.8ns,9ns),
+         TRN_LH, DELAY(1.5ns,8.6ns,12.7ns),
+         TRN_HL, DELAY(1.5ns,8ns,12.4ns),
+         DELAY(2.5ns,9.6ns,13.7ns))}

.ENDS 74ACT520
*
*
* ----------------------------------------------------------- 74ALS520 ------
*  8-Bit Identity Comparators
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-379 to 2-384
*  bss    4/25/94
*
.SUBCKT 74ALS520 GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 PEQQ
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(17,1) DPWR DGND
+     GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     PEQQ_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     p0bar = {~P0}
+     p1bar = {~P1}
+     p2bar = {~P2}
+     p3bar = {~P3}
+     p4bar = {~P4}
+     p5bar = {~P5}
+     p6bar = {~P6}
+     p7bar = {~P7}
+     q0bar = {~Q0}
+     q1bar = {~Q1}
+     q2bar = {~Q2}
+     q3bar = {~Q3}
+     q4bar = {~Q4}
+     q5bar = {~Q5}
+     q6bar = {~Q6}
+     q7bar = {~Q7}
+     gen = {~GBAR}
+
+     eq0 = {~(p0bar ^ q0bar)}
+     eq1 = {~(p1bar ^ q1bar)}
+     eq2 = {~(p2bar ^ q2bar)}
+     eq3 = {~(p3bar ^ q3bar)}
+     eq4 = {~(p4bar ^ q4bar)}
+     eq5 = {~(p5bar ^ q5bar)}
+     eq6 = {~(p6bar ^ q6bar)}
+     eq7 = {~(p7bar ^ q7bar)}
+
+     PEQQ_O = {~(gen & eq0 & eq1 & eq2 & eq3 & eq4 & eq5 & eq6 & eq7)}

U2DLY PINDLY(1,0,1) DPWR DGND
+     PEQQ_O
+     GBAR
+     PEQQ
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENABLE = {CHANGED(GBAR,0)}
+
+  PINDLY:
+     PEQQ = {
+       CASE(
+         ENABLE & TRN_LH, DELAY(2ns,-1,12ns),
+         ENABLE & TRN_HL, DELAY(5ns,-1,22ns),
+         TRN_LH, DELAY(3ns,-1,12ns),
+         TRN_HL, DELAY(5ns,-1,20ns),
+         DELAY(6ns,-1,23ns))}

.ENDS 74ALS520
*
*
* ----------------------------------------------------------- 74F520 ------
*  8-Bit Identity Comparators
*
*  The F Logic Data Book, 1994, TI Pages 2-245 to 2-248
*  bss    4/25/94
*
.SUBCKT 74F520 OEBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 PEQQ
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(17,1) DPWR DGND
+     OEBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     PEQQ_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     p0bar = {~P0}
+     p1bar = {~P1}
+     p2bar = {~P2}
+     p3bar = {~P3}
+     p4bar = {~P4}
+     p5bar = {~P5}
+     p6bar = {~P6}
+     p7bar = {~P7}
+     q0bar = {~Q0}
+     q1bar = {~Q1}
+     q2bar = {~Q2}
+     q3bar = {~Q3}
+     q4bar = {~Q4}
+     q5bar = {~Q5}
+     q6bar = {~Q6}
+     q7bar = {~Q7}
+     oeen = {~OEBAR}
+
+     eq0 = {~(p0bar ^ q0bar)}
+     eq1 = {~(p1bar ^ q1bar)}
+     eq2 = {~(p2bar ^ q2bar)}
+     eq3 = {~(p3bar ^ q3bar)}
+     eq4 = {~(p4bar ^ q4bar)}
+     eq5 = {~(p5bar ^ q5bar)}
+     eq6 = {~(p6bar ^ q6bar)}
+     eq7 = {~(p7bar ^ q7bar)}
+
+     PEQQ_O = {~(oeen & eq0 & eq1 & eq2 & eq3 & eq4 & eq5 & eq6 & eq7)}

U2DLY PINDLY(1,0,1) DPWR DGND
+     PEQQ_O
+     OEBAR
+     PEQQ
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENABLE = {CHANGED(OEBAR,0)}
+
+  PINDLY:
+     PEQQ = {
+       CASE(
+         ENABLE & TRN_LH, DELAY(3.5ns,4.6ns,5.8ns),
+         ENABLE & TRN_HL, DELAY(5.2ns,7.5ns,9.5ns),
+         TRN_LH, DELAY(3.9ns,5.7ns,7.7ns),
+         TRN_HL, DELAY(4.7ns,7ns,9.3ns),
+         DELAY(6.2ns,8.5ns,10.5ns))}

.ENDS 74F520
*
*
* ----------------------------------------------------------- 74AC521 ------
*  8-Bit Identity Comparators
*
*  The Advanced CMOS Logic Data Book, 1993, TI Pages 2-423 to 2-426
*  bss    4/25/94
*  This part is shown in the data book as a 74AC11521
*
.SUBCKT 74AC521 GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 PEQQ
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(17,1) DPWR DGND
+     GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     PEQQ_O
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     p0bar = {~P0}
+     p1bar = {~P1}
+     p2bar = {~P2}
+     p3bar = {~P3}
+     p4bar = {~P4}
+     p5bar = {~P5}
+     p6bar = {~P6}
+     p7bar = {~P7}
+     q0bar = {~Q0}
+     q1bar = {~Q1}
+     q2bar = {~Q2}
+     q3bar = {~Q3}
+     q4bar = {~Q4}
+     q5bar = {~Q5}
+     q6bar = {~Q6}
+     q7bar = {~Q7}
+     gen = {~GBAR}
+
+     eq0 = {~(p0bar ^ q0bar)}
+     eq1 = {~(p1bar ^ q1bar)}
+     eq2 = {~(p2bar ^ q2bar)}
+     eq3 = {~(p3bar ^ q3bar)}
+     eq4 = {~(p4bar ^ q4bar)}
+     eq5 = {~(p5bar ^ q5bar)}
+     eq6 = {~(p6bar ^ q6bar)}
+     eq7 = {~(p7bar ^ q7bar)}
+
+     PEQQ_O = {~(gen & eq0 & eq1 & eq2 & eq3 & eq4 & eq5 & eq6 & eq7)}

U2DLY PINDLY(1,0,1) DPWR DGND
+     PEQQ_O
+     GBAR
+     PEQQ
+     IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENABLE = {CHANGED(GBAR,0)}
+
+  PINDLY:
+     PEQQ = {
+       CASE(
+         ENABLE & TRN_LH, DELAY(1.5ns,5.1ns,7.1ns),
+         ENABLE & TRN_HL, DELAY(1.5ns,4.8ns,7.1ns),
+         TRN_LH, DELAY(1.5ns,8.3ns,11.3ns),
+         TRN_HL, DELAY(1.5ns,7.2ns,10.1ns),
+         DELAY(2.5ns,9.3ns,12.3ns))}

.ENDS 74AC521
*
*
* ----------------------------------------------------------- 74ACT521 ------
*  8-Bit Identity Comparators
*
*  The Advanced CMOS Logic Data Book, 1993, TI Pages 2-427 to 2-430
*  bss    4/25/94
*  This part is shown in the data book as a 74ACT11521
*
.SUBCKT 74ACT521 GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 PEQQ
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(17,1) DPWR DGND
+     GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     PEQQ_O
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     p0bar = {~P0}
+     p1bar = {~P1}
+     p2bar = {~P2}
+     p3bar = {~P3}
+     p4bar = {~P4}
+     p5bar = {~P5}
+     p6bar = {~P6}
+     p7bar = {~P7}
+     q0bar = {~Q0}
+     q1bar = {~Q1}
+     q2bar = {~Q2}
+     q3bar = {~Q3}
+     q4bar = {~Q4}
+     q5bar = {~Q5}
+     q6bar = {~Q6}
+     q7bar = {~Q7}
+     gen = {~GBAR}
+
+     eq0 = {~(p0bar ^ q0bar)}
+     eq1 = {~(p1bar ^ q1bar)}
+     eq2 = {~(p2bar ^ q2bar)}
+     eq3 = {~(p3bar ^ q3bar)}
+     eq4 = {~(p4bar ^ q4bar)}
+     eq5 = {~(p5bar ^ q5bar)}
+     eq6 = {~(p6bar ^ q6bar)}
+     eq7 = {~(p7bar ^ q7bar)}
+
+     PEQQ_O = {~(gen & eq0 & eq1 & eq2 & eq3 & eq4 & eq5 & eq6 & eq7)}

U2DLY PINDLY(1,0,1) DPWR DGND
+     PEQQ_O
+     GBAR
+     PEQQ
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENABLE = {CHANGED(GBAR,0)}
+
+  PINDLY:
+     PEQQ = {
+       CASE(
+         ENABLE & TRN_LH, DELAY(1.5ns,6.7ns,9.3ns),
+         ENABLE & TRN_HL, DELAY(1.5ns,6.8ns,8.8ns),
+         TRN_LH, DELAY(1.5ns,8.8ns,13ns),
+         TRN_HL, DELAY(1.5ns,8.2ns,12ns),
+         DELAY(2.5ns,9.8ns,14ns))}

.ENDS 74ACT521
*
*
* ----------------------------------------------------------- 74ALS521 ------
*  8-Bit Identity Comparators
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-379 to 2-384
*  bss    4/25/94
*
.SUBCKT 74ALS521 GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 PEQQ
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(17,1) DPWR DGND
+     GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     PEQQ_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     p0bar = {~P0}
+     p1bar = {~P1}
+     p2bar = {~P2}
+     p3bar = {~P3}
+     p4bar = {~P4}
+     p5bar = {~P5}
+     p6bar = {~P6}
+     p7bar = {~P7}
+     q0bar = {~Q0}
+     q1bar = {~Q1}
+     q2bar = {~Q2}
+     q3bar = {~Q3}
+     q4bar = {~Q4}
+     q5bar = {~Q5}
+     q6bar = {~Q6}
+     q7bar = {~Q7}
+     gen = {~GBAR}
+
+     eq0 = {~(p0bar ^ q0bar)}
+     eq1 = {~(p1bar ^ q1bar)}
+     eq2 = {~(p2bar ^ q2bar)}
+     eq3 = {~(p3bar ^ q3bar)}
+     eq4 = {~(p4bar ^ q4bar)}
+     eq5 = {~(p5bar ^ q5bar)}
+     eq6 = {~(p6bar ^ q6bar)}
+     eq7 = {~(p7bar ^ q7bar)}
+
+     PEQQ_O = {~(gen & eq0 & eq1 & eq2 & eq3 & eq4 & eq5 & eq6 & eq7)}

U2DLY PINDLY(1,0,1) DPWR DGND
+     PEQQ_O
+     GBAR
+     PEQQ
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENABLE = {CHANGED(GBAR,0)}
+
+  PINDLY:
+     PEQQ = {
+       CASE(
+         ENABLE & TRN_LH, DELAY(2ns,-1,12ns),
+         ENABLE & TRN_HL, DELAY(5ns,-1,22ns),
+         TRN_LH, DELAY(3ns,-1,12ns),
+         TRN_HL, DELAY(5ns,-1,20ns),
+         DELAY(6ns,-1,23ns))}

.ENDS 74ALS521
*
*
* ----------------------------------------------------------- 74F521 ------
*  8-Bit Identity Comparators
*
*  The F Logic Data Book, 1994, TI Pages 2-249 to 2-252
*  bss    4/25/94
*
.SUBCKT 74F521 OEBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 PEQQ
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(17,1) DPWR DGND
+     OEBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     PEQQ_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     p0bar = {~P0}
+     p1bar = {~P1}
+     p2bar = {~P2}
+     p3bar = {~P3}
+     p4bar = {~P4}
+     p5bar = {~P5}
+     p6bar = {~P6}
+     p7bar = {~P7}
+     q0bar = {~Q0}
+     q1bar = {~Q1}
+     q2bar = {~Q2}
+     q3bar = {~Q3}
+     q4bar = {~Q4}
+     q5bar = {~Q5}
+     q6bar = {~Q6}
+     q7bar = {~Q7}
+     oeen = {~OEBAR}
+
+     eq0 = {~(p0bar ^ q0bar)}
+     eq1 = {~(p1bar ^ q1bar)}
+     eq2 = {~(p2bar ^ q2bar)}
+     eq3 = {~(p3bar ^ q3bar)}
+     eq4 = {~(p4bar ^ q4bar)}
+     eq5 = {~(p5bar ^ q5bar)}
+     eq6 = {~(p6bar ^ q6bar)}
+     eq7 = {~(p7bar ^ q7bar)}
+
+     PEQQ_O = {~(oeen & eq0 & eq1 & eq2 & eq3 & eq4 & eq5 & eq6 & eq7)}

U2DLY PINDLY(1,0,1) DPWR DGND
+     PEQQ_O
+     OEBAR
+     PEQQ
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENABLE = {CHANGED(OEBAR,0)}
+
+  PINDLY:
+     PEQQ = {
+       CASE(
+         ENABLE & TRN_LH, DELAY(2.2ns,4.6ns,6.5ns),
+         ENABLE & TRN_HL, DELAY(2.7ns,6.1ns,9ns),
+         TRN_LH, DELAY(2.7ns,6.6ns,10ns),
+         TRN_HL, DELAY(3.7ns,6.6ns,10ns),
+         DELAY(4.7ns,7.6ns,11ns))}

.ENDS 74F521
*
*
* ----------------------------------------------------------- 74ALS522 ------
*  8-Bit Identity Comparators
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-379 to 2-384
*  bss    4/25/94
*
.SUBCKT 74ALS522 GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 PEQQ
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(17,1) DPWR DGND
+     GBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     PEQQ_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     p0bar = {~P0}
+     p1bar = {~P1}
+     p2bar = {~P2}
+     p3bar = {~P3}
+     p4bar = {~P4}
+     p5bar = {~P5}
+     p6bar = {~P6}
+     p7bar = {~P7}
+     q0bar = {~Q0}
+     q1bar = {~Q1}
+     q2bar = {~Q2}
+     q3bar = {~Q3}
+     q4bar = {~Q4}
+     q5bar = {~Q5}
+     q6bar = {~Q6}
+     q7bar = {~Q7}
+     gen = {~GBAR}
+
+     eq0 = {~(p0bar ^ q0bar)}
+     eq1 = {~(p1bar ^ q1bar)}
+     eq2 = {~(p2bar ^ q2bar)}
+     eq3 = {~(p3bar ^ q3bar)}
+     eq4 = {~(p4bar ^ q4bar)}
+     eq5 = {~(p5bar ^ q5bar)}
+     eq6 = {~(p6bar ^ q6bar)}
+     eq7 = {~(p7bar ^ q7bar)}
+
+     PEQQ_O = {~(gen & eq0 & eq1 & eq2 & eq3 & eq4 & eq5 & eq6 & eq7)}

U2DLY PINDLY(1,0,1) DPWR DGND
+     PEQQ_O
+     GBAR
+     PEQQ
+     IO_ALS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENABLE = {CHANGED(GBAR,0)}
+
+  PINDLY:
+     PEQQ = {
+       CASE(
+         ENABLE & TRN_LH, DELAY(8ns,-1,25ns),
+         ENABLE & TRN_HL, DELAY(8ns,-1,23ns),
+         TRN_LH, DELAY(10ns,-1,25ns),
+         TRN_HL, DELAY(5ns,-1,23ns),
+         DELAY(11ns,-1,26ns))}

.ENDS 74ALS522

*-------------------------------------------------------------74F524-----------

* 8 Bit Register Comparator (Open Collector and Tri-State)
* Philips FAST Logic Databook, 1992, pages 506 to 513
* jat 7/11/96

.SUBCKT 74F524 S0 S1 SEBAR C/SI I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+ CP M C/SO EQ GT LT
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(22,13) DPWR DGND
+ S0 S1 SEBAR C/SI CP M I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ C/SOO EQO GTO LTO ENAB D0 D1 D2 D3 D4 D5 D6 D7
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {S1 & ~S0}
+   LOAD = {S0 & S1}
+   SHIFT = {~S1 & S0}
+   D0 = {(Q0 & ~S0) | (I/O0 & LOAD) | (SHIFT & Q1)}
+   D1 = {(Q1 & ~S0) | (I/O1 & LOAD) | (SHIFT & Q2)}
+   D2 = {(Q2 & ~S0) | (I/O2 & LOAD) | (SHIFT & Q3)}
+   D3 = {(Q3 & ~S0) | (I/O3 & LOAD) | (SHIFT & Q4)}
+   D4 = {(Q4 & ~S0) | (I/O4 & LOAD) | (SHIFT & Q5)}
+   D5 = {(Q5 & ~S0) | (I/O5 & LOAD) | (SHIFT & Q6)}
+   D6 = {(Q6 & ~S0) | (I/O6 & LOAD) | (SHIFT & Q7)}
+   D7 = {(Q7 & ~S0) | (I/O7 & LOAD) | (SHIFT & C/SI)}
+   NOR0 = {~(~I/O0 | Q0)}
+   XOR0 = {Q0 ^ ~I/O0}
+   AND0 = {Q0 & ~I/O0}
+   NOR1 = {~(~I/O1 | Q1)}
+   XOR1 = {Q1 ^ ~I/O1}
+   AND1 = {Q1 & ~I/O1}
+   NOR2 = {~(~I/O2 | Q2)}
+   XOR2 = {Q2 ^ ~I/O2}
+   AND2 = {Q2 & ~I/O2}
+   NOR3 = {~(~I/O3 | Q3)}
+   XOR3 = {Q3 ^ ~I/O3}
+   AND3 = {Q3 & ~I/O3}
+   NOR4 = {~(~I/O4 | Q4)}
+   XOR4 = {Q4 ^ ~I/O4}
+   AND4 = {Q4 & ~I/O4}
+   NOR5 = {~(~I/O5 | Q5)}
+   XOR5 = {Q5 ^ ~I/O5}
+   AND5 = {Q5 & ~I/O5}
+   NOR6 = {~(~I/O6 | Q6)}
+   XOR6 = {Q6 ^ ~I/O6}
+   AND6 = {Q6 & ~I/O6}
+   NOR7 = {~((~(~I/O7 ^ ~M)) | (~(Q7 ^ ~M)))}
+   XOR7 = {(~(~I/O7 ^ ~M)) ^ (~(Q7 ^ ~M))}
+   AND7 = {(~(~I/O7 ^ ~M)) & (~(Q7 ^ ~M))}
+   ORA = {(NOR0 & XOR1 & XOR2 & XOR3) | (NOR1 & XOR2 & XOR3) | (XOR3 & NOR2) | NOR3}
+   ORB = {(AND0 & XOR1 & XOR2 & XOR3) | (AND1 & XOR2 & XOR3) | (XOR3 & AND2) | AND3}
+   ORC = {(AND4 & XOR5 & XOR6 & XOR7) | (AND5 & XOR6 & XOR7) | (XOR7 & AND6) | AND7}
+   ORD = {(NOR4 & XOR5 & XOR6 & XOR7) | (NOR5 & XOR6 & XOR7) | (XOR7 & NOR6) | NOR7}
+   NANDLT = {~(XOR4 & XOR7 & XOR5 & XOR6)}
+   ANDDOWN = {C/SI & ~SEBAR}
+   LTO = {(~NANDLT & ORA) | ORD | ~ANDDOWN}
+   GTO = {ORC | ~ANDDOWN | (~NANDLT & ORB)}
+   EQO = {SEBAR | (~NANDLT & (XOR1 & XOR0 & XOR2 & XOR3))}
+   C/SOO = {(SHIFT & Q0) | (~SHIFT & (C/SI & ~NANDLT & XOR0 & XOR1 & XOR2 & XOR3))}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(9,1,12) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 C/SOO
+ ENAB
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 CP C/SI S0 S1
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 C/SO
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(I/O0,0) | CHANGED(I/O1,0) | CHANGED(I/O2,0) | CHANGED(I/O3,0) |
+           CHANGED(I/O4,0) | CHANGED(I/O5,0) | CHANGED(I/O6,0) | CHANGED(I/O7,0)}
+   EDGE = {CHANGED_LH(CP,0)}
+   CSI = {CHANGED(C/SI,0)}
+   SS = {CHANGED(S0,0) | CHANGED(S1,0)}
+ TRISTATE:
+  ENABLE HI = ENAB
+    I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 = {
+       CASE(
+         TRN_ZH, DELAY(4.5NS,7NS,13NS),
+         TRN_ZL, DELAY(5.5NS,9NS,15NS),
+         TRN_HZ, DELAY(3NS,5NS,12NS),
+         TRN_LZ, DELAY(4.5NS,8NS,12.5NS),
+         DELAY(6.5NS,10NS,16NS))}
+ PINDLY:
+  C/SO = {
+    CASE(
+      SS & TRN_LH, DELAY(6.5NS,8NS,14.5NS),
+      SS & TRN_HL, DELAY(5.5NS,10NS,17NS),
+      EDGE & (S1 == '1 & S0 == '1) & TRN_LH, DELAY(10NS,16NS,20NS),
+      EDGE & (S1 == '0 & S0 == '1) & TRN_LH, DELAY(5NS,10NS,13NS),
+      EDGE & (S1 == '0 & S0 == '1) & TRN_HL, DELAY(4.5NS,9NS,11.5NS),
+      DATA & TRN_LH, DELAY(7NS,13NS,16NS),
+      DATA & TRN_HL, DELAY(6.5NS,9NS,14NS),
+      CSI & TRN_LH, DELAY(4NS,7NS,11NS),
+      CSI & TRN_HL, DELAY(4NS,7NS,11NS),
+      DELAY(11NS,17NS,21NS))}

U4 PINDLY(3,0,12) DPWR DGND
+ EQO LTO GTO
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 CP C/SI SEBAR M
+ EQ LT GT
+ IO_F_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(I/O0,0) | CHANGED(I/O1,0) | CHANGED(I/O2,0) | CHANGED(I/O3,0) |
+           CHANGED(I/O4,0) | CHANGED(I/O5,0) | CHANGED(I/O6,0) | CHANGED(I/O7,0)}
+   EDGE = {CHANGED_LH(CP,0)}
+   CSI = {CHANGED(C/SI,0)}
+   SE = {CHANGED(SEBAR,0)}
+   MM = {CHANGED(M,0)}
+ PINDLY:
+  EQ = {
+    CASE(
+      SE & TRN_LH, DELAY(3.5NS,7NS,10.5NS),
+      SE & TRN_HL, DELAY(2.5NS,4.5NS,8NS),
+      EDGE & TRN_LH, DELAY(11NS,17NS,22NS),
+      EDGE & TRN_HL, DELAY(4NS,8NS,14NS),
+      DATA & TRN_LH, DELAY(9NS,11.5NS,17NS),
+      DATA & TRN_HL, DELAY(4.5NS,7.5NS,11NS),
+      DELAY(12NS,18NS,23NS))}
+  GT = {
+    CASE(
+      SE & TRN_LH, DELAY(6NS,8NS,13NS),
+      SE & TRN_HL, DELAY(3.5NS,5NS,8NS),
+      MM & TRN_LH, DELAY(8NS,13NS,18NS),
+      MM & TRN_HL, DELAY(8NS,10NS,15.5NS),
+      EDGE & TRN_LH, DELAY(11NS,16NS,20NS),
+      EDGE & TRN_HL, DELAY(10NS,16.5NS,21NS),
+      DATA & TRN_LH, DELAY(8.5NS,11NS,17NS),
+      DATA & TRN_HL, DELAY(6.5NS,9.5NS,15.5NS),
+      CSI & TRN_LH, DELAY(8NS,10.5NS,16NS),
+      CSI & TRN_HL, DELAY(3NS,4.5NS,8.5NS),
+      DELAY(12NS,17NS,21NS))}
+  LT = {
+    CASE(
+      SE & TRN_LH, DELAY(5NS,8NS,12NS),
+      SE & TRN_HL, DELAY(3.5NS,5.5NS,8NS),
+      MM & TRN_LH, DELAY(10NS,15NS,20NS),
+      MM & TRN_HL, DELAY(6NS,8NS,12NS),
+      EDGE & TRN_LH, DELAY(11NS,16NS,23NS),
+      EDGE & TRN_HL, DELAY(8NS,14NS,18NS),
+      DATA & TRN_LH, DELAY(8NS,11NS,17NS),
+      DATA & TRN_HL, DELAY(6NS,10.5NS,14NS),
+      CSI & TRN_LH, DELAY(8NS,10.5NS,17NS),
+      CSI & TRN_HL, DELAY(3NS,6NS,8.5NS),
+      DELAY(12NS,17NS,24NS))}


U5 CONSTRAINT(12) DPWR DGND
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 CP S0 S1 C/SI
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ: 
+   NODE = CP
+   MAXFREQ = 65MEG
+ WIDTH:
+   NODE = CP
+   MIN_HI = 5NS
+   MIN_LO = 10NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(8) = I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+   SETUPTIME = 6NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(2) = S0 S1
+   SETUPTIME_HI = 13.5NS
+   SETUPTIME_LO = 10NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(1) = C/SI
+   SETUPTIME = 7NS

.ENDS 74F524
   
* ----------------------------------------------------------- 74AC533 ------
*  Octal D-Type Transparent Latches With 3-State Outputs
*
*  The Advanced CMOS Logic Data Book, 1993, TI Pages 2-431 to 2-435
*  bss    4/26/94
*  This part is shown in the data book as a 74AC11533
*
.SUBCKT 74AC533 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     D0_GFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(8,1,9) DPWR DGND
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     OCBAR
+     C 1D 2D 3D 4D 5D 6D 7D 8D
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR
+     IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) | CHANGED(4D,0) |
+            CHANGED(5D,0) | CHANGED(6D,0) | CHANGED(7D,0) | CHANGED(8D,0)}
+     GATE = {CHANGED(C,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR = {
+       CASE(
+         GATE & TRN_LH, DELAY(1.5ns,6.5ns,10ns),
+         GATE & TRN_HL, DELAY(1.5ns,6.5ns,9.1ns),
+         DATA & TRN_LH, DELAY(1.5ns,5.5ns,8.4ns),
+         DATA & TRN_HL, DELAY(1.5ns,5ns,7.1ns),
+         TRN_ZH, DELAY(1.5ns,6.5ns,9.5ns),
+         TRN_ZL, DELAY(1.5ns,6ns,8.6ns),
+         TRN_HZ, DELAY(1.5ns,8.5ns,10.7ns),
+         TRN_LZ, DELAY(1.5ns,6ns,8.2ns),
+         DELAY(2.5ns,9.5ns,11.7ns))}

U3CON CONSTRAINT(9) DPWR DGND
+     C 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_AC IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=C
+     MIN_HI=4ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=3.5ns
+     HOLDTIME=2ns

.ENDS 74AC533
*
*
* ----------------------------------------------------------- 74ACT533 ------
*  Octal D-Type Transparent Latches With 3-State Outputs
*
*  The Advanced CMOS Logic Data Book, 1993, TI Pages 2-437 to 2-441
*  bss    4/26/94
*  This part is shown in the data book as a 74ACT11533
*
.SUBCKT 74ACT533 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     D0_GFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(8,1,9) DPWR DGND
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     OCBAR
+     C 1D 2D 3D 4D 5D 6D 7D 8D
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) | CHANGED(4D,0) |
+            CHANGED(5D,0) | CHANGED(6D,0) | CHANGED(7D,0) | CHANGED(8D,0)}
+     GATE = {CHANGED(C,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR = {
+       CASE(
+         GATE & TRN_LH, DELAY(1.5ns,8.5ns,11.3ns),
+         GATE & TRN_HL, DELAY(1.5ns,8.5ns,10.7ns),
+         DATA & TRN_LH, DELAY(1.5ns,7ns,10.1ns),
+         DATA & TRN_HL, DELAY(1.5ns,6.5ns,8.4ns),
+         TRN_ZH, DELAY(1.5ns,7.5ns,10.7ns),
+         TRN_ZL, DELAY(1.5ns,7.5ns,10.9ns),
+         TRN_HZ, DELAY(1.5ns,10.5ns,12.1ns),
+         TRN_LZ, DELAY(1.5ns,7.5ns,9.5ns),
+         DELAY(2.5ns,11.5ns,12.3ns))}

U3CON CONSTRAINT(9) DPWR DGND
+     C 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_ACT IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=C
+     MIN_HI=5ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=3.5ns
+     HOLDTIME=3.5ns

.ENDS 74ACT533
*
*
* ----------------------------------------------------------- 74ALS533 ------
*  Octal D-Type Transparent Latches With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-391 to 2-396
*  bss    4/27/94
*
.SUBCKT 74ALS533 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     D0_GFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(8,1,9) DPWR DGND
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     OCBAR
+     C 1D 2D 3D 4D 5D 6D 7D 8D
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) | CHANGED(4D,0) |
+            CHANGED(5D,0) | CHANGED(6D,0) | CHANGED(7D,0) | CHANGED(8D,0)}
+     GATE = {CHANGED(C,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR = {
+       CASE(
+         GATE & TRN_LH, DELAY(5ns,-1,23ns),
+         GATE & TRN_HL, DELAY(4ns,-1,18ns),
+         DATA & TRN_LH, DELAY(4ns,-1,19ns),
+         DATA & TRN_HL, DELAY(4ns,-1,13ns),
+         TRN_ZH, DELAY(4ns,-1,17ns),
+         TRN_ZL, DELAY(4ns,-1,18ns),
+         TRN_HZ, DELAY(2ns,-1,10ns),
+         TRN_LZ, DELAY(3ns,-1,16ns),
+         DELAY(6ns,-1,24ns))}

U3CON CONSTRAINT(9) DPWR DGND
+     C 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=C
+     MIN_HI=15ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=15ns
+     HOLDTIME=7ns

.ENDS 74ALS533
*
*
* ----------------------------------------------------------- 74AS533 ------
*  Octal D-Type Transparent Latches With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-391 to 2-396
*  bss    4/27/94
*
.SUBCKT 74AS533 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     D0_GFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(8,1,9) DPWR DGND
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     OCBAR
+     C 1D 2D 3D 4D 5D 6D 7D 8D
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) | CHANGED(4D,0) |
+            CHANGED(5D,0) | CHANGED(6D,0) | CHANGED(7D,0) | CHANGED(8D,0)}
+     GATE = {CHANGED(C,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR = {
+       CASE(
+         GATE & TRN_LH, DELAY(5ns,-1,9ns),
+         GATE & TRN_HL, DELAY(4.5ns,-1,8ns),
+         DATA & TRN_LH, DELAY(4ns,-1,7.5ns),
+         DATA & TRN_HL, DELAY(4ns,-1,7ns),
+         TRN_ZH, DELAY(2ns,-1,6.5ns),
+         TRN_ZL, DELAY(4.5ns,-1,9.5ns),
+         TRN_HZ, DELAY(3ns,-1,6.5ns),
+         TRN_LZ, DELAY(3ns,-1,7ns),
+         DELAY(6ns,-1,10.5ns))}

U3CON CONSTRAINT(9) DPWR DGND
+     C 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=C
+     MIN_HI=2ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=2ns
+     HOLDTIME=3ns

.ENDS 74AS533
*
*
* ----------------------------------------------------------- 74F533 ------
*  Octal Transparent Latches With 3-State Outputs
*
*  The FAST And LS TTL Data Book, 1992, Motorola Pages 4-205 to 4-206
*  bss    5/16/94
*
.SUBCKT 74F533 OEBAR LE D0 D1 D2 D3 D4 D5 D6 D7 
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     $D_HI $D_HI LE
+     D0 D1 D2 D3 D4 D5 D6 D7 
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     O0BAR_O O1BAR_O O2BAR_O O3BAR_O O4BAR_O O5BAR_O O6BAR_O O7BAR_O
+     D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(8,1,9) DPWR DGND
+     O0BAR_O O1BAR_O O2BAR_O O3BAR_O O4BAR_O O5BAR_O O6BAR_O O7BAR_O
+     OEBAR
+     LE D0 D1 D2 D3 D4 D5 D6 D7 
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR 
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+            CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+     GATE = {CHANGED(LE,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR = {
+       CASE(
+         GATE & TRN_LH, DELAY(5ns,-1,11ns),
+         GATE & TRN_HL, DELAY(3ns,-1,7ns),
+         DATA & TRN_LH, DELAY(4ns,-1,9ns),
+         DATA & TRN_HL, DELAY(3ns,-1,7ns),
+         TRN_ZH, DELAY(2ns,-1,10ns),
+         TRN_ZL, DELAY(2ns,-1,7.5ns),
+         TRN_HZ, DELAY(1.5ns,-1,6.5ns),
+         TRN_LZ, DELAY(1.5ns,-1,5.5ns),
+         DELAY(6ns,-1,12ns))}

U3CON CONSTRAINT(9) DPWR DGND
+     LE D0 D1 D2 D3 D4 D5 D6 D7
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=LE
+     MIN_HI=6ns
+
+  SETUP_HOLD:
+     CLOCK HL=LE
+     DATA(8)=D0 D1 D2 D3 D4 D5 D6 D7
+     SETUPTIME=2ns
+     HOLDTIME=3ns

.ENDS 74F533
*
*
* ----------------------------------------------------------- 74HC533 ------
*  Octal D-Type Transparent Latches With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-451 to 2-456
*  bss    4/27/94
*
.SUBCKT 74HC533 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     D0_GFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(8,1,9) DPWR DGND
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     OCBAR
+     C 1D 2D 3D 4D 5D 6D 7D 8D
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) | CHANGED(4D,0) |
+            CHANGED(5D,0) | CHANGED(6D,0) | CHANGED(7D,0) | CHANGED(8D,0)}
+     GATE = {CHANGED(C,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR = {
+       CASE(
+         TRN_Z$, DELAY(-1,24ns,30ns),
+         TRN_$Z, DELAY(-1,23ns,30ns),
+         GATE, DELAY(-1,27ns,35ns),
+         DATA, DELAY(-1,26ns,30ns),
+         DELAY(-1,28ns,36ns))}

U3CON CONSTRAINT(9) DPWR DGND
+     C 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=C
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=13ns
+     HOLDTIME=12ns

.ENDS 74HC533
*
*
* ----------------------------------------------------------- 74HCT533 ------
*  Octal D-Type Transparent Latches With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-457 to 2-460
*  bss    4/27/94
*
.SUBCKT 74HCT533 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     D0_GFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(8,1,9) DPWR DGND
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     OCBAR
+     C 1D 2D 3D 4D 5D 6D 7D 8D
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR
+     IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) | CHANGED(4D,0) |
+            CHANGED(5D,0) | CHANGED(6D,0) | CHANGED(7D,0) | CHANGED(8D,0)}
+     GATE = {CHANGED(C,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR = {
+       CASE(
+         TRN_Z$, DELAY(-1,29ns,35ns),
+         TRN_$Z, DELAY(-1,25ns,35ns),
+         GATE, DELAY(-1,30ns,35ns),
+         DATA, DELAY(-1,28ns,35ns),
+         DELAY(-1,31ns,36ns))}

U3CON CONSTRAINT(9) DPWR DGND
+     C 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_HCT IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=C
+     MIN_HI=25ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=13ns
+     HOLDTIME=5ns

.ENDS 74HCT533

*-------------------------------------------------------------74LS533-------

* Octal Transparent Latch with Tri-State Outputs
* National TTL/LS/S Logic Databook, 1989, pages 2-477 to 2-479
* Product description notes that constraint times are the same as LS373.
* jat 8/13/96

.SUBCKT 74LS533 D0 D1 D2 D3 D4 D5 D6 D7 O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR
+ O6BAR O7BAR LE OEBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(8) DPWR DGND
+ $D_HI $D_HI LE
+ D0 D1 D2 D3 D4 D5 D6 D7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ D0_GFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,9) DPWR DGND
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ OEBAR
+ LE D0 D1 D2 D3 D4 D5 D6 D7
+ O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   LATCH = {CHANGED_LH(LE,0)}
+   DATA = {CHANGED(D0,0) | CHANGED(D2,0) | CHANGED(D3,0) | CHANGED(D1,0) |
+           CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+ TRISTATE: 
+   ENABLE LO = OEBAR
+   O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR = {
+    CASE(
+      TRN_ZH, DELAY(-1,-1,22NS),
+      TRN_ZL, DELAY(-1,-1,22NS),
+      TRN_HZ, DELAY(-1,-1,34NS),
+      TRN_LZ, DELAY(-1,-1,27NS),
+      LATCH & TRN_LH, DELAY(-1,-1,36NS),
+      LATCH & TRN_HL, DELAY(-1,-1,25NS),
+      DATA & TRN_LH, DELAY(-1,-1,32NS),
+      DATA & TRN_HL, DELAY(-1,-1,23NS),
+      DELAY(-1,-1,37NS))}

U3 CONSTRAINT(9) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 LE
+ IO_LS IO_LEVEL={IO_LEVEL}
+ WIDTH:
+    NODE = LE
+    MIN_HI = 15NS
+    MIN_LO = 15NS
+ SETUP_HOLD:
+    CLOCK HL = LE
+    DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+    SETUPTIME = 5NS
+    HOLDTIME = 20NS

.ENDS 74LS533

* ----------------------------------------------------------- 74AC534 ------
*  Octal D-Type Edge Triggered Flip Flops With 3-State Outputs
*
*  The Advanced CMOS Logic Data Book, 1993, TI Pages 2-443 to 2-447
*  bss    4/27/94
*  This part is shown in the data book as a 74AC11534
*
.SUBCKT 74AC534 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(8,1,9) DPWR DGND
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     OCBAR
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR
+     IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) | CHANGED(4D,0) |
+            CHANGED(5D,0) | CHANGED(6D,0) | CHANGED(7D,0) | CHANGED(8D,0)}
+     CLOCK = {CHANGED(CLK,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(1.5ns,7ns,10.3ns),
+         CLOCK & TRN_HL, DELAY(1.5ns,7ns,10.7ns),
+         TRN_Z$, DELAY(1.5ns,6ns,9.2ns),
+         TRN_HZ, DELAY(1.5ns,9ns,11.1ns),
+         TRN_LZ, DELAY(1.5ns,6ns,8.8ns),
+         DELAY(2.5ns,10ns,12.1ns))}

U3CON CONSTRAINT(9) DPWR DGND
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_AC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=75MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=6.5ns
+     MIN_LO=6.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=3.5ns
+     HOLDTIME=4.5ns

.ENDS 74AC534
*
*
* ----------------------------------------------------------- 74ACT534 ------
*  Octal D-Type Edge Triggered Flip Flops With 3-State Outputs
*
*  The Advanced CMOS Logic Data Book, 1993, TI Pages 2-449 to 2-453
*  bss    4/27/94
*  This part is shown in the data book as a 74ACT11534
*
.SUBCKT 74ACT534 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(8,1,9) DPWR DGND
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     OCBAR
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) | CHANGED(4D,0) |
+            CHANGED(5D,0) | CHANGED(6D,0) | CHANGED(7D,0) | CHANGED(8D,0)}
+     CLOCK = {CHANGED(CLK,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(1.5ns,8.5ns,12.7ns),
+         CLOCK & TRN_HL, DELAY(1.5ns,8.5ns,13.3ns),
+         TRN_ZH, DELAY(1.5ns,7.5ns,12ns),
+         TRN_ZL, DELAY(1.5ns,7.5ns,12.2ns),
+         TRN_HZ, DELAY(1.5ns,11ns,12.9ns),
+         TRN_LZ, DELAY(1.5ns,8ns,11.2ns),
+         DELAY(2.5ns,12ns,13.9ns))}

U3CON CONSTRAINT(9) DPWR DGND
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_ACT IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=55MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=9ns
+     MIN_LO=9ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=3ns
+     HOLDTIME=5.5ns

.ENDS 74ACT534
*
*
* ----------------------------------------------------------- 74ALS534 ------
*  Octal D-Type Edge Triggered Flip Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-397 to 2-402
*  bss    4/27/94
*
.SUBCKT 74ALS534 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(8,1,9) DPWR DGND
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     OCBAR
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) | CHANGED(4D,0) |
+            CHANGED(5D,0) | CHANGED(6D,0) | CHANGED(7D,0) | CHANGED(8D,0)}
+     CLOCK = {CHANGED(CLK,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(3ns,-1,12ns),
+         CLOCK & TRN_HL, DELAY(5ns,-1,16ns),
+         TRN_ZH, DELAY(5ns,-1,17ns),
+         TRN_ZL, DELAY(7ns,-1,18ns),
+         TRN_HZ, DELAY(2ns,-1,10ns),
+         TRN_LZ, DELAY(2ns,-1,14ns),
+         DELAY(8ns,-1,19ns))}

U3CON CONSTRAINT(9) DPWR DGND
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=35MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=14ns
+     MIN_LO=14ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=10ns

.ENDS 74ALS534
*
*
* ----------------------------------------------------------- 74AS534 ------
*  Octal D-Type Edge Triggered Flip Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-397 to 2-402
*  bss    4/27/94
*
.SUBCKT 74AS534 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(8,1,9) DPWR DGND
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     OCBAR
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) | CHANGED(4D,0) |
+            CHANGED(5D,0) | CHANGED(6D,0) | CHANGED(7D,0) | CHANGED(8D,0)}
+     CLOCK = {CHANGED(CLK,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(3ns,-1,8ns),
+         CLOCK & TRN_HL, DELAY(4ns,-1,9ns),
+         TRN_ZH, DELAY(2ns,-1,6ns),
+         TRN_ZL, DELAY(3ns,-1,10ns),
+         TRN_$Z, DELAY(2ns,-1,6ns),
+         DELAY(5ns,-1,11ns))}

U3CON CONSTRAINT(9) DPWR DGND
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=125MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=4ns
+     MIN_LO=3ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=2ns
+     HOLDTIME=2ns

.ENDS 74AS534

*-------------------------------------------------------------74F534-------

* Octal D-Type Flip-Flop with Tri-State Outputs
* National Advanced Bipolar Logic Databook, 1995, pages 7-369 to 7-372
* jat 7/16/96

.SUBCKT 74F534 D0 D1 D2 D3 D4 D5 D6 D7 O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR
+ O6BAR O7BAR CP OEBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI $D_HI CP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,0) DPWR DGND
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ OEBAR
+ O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE: 
+   ENABLE LO = OEBAR
+   O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR = {
+    CASE(
+      TRN_ZH, DELAY(2NS,9NS,11.5NS),
+      TRN_ZL, DELAY(2NS,5.8NS,7.5NS),
+      TRN_HZ, DELAY(1.5NS,5.3NS,7NS),
+      TRN_LZ, DELAY(1.5NS,4.3NS,5.5NS),
+      (TRN_LH | TRN_HL), DELAY(4NS,6.5NS,8.5NS),
+      DELAY(5NS,10NS,12.5NS))}

U3 CONSTRAINT(9) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 CP
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+    NODE = CP
+    MAXFREQ = 100MEG
+ WIDTH:
+    NODE = CP
+    MIN_HI = 7NS
+    MIN_LO = 6NS
+ SETUP_HOLD:
+    CLOCK LH = CP
+    DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+    SETUPTIME = 2NS
+    HOLDTIME = 2NS

.ENDS 74F534

* ----------------------------------------------------------- 74F534A ------
*  Octal D-Type Edge Triggered Flip Flops With 3-State Outputs
*
*  The F Logic Data Book, 1994, TI Pages 2-453 to 2-456
*  bss    4/27/94
*
.SUBCKT 74F534A OEBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(8,1,9) DPWR DGND
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     OEBAR
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) | CHANGED(4D,0) |
+            CHANGED(5D,0) | CHANGED(6D,0) | CHANGED(7D,0) | CHANGED(8D,0)}
+     CLOCK = {CHANGED(CLK,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR = {
+       CASE(
+         TRN_ZH, DELAY(1.2ns,4.5ns,7.5ns),
+         TRN_ZL, DELAY(1.2ns,5ns,7.5ns),
+         TRN_HZ, DELAY(1.2ns,3.5ns,6.5ns),
+         TRN_LZ, DELAY(1.2ns,3.5ns,5.5ns),
+         CLOCK, DELAY(3ns,4.5ns,7ns),
+         DELAY(4ns,6ns,8.5ns))}

U3CON CONSTRAINT(9) DPWR DGND
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=70MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=7ns
+     MIN_LO=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=2ns
+     HOLDTIME=2ns

.ENDS 74F534A
*
*
* ----------------------------------------------------------- 74HC534 ------
*  Octal D-Type Edge Triggered Flip Flops With 3-State Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-461 to 2-465
*  bss    4/27/94
*
.SUBCKT 74HC534 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(8,1,9) DPWR DGND
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     OCBAR
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) | CHANGED(4D,0) |
+            CHANGED(5D,0) | CHANGED(6D,0) | CHANGED(7D,0) | CHANGED(8D,0)}
+     CLOCK = {CHANGED(CLK,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR = {
+       CASE(
+         TRN_Z$, DELAY(-1,26ns,30ns),
+         TRN_$Z, DELAY(-1,25ns,30ns),
+         CLOCK, DELAY(-1,28ns,36ns),
+         DELAY(-1,29ns,37ns))}

U3CON CONSTRAINT(9) DPWR DGND
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=25ns
+     HOLDTIME=5ns

.ENDS 74HC534

*-----------------------------------------------------------------74HC534A---

* Octal Tri-State Inverting D Flip-Flop
* Motorola High-Speed CMOS Data, 1993, pages 5-342 to 5-345
* jat 9/11/96

.SUBCKT 74HC534A
+ CLOCK OUTENAB D0 D1 D2 D3 D4 D5 D6 D7 Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR
+ Q6BAR Q7BAR
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI $D_HI CLOCK
+ D0 D1 D2 D3 D4 D5 D6 D7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,0) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ OUTENAB
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+ ENABLE LO = OUTENAB
+   Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR = {
+     CASE(
+      TRN_Z$, DELAY(-1,-1,30NS),
+      TRN_$Z, DELAY(-1,-1,30NS),
+      (TRN_LH | TRN_HL), DELAY(-1,-1,25NS),
+      DELAY(-1,-1,31NS))}

U3 CONSTRAINT(9) DPWR DGND
+ CLOCK D0 D1 D2 D3 D4 D5 D6 D7
+ IO_HC IO_LEVEL={IO_LEVEL}
+ WIDTH:
+  NODE = CLOCK
+  MIN_HI = 12NS
+  MIN_LO = 12NS
+ FREQ:
+  NODE = CLOCK
+  MAXFREQ = 30MEG
+ SETUP_HOLD:
+  CLOCK LH = CLOCK
+  DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+  SETUPTIME = 10NS
+  HOLDTIME = 5NS

.ENDS 74HC534A

* ----------------------------------------------------------- 74HCT534 ------
*  Octal D-Type Edge Triggered Flip Flops With 3-State Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-467 to 2-470
*  bss    4/27/94
*
.SUBCKT 74HCT534 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(8,1,9) DPWR DGND
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     OCBAR
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR
+     IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) | CHANGED(4D,0) |
+            CHANGED(5D,0) | CHANGED(6D,0) | CHANGED(7D,0) | CHANGED(8D,0)}
+     CLOCK = {CHANGED(CLK,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR = {
+       CASE(
+         TRN_Z$, DELAY(-1,24ns,30ns),
+         TRN_$Z, DELAY(-1,22ns,30ns),
+         CLOCK, DELAY(-1,28ns,36ns),
+         DELAY(-1,29ns,37ns))}

U3CON CONSTRAINT(9) DPWR DGND
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_HCT IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=25ns
+     HOLDTIME=5ns

.ENDS 74HCT534

*-------------------------------------------------------------74LS534-------

* Octal D-Type Flip-Flop with Tri-State Outputs
* National TTL/LS/S Logic Databook, 1989, pages 2-480 to 2-482
* jat 8/13/96

.SUBCKT 74LS534 D0 D1 D2 D3 D4 D5 D6 D7 O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR
+ O6BAR O7BAR CP OEBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI $D_HI CP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,1) DPWR DGND
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ OEBAR
+ CP
+ O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   EDGE = {CHANGED_LH(CP,0)}
+ TRISTATE: 
+   ENABLE LO = OEBAR
+   O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR = {
+    CASE(
+      TRN_ZH, DELAY(-1,-1,28NS),
+      TRN_ZL, DELAY(-1,-1,28NS),
+      TRN_HZ, DELAY(-1,-1,20NS),
+      TRN_LZ, DELAY(-1,-1,25NS),
+      EDGE & TRN_LH, DELAY(-1,-1,28NS),
+      EDGE & TRN_HL, DELAY(-1,-1,28NS),
+      DELAY(-1,-1,29NS))}

U3 CONSTRAINT(9) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 CP
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+    NODE = CP
+    MAXFREQ = 35MEG
+ WIDTH:
+    NODE = CP
+    MIN_HI = 15NS
+    MIN_LO = 15NS
+ SETUP_HOLD:
+    CLOCK LH = CP
+    DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+    SETUPTIME = 20NS

.ENDS 74LS534

* ----------------------------------------------------------- 74F537 ------
*  1-Of-10 Decoder (3-State)
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 520 to 523
*  bss    4/27/94
*
.SUBCKT 74F537 A0 A1 A2 A3 P E0BAR E1 OEBAR Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(7,10) DPWR DGND
+     A0 A1 A2 A3 P E0BAR E1
+     Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O Q8_O Q9_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a0bar = {~A0}
+     a1bar = {~A1}
+     a2bar = {~A2}
+     a3bar = {~A3}
+     e1bar = {~E1}
+     pbar = {~P}
+     enab = {~(E0BAR | e1bar)}
+     nand0 = {~(enab & a0bar & a1bar & a2bar & a3bar)}
+     nand1 = {~(enab & A0 & a1bar & a2bar & a3bar)}
+     nand2 = {~(enab & a0bar & A1 & a2bar & a3bar)}
+     nand3 = {~(enab & A0 & A1 & a2bar & a3bar)}
+     nand4 = {~(enab & a0bar & a1bar & A2 & a3bar)}
+     nand5 = {~(enab & A0 & a1bar & A2 & a3bar)}
+     nand6 = {~(enab & a0bar & A1 & A2 & a3bar)}
+     nand7 = {~(enab & A0 & A1 & A2 & a3bar)}
+     nand8 = {~(enab & a0bar & a1bar & a2bar & A3)}
+     nand9 = {~(enab & A0 & a1bar & a2bar & A3)}
+     Q0_O = {nand0 ^ pbar}
+     Q1_O = {nand1 ^ pbar}
+     Q2_O = {nand2 ^ pbar}
+     Q3_O = {nand3 ^ pbar}
+     Q4_O = {nand4 ^ pbar}
+     Q5_O = {nand5 ^ pbar}
+     Q6_O = {nand6 ^ pbar}
+     Q7_O = {nand7 ^ pbar}
+     Q8_O = {nand8 ^ pbar}
+     Q9_O = {nand9 ^ pbar}

U2DLY PINDLY(10,1,7) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O Q8_O Q9_O
+     OEBAR
+     A0 A1 A2 A3 E0BAR E1 P
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0)}
+     ENA0 = {CHANGED(E0BAR,0)}
+     ENA1 = {CHANGED(E1,0)}
+     PCH = {CHANGED(P,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 = {
+       CASE(
+         PCH & TRN_LH, DELAY(5ns,12.5ns,16ns),
+         SELECT & TRN_LH, DELAY(4.5ns,9ns,14ns),
+         SELECT & TRN_HL, DELAY(3ns,7.5ns,11ns),
+         PCH & TRN_HL, DELAY(3.5ns,6.5ns,10ns),
+         ENA1 & TRN_LH, DELAY(6ns,8.5ns,11.5ns),
+         ENA1 & TRN_HL, DELAY(4ns,8.5ns,11.5ns),
+         ENA0 & TRN_LH, DELAY(4ns,8ns,11ns),
+         ENA0 & TRN_HL, DELAY(3ns,8ns,11ns),
+         TRN_ZH, DELAY(2.5ns,4.5ns,7ns),
+         TRN_ZL, DELAY(4ns,5.5ns,8ns),
+         TRN_HZ, DELAY(1.5ns,3ns,6ns),
+         TRN_LZ, DELAY(2ns,4ns,6.5ns),
+         DELAY(7ns,13.5ns,17ns))}

.ENDS 74F537
*
*
* ----------------------------------------------------------- 74F538 ------
*  1-Of-8 Decoder (3-State)
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 524 to 527
*  bss    4/27/94
*
.SUBCKT 74F538 A0 A1 A2 P E0BAR E1BAR E2 E3 OE0BAR OE1BAR 
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(10,9) DPWR DGND
+     A0 A1 A2 E0BAR E1BAR E2 E3 P OE0BAR OE1BAR
+     Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O ENAB
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a0bar = {~A0}
+     a1bar = {~A1}
+     a2bar = {~A2}
+     e23 = {~(E2 & E3)}
+     en1 = {~(E0BAR | E1BAR | e23)}
+     ENAB = {~(OE0BAR | OE1BAR)}
+     and0 = {en1 & a0bar & a1bar & a2bar}
+     and1 = {en1 & A0 & a1bar & a2bar}
+     and2 = {en1 & a0bar & A1 & a2bar}
+     and3 = {en1 & A0 & A1 & a2bar}
+     and4 = {en1 & a0bar & a1bar & A2}
+     and5 = {en1 & A0 & a1bar & A2}
+     and6 = {en1 & a0bar & A1 & A2}
+     and7 = {en1 & A0 & A1 & A2}
+     Q0_O = {P ^ and0}
+     Q1_O = {P ^ and1}
+     Q2_O = {P ^ and2}
+     Q3_O = {P ^ and3}
+     Q4_O = {P ^ and4}
+     Q5_O = {P ^ and5}
+     Q6_O = {P ^ and6}
+     Q7_O = {P ^ and7}

U2DLY PINDLY(8,1,8) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O Q4_O Q5_O Q6_O Q7_O
+     ENAB
+     A0 A1 A2 E0BAR E1BAR E2 E3 P
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0)}
+     PCH = {CHANGED(P,0)}
+     ENLO = {CHANGED(E0BAR,0) | CHANGED(E1BAR,0)}
+     ENHI = {CHANGED(E2,0) | CHANGED(E3,0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+       CASE(
+         SELECT & TRN_LH, DELAY(5.5ns,8.5ns,13ns),
+         SELECT & TRN_HL, DELAY(3ns,7.5ns,12.5ns),
+         ENHI & TRN_LH, DELAY(6.5ns,9ns,12.5ns),
+         ENHI & TRN_HL, DELAY(4ns,7ns,12.5ns),
+         ENLO & TRN_LH, DELAY(5.5ns,8.5ns,12ns),
+         ENLO & TRN_HL, DELAY(3ns,7.5ns,12ns),
+         PCH & TRN_LH, DELAY(4.5ns,9.5ns,15ns),
+         PCH & TRN_HL, DELAY(3.5ns,6.5ns,10ns),
+         TRN_ZH, DELAY(2.5ns,5.5ns,9.5ns),
+         TRN_ZL, DELAY(6.5ns,9.5ns,13.5ns),
+         TRN_HZ, DELAY(1ns,3ns,6ns),
+         TRN_LZ, DELAY(1ns,3.5ns,8.5ns),
+         DELAY(7.5ns,10.5ns,16ns))}

.ENDS 74F538
*
*
* ----------------------------------------------------------- 74F539 ------
*  Dual 1-Of-4 Decoder (3-State)
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 528 to 531
*  bss    4/27/94
*
.SUBCKT 74F539 A0A A1A PA EABAR OEABAR Q0A Q1A Q2A Q3A
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(4,4) DPWR DGND
+     A0A A1A PA EABAR
+     Q0A_O Q1A_O Q2A_O Q3A_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a0bar = {~A0A}
+     a1bar = {~A1A}
+     ea = {~EABAR}
+     and0 = {ea & a0bar & a1bar}
+     and1 = {ea & A0A & a1bar}
+     and2 = {ea & a0bar & A1A}
+     and3 = {ea & A0A & A1A}
+     Q0A_O = {PA ^ and0}
+     Q1A_O = {PA ^ and1}
+     Q2A_O = {PA ^ and2}
+     Q3A_O = {PA ^ and3}

U2DLY PINDLY(4,1,4) DPWR DGND
+     Q0A_O Q1A_O Q2A_O Q3A_O
+     OEABAR
+     A0A A1A PA EABAR
+     Q0A Q1A Q2A Q3A
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELECT = {CHANGED(A0A,0) | CHANGED(A1A,0)}
+     PCHLO = {CHANGED_HL(PA,0)}
+     PCHHI = {CHANGED_LH(PA,0)}
+     ENB = {CHANGED(EABAR,0)}
+
+  TRISTATE:
+     ENABLE LO = OEABAR
+     Q0A Q1A Q2A Q3A = {
+       CASE(
+         SELECT & TRN_LH, DELAY(4.5ns,8.5ns,12.5ns),
+         SELECT & TRN_HL, DELAY(3ns,8ns,12.5ns),
+         ENB & TRN_LH, DELAY(5ns,7.5ns,11ns),
+         ENB & TRN_HL, DELAY(3ns,7ns,11ns),
+         PCHHI & TRN_LH, DELAY(6ns,11.5ns,14.5ns),
+         PCHHI & TRN_HL, DELAY(4ns,6ns,9ns),
+         PCHLO & TRN_LH, DELAY(4ns,6.5ns,9.5ns),
+         PCHLO & TRN_HL, DELAY(3.5ns,5.5ns,9ns),
+         TRN_ZH, DELAY(2.5ns,4ns,7.5ns),
+         TRN_ZL, DELAY(5.5ns,7ns,10.5ns),
+         TRN_HZ, DELAY(1.5ns,3ns,6ns),
+         TRN_LZ, DELAY(2ns,4ns,8ns),
+         DELAY(7ns,9.5ns,15.5ns))}

.ENDS 74F539
*
*
* ----------------------------------------------------------- 74AC540 ------
*  Octal Buffer/Line Driver With Tri-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-228 to 4-230
*  bss    4/27/94
*
.SUBCKT 74AC540 OE1BAR OE2BAR I0 I1 I2 I3 I4 I5 I6 I7 
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     OE1BAR OE2BAR ENAB
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv3a(8) DPWR DGND
+     I0 I1 I2 I3 I4 I5 I6 I7
+     ENAB
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+     DLY_AC540 IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AC540 utgate (tplhMN=1.5ns tplhTY=4ns tplhMX=6ns
+                                     tphlMN=1.5ns tphlTY=4ns tphlMX=5.5ns
+                                     tpzhMN=2ns tpzhTY=6.5ns tpzhMX=8.5ns
+                                     tpzlMN=2ns tpzlTY=6ns tpzlMX=7.5ns
+                                     tphzMN=1.5ns tphzTY=7.5ns tphzMX=10.5ns
+                                     tplzMN=1.5ns tplzTY=6ns tplzMX=8ns)

.ENDS 74AC540
*
*
* ----------------------------------------------------------- 74ACT540 ------
*  Octal Buffer/Line Driver With 3-State Outputs
*
*  The FACT Data Book, 1993, Motorola Pages 5-303 to 5-308
*  bss    5/11/94
*
.SUBCKT 74ACT540 OE1BAR OE2BAR I0 I1 I2 I3 I4 I5 I6 I7 
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     OE1BAR OE2BAR ENAB
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv3a(8) DPWR DGND
+     I0 I1 I2 I3 I4 I5 I6 I7
+     ENAB
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+     DLY_ACT540 IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ACT540 utgate (tplhMN=1ns tplhMX=7ns tphlMN=1ns tphlMX=8ns
+                                     tpzhMN=1ns tpzhMX=10.5ns tpzlMN=1ns tpzlMX=9.5ns
+                                     tphzMN=1ns tphzMX=12ns tplzMN=1.5ns tplzMX=9ns)

.ENDS 74ACT540
*
*
* ----------------------------------------------------------- 74ALS540 ------
*  Octal Buffer/Line Driver With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-403 to 2-406
*  bss    4/27/94
*
.SUBCKT 74ALS540 G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR ENAB
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv3a(8) DPWR DGND
+     A1 A2 A3 A4 A5 A6 A7 A8
+     ENAB
+     Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     DLY_ALS540 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS540 utgate (tplhMN=2ns tplhTY=7.5ns tplhMX=12ns
+                                     tphlMN=2ns tphlTY=5.6ns tphlMX=9ns
+                                     tpzhMN=5ns tpzhTY=9ns tpzhMX=15ns
+                                     tpzlMN=8ns tpzlTY=12.5ns tpzlMX=20ns
+                                     tphzMN=1ns tphzTY=4ns tphzMX=10ns
+                                     tplzMN=2ns tplzTY=7ns tplzMX=12ns)

.ENDS 74ALS540

* -----------------------------------------------------------74ALS540A------

* Octal Inverting Buffer and Line Driver with Tri-State Outputs
* National Advanced Bipolar Logic Databook, 1995, pages 9-136 to 9-138
* jat 8/21/96

.SUBCKT 74ALS540A G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(10,9) DPWR DGND
+ G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8
+ ENAB Y1O Y2O Y3O Y4O Y5O Y6O Y7O Y8O
+ D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(G1BAR | G2BAR)}
+   Y1O = {~A1}
+   Y2O = {~A2}
+   Y3O = {~A3}
+   Y4O = {~A4}
+   Y5O = {~A5}
+   Y6O = {~A6}
+   Y7O = {~A7}
+   Y8O = {~A8}

U2 PINDLY(8,1,0) DPWR DGND
+ Y1O Y2O Y3O Y4O Y5O Y6O Y7O Y8O
+ ENAB
+ Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+ IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+    ENABLE HI = ENAB
+    Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 = {
+        CASE(
+          TRN_ZH, DELAY(5NS,-1,15NS),
+          TRN_ZL, DELAY(8NS,-1,20NS),
+          TRN_HZ, DELAY(1NS,-1,10NS),
+          TRN_LZ, DELAY(2NS,-1,12NS),
+          TRN_LH, DELAY(2NS,-1,12NS),
+          TRN_HL, DELAY(2NS,-1,9NS),
+          DELAY(9NS,-1,21NS))}

.ENDS 74ALS540A

* ----------------------------------------------------------- 74F540 ------

* Octal Buffer/Line Drivers with TriState Outputs
* National Advanced Bipolar Logic Databook, 1995, pages 7-385 to 7-388
* jat 7/16/96

.SUBCKT 74F540 OE1BAR OE2BAR I0 I1 I2 I3 I4 I5 I6 I7 O0BAR O1BAR O2BAR
+ O3BAR O4BAR O5BAR O6BAR O7BAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(10,9) DPWR DGND
+ OE1BAR OE2BAR I0 I1 I2 I3 I4 I5 I6 I7
+ ENAB O0BARO O1BARO O2BARO O3BARO O4BARO O5BARO O6BARO O7BARO
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(OE1BAR | OE2BAR)}
+   O0BARO = {~I0}
+   O1BARO = {~I1}
+   O2BARO = {~I2}
+   O3BARO = {~I3}
+   O4BARO = {~I4}
+   O5BARO = {~I5}
+   O6BARO = {~I6}
+   O7BARO = {~I7}

U2 PINDLY(8,1,0) DPWR DGND
+ O0BARO O1BARO O2BARO O3BARO O4BARO O5BARO O6BARO O7BARO
+ ENAB
+ O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+    ENABLE HI = ENAB
+    O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR = {
+        CASE(
+          TRN_ZH, DELAY(2.5NS,4.9NS,8NS),
+          TRN_ZL, DELAY(3.5NS,5.8NS,10NS),
+          TRN_HZ, DELAY(1.5NS,3.4NS,6NS),
+          TRN_LZ, DELAY(1NS,2.5NS,5.5NS),
+          TRN_LH, DELAY(1NS,3NS,5NS),
+          TRN_HL, DELAY(1NS,2NS,4NS),
+          DELAY(4.5NS,6.8NS,11NS))}

.ENDS 74F540

* ----------------------------------------------------------- 74HC540 ------
*  Octal Buffer/Line Driver With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-471 to 2-475
*  bss    4/28/94
*
.SUBCKT 74HC540 G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR ENAB
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv3a(8) DPWR DGND
+     A1 A2 A3 A4 A5 A6 A7 A8
+     ENAB
+     Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     DLY_HC540 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC540 utgate (tplhTY=10ns tplhMX=20ns tphlTY=10ns tphlMX=20ns
+                                     tpzhTY=15ns tpzhMX=30ns tpzlTY=15ns tpzlMX=30ns
+                                     tphzTY=18ns tphzMX=30ns tplzTY=18ns tplzMX=30ns)

.ENDS 74HC540
*
*
* ----------------------------------------------------------- 74HCT540 ------
*  Octal Buffer/Line Driver With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-477 to 2-481
*  bss    4/28/94
*
.SUBCKT 74HCT540 G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR ENAB
+     D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv3a(8) DPWR DGND
+     A1 A2 A3 A4 A5 A6 A7 A8
+     ENAB
+     Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     DLY_HCT540 IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HCT540 utgate (tplhTY=13ns tplhMX=20ns tphlTY=13ns tphlMX=20ns
+                                     tpzhTY=20ns tpzhMX=30ns tpzlTY=20ns tpzlMX=30ns
+                                     tphzTY=19ns tphzMX=30ns tplzTY=19ns tplzMX=30ns)

.ENDS 74HCT540
*
*
* ----------------------------------------------------------- 74LS540 ------
*  Octal Buffer/Line Driver With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-973 to 2-976
*  bss    4/28/94
*
.SUBCKT 74LS540 G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR ENAB
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv3a(8) DPWR DGND
+     A1 A2 A3 A4 A5 A6 A7 A8
+     ENAB
+     Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     DLY_LS540 IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LS540 utgate (tplhTY=9ns tplhMX=15ns tphlTY=9ns tphlMX=15ns
+                                     tpzhTY=15ns tpzhMX=25ns tpzlTY=25ns tpzlMX=38ns
+                                     tphzTY=15ns tphzMX=25ns tplzTY=10ns tplzMX=18ns)

.ENDS 74LS540
*
*
* ----------------------------------------------------------- 74AC541 ------
*  Octal Buffer/Line Driver With Tri-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-231 to 4-233
*  bss    4/28/94
*
.SUBCKT 74AC541 OE1BAR OE2BAR I0 I1 I2 I3 I4 I5 I6 I7 
+     O0 O1 O2 O3 O4 O5 O6 O7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     OE1BAR OE2BAR ENAB
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3a(8) DPWR DGND
+     I0 I1 I2 I3 I4 I5 I6 I7
+     ENAB
+     O0 O1 O2 O3 O4 O5 O6 O7
+     DLY_AC541 IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AC541 utgate (tplhMN=1.5ns tplhTY=4ns tplhMX=6ns
+                                     tphlMN=1.5ns tphlTY=4ns tphlMX=6ns
+                                     tpzhMN=2ns tpzhTY=6ns tpzhMX=8.5ns
+                                     tpzlMN=1.5ns tpzlTY=5.5ns tpzlMX=7.5ns
+                                     tphzMN=2ns tphzTY=7ns tphzMX=9.5ns
+                                     tplzMN=2ns tplzTY=5.5ns tplzMX=7.5ns)

.ENDS 74AC541
*
*
* ----------------------------------------------------------- 74ACT541 ------
*  Octal Buffer/Line Driver With 3-State Outputs
*
*  The FACT Data Book, 1993, Motorola Pages 5-303 to 5-308
*  bss    5/11/94
*
.SUBCKT 74ACT541 OE1BAR OE2BAR I0 I1 I2 I3 I4 I5 I6 I7 
+     O0 O1 O2 O3 O4 O5 O6 O7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     OE1BAR OE2BAR ENAB
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3a(8) DPWR DGND
+     I0 I1 I2 I3 I4 I5 I6 I7
+     ENAB
+     O0 O1 O2 O3 O4 O5 O6 O7
+     DLY_ACT541 IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ACT541 utgate (tplhMN=1.5ns tplhMX=7.5ns tphlMN=1.5ns tphlMX=7.5ns
+                                     tpzhMN=2ns tpzhMX=10ns tpzlMN=1.5ns tpzlMX=9.5ns
+                                     tphzMN=2ns tphzMX=11ns tplzMN=2ns tplzMX=9ns)

.ENDS 74ACT541
*
*
* ----------------------------------------------------------- 74ALS541 ------
*  Octal Buffer/Line Driver With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-403 to 2-406
*  bss    4/27/94
*
.SUBCKT 74ALS541 G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR ENAB
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3a(8) DPWR DGND
+     A1 A2 A3 A4 A5 A6 A7 A8
+     ENAB
+     Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     DLY_ALS541 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS541 utgate (tplhMN=4ns tplhTY=8.7ns tplhMX=14ns
+                                     tphlMN=2ns tphlTY=7ns tphlMX=10ns
+                                     tpzhMN=5ns tpzhTY=9ns tpzhMX=15ns
+                                     tpzlMN=8ns tpzlTY=12.5ns tpzlMX=20ns
+                                     tphzMN=1ns tphzTY=4ns tphzMX=10ns
+                                     tplzMN=2ns tplzTY=7ns tplzMX=12ns)

.ENDS 74ALS541

* -----------------------------------------------------------74ALS541A------

* Octal Buffer and Line Driver with Tri-State Outputs
* National ALS/AS Logic Databook, 1990, pages 2-179 to 2-18
* jat 8/21/96 THIS PART DOESN'T EXIST ?

.SUBCKT 74ALS541A G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(10,9) DPWR DGND
+ G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8
+ ENAB Y1O Y2O Y3O Y4O Y5O Y6O Y7O Y8O
+ D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(G1BAR | G2BAR)}
+   Y1O = {~A1}
+   Y2O = {~A2}
+   Y3O = {~A3}
+   Y4O = {~A4}
+   Y5O = {~A5}
+   Y6O = {~A6}
+   Y7O = {~A7}
+   Y8O = {~A8}

U2 PINDLY(8,1,0) DPWR DGND
+ Y1O Y2O Y3O Y4O Y5O Y6O Y7O Y8O
+ ENAB
+ Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+ IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+    ENABLE HI = ENAB
+    Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 = {
+        CASE(
+          TRN_ZH, DELAY(5NS,-1,15NS),
+          TRN_ZL, DELAY(8NS,-1,20NS),
+          TRN_HZ, DELAY(1NS,-1,10NS),
+          TRN_LZ, DELAY(2NS,-1,12NS),
+          TRN_LH, DELAY(2NS,-1,12NS),
+          TRN_HL, DELAY(2NS,-1,9NS),
+          DELAY(9NS,-1,21NS))}

.ENDS 74ALS541A


* ----------------------------------------------------------- 74F541 ------

* Octal Buffers/Drivers with TriState Outputs
* TI F Logic Data Book, 1994, pages 2-257 to 2-259
* jat 7/3/96

.SUBCKT 74F541 OE1BAR OE2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(2,1) DPWR DGND
+ OE1BAR OE2BAR ENAB
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(OE1BAR | OE2BAR)}

U2 PINDLY(8,1,0) DPWR DGND
+ A1 A2 A3 A4 A5 A6 A7 A8
+ ENAB
+ Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+    ENABLE HI = ENAB
+    Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 = {
+        CASE(
+          TRN_ZH, DELAY(3NS,5.8NS,8NS),
+          TRN_ZL, DELAY(3.5NS,6.1NS,8.5NS),
+          TRN_HZ, DELAY(1.5NS,3.4NS,6NS),
+          TRN_LZ, DELAY(1.5NS,2.9NS,5.5NS),
+          TRN_LH, DELAY(1.5NS,3.3NS,5.5NS),
+          TRN_HL, DELAY(1.5NS,2.7NS,5.5NS),
+          DELAY(4.5NS,7.1NS,9.5NS))}

.ENDS 74F541

* ----------------------------------------------------------- 74HC541 ------
*  Octal Buffer/Line Driver With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-471 to 2-475
*  bss    4/28/94
*
.SUBCKT 74HC541 G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR ENAB
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3a(8) DPWR DGND
+     A1 A2 A3 A4 A5 A6 A7 A8
+     ENAB
+     Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     DLY_HC541 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC541 utgate (tplhTY=12ns tplhMX=23ns tphlTY=12ns tphlMX=23ns
+                                     tpzhTY=17ns tpzhMX=30ns tpzlTY=17ns tpzlMX=30ns
+                                     tphzTY=18ns tphzMX=30ns tplzTY=18ns tplzMX=30ns)

.ENDS 74HC541
*
*
* ----------------------------------------------------------- 74HCT541 ------
*  Octal Buffer/Line Driver With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-477 to 2-481
*  bss    4/28/94
*
.SUBCKT 74HCT541 G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR ENAB
+     D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3a(8) DPWR DGND
+     A1 A2 A3 A4 A5 A6 A7 A8
+     ENAB
+     Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     DLY_HCT541 IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HCT541 utgate (tplhTY=13ns tplhMX=23ns tphlTY=13ns tphlMX=23ns
+                                     tpzhTY=21ns tpzhMX=30ns tpzlTY=21ns tpzlMX=30ns
+                                     tphzTY=19ns tphzMX=30ns tplzTY=19ns tplzMX=30ns)

.ENDS 74HCT541
*
*
* ----------------------------------------------------------- 74LS541 ------
*  Octal Buffer/Line Driver With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-973 to 2-976
*  bss    4/28/94
*
.SUBCKT 74LS541 G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     G1BAR G2BAR ENAB
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3a(8) DPWR DGND
+     A1 A2 A3 A4 A5 A6 A7 A8
+     ENAB
+     Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+     DLY_LS541 IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_LS541 utgate (tplhTY=9ns tplhMX=15ns tphlTY=10ns tphlMX=18ns
+                                     tpzhTY=20ns tpzhMX=32ns tpzlTY=25ns tpzlMX=38ns
+                                     tphzTY=18ns tphzMX=29ns tplzTY=10ns tplzMX=18ns)

.ENDS 74LS541
*
*
*-------------------------------------------------------------74ACT543----

* Octal-Registered Transceivers with 3-State Outputs
* TI Advanced CMOS Logic Data Book, 1993, pages 2-455 to 2-459
* jat 12/26/95

.SUBCKT 74ACT543
+ GBABAR GABBAR CEBABAR CEABBAR LEBABAR LEABBAR A1 A2 A3 A4 A5 A6 A7 A8 B1
+ B2 B3 B4 B5 B6 B7 B8
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(6,4) DPWR DGND
+ LEABBAR LEBABAR CEABBAR CEBABAR GABBAR GBABAR
+ LATCHAB LATCHBA ENABAB ENABBA
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   LATCHAB = {(~LEABBAR) & (~CEABBAR)}
+   LATCHBA = {(~LEBABAR) & (~CEBABAR)}
+   ENABAB = {~(GABBAR | CEABBAR)}
+   ENABBA = {~(GBABAR | CEBABAR)}

U2 DLTCH(8) DPWR DGND
+ $D_HI $D_HI LATCHAB
+ A1 A2 A3 A4 A5 A6 A7 A8
+ B1O B2O B3O B4O B5O B6O B7O B8O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DLTCH(8) DPWR DGND
+ $D_HI $D_HI LATCHBA
+ B1 B2 B3 B4 B5 B6 B7 B8
+ A1O A2O A3O A4O A5O A6O A7O A8O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(16,2,22) DPWR DGND
+ A1O A2O A3O A4O A5O A6O A7O A8O B1O B2O B3O B4O B5O B6O B7O B8O
+ ENABAB ENABBA
+ GABBAR GBABAR CEABBAR CEBABAR LEABBAR LEBABAR A1 A2 A3 A4 A5 A6 A7 A8
+   B1 B2 B3 B4 B5 B6 B7 B8
+ A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   OUTAB = {CHANGED(GABBAR,0)}
+   OUTBA = {CHANGED(GBABAR,0)}
+   CLKENAB = {CHANGED(CEABBAR,0)}
+   CLKENBA = {CHANGED(CEBABAR,0)}
+   CAB = {CHANGED_HL(LEABBAR,0)}
+   CBA = {CHANGED_HL(LEBABAR,0)}
+   DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+            CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0)}
+   DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+            CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B8,0)}
+ TRISTATE:
+   ENABLE HI = ENABAB
+   B1 B2 B3 B4 B5 B6 B7 B8 = {
+    CASE(
+      OUTAB & TRN_ZH, DELAY(3.3NS,6.4NS,10.5NS),
+      OUTAB & TRN_ZL, DELAY(3NS,8NS,12.8NS),
+      OUTAB & TRN_HZ, DELAY(4.6NS,6.9NS,9.6NS),
+      OUTAB & TRN_LZ, DELAY(5NS,7.1NS,9.8NS),
+      CLKENAB & TRN_ZH, DELAY(3.5NS,6.7NS,11.1NS),
+      CLKENAB & TRN_ZL, DELAY(3.2NS,8.4NS,13.4NS),
+      CLKENAB & TRN_HZ, DELAY(4.8NS,7.3NS,10.1NS),
+      CLKENAB & TRN_LZ, DELAY(5.1NS,7.5NS,10.3NS),
+      CAB & TRN_LH, DELAY(3NS,6.1NS,10.1NS),
+      CAB & TRN_HL, DELAY(3.7NS,7.2NS,11.7NS),
+      DATAA & TRN_LH, DELAY(3.5NS,6.2NS,9.1NS),
+      DATAA & TRN_HL, DELAY(3.2NS,6.5NS,10.8NS),
+      DELAY(6.1NS,9.4NS,14.4NS))}
+ TRISTATE:
+   ENABLE HI = ENABBA
+   A1 A2 A3 A4 A5 A6 A7 A8 = {
+    CASE(
+      OUTBA & TRN_ZH, DELAY(3.3NS,6.4NS,10.5NS),
+      OUTBA & TRN_ZL, DELAY(3NS,8NS,12.8NS),
+      OUTBA & TRN_HZ, DELAY(4.6NS,6.9NS,9.6NS),
+      OUTBA & TRN_LZ, DELAY(5NS,7.1NS,9.8NS),
+      CLKENBA & TRN_ZH, DELAY(3.5NS,6.7NS,11.1NS),
+      CLKENBA & TRN_ZL, DELAY(3.2NS,8.4NS,13.4NS),
+      CLKENBA & TRN_HZ, DELAY(4.8NS,7.3NS,10.1NS),
+      CLKENBA & TRN_LZ, DELAY(5.1NS,7.5NS,10.3NS),
+      CBA & TRN_LH, DELAY(3NS,6.1NS,10.1NS),
+      CBA & TRN_HL, DELAY(3.7NS,7.2NS,11.7NS),
+      DATAB & TRN_LH, DELAY(3.5NS,6.2NS,9.1NS),
+      DATAB & TRN_HL, DELAY(3.2NS,6.5NS,10.8NS),
+      DELAY(6.1NS,9.4NS,14.4NS))}

U5 CONSTRAINT(20) DPWR DGND
+ LEABBAR LEBABAR A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 CEABBAR CEBABAR
+ IO_ACT IO_LEVEL={IO_LEVEL}
+ WIDTH:
+   NODE = LEABBAR
+   MIN_LO = 4NS
+ WIDTH:
+   NODE = LEBABAR
+   MIN_LO = 4NS
+ SETUP_HOLD:
+   CLOCK LH = LEABBAR
+   DATA(8) = A1 A2 A3 A4 A5 A6 A7 A8
+   SETUPTIME = 2.5NS
+   HOLDTIME = 2NS
+ SETUP_HOLD:
+   CLOCK LH = LEBABAR
+   DATA(8) = B1 B2 B3 B4 B5 B6 B7 B8
+   SETUPTIME = 2.5NS
+   HOLDTIME = 2NS
+  SETUP_HOLD:
+   CLOCK LH = CEABBAR
+   DATA(8) = A1 A2 A3 A4 A5 A6 A7 A8
+   SETUPTIME = 3NS
+   HOLDTIME = 1.5NS
+  SETUP_HOLD:
+   CLOCK LH = CEBABAR
+   DATA(8) = B1 B2 B3 B4 B5 B6 B7 B8
+   SETUPTIME = 3NS
+   HOLDTIME = 1.5NS

.ENDS 74ACT543

*-------------------------------------------------------------74ACT544----

* Octal-Registered Transceivers with 3-State Outputs (Inverting)
* TI Advanced CMOS Logic Data Book, 1993, pages 2-461 to 2-465
* jat 12/26/95

.SUBCKT 74ACT544
+ GBABAR GABBAR CEBABAR CEABBAR LEBABAR LEABBAR A1 A2 A3 A4 A5 A6 A7 A8 B1
+ B2 B3 B4 B5 B6 B7 B8
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(6,4) DPWR DGND
+ LEABBAR LEBABAR CEABBAR CEBABAR GABBAR GBABAR
+ LATCHAB LATCHBA ENABAB ENABBA
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   LATCHAB = {(~LEABBAR) & (~CEABBAR)}
+   LATCHBA = {(~LEBABAR) & (~CEBABAR)}
+   ENABAB = {~(GABBAR | CEABBAR)}
+   ENABBA = {~(GBABAR | CEBABAR)}

U2 DLTCH(8) DPWR DGND
+ $D_HI $D_HI LATCHAB
+ A1 A2 A3 A4 A5 A6 A7 A8
+ B1O B2O B3O B4O B5O B6O B7O B8O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DLTCH(8) DPWR DGND
+ $D_HI $D_HI LATCHBA
+ B1 B2 B3 B4 B5 B6 B7 B8
+ A1O A2O A3O A4O A5O A6O A7O A8O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3A INVA(16) DPWR DGND
+ A1O A2O A3O A4O A5O A6O A7O A8O B1O B2O B3O B4O B5O B6O B7O B8O
+ A1BARO A2BARO A3BARO A4BARO A5BARO A6BARO A7BARO A8BARO B1BARO B2BARO
+   B3BARO B4BARO B5BARO B6BARO B7BARO B8BARO
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(16,2,22) DPWR DGND
+ A1BARO A2BARO A3BARO A4BARO A5BARO A6BARO A7BARO A8BARO B1BARO B2BARO
+    B3BARO B4BARO B5BARO B6BARO B7BARO B8BARO
+ ENABAB ENABBA
+ GABBAR GBABAR CEABBAR CEBABAR LEABBAR LEBABAR A1 A2 A3 A4 A5 A6 A7 A8
+   B1 B2 B3 B4 B5 B6 B7 B8
+ A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   OUTAB = {CHANGED(GABBAR,0)}
+   OUTBA = {CHANGED(GBABAR,0)}
+   CLKENAB = {CHANGED(CEABBAR,0)}
+   CLKENBA = {CHANGED(CEBABAR,0)}
+   CAB = {CHANGED_HL(LEABBAR,0)}
+   CBA = {CHANGED_HL(LEBABAR,0)}
+   DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+            CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0)}
+   DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+            CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B8,0)}
+ TRISTATE:
+   ENABLE HI = ENABAB
+   B1 B2 B3 B4 B5 B6 B7 B8 = {
+    CASE(
+      OUTAB & TRN_ZH, DELAY(3NS,6.4NS,9NS),
+      OUTAB & TRN_ZL, DELAY(3.5NS,7.8NS,10.8NS),
+      OUTAB & TRN_HZ, DELAY(4.6NS,7.3NS,9.3NS),
+      OUTAB & TRN_LZ, DELAY(4.6NS,7.2NS,9.2NS),
+      CLKENAB & TRN_ZH, DELAY(3.3NS,6.7NS,9.5NS),
+      CLKENAB & TRN_ZL, DELAY(3.6NS,8.2NS,11.2NS),
+      CLKENAB & TRN_HZ, DELAY(4.8NS,7.6NS,9.7NS),
+      CLKENAB & TRN_LZ, DELAY(4.7NS,7.6NS,9.5NS),
+      CAB & TRN_LH, DELAY(2.6NS,6NS,8.7NS),
+      CAB & TRN_HL, DELAY(3.4NS,7.1NS,10.1NS),
+      DATAA & TRN_LH, DELAY(2.4NS,5.7NS,8.2NS),
+      DATAA & TRN_HL, DELAY(4.1NS,7.3NS,9.3NS),
+      DELAY(5.8NS,9.2NS,12.2NS))}
+ TRISTATE:
+   ENABLE HI = ENABBA
+   A1 A2 A3 A4 A5 A6 A7 A8 = {
+    CASE(
+      OUTBA & TRN_ZH, DELAY(3NS,6.4NS,9NS),
+      OUTBA & TRN_ZL, DELAY(3.5NS,7.8NS,10.8NS),
+      OUTBA & TRN_HZ, DELAY(4.6NS,7.3NS,9.3NS),
+      OUTBA & TRN_LZ, DELAY(4.6NS,7.2NS,9.2NS),
+      CLKENBA & TRN_ZH, DELAY(3.3NS,6.7NS,9.5NS),
+      CLKENBA & TRN_ZL, DELAY(3.6NS,8.2NS,11.2NS),
+      CLKENBA & TRN_HZ, DELAY(4.8NS,7.6NS,9.7NS),
+      CLKENBA & TRN_LZ, DELAY(4.7NS,7.6NS,9.5NS),
+      CBA & TRN_LH, DELAY(2.6NS,6NS,8.7NS),
+      CBA & TRN_HL, DELAY(3.4NS,7.1NS,10.1NS),
+      DATAB & TRN_LH, DELAY(2.4NS,5.7NS,8.2NS),
+      DATAB & TRN_HL, DELAY(4.1NS,7.3NS,9.3NS),
+      DELAY(5.8NS,9.2NS,12.2NS))}

U5 CONSTRAINT(20) DPWR DGND
+ LEABBAR LEBABAR A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 CEABBAR CEBABAR
+ IO_ACT IO_LEVEL={IO_LEVEL}
+ WIDTH:
+   NODE = LEABBAR
+   MIN_LO = 4NS
+ WIDTH:
+   NODE = LEBABAR
+   MIN_LO = 4NS
+ SETUP_HOLD:
+   CLOCK LH = LEABBAR
+   DATA(8) = A1 A2 A3 A4 A5 A6 A7 A8
+   SETUPTIME = 2.5NS
+   HOLDTIME = 2NS
+ SETUP_HOLD:
+   CLOCK LH = LEBABAR
+   DATA(8) = B1 B2 B3 B4 B5 B6 B7 B8
+   SETUPTIME = 2.5NS
+   HOLDTIME = 2NS
+  SETUP_HOLD:
+   CLOCK LH = CEABBAR
+   DATA(8) = A1 A2 A3 A4 A5 A6 A7 A8
+   SETUPTIME = 3NS
+   HOLDTIME = 1.5NS
+  SETUP_HOLD:
+   CLOCK LH = CEBABAR
+   DATA(8) = B1 B2 B3 B4 B5 B6 B7 B8
+   SETUPTIME = 3NS
+   HOLDTIME = 1.5NS

.ENDS 74ACT544

* ----------------------------------------------------------- 74F543 ------
*  Octal Registered Transceiver With 3-State Outputs
*
*  The F Logic Data Book, 1994, TI Pages 2-261 to 2-265
*  bss    4/28/94
*
.SUBCKT 74F543 OEBABAR CEBABAR LEBABAR OEABBAR CEABBAR LEABBAR
+     A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nora(2,4) DPWR DGND
+     OEBABAR CEBABAR CEBABAR LEBABAR OEABBAR CEABBAR CEABBAR LEABBAR
+     ENBA CLKBA ENAB CLKAB
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI CLKBA
+     B1 B2 B3 B4 B5 B6 B7 B8
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 dltch(8) DPWR DGND
+     $D_HI $D_HI CLKAB
+     A1 A2 A3 A4 A5 A6 A7 A8
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4DLY PINDLY(16,2,18) DPWR DGND
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     ENAB ENBA
+     LEBABAR LEABBAR A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+                 CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0)}
+     DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+                 CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B8,0)}
+     GTACH = {CHANGED(LEBABAR,0)}
+     GTBCH = {CHANGED(LEABBAR,0)}
+
+  TRISTATE:
+     ENABLE HI=ENBA
+     A1 A2 A3 A4 A5 A6 A7 A8 = {
+       CASE(
+         GTACH & TRN_LH, DELAY(3.7ns,8.1ns,11ns),
+         GTACH & TRN_HL, DELAY(3.7ns,8.1ns,11ns),
+         DATAB & TRN_LH, DELAY(2.2ns,5.1ns,7.5ns),
+         DATAB & TRN_HL, DELAY(2.2ns,4.6ns,6.5ns),
+         TRN_ZH, DELAY(2.2ns,6.6ns,9),
+         TRN_ZL, DELAY(3.2ns,7.1ns,10.5ns),
+         TRN_HZ, DELAY(1.7ns,5.6ns,8ns),
+         TRN_LZ, DELAY(1.7ns,5.1ns,7.5ns),
+         DELAY(4.7ns,9.1ns,12ns))}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     B1 B2 B3 B4 B5 B6 B7 B8 = {
+       CASE(
+         GTBCH & TRN_LH, DELAY(3.7ns,8.1ns,11ns),
+         GTBCH & TRN_HL, DELAY(3.7ns,8.1ns,11ns),
+         DATAA & TRN_LH, DELAY(2.2ns,5.1ns,7.5ns),
+         DATAA & TRN_HL, DELAY(2.2ns,4.6ns,6.5ns),
+         TRN_ZH, DELAY(2.2ns,6.6ns,9),
+         TRN_ZL, DELAY(3.2ns,7.1ns,10.5ns),
+         TRN_HZ, DELAY(1.7ns,5.6ns,8ns),
+         TRN_LZ, DELAY(1.7ns,5.1ns,7.5ns),
+         DELAY(4.7ns,9.1ns,12ns))}

U5CON CONSTRAINT(22) DPWR DGND
+     LEBABAR LEABBAR A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 
+		ENBA ENAB CLKBA CLKAB
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLKBA
+     MIN_HI=5ns
+     MESSAGE="B TO A - GATE PULSE WIDTH LESS THAN 5ns"
+
+  WIDTH:
+     NODE=CLKAB
+     MIN_HI=5ns
+     MESSAGE="A TO B - GATE PULSE WIDTH LESS THAN 5ns"
+
+  SETUP_HOLD:
+     CLOCK LH=LEBABAR
+     DATA(8)=B1 B2 B3 B4 B5 B6 B7 B8
+     SETUPTIME=3.5ns
+     HOLDTIME=3.5ns
+     WHEN={ENBA=='1}
+
+  SETUP_HOLD:
+     CLOCK LH=LEABBAR
+     DATA(8)=A1 A2 A3 A4 A5 A6 A7 A8
+     SETUPTIME=3.5ns
+     HOLDTIME=3.5ns
+     WHEN={ENAB=='1}

.ENDS 74F543
*
*
* ----------------------------------------------------------- 74F544 ------
*  Bus Transceivers
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 537 to 543
*  bss    4/28/94
*
.SUBCKT 74F544 OEBABAR EBABAR LEBABAR OEABBAR EABBAR LEABBAR
+     A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nora(2,4) DPWR DGND
+     OEBABAR EBABAR EBABAR LEBABAR OEABBAR EABBAR EABBAR LEABBAR
+     ENBA CLKBA ENAB CLKAB
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI CLKBA
+     B0 B1 B2 B3 B4 B5 B6 B7
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     A0_O A1_O A2_O A3_O A4_O A5_O A6_O A7_O
+     D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 dltch(8) DPWR DGND
+     $D_HI $D_HI CLKAB
+     A0 A1 A2 A3 A4 A5 A6 A7
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     B0_O B1_O B2_O B3_O B4_O B5_O B6_O B7_O
+     D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4DLY PINDLY(16,2,22) DPWR DGND
+     A0_O A1_O A2_O A3_O A4_O A5_O A6_O A7_O
+     B0_O B1_O B2_O B3_O B4_O B5_O B6_O B7_O
+     ENAB ENBA
+     LEBABAR LEABBAR EBABAR EABBAR OEABBAR OEBABAR
+     A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7
+     A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+                 CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A0,0)}
+     DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+                 CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B0,0)}
+     GTACH = {CHANGED(LEBABAR,0)}
+     GTBCH = {CHANGED(LEABBAR,0)}
+     OEACH = {CHANGED(OEBABAR,0)}
+     OEBCH = {CHANGED(OEABBAR,0)}
+     EACH = {CHANGED(EBABAR,0)}
+     EBCH = {CHANGED(EABBAR,0)}
+
+  TRISTATE:
+     ENABLE HI=ENBA
+     A0 A1 A2 A3 A4 A5 A6 A7 = {
+       CASE(
+         GTACH & TRN_LH, DELAY(4ns,7ns,9.5ns),
+         GTACH & TRN_HL, DELAY(4ns,7ns,9.5ns),
+         DATAB & TRN_LH, DELAY(3ns,6.5ns,9.5ns),
+         DATAB & TRN_HL, DELAY(3ns,5ns,8ns),
+         EACH & TRN_ZH, DELAY(4ns,7ns,9.5ns),
+         EACH & TRN_ZL, DELAY(4.5ns,8ns,11ns),
+         EACH & TRN_HZ, DELAY(2.5ns,5ns,8ns),
+         EACH & TRN_LZ, DELAY(4.5ns,8.5ns,11.5ns),
+         OEACH & TRN_ZH, DELAY(2ns,4ns,7ns),
+         OEACH & TRN_ZL, DELAY(3.5ns,5.5ns,8.5ns),
+         OEACH & TRN_HZ, DELAY(1ns,4ns,6.5ns),
+         OEACH & TRN_LZ, DELAY(1.5ns,4ns,6.5ns),
+         DELAY(5.5ns,9.5ns,12.5ns))}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     B0 B1 B2 B3 B4 B5 B6 B7 = {
+       CASE(
+         GTBCH & TRN_LH, DELAY(5ns,8ns,11.5ns),
+         GTBCH & TRN_HL, DELAY(4ns,7.5ns,9.5ns),
+         DATAA & TRN_LH, DELAY(3ns,6.5ns,9.5ns),
+         DATAA & TRN_HL, DELAY(3ns,5ns,8ns),
+         EBCH & TRN_ZH, DELAY(4ns,7ns,9.5ns),
+         EBCH & TRN_ZL, DELAY(4.5ns,8ns,11ns),
+         EBCH & TRN_HZ, DELAY(2.5ns,5ns,8ns),
+         EBCH & TRN_LZ, DELAY(4.5ns,8.5ns,11.5ns),
+         OEBCH & TRN_ZH, DELAY(2ns,4ns,7ns),
+         OEBCH & TRN_ZL, DELAY(3.5ns,5.5ns,8.5ns),
+         OEBCH & TRN_HZ, DELAY(1ns,4ns,6.5ns),
+         OEBCH & TRN_LZ, DELAY(1.5ns,4ns,6.5ns),
+         DELAY(5.5ns,9.5ns,12.5ns))}

U5CON CONSTRAINT(20) DPWR DGND
+     LEABBAR LEBABAR A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 
+     EBABAR EABBAR
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=LEABBAR
+     MIN_LO=4.5ns
+
+  WIDTH:
+     NODE=LEBABAR
+     MIN_LO=4.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=LEBABAR
+     DATA(8)=B0 B1 B2 B3 B4 B5 B6 B7
+     SETUPTIME_HI=2ns
+     SETUPTIME_LO=2.5ns
+     HOLDTIME=2.5ns
+     WHEN={EBABAR=='0}
+
+  SETUP_HOLD:
+     CLOCK LH=EBABAR
+     DATA(8)=B0 B1 B2 B3 B4 B5 B6 B7
+     SETUPTIME=2.5ns
+     HOLDTIME=2ns
+     WHEN={LEBABAR=='0}
+
+  SETUP_HOLD:
+     CLOCK LH=LEABBAR
+     DATA(8)=A0 A1 A2 A3 A4 A5 A6 A7
+     SETUPTIME_HI=2ns
+     SETUPTIME_LO=2.5ns
+     HOLDTIME=2.5ns
+     WHEN={EABBAR=='0}
+
+  SETUP_HOLD:
+     CLOCK LH=EABBAR
+     DATA(8)=A0 A1 A2 A3 A4 A5 A6 A7
+     SETUPTIME=2.5ns
+     HOLDTIME=2ns
+     WHEN={LEABBAR=='0}

.ENDS 74F544
*
*
* ----------------------------------------------------------- 74F545 ------
*  Octal Bidirectional Transceiver With 3-State Outputs
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 544 to 547
*  bss    4/28/94
*
.SUBCKT 74F545 OEBAR T/RBAR A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(2,2) DPWR DGND
+     OEBAR T/RBAR
+     ENABA ENABB
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     oe = {~OEBAR}
+     tbar/r = {~T/RBAR}
+     ENABA = {oe & T/RBAR}
+     ENABB = {oe & tbar/r}

U2 buf3a(8) DPWR DGND
+     A0 A1 A2 A3 A4 A5 A6 A7
+     ENABA
+     B0 B1 B2 B3 B4 B5 B6 B7
+     DLY_F545 IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     B0 B1 B2 B3 B4 B5 B6 B7
+     ENABB
+     A0 A1 A2 A3 A4 A5 A6 A7
+     DLY_F545 IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_F545 utgate (tplhMN=1.5ns tplhTY=3.5ns tplhMX=5.5ns
+                                   tphlMN=2.5ns tphlTY=4.5ns tphlMX=6.5ns
+                                   tpzhMN=6ns tpzhTY=8.5ns tpzhMX=10.5ns
+                                   tpzlMN=5.5ns tpzlTY=8ns tpzlMX=9.5ns
+                                   tphzMN=2.5ns tphzTY=5ns tphzMX=7ns
+                                   tplzMN=2ns tplzTY=4.5ns tplzMX=6.5ns)

.ENDS 74F545
*
*
*------------------------------------------------------74F547-----------
*
* The 74F547 Octal Decoder/Demultiplexer with Address Latches and Acknowledge
* National Semiconductor FAST Advanced Schottky TTL Logic Databook, 1988,
* pages 4-443 to 4-447    jat 8/2/95

.SUBCKT 74F547
+ A0 A1 A2 E1BAR E2 E3 LE RDBAR WRBAR O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR
+ O6BAR O7BAR ACKBAR
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(11,9) DPWR DGND
+ E1BAR E2 E3 RDBAR WRBAR Q0 Q1 Q2 Q0BAR Q1BAR Q2BAR
+ ACK_BAR O_0BAR O_1BAR O_2BAR O_3BAR O_4BAR O_5BAR O_6BAR O_7BAR
+ D0_GATE IO_F
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  ENABLE = {(~E1BAR) & E2 & E3}
+  RW = {~(RDBAR & WRBAR)}
+  ACK_BAR = {~(ENABLE & RW)}
+  O_0BAR = {~(ENABLE & Q2BAR & Q1BAR & Q0BAR)}
+  O_1BAR = {~(ENABLE & Q2BAR & Q1BAR & Q0)}
+  O_2BAR = {~(ENABLE & Q2BAR & Q1    & Q0BAR)}
+  O_3BAR = {~(ENABLE & Q2BAR & Q1    & Q0)}
+  O_4BAR = {~(ENABLE & Q2    & Q1BAR & Q0BAR)}
+  O_5BAR = {~(ENABLE & Q2    & Q1BAR & Q0)}
+  O_6BAR = {~(ENABLE & Q2    & Q1    & Q0BAR)}
+  O_7BAR = {~(ENABLE & Q2    & Q1    & Q0)}

U2 DLTCH(3) DPWR DGND
+ $D_HI $D_HI LE
+ A0 A1 A2 Q0 Q1 Q2 Q0BAR Q1BAR Q2BAR
+ D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(9,0,9) DPWR DGND
+ ACK_BAR O_0BAR O_1BAR O_2BAR O_3BAR O_4BAR O_5BAR O_6BAR O_7BAR
+ A0 A1 A2 E1BAR E2 E3 LE RDBAR WRBAR
+ ACKBAR O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+      ADDRESS = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0)}
+      ENAB1 = {CHANGED(E1BAR,0)}
+      ENAB23 = {CHANGED(E2,0) | CHANGED(E3,0)}
+      LATCH = {CHANGED(LE,0)}
+      E1RWACK = {CHANGED(E1BAR,0) | CHANGED(RDBAR,0) | CHANGED(WRBAR,0)}
+      E23ACK = {CHANGED(E2,0) | CHANGED(E3,0)}
+ PINDLY:
+      O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR = {
+         CASE(
+           ENAB1 & TRN_LH, DELAY(2.5NS,6.5NS,8.5NS),
+           ENAB1 & TRN_HL, DELAY(3NS,6.5NS,8.5NS),
+           ENAB23 & (TRN_LH | TRN_HL), DELAY(4NS,8.5NS,10NS),
+           ADDRESS & TRN_LH, DELAY(2NS,7NS,9NS),
+           ADDRESS & TRN_HL, DELAY(4.5NS,9NS,12NS),
+           LATCH & TRN_LH, DELAY(3.5NS,7.5NS,10NS),
+           LATCH & TRN_HL, DELAY(5NS,-1,14NS),
+           DELAY(6NS,10NS,15NS))}
+      ACKBAR = {
+          CASE(
+           E1RWACK & TRN_LH, DELAY(6.5NS,11NS,13NS),
+           E1RWACK & TRN_HL, DELAY(3.5NS,7.5NS,9.5NS),
+           E23ACK & TRN_LH, DELAY(7.5NS,13NS,14NS),
+           E23ACK & TRN_HL, DELAY(4.5NS,8.5NS,12NS),
+           DELAY(8.5NS,14NS,15NS))}

U4 CONSTRAINT(4) DPWR DGND
+ LE A0 A1 A2
+ IO_F IO_LEVEL={IO_LEVEL}
+ SETUP_HOLD:
+            CLOCK LH = LE
+            DATA(3) = A0 A1 A2
+            SETUPTIME = 5NS
+            HOLDTIME = 6NS
+ WIDTH:
+            NODE = LE
+            MIN_HI = 6NS

.ENDS 74F547
*
*
*------------------------------------------------------74F548------------
*
* The 74F548 Octal Decoder/Demultiplexer with Acknowledge
* National Semiconductor FAST Advanced Schottky TTL Logic Databook, 1988,
* pages 4-448 to 4-451    jat 8/2/95

.SUBCKT 74F548
+ A0 A1 A2 E1BAR E2BAR E3 E4 RDBAR WRBAR O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR
+ O6BAR O7BAR ACKBAR
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,9) DPWR DGND
+ A0 A1 A2 E1BAR E2BAR E3 E4 RDBAR WRBAR
+ ACK_BAR O_0BAR O_1BAR O_2BAR O_3BAR O_4BAR O_5BAR O_6BAR O_7BAR
+ D0_GATE IO_F
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  A0BAR = {~A0}
+  A1BAR = {~A1}
+  A2BAR = {~A2}
+  ENABLE = {(~E1BAR) & (~E2BAR) & E3 & E4}
+  RW = {~(RDBAR & WRBAR)}
+  ACK_BAR = {~(ENABLE & RW)}
+  O_0BAR = {~(ENABLE & A2BAR & A1BAR & A0BAR)}
+  O_1BAR = {~(ENABLE & A2BAR & A1BAR & A0)}
+  O_2BAR = {~(ENABLE & A2BAR & A1    & A0BAR)}
+  O_3BAR = {~(ENABLE & A2BAR & A1    & A0)}
+  O_4BAR = {~(ENABLE & A2    & A1BAR & A0BAR)}
+  O_5BAR = {~(ENABLE & A2    & A1BAR & A0)}
+  O_6BAR = {~(ENABLE & A2    & A1    & A0BAR)}
+  O_7BAR = {~(ENABLE & A2    & A1    & A0)}

U2 PINDLY(9,0,9) DPWR DGND
+ ACK_BAR O_0BAR O_1BAR O_2BAR O_3BAR O_4BAR O_5BAR O_6BAR O_7BAR
+ A0 A1 A2 E1BAR E2BAR E3 E4 RDBAR WRBAR
+ ACKBAR O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+      ADDRESS = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0)}
+      ENAB12 = {CHANGED(E1BAR,0) | CHANGED(E2BAR,0)}
+      ENAB34 = {CHANGED(E3,0) | CHANGED(E4,0)}
+      RWACK = {CHANGED(RDBAR,0) | CHANGED(WRBAR,0)}
+ PINDLY:
+      O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR = {
+         CASE(
+           ENAB12 & TRN_LH, DELAY(2.5NS,6.5NS,8.5NS),
+           ENAB12 & TRN_HL, DELAY(3.5NS,6.5NS,8.5NS),
+           ENAB34 & (TRN_LH | TRN_HL), DELAY(4NS,8.5NS,9.5NS),
+           ADDRESS & TRN_LH, DELAY(2NS,5.5NS,8NS),
+           ADDRESS & TRN_HL, DELAY(4NS,8NS,9.5NS),
+           DELAY(5NS,9NS,10NS))}
+      ACKBAR = {
+          CASE(
+           ENAB12 & TRN_LH, DELAY(6.5NS,11NS,12.5NS),
+           ENAB12 & TRN_HL, DELAY(3NS,7.5NS,9.5NS),
+           ENAB34 & TRN_LH, DELAY(8NS,13NS,14NS),
+           ENAB34 & TRN_HL, DELAY(4NS,8.5NS,10NS),
+           RWACK & TRN_LH, DELAY(5.5NS,10NS,12NS),
+           RWACK & TRN_HL, DELAY(2.5NS,5NS,8NS),
+           DELAY(9NS,14NS,15NS))}

.ENDS 74F548
*
*
*---------------------------------------------------------74F550-------

* The 74F550 Octal Registered Transceiver with Status Flags
* National Semiconductor FAST Advanced Schottky TTL Logic Databook, 1988,
* pages 4-452 to 4-457    jat 8/2/95

.SUBCKT 74F550
+ A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 CPA CPB CEABAR CEBBAR
+ FAB FBA CFAB CFBA OEABAR OEBBAR
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(10,6) DPWR DGND
+ CPA CPB CEABAR CEBBAR F_BA F_AB CFBA CFAB CFBABAR CFABBAR
+ CLOCKA CLOCKB DFLAGBA DFLAGAB CLEARFLAGBA CLEARFLAGAB
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  CLOCKA = {CPA & (~CEABAR)}
+  CLOCKB = {CPB & (~CEBBAR)}
+  DFLAGBA = {(F_BA & CEBBAR) | (~CEBBAR)}
+  DFLAGAB = {(F_AB & CEABAR) | (~CEABAR)}
+  CLEARFLAGBA = {~(CFBA & CFBABAR)}
+  CLEARFLAGAB = {~(CFAB & CFABBAR)}

U2 INVA(2) DPWR DGND
+ CFBA CFAB
+ CFBABAR CFABBAR
+ D01_GATE IO_F
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.MODEL D01_GATE UGATE (TPHLMN=3.5NS TPHLTY=3.5NS TPHLMX=3.5NS)

U3 DFF(8) DPWR DGND
+ $D_HI $D_HI CLOCKA
+ A0 A1 A2 A3 A4 A5 A6 A7
+ QA_0 QA_1 QA_2 QA_3 QA_4 QA_5 QA_6 QA_7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(8) DPWR DGND
+ $D_HI $D_HI CLOCKB
+ B0 B1 B2 B3 B4 B5 B6 B7
+ QB_0 QB_1 QB_2 QB_3 QB_4 QB_5 QB_6 QB_7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 DFF(1) DPWR DGND
+ $D_HI CLEARFLAGBA CPB
+ DFLAGBA
+ F_BA
+ $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 DFF(1) DPWR DGND
+ $D_HI CLEARFLAGAB CPA
+ DFLAGAB
+ F_AB
+ $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 PINDLY(18,2,6) DPWR DGND
+ QA_0 QA_1 QA_2 QA_3 QA_4 QA_5 QA_6 QA_7 QB_0 QB_1 QB_2 QB_3 QB_4 QB_5
+ QB_6 QB_7 F_AB F_BA
+ OEABAR OEBBAR
+ CLOCKA CLOCKB CFAB CFBA CPA CPB
+ B0 B1 B2 B3 B4 B5 B6 B7 A0 A1 A2 A3 A4 A5 A6 A7 FAB FBA
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+        EDGEA = {CHANGED_LH(CLOCKA,0)} 
+        EDGEB = {CHANGED_LH(CLOCKB,0)}
+        CLRFAB = {CHANGED_LH(CFAB,0)}
+        CLRFBA = {CHANGED_LH(CFBA,0)}
+        CLKA = {CHANGED_LH(CPA,0)}
+        CLKB = {CHANGED_LH(CPB,0)}
+ PINDLY:
+   FAB = {
+      CASE(
+         CLRFAB & TRN_HL, DELAY(5NS,9NS,11.5NS),
+         CLKA & TRN_LH, DELAY(3.5NS,6NS,8NS),
+         DELAY(6NS,10NS,12.5NS))}
+   FBA = {
+      CASE(
+         CLRFBA & TRN_HL, DELAY(5NS,9NS,11.5NS),
+         CLKB & TRN_LH, DELAY(3.5NS,6NS,8NS),
+         DELAY(6NS,10NS,12.5NS))}
+ TRISTATE:
+   ENABLE LO = OEABAR
+   A0 A1 A2 A3 A4 A5 A6 A7 = {
+      CASE(
+        TRN_HZ, DELAY(3NS,6.5NS,9NS),
+        TRN_LZ, DELAY(2.5NS,5.5NS,7.5NS),
+        TRN_ZH, DELAY(2.5NS,5.5NS,7.5NS),
+        TRN_ZL, DELAY(3.5NS,7NS,9.5NS),
+        EDGEB & TRN_LH, DELAY(3NS,5.5NS,7.5NS),
+        EDGEB & TRN_HL, DELAY(4NS,7NS,9NS),
+        DELAY(5NS,8NS,10NS))}
+ TRISTATE:
+   ENABLE LO = OEBBAR
+   B0 B1 B2 B3 B4 B5 B6 B7 = {
+      CASE(
+        TRN_HZ, DELAY(3NS,6.5NS,9NS),
+        TRN_LZ, DELAY(2.5NS,5.5NS,7.5NS),
+        TRN_ZH, DELAY(2.5NS,5.5NS,7.5NS),
+        TRN_ZL, DELAY(3.5NS,7NS,9.5NS),
+        EDGEA & TRN_LH, DELAY(3NS,5.5NS,7.5NS),
+        EDGEA & TRN_HL, DELAY(4NS,7NS,9NS),
+        DELAY(5NS,8NS,10NS))}

U8 CONSTRAINT(22) DPWR DGND
+ CPA CPB A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 CEABAR CEBBAR
+ CFAB CFBA
+ IO_F IO_LEVEL={IO_LEVEL}
+ SETUP_HOLD:
+             CLOCK LH = CPA
+             DATA(8) = A0 A1 A2 A3 A4 A5 A6 A7
+             SETUPTIME = 4.5NS
+             HOLDTIME = 2.5NS
+ SETUP_HOLD:
+             CLOCK LH = CPB
+             DATA(8) = B0 B1 B2 B3 B4 B5 B6 B7
+             SETUPTIME = 4.5NS
+             HOLDTIME = 2.5NS
+ SETUP_HOLD:
+             CLOCK LH = CPA
+             DATA(1) = CEABAR
+             SETUPTIME_HI = 1.5NS
+             SETUPTIME_LO = 4.5NS
+             HOLDTIME = 2.5NS
+ SETUP_HOLD:
+             CLOCK LH = CPB
+             DATA(1) = CEBBAR
+             SETUPTIME_HI = 1.5NS
+             SETUPTIME_LO = 4.5NS
+             HOLDTIME = 2.5NS
+ SETUP_HOLD:
+             CLOCK LH = CPA
+             DATA(1) = CFAB
+             SETUPTIME_LO = 10NS
+ SETUP_HOLD:
+             CLOCK LH = CPB
+             DATA(1) = CFBA
+             SETUPTIME_LO = 10NS
+ WIDTH:
+         NODE = CPA
+         MIN_HI = 3.5NS
+         MIN_LO = 3.5NS
+ WIDTH:
+         NODE = CPB
+         MIN_HI = 3.5NS
+         MIN_LO = 3.5NS
+ WIDTH:
+         NODE = CFAB
+         MIN_HI = 3.5NS
+ WIDTH:
+         NODE = CFBA
+         MIN_HI = 3.5NS

.ENDS 74F550
*
*
*---------------------------------------------------------74F551-------

* The 74F551 Octal Registered Transceiver with Status Flags (Inverting)
* National Semiconductor FAST Advanced Schottky TTL Logic Databook, 1988,
* pages 4-452 to 4-457    jat 8/8/95

.SUBCKT 74F551
+ A0BAR A1BAR A2BAR A3BAR A4BAR A5BAR A6BAR A7BAR B0BAR B1BAR B2BAR B3BAR
+ B4BAR B5BAR B6BAR B7BAR CPA CPB CEABAR CEBBAR FAB FBA CFAB CFBA
+ OEABAR OEBBAR
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(10,6) DPWR DGND
+ CPA CPB CEABAR CEBBAR F_BA F_AB CFBA CFAB CFBABAR CFABBAR
+ CLOCKA CLOCKB DFLAGBA DFLAGAB CLEARFLAGBA CLEARFLAGAB
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  CLOCKA = {CPA & (~CEABAR)}
+  CLOCKB = {CPB & (~CEBBAR)}
+  DFLAGBA = {(F_BA & CEBBAR) | (~CEBBAR)}
+  DFLAGAB = {(F_AB & CEABAR) | (~CEABAR)}
+  CLEARFLAGBA = {~(CFBA & CFBABAR)}
+  CLEARFLAGAB = {~(CFAB & CFABBAR)}

U2 INVA(2) DPWR DGND
+ CFBA CFAB
+ CFBABAR CFABBAR
+ D01_GATE IO_F
+ MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.MODEL D01_GATE UGATE (TPHLMN=3.5NS TPHLTY=3.5NS TPHLMX=3.5NS)

U3 DFF(8) DPWR DGND
+ $D_HI $D_HI CLOCKA
+ A0BAR A1BAR A2BAR A3BAR A4BAR A5BAR A6BAR A7BAR
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ QA_0BAR QA_1BAR QA_2BAR QA_3BAR QA_4BAR QA_5BAR QA_6BAR QA_7BAR
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(8) DPWR DGND
+ $D_HI $D_HI CLOCKB
+ B0BAR B1BAR B2BAR B3BAR B4BAR B5BAR B6BAR B7BAR
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ QB_0BAR QB_1BAR QB_2BAR QB_3BAR QB_4BAR QB_5BAR QB_6BAR QB_7BAR
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 DFF(1) DPWR DGND
+ $D_HI CLEARFLAGBA CPB
+ DFLAGBA
+ F_BA
+ $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 DFF(1) DPWR DGND
+ $D_HI CLEARFLAGAB CPA
+ DFLAGAB
+ F_AB
+ $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 PINDLY(18,2,6) DPWR DGND
+ QA_0BAR QA_1BAR QA_2BAR QA_3BAR QA_4BAR QA_5BAR QA_6BAR QA_7BAR
+ QB_0BAR QB_1BAR QB_2BAR QB_3BAR QB_4BAR QB_5BAR QB_6BAR QB_7BAR F_AB F_BA
+ OEABAR OEBBAR
+ CLOCKA CLOCKB CFAB CFBA CPA CPB
+ B0BAR B1BAR B2BAR B3BAR B4BAR B5BAR B6BAR B7BAR
+ A0BAR A1BAR A2BAR A3BAR A4BAR A5BAR A6BAR A7BAR FAB FBA
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+        EDGEA = {CHANGED_LH(CLOCKA,0)} 
+        EDGEB = {CHANGED_LH(CLOCKB,0)}
+        CLRFAB = {CHANGED_LH(CFAB,0)}
+        CLRFBA = {CHANGED_LH(CFBA,0)}
+        CLKA = {CHANGED_LH(CPA,0)}
+        CLKB = {CHANGED_LH(CPB,0)}
+ PINDLY:
+   FAB = {
+      CASE(
+         CLRFAB & TRN_HL, DELAY(5NS,9NS,11.5NS),
+         CLKA & TRN_LH, DELAY(3.5NS,6NS,8NS),
+         DELAY(6NS,10NS,12.5NS))}
+   FBA = {
+      CASE(
+         CLRFBA & TRN_HL, DELAY(5NS,9NS,11.5NS),
+         CLKB & TRN_LH, DELAY(3.5NS,6NS,8NS),
+         DELAY(6NS,10NS,12.5NS))}
+ TRISTATE:
+   ENABLE LO = OEABAR
+   A0BAR A1BAR A2BAR A3BAR A4BAR A5BAR A6BAR A7BAR = {
+      CASE(
+        TRN_HZ, DELAY(3NS,6.5NS,9NS),
+        TRN_LZ, DELAY(2.5NS,5.5NS,7.5NS),
+        TRN_ZH, DELAY(2.5NS,5.5NS,7.5NS),
+        TRN_ZL, DELAY(3.5NS,7NS,9.5NS),
+        EDGEB & TRN_LH, DELAY(3NS,5.5NS,7.5NS),
+        EDGEB & TRN_HL, DELAY(4NS,7NS,9NS),
+        DELAY(5NS,8NS,10NS))}
+ TRISTATE:
+   ENABLE LO = OEBBAR
+   B0BAR B1BAR B2BAR B3BAR B4BAR B5BAR B6BAR B7BAR = {
+      CASE(
+        TRN_HZ, DELAY(3NS,6.5NS,9NS),
+        TRN_LZ, DELAY(2.5NS,5.5NS,7.5NS),
+        TRN_ZH, DELAY(2.5NS,5.5NS,7.5NS),
+        TRN_ZL, DELAY(3.5NS,7NS,9.5NS),
+        EDGEA & TRN_LH, DELAY(3NS,5.5NS,7.5NS),
+        EDGEA & TRN_HL, DELAY(4NS,7NS,9NS),
+        DELAY(5NS,8NS,10NS))}

U8 CONSTRAINT(22) DPWR DGND
+ CPA CPB A0BAR A1BAR A2BAR A3BAR A4BAR A5BAR A6BAR A7BAR B0BAR B1BAR B2BAR
+ B3BAR B4BAR B5BAR B6BAR B7BAR CEABAR CEBBAR CFAB CFBA
+ IO_F IO_LEVEL={IO_LEVEL}
+ SETUP_HOLD:
+             CLOCK LH = CPA
+             DATA(8) = A0BAR A1BAR A2BAR A3BAR A4BAR A5BAR A6BAR A7BAR
+             SETUPTIME = 4.5NS
+             HOLDTIME = 2.5NS
+ SETUP_HOLD:
+             CLOCK LH = CPB
+             DATA(8) = B0BAR B1BAR B2BAR B3BAR B4BAR B5BAR B6BAR B7BAR
+             SETUPTIME = 4.5NS
+             HOLDTIME = 2.5NS
+ SETUP_HOLD:
+             CLOCK LH = CPA
+             DATA(1) = CEABAR
+             SETUPTIME_HI = 1.5NS
+             SETUPTIME_LO = 4.5NS
+             HOLDTIME = 2.5NS
+ SETUP_HOLD:
+             CLOCK LH = CPB
+             DATA(1) = CEBBAR
+             SETUPTIME_HI = 1.5NS
+             SETUPTIME_LO = 4.5NS
+             HOLDTIME = 2.5NS
+ SETUP_HOLD:
+             CLOCK LH = CPA
+             DATA(1) = CFAB
+             SETUPTIME_LO = 10NS
+ SETUP_HOLD:
+             CLOCK LH = CPB
+             DATA(1) = CFBA
+             SETUPTIME_LO = 10NS
+ WIDTH:
+         NODE = CPA	
+         MIN_HI = 3.5NS
+         MIN_LO = 3.5NS
+ WIDTH:
+         NODE = CPB
+         MIN_HI = 3.5NS
+         MIN_LO = 3.5NS
+ WIDTH:
+         NODE = CFAB
+         MIN_HI = 3.5NS
+ WIDTH:
+         NODE = CFBA
+         MIN_HI = 3.5NS

.ENDS 74F551

*------------------------------------------------------------74F552-----

* Octal Registered Transceiver with Parity and Flags (Tri-State)
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 548 to 554
* jat 7/16/96

.SUBCKT 74F552 A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7
+ CPR CERBAR CESBAR OEASBAR OEBRBAR PARITY FS FR ERRBAR
+ OPTIONAL: DPWR=$D_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(,) DPWR DGND
+ CERBAR CESBAR A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7
+ QR0 QR1 QR2 QR3 QR4 QR5 QR6 QR7 QS0 QS1 QS2 QS3 QS4 QS5 QS6 QS7
+ QR0BAR QR1BAR QR2BAR QR3BAR QR4BAR QR5BAR QR6BAR QR7BAR 
+ QS0BAR QS1BAR QS2BAR QS3BAR QS4BAR QS5BAR QS6BAR QS7BAR 
+ DR0 DR1 DR2 DR3 DR4 DR5 DR6 DR7 DS0 DS1 DS2 DS3 DS4 DS5 DS6 DS7
+ DO_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   DR0 = {(QR0 & CERBAR) | (A0 & ~CERBAR)}
+   DR1 = {(QR1 & CERBAR) | (A1 & ~CERBAR)}
+   DR2 = {(QR2 & CERBAR) | (A2 & ~CERBAR)}
+   DR3 = {(QR3 & CERBAR) | (A3 & ~CERBAR)}
+   DR4 = {(QR4 & CERBAR) | (A4 & ~CERBAR)}
+   DR5 = {(QR5 & CERBAR) | (A5 & ~CERBAR)}
+   DR6 = {(QR6 & CERBAR) | (A6 & ~CERBAR)}
+   DR7 = {(QR7 & CERBAR) | (A7 & ~CERBAR)}
+   DS0 = {(QS0 & CESBAR) | (B0 & ~CESBAR)}
+   DS1 = {(QS1 & CESBAR) | (B1 & ~CESBAR)}
+   DS2 = {(QS2 & CESBAR) | (B2 & ~CESBAR)}
+   DS3 = {(QS3 & CESBAR) | (B3 & ~CESBAR)}
+   DS4 = {(QS4 & CESBAR) | (B4 & ~CESBAR)}
+   DS5 = {(QS5 & CESBAR) | (B5 & ~CESBAR)}
+   DS6 = {(QS6 & CESBAR) | (B6 & ~CESBAR)}
+   DS7 = {(QS7 & CESBAR) | (B7 & ~CESBAR)}
+   P0 = {(QR0 & QR1BAR & QR2) | (QR0BAR & QR1 & QR2) | (QR0 & QR1 & QR2BAR) |
+         (QR0BAR & QR1BAR & QR2BAR)}
+   P1 = {(QR3 & QR4BAR & QR5) | (QR3BAR & QR4 & QR5) | (QR3 & QR4 & QR5BAR) |
+         (QR3BAR & QR4BAR & QR5BAR)}
+   S0 = {(QS0 & QS0BAR & QS1) | (QS1BAR & QS2 & QS1) | (QS0 & QS2 & QS2BAR) |
+         (QS1BAR & QS0BAR & QS2BAR)}
+   S1 = {(QP & QPBAR & QS3) | (QS3BAR & QS4 & QS3) | (QP & QS4 & QS4BAR) |
+         (QS3BAR & QPBAR & QS2BAR)}
+   S2 = {(QS5 & QS5BAR & QS6) | (QS6BAR & QS7 & QS6) | (QS5 & QS7 & QS7BAR) |
+         (QS6BAR & QS5BAR & QS7BAR)}
+   P0BAR = {~P0}
+   P1BAR = {~P1}
+   S0BAR = {~S0}
+   S1BAR = {~S1}
+   S2BAR = {~S2}
+   MID = {(QR6 & QR6BAR) | (QR7 & QR7BAR)}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CPR
+ DR0 DR1 DR2 DR3 DR4 DR5 DR6 DR7
+ QR0 QR1 QR2 QR3 QR4 QR5 QR6 QR7
+ QR0BAR QR1BAR QR2BAR QR3BAR QR4BAR QR5BAR QR6BAR QR7BAR
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(8) DPWR DGND
+ $D_HI $D_HI CPS
+ DS0 DS1 DS2 DS3 DS4 DS5 DS6 DS7
+ QS0 QS1 QS2 QS3 QS4 QS5 QS6 QS7
+ QS0BAR QS1BAR QS2BAR QS3BAR QS4BAR QS5BAR QS6BAR QS7BAR
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(1) DPWR DGND
+ $D_HI $D_HI CPS
+ PARITY QP QPBAR
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.ENDS 74F552

* ----------------------------------------------------------- 74ALS560A ------
*  Synchronous 4-Bit Counters With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-407 to 2-415
*  bss    5/2/94
*
.SUBCKT 74ALS560A GBAR ENT ENP SCLRBAR SLOADBAR CLK ACLRBAR ALOADBAR 
+     A B C D CCO RCO QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(1) DPWR DGND
+     PREA CLRA CLK DA QA_O $D_NC
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(1) DPWR DGND
+     PREB CLRB CLK DB QB_O $D_NC
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 dff(1) DPWR DGND
+     PREC CLRC CLK DC QC_O $D_NC
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 dff(1) DPWR DGND
+     PRED CLRD CLK DD QD_O QDBAR
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(16,14) DPWR DGND
+     ENT ENP SCLRBAR SLOADBAR CLK ACLRBAR ALOADBAR A B C D 
+     QA_O QB_O QC_O QD_O QDBAR
+     PREA PREB PREC PRED CLRA CLRB CLRC CLRD DA DB DC DD CCO_O RCO_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     count = {(ENT & ENP & SLOADBAR) & SCLRBAR}
+     sync1 = {SLOADBAR & SCLRBAR}
+     sync2 = {(~SLOADBAR) & SCLRBAR}
+     aclr = {~ACLRBAR}
+     RCO_O = {ENT & QA_O & QD_O}
+     rcobar = {~RCO_O}
+     CCO_O = {~((~(ENT & ENP)) | CLK | rcobar)}
+     aload = {~ALOADBAR}
+     PREA = {~(A & aload & ACLRBAR)}
+     CLRA  = {~(aclr | (aload & PREA))}
+     PREB = {~(B & aload & ACLRBAR)}
+     CLRB = {~(aclr | (aload & PREB))}
+     PREC = {~(C & aload & ACLRBAR)}
+     CLRC = {~(aclr | (aload & PREC))}
+     PRED = {~(D & aload & ACLRBAR)}
+     CLRD = {~(aclr | (aload & PRED))}
+     countbar = {~count}
+     DA = {(A & sync2) | (sync1 & QA_O & countbar) | (count & (~(sync1 & QA_O)))}
+     andb2 = {(~(count & QA_O)) & QB_O & sync1}
+     andb3 = {(~(sync1 & QB_O)) & QA_O & QDBAR & count}
+     DB = {(B & sync2) | andb2 | andb3}
+     andc2 = {(~(count & QA_O & QB_O)) & QC_O & sync1}
+     andc3 = {(~(sync1 & QC_O)) & count & QA_O & QB_O}
+     DC = {(C & sync2) | andc2 | andc3}
+     andd2 = {(~(count & QA_O)) & QD_O & sync1}
+     andd3 = {(~(sync1 & QD_O)) & QA_O & QB_O & QC_O & count}
+     DD = {(D & sync2) | andd2 | andd3}

U6DLY PINDLY(6,1,9) DPWR DGND
+     QA_O QB_O QC_O QD_O RCO_O CCO_O
+     GBAR
+     CLK ALOADBAR A B C D ENT ENP ACLRBAR
+     QA QB QC QD RCO CCO
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ACLEAR = {CHANGED_HL(ACLRBAR,0)}
+     ASLOAD = {CHANGED_HL(ALOADBAR,0)}
+     CLOCK = {CHANGED_LH(CLK,0)}
+     ENABT = {CHANGED(ENT,0)}
+     ENABP = {CHANGED(ENP,0)}
+     DATA = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0) | CHANGED(D,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD = {
+       CASE(
+         ACLEAR & TRN_HL, DELAY(7ns,-1,22ns),
+         ASLOAD & TRN_LH, DELAY(10ns,-1,35ns),
+         ASLOAD & TRN_HL, DELAY(7ns,-1,23ns),
+         CLOCK & TRN_LH, DELAY(4ns,-1,12ns),
+         CLOCK & TRN_HL, DELAY(5ns,-1,18ns),
+         DATA & TRN_LH, DELAY(8ns,-1,30ns),
+         DATA & TRN_HL, DELAY(7ns,-1,22ns),
+         TRN_ZH, DELAY(5ns,-1,19ns),
+         TRN_ZL, DELAY(8ns,-1,23ns),
+         TRN_HZ, DELAY(2ns,-1,10ns),
+         TRN_LZ, DELAY(4ns,-1,15ns),
+         DELAY(11ns,-1,36ns))}
+
+  PINDLY:
+     RCO = {
+       CASE(
+         ASLOAD & TRN_LH, DELAY(15ns,-1,40ns),
+         ASLOAD & TRN_HL, DELAY(12ns,-1,30ns),
+         CLOCK & TRN_LH, DELAY(9ns,-1,29ns),
+         CLOCK & TRN_HL, DELAY(8ns,-1,24ns),
+         ENABT & TRN_LH, DELAY(5ns,-1,16ns),
+         ENABT & TRN_HL, DELAY(4ns,-1,14ns),
+         DELAY(16ns,-1,41ns))}
+
+     CCO = {
+       CASE(
+         ASLOAD & TRN_LH, DELAY(25ns,-1,55ns),
+         ASLOAD & TRN_HL, DELAY(12ns,-1,33ns),
+         CHANGED(CLK,0) & TRN_LH, DELAY(8ns,-1,26ns),
+         CHANGED(CLK,0) & TRN_HL, DELAY(5ns,-1,16ns),
+         ENABT & TRN_LH, DELAY(12ns,-1,32ns),
+         ENABT & TRN_HL, DELAY(4ns,-1,12ns),
+         ENABP & TRN_LH, DELAY(5ns,-1,18ns),
+         ENABP & TRN_HL, DELAY(4ns,-1,12ns),
+         DELAY(26ns,-1,56ns))}

U7CON CONSTRAINT(11) DPWR DGND
+     CLK ACLRBAR ALOADBAR ENP ENT A B C D SCLRBAR SLOADBAR
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=ACLRBAR
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=ALOADBAR
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=CLK
+     MIN_LO=25ns
+     MIN_HI=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(6)=ENT ENP A B C D
+     SETUPTIME=20ns
+     WHEN={SCLRBAR!='0 | ACLRBAR!='0}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=SCLRBAR SLOADBAR
+     SETUPTIME_LO=15ns
+     SETUPTIME_HI=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=ACLRBAR ALOADBAR
+     SETUPTIME_HI=10ns

.ENDS 74ALS560A
*
*
* ----------------------------------------------------------- 74ALS561A ------
*  Synchronous 4-Bit Counters With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-407 to 2-415
*  bss    5/2/94
*
.SUBCKT 74ALS561A GBAR ENT ENP SCLRBAR SLOADBAR CLK ACLRBAR ALOADBAR 
+     A B C D CCO RCO QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(1) DPWR DGND
+     PREA CLRA CLK DA QA_O $D_NC
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(1) DPWR DGND
+     PREB CLRB CLK DB QB_O $D_NC
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 dff(1) DPWR DGND
+     PREC CLRC CLK DC QC_O $D_NC
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 dff(1) DPWR DGND
+     PRED CLRD CLK DD QD_O $D_NC
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(15,14) DPWR DGND
+     ENT ENP SCLRBAR SLOADBAR CLK ACLRBAR ALOADBAR A B C D 
+     QA_O QB_O QC_O QD_O
+     PREA PREB PREC PRED CLRA CLRB CLRC CLRD DA DB DC DD CCO_O RCO_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sclr = {~SCLRBAR}
+     count = {~((~(ENT & ENP & SLOADBAR)) | sclr)}
+     sync1 = {SLOADBAR & SCLRBAR}
+     sync2 = {~(SLOADBAR | sclr)}
+     aclr = {~ACLRBAR}
+     RCO_O = {ENT & QA_O & QB_O & QC_O & QD_O}
+     rcobar = {~RCO_O}
+     CCO_O = {~((~(ENT & ENP)) | CLK | rcobar)}
+     aload = {~ALOADBAR}
+     PREA = {~(A & aload & ACLRBAR)}
+     CLRA  = {~(aclr | (aload & PREA))}
+     PREB = {~(B & aload & ACLRBAR)}
+     CLRB = {~(aclr | (aload & PREB))}
+     PREC = {~(C & aload & ACLRBAR)}
+     CLRC = {~(aclr | (aload & PREC))}
+     PRED = {~(D & aload & ACLRBAR)}
+     CLRD = {~(aclr | (aload & PRED))}
+     countbar = {~count}
+     DA = {(A & sync2) | (sync1 & QA_O & countbar) | (count & (~(sync1 & QA_O)))}
+     andb2 = {(~(count & QA_O)) & QB_O & sync1}
+     andb3 = {(~(sync1 & QB_O)) & QA_O & count}
+     DB = {(B & sync2) | andb2 | andb3}
+     andc2 = {(~(count & QA_O & QB_O)) & QC_O & sync1}
+     andc3 = {(~(sync1 & QC_O)) & count & QA_O & QB_O}
+     DC = {(C & sync2) | andc2 | andc3}
+     andd2 = {(~(count & QA_O & QB_O & QC_O)) & QD_O & sync1}
+     andd3 = {(~(sync1 & QD_O)) & QA_O & QB_O & QC_O & count}
+     DD = {(D & sync2) | andd2 | andd3}

U6DLY PINDLY(6,1,9) DPWR DGND
+     QA_O QB_O QC_O QD_O RCO_O CCO_O
+     GBAR
+     CLK ALOADBAR A B C D ENT ENP ACLRBAR
+     QA QB QC QD RCO CCO
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ACLEAR = {CHANGED_HL(ACLRBAR,0)}
+     ASLOAD = {CHANGED_HL(ALOADBAR,0)}
+     CLOCK = {CHANGED_LH(CLK,0)}
+     ENABT = {CHANGED(ENT,0)}
+     ENABP = {CHANGED(ENP,0)}
+     DATA = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0) | CHANGED(D,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD = {
+       CASE(
+         ACLEAR & TRN_HL, DELAY(7ns,-1,22ns),
+         ASLOAD & TRN_LH, DELAY(10ns,-1,35ns),
+         ASLOAD & TRN_HL, DELAY(7ns,-1,23ns),
+         CLOCK & TRN_LH, DELAY(4ns,-1,12ns),
+         CLOCK & TRN_HL, DELAY(5ns,-1,18ns),
+         DATA & TRN_LH, DELAY(8ns,-1,30ns),
+         DATA & TRN_HL, DELAY(7ns,-1,22ns),
+         TRN_ZH, DELAY(5ns,-1,19ns),
+         TRN_ZL, DELAY(8ns,-1,23ns),
+         TRN_HZ, DELAY(2ns,-1,10ns),
+         TRN_LZ, DELAY(4ns,-1,15ns),
+         DELAY(11ns,-1,36ns))}
+
+  PINDLY:
+     RCO = {
+       CASE(
+         ASLOAD & TRN_LH, DELAY(15ns,-1,40ns),
+         ASLOAD & TRN_HL, DELAY(12ns,-1,30ns),
+         CLOCK & TRN_LH, DELAY(9ns,-1,29ns),
+         CLOCK & TRN_HL, DELAY(8ns,-1,24ns),
+         ENABT & TRN_LH, DELAY(5ns,-1,16ns),
+         ENABT & TRN_HL, DELAY(4ns,-1,14ns),
+         DELAY(16ns,-1,41ns))}
+
+     CCO = {
+       CASE(
+         ASLOAD & TRN_LH, DELAY(25ns,-1,55ns),
+         ASLOAD & TRN_HL, DELAY(12ns,-1,33ns),
+         CHANGED(CLK,0) & TRN_LH, DELAY(8ns,-1,26ns),
+         CHANGED(CLK,0) & TRN_HL, DELAY(5ns,-1,16ns),
+         ENABT & TRN_LH, DELAY(12ns,-1,32ns),
+         ENABT & TRN_HL, DELAY(4ns,-1,12ns),
+         ENABP & TRN_LH, DELAY(5ns,-1,18ns),
+         ENABP & TRN_HL, DELAY(4ns,-1,12ns),
+         DELAY(26ns,-1,56ns))}

U7CON CONSTRAINT(11) DPWR DGND
+     CLK ACLRBAR ALOADBAR ENP ENT A B C D SCLRBAR SLOADBAR
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=30MEG
+
+  WIDTH:
+     NODE=ACLRBAR
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=ALOADBAR
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=CLK
+     MIN_LO=16.5ns
+     MIN_HI=16.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(6)=ENT ENP A B C D
+     SETUPTIME=20ns
+     WHEN={SCLRBAR!='0 | ACLRBAR!='0}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=SCLRBAR SLOADBAR
+     SETUPTIME_LO=15ns
+     SETUPTIME_HI=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=ACLRBAR ALOADBAR
+     SETUPTIME_HI=10ns

.ENDS 74ALS561A
*
*
* ----------------------------------------------------------- 74AC563 ------
*  Octal D-Type Latch With 3-State Outputs
*
*  The FACT Data Book, 1993, Motorola Pages 5-309 to 5-315
*  bss    5/11/94
*
.SUBCKT 74AC563 OEBAR LE D0 D1 D2 D3 D4 D5 D6 D7 
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OEBAR OE
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI LE
+     D0 D1 D2 D3 D4 D5 D6 D7
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     O0 O1 O2 O3 O4 O5 O6 O7
+     DLY_AC563 IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     O0 O1 O2 O3 O4 O5 O6 O7
+     OE
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+     DLY_AC563Z IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AC563 ugff (tpgqlhMN=2ns tpgqlhMX=9.5ns tpgqhlMN=2ns tpgqhlMX=8.5ns
+                                  tpdqlhMN=2ns tpdqlhMX=10ns tpdqhlMN=2ns tpdqhlMX=9.5ns
+                                  twghMN=5ns tsudgMN=2.5ns thdgMN=2ns)

.model DLY_AC563Z utgate (tpzhMN=2ns tpzhMX=9ns tpzlMN=1.5ns tpzlMX=8.5ns
+                                        tphzMN=2ns tphzMX=11ns tplzMN=1.5ns tplzMX=8ns)

.ENDS 74AC563
*
*
* ----------------------------------------------------------- 74ACT563 ------
*  Octal Latch With Tri-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-236 to 4-240
*  bss    5/2/94
*
.SUBCKT 74ACT563 OEBAR LE D0 D1 D2 D3 D4 D5 D6 D7 
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OEBAR OE
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI LE
+     D0 D1 D2 D3 D4 D5 D6 D7
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     O0 O1 O2 O3 O4 O5 O6 O7
+     DLY_ACT563 IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     O0 O1 O2 O3 O4 O5 O6 O7
+     OE
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+     DLY_ACT563Z IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ACT563 ugff (tpgqlhMN=3ns tpgqlhTY=6.5ns tpgqlhMX=10.5ns
+                                  tpgqhlMN=2.5ns tpgqhlTY=5.5ns tpgqhlMX=9.5ns
+                                  tpdqlhMN=3ns tpdqlhTY=7ns tpdqlhMX=11.5ns
+                                  tpdqhlMN=3ns tpdqhlTY=6ns tpdqhlMX=10ns
+                                  twghMN=3ns tsudgMN=4.5ns)

.model DLY_ACT563Z utgate (tpzhMN=2.5ns tpzhTY=5.5ns tpzhMX=9ns
+                                        tpzlMN=2ns tpzlTY=5.5ns tpzlMX=8.5ns
+                                        tphzMN=3.5ns tphzTY=6.5ns tphzMX=10.5ns
+                                        tplzMN=2ns tplzTY=4.5ns tplzMX=8ns)

.ENDS 74ACT563
*
*
* ----------------------------------------------------------- 74ALS563A ------
*  Octal D-Type Transparent Latches With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-417 to 2-419
*  bss    5/2/94
*
.SUBCKT 74ALS563A OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     DLY_ALS563 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     DLY_ALS563Z IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS563 ugff (tpgqlhMN=8ns tpgqlhMX=22ns tpgqhlMN=8ns tpgqhlMX=21ns
+                                  tpdqlhMN=3ns tpdqlhMX=18ns tpdqhlMN=3ns tpdqhlMX=14ns
+                                  twghMN=15ns tsudgMN=10ns thdgMN=10ns)

.model DLY_ALS563Z utgate (tpzhMN=4ns tpzhMX=18ns tpzlMN=4ns tpzlMX=18ns
+                                        tphzMN=2ns tphzMX=10ns tplzMN=3ns tplzMX=15ns)

.ENDS 74ALS563A
*
*
* ----------------------------------------------------------- 74F563 ------
*  Octal D-Type Latch With Tri-State Outputs
*
*  The FAST Advanced Schottky TTL Logic Data Book, 1988, National Pages 4-464 to 4-467
*  bss    5/3/94
*
.SUBCKT 74F563 OEBAR LE D0 D1 D2 D3 D4 D5 D6 D7 
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OEBAR OE
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI LE
+     D0 D1 D2 D3 D4 D5 D6 D7
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     O0 O1 O2 O3 O4 O5 O6 O7
+     DLY_F563 IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     O0 O1 O2 O3 O4 O5 O6 O7
+     OE
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+     DLY_F563Z IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_F563 ugff (tpgqlhMN=4.5ns tpgqlhMX=9.5ns tpgqhlMN=3ns tpgqhlMX=7ns
+                                  tpdqlhMN=3.5ns tpdqlhMX=8.5ns tpdqhlMN=2.5ns tpdqhlMX=6.5ns
+                                  twghMN=4ns tsudgMN=2ns thdgMN=3ns)

.model DLY_F563Z utgate (tpzhMN=2ns tpzhMX=7.5ns tpzlMN=3ns tpzlMX=8.5ns
+                                        tphzMN=1.5ns tphzMX=5.5ns tplzMN=1.5ns tplzMX=5.5ns)

.ENDS 74F563
*
*
* ----------------------------------------------------------- 74HC563 ------
*  Octal D-Type Transparent Latches With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-483 to 2-486
*  bss    5/2/94
*
.SUBCKT 74HC563 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     DLY_HC563 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     DLY_HC563Z IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC563 ugff (tpgqlhTY=27ns tpgqlhMX=35ns tpgqhlTY=27ns tpgqhlMX=35ns
+                                  tpdqlhTY=26ns tpdqlhMX=35ns tpdqhlTY=26ns tpdqhlMX=35ns
+                                  twghMN=20ns tsudgMN=13ns thdgMN=5ns)

.model DLY_HC563Z utgate (tpzhTY=24ns tpzhMX=30ns tpzlTY=24ns tpzlMX=30ns
+                                        tphzTY=23ns tphzMX=30ns tplzTY=23ns tplzMX=30ns)

.ENDS 74HC563
*
*
* ----------------------------------------------------------- 74HCT563 ------
*  Octal D-Type Transparent Latches With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-487 to 2-490
*  bss    5/2/94
*
.SUBCKT 74HCT563 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     DLY_HCT563 IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     DLY_HCT563Z IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HCT563 ugff (tpgqlhTY=30ns tpgqlhMX=35ns tpgqhlTY=30ns tpgqhlMX=35ns
+                                  tpdqlhTY=28ns tpdqlhMX=35ns tpdqhlTY=28ns tpdqhlMX=35ns
+                                  twghMN=25ns tsudgMN=13ns thdgMN=5ns)

.model DLY_HCT563Z utgate (tpzhTY=28ns tpzhMX=35ns tpzlTY=28ns tpzlMX=35ns
+                                        tphzTY=25ns tphzMX=35ns tplzTY=25ns tplzMX=35ns)

.ENDS 74HCT563

*-------------------------------------------------------------74LS563-------

* Octal D-Type Latch with Tri-State Outputs
* National TTL/LS/S Logic Databook, 1989, pages 2-486 to 2-488
* jat 8/13/96

.SUBCKT 74LS563 D0 D1 D2 D3 D4 D5 D6 D7 O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR
+ O6BAR O7BAR LE OEBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(8) DPWR DGND
+ $D_HI $D_HI LE
+ D0 D1 D2 D3 D4 D5 D6 D7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ D0_GFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,9) DPWR DGND
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ OEBAR
+ LE D0 D1 D2 D3 D4 D5 D6 D7
+ O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   LATCH = {CHANGED_LH(LE,0)}
+   DATA = {CHANGED(D0,0) | CHANGED(D2,0) | CHANGED(D3,0) | CHANGED(D1,0) |
+           CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+ TRISTATE: 
+   ENABLE LO = OEBAR
+   O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR = {
+    CASE(
+      TRN_ZH, DELAY(-1,-1,28NS),
+      TRN_ZL, DELAY(-1,-1,36NS),
+      TRN_HZ, DELAY(-1,-1,20NS),
+      TRN_LZ, DELAY(-1,-1,25NS),
+      LATCH & TRN_LH, DELAY(-1,-1,35NS),
+      LATCH & TRN_HL, DELAY(-1,-1,35NS),
+      DATA & TRN_LH, DELAY(-1,-1,23NS),
+      DATA & TRN_HL, DELAY(-1,-1,25NS),
+      DELAY(-1,-1,37NS))}

U3 CONSTRAINT(9) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 LE
+ IO_LS IO_LEVEL={IO_LEVEL}
+ WIDTH:
+    NODE = LE
+    MIN_HI = 15NS
+    MIN_LO = 15NS
+ SETUP_HOLD:
+    CLOCK HL = LE
+    DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+    HOLDTIME = 10NS

.ENDS 74LS563

* ----------------------------------------------------------- 74AC564 ------
*  Octal D Flip-Flop With 3-State Outputs
*
*  The FACT Data Book, 1993, Motorola Pages 5-316 to 5-322
*  bss    5/11/94
*
.SUBCKT 74AC564 OEBAR CP D0 D1 D2 D3 D4 D5 D6 D7 
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OEBAR OE
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CP
+     D0 D1 D2 D3 D4 D5 D6 D7
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     O0 O1 O2 O3 O4 O5 O6 O7
+     DLY_AC564 IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     O0 O1 O2 O3 O4 O5 O6 O7
+     OE
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+     DLY_AC564Z IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AC564 ueff (tpclkqlhMN=2ns tpclkqlhMX=10.5ns tpclkqhlMN=2ns tpclkqhlMX=9.5ns
+                                  twclkhMN=5ns twclklMN=5ns tsudclkMN=2.5ns thdclkMN=2ns)

.model DLY_AC564Z utgate (tpzhMN=2ns tpzhMX=9ns tpzlMN=1.5ns tpzlMX=8.5ns
+                                        tphzMN=2ns tphzMX=10.5ns tplzMN=1.5ns tplzMX=8ns)

.ENDS 74AC564
*
*
* ----------------------------------------------------------- 74ACT564 ------
*  Octal D Flip-Flop With Tri-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-241 to 4-243
*  bss    5/2/94
*
.SUBCKT 74ACT564 OEBAR CP D0 D1 D2 D3 D4 D5 D6 D7 
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OEBAR OE
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CP
+     D0 D1 D2 D3 D4 D5 D6 D7
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     O0 O1 O2 O3 O4 O5 O6 O7
+     DLY_ACT564 IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     O0 O1 O2 O3 O4 O5 O6 O7
+     OE
+     O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+     DLY_ACT564Z IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ACT564 ueff (tpclkqlhMN=2ns tpclkqlhTY=6.5ns tpclkqlhMX=10.5ns
+                                  tpclkqhlMN=1.5ns tpclkqhlTY=6ns tpclkqhlMX=9.5ns
+                                  twclkhMN=3.5ns twclklMN=3.5ns tsudclkMN=3ns thdclkMN=1ns)

.model DLY_ACT564Z utgate (tpzhMN=1.5ns tpzhTY=5.5ns tpzhMX=9ns
+                                        tpzlMN=1.5ns tpzlTY=5.5ns tpzlMX=8.5ns
+                                        tphzMN=1.5ns tphzTY=7ns tphzMX=10.5ns
+                                        tplzMN=1.5ns tplzTY=5ns tplzMX=8ns)

.ENDS 74ACT564
*
*
* ----------------------------------------------------------- 74ALS564A ------
*  Octal D-Type Edge-Triggered Flip-Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-421 to 2-424
*  bss    5/2/94
*
.SUBCKT 74ALS564A OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     DLY_ALS564 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     DLY_ALS564Z IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS564 ueff (tpclkqlhMN=4ns tpclkqlhMX=14ns tpclkqhlMN=4ns tpclkqhlMX=14ns
+                                  twclkhMN=14ns twclklMN=14ns tsudclkMN=15ns)

.model DLY_ALS564Z utgate (tpzhMN=4ns tpzhMX=18ns tpzlMN=4ns tpzlMX=18ns
+                                        tphzMN=2ns tphzMX=10ns tplzMN=3ns tplzMX=15ns)

.ENDS 74ALS564A

*-------------------------------------------------------------74F564-------

* Octal D-Type Flip-Flop with Tri-State Outputs
* National Advanced Bipolar Logic Databook, 1995, pages 7-413 to 7-416
* jat 7/16/96

.SUBCKT 74F564 D0 D1 D2 D3 D4 D5 D6 D7 O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR
+ O6BAR O7BAR CP OEBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI $D_HI CP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,0) DPWR DGND
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ OEBAR
+ O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE: 
+   ENABLE LO = OEBAR
+   O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR = {
+    CASE(
+      TRN_ZH, DELAY(3NS,5.6NS,9NS),
+      TRN_ZL, DELAY(3NS,6.2NS,9NS),
+      TRN_HZ, DELAY(1.5NS,3.4NS,5.5NS),
+      TRN_LZ, DELAY(1.5NS,2.7NS,5.5NS),
+      TRN_LH, DELAY(2.5NS,5.2NS,8.5NS),
+      TRN_HL, DELAY(2.5NS,5.9NS,8.5NS),
+      DELAY(4NS,7.2NS,10NS))}

U3 CONSTRAINT(9) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 CP
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+    NODE = CP
+    MAXFREQ = 100MEG
+ WIDTH:
+    NODE = CP
+    MIN_HI = 5NS
+    MIN_LO = 5NS
+ SETUP_HOLD:
+    CLOCK LH = CP
+    DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+    SETUPTIME_HI = 2NS
+    SETUPTIME_LO = 2.5NS
+    HOLDTIME = 2NS

.ENDS 74F564

* ----------------------------------------------------------- 74HC564 ------
*  Octal D-Type Edge-Triggered Flip-Flops With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-491 to 2-495
*  bss    5/3/94
*
.SUBCKT 74HC564 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     DLY_HC564 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     DLY_HC564Z IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC564 ueff (tpclkqlhTY=18ns tpclkqlhMX=36ns tpclkqhlTY=18ns tpclkqhlMX=36ns
+                                  twclkhMN=20ns twclklMN=20ns tsudclkMN=25ns thdclkMN=5ns)

.model DLY_HC564Z utgate (tpzhTY=15ns tpzhMX=30ns tpzlTY=15ns tpzlMX=30ns
+                                        tphzTY=15ns tphzMX=30ns tplzTY=15ns tplzMX=30ns)

.ENDS 74HC564
*
*
* ----------------------------------------------------------- 74HCT564 ------
*  Octal D-Type Edge-Triggered Flip-Flops With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-497 to 2-500
*  bss    5/3/94
*
.SUBCKT 74HCT564 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     DLY_HCT564 IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     DLY_HCT564Z IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HCT564 ueff (tpclkqlhTY=18ns tpclkqlhMX=36ns tpclkqhlTY=18ns tpclkqhlMX=36ns
+                                  twclkhMN=20ns twclklMN=20ns tsudclkMN=25ns thdclkMN=5ns)

.model DLY_HCT564Z utgate (tpzhTY=14ns tpzhMX=30ns tpzlTY=14ns tpzlMX=30ns
+                                        tphzTY=22ns tphzMX=30ns tplzTY=22ns tplzMX=30ns)

.ENDS 74HCT564

*-------------------------------------------------------------74LS564-------

* Octal D-Type Flip-Flop with Tri-State Outputs
* National TTL/LS/S Logic Databook, 1989, pages 2-489 to 2-491
* jat 8/13/96

.SUBCKT 74LS564 D0 D1 D2 D3 D4 D5 D6 D7 O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR
+ O6BAR O7BAR CP OEBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI $D_HI CP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,1) DPWR DGND
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ OEBAR
+ CP
+ O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   EDGE = {CHANGED_LH(CP,0)}
+ TRISTATE: 
+   ENABLE LO = OEBAR
+   O0BAR O1BAR O2BAR O3BAR O4BAR O5BAR O6BAR O7BAR = {
+    CASE(
+      TRN_ZH, DELAY(-1,-1,28NS),
+      TRN_ZL, DELAY(-1,-1,28NS),
+      TRN_HZ, DELAY(-1,-1,20NS),
+      TRN_LZ, DELAY(-1,-1,25NS),
+      EDGE & TRN_LH, DELAY(-1,-1,28NS),
+      EDGE & TRN_HL, DELAY(-1,-1,28NS),
+      DELAY(-1,-1,29NS))}

U3 CONSTRAINT(9) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 CP
+ IO_LS IO_LEVEL={IO_LEVEL}
+ WIDTH:
+    NODE = CP
+    MIN_HI = 20NS
+    MIN_LO = 10NS
+ SETUP_HOLD:
+    CLOCK LH = CP
+    DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+    SETUPTIME = 5NS
+    HOLDTIME = 5NS

.ENDS 74LS564

* ----------------------------------------------------------- 74ALS568A ------
*  Synchronous 4-Bit Up/Down Binary Counters With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-425 to 2-433
*  bss    5/3/94
*
.SUBCKT 74ALS568A GBAR U/DB CLK ENTBAR ENPBAR SCLRBAR LOADBAR ACLRBAR 
+     A B C D CCOBAR RCOBAR QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI ACLRBAR CLK
+     DA DB DC DD
+     QA_O QB_O QC_O QD_O
+     QABAR QBBAR QCBAR QDBAR
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(18,6) DPWR DGND
+     U/DB CLK ENTBAR ENPBAR SCLRBAR LOADBAR A B C D
+     QA_O QB_O QC_O QD_O QABAR QBBAR QCBAR QDBAR
+     DA DB DC DD RCOBAR_O CCOBAR_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     clkbar = {~CLK}
+     sclr = {~SCLRBAR}
+     ub/d = {~U/DB}
+     ent = {~ENTBAR}
+     count = {~(ENTBAR | ENPBAR)}
+     sync2 = {~(sclr | LOADBAR)}
+     sync1 = {~(ENTBAR | ENPBAR | sclr | sync2)}
+     sync3 = {(SCLRBAR & LOADBAR)}
+     fba = {~((QABAR & U/DB) | (QA_O & ub/d))}
+     fbb = {~((QBBAR & U/DB) | (QB_O & ub/d))}
+     fbc = {~((QCBAR & U/DB) | (QC_O & ub/d))}
+     fbd = {~((QDBAR & U/DB) | (QD_O & ub/d))}
+     nand1 = {~(U/DB & fbd)}
+     nand2 = {~(QCBAR & ub/d & QDBAR)}
+     and1a = {(A & sync2)}
+     and2a = {((~sync1) & sync3 & QA_O)}
+     and3a = {((~(QA_O & sync3)) & sync1)}
+     DA = {and1a | and2a | and3a}
+     and1b = {(B & sync2)}
+     and2b = {((~(fba & sync1)) & sync3 & QB_O)}
+     and3b = {(fba & sync1 & nand2 & nand1 & QBBAR)}
+     DB = {and1b | and2b | and3b}
+     and1c = {(C & sync2)}
+     and2c = {((~(fba & fbb & sync1)) & sync3 & QC_O)}
+     and3c = {((~(QC_O & sync3)) & fbb & fba & sync1 & nand2)}
+     DC = {and1c | and2c | and3c}
+     and1d = {(D & sync2)}
+     and2d = {((~(fba & sync1)) & sync3 & QD_O)}
+     and3d = {((~(QD_O & sync3)) & fbc & fbb & fba & sync1)}
+     DD = {and1d | and2d | and3d}
+     RCOBAR_O = {~((U/DB & fbd & fba & ent) | (ent & fba & fbb & fbc & fbd & ub/d))}
+     rco = {~RCOBAR_O}
+     CCOBAR_O = {~(clkbar & count & rco)}

U3DLY PINDLY(6,1,5) DPWR DGND
+     QA_O QB_O QC_O QD_O RCOBAR_O CCOBAR_O
+     GBAR
+     CLK U/DB ENTBAR ENPBAR ACLRBAR
+     QA QB QC QD RCOBAR CCOBAR
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CLK,0)}
+     CCK1 = {CHANGED(CLK,0)}
+     UPDOWN = {CHANGED(U/DB,0)}
+     ENABT = {CHANGED(ENTBAR,0)}
+     ENABP = {CHANGED(ENPBAR,0)}
+     CLEAR = {CHANGED_HL(ACLRBAR,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(9ns,-1,20ns),
+         CLOCK & TRN_LH, DELAY(4ns,-1,13ns),
+         CLOCK & TRN_HL, DELAY(7ns,-1,16ns),
+         TRN_ZH, DELAY(6ns,-1,18ns),
+         TRN_ZL, DELAY(6ns,-1,24ns),
+         TRN_HZ, DELAY(1ns,-1,10ns),
+         TRN_LZ, DELAY(3ns,-1,13ns),
+         DELAY(10ns,-1,25ns))}
+
+  PINDLY:
+     RCOBAR = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(12ns,-1,28ns),
+         CLOCK & TRN_HL, DELAY(10ns,-1,19ns),
+         UPDOWN & TRN_LH, DELAY(9ns,-1,23ns),
+         UPDOWN & TRN_HL, DELAY(9ns,-1,19ns),
+         ENABT & TRN_LH, DELAY(6ns,-1,15ns),
+         ENABT & TRN_HL, DELAY(4ns,-1,13ns),
+         DELAY(13ns,-1,29ns))}
+
+     CCOBAR = {
+        CASE(
+         ENABT & TRN_LH, DELAY(5ns,-1,13ns),
+         ENABT & TRN_HL, DELAY(9ns,-1,23ns),
+         CCK1 & TRN_LH, DELAY(5ns,-1,13ns),
+         CCK1 & TRN_HL, DELAY(6ns,-1,25ns),
+         ENABP & TRN_LH, DELAY(4ns,-1,12ns),
+         ENABP & TRN_HL, DELAY(5ns,-1,14ns),
+         DELAY(10ns,-1,26ns))}

U4CON CONSTRAINT(11) DPWR DGND
+     ACLRBAR LOADBAR CLK A B C D ENPBAR ENTBAR SCLRBAR U/DB
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=ACLRBAR
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=LOADBAR
+     MIN_LO=15ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(4)=A B C D
+     SETUPTIME=20ns
+     WHEN={SCLRBAR!='0 | ACLRBAR!='0}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=ENPBAR ENTBAR
+     SETUPTIME_HI=30ns
+     SETUPTIME_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=SCLRBAR LOADBAR
+     SETUPTIME_LO=15ns
+     SETUPTIME_HI=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=U/DB
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=ACLRBAR
+     SETUPTIME_HI=10ns

.ENDS 74ALS568A
*
*
* ----------------------------------------------------------- 74F568 ------
*  4-Bit Bidirectional Decade Counters With 3-State Outputs
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 562 to 572
*  bss    5/3/94
*	Left out the top AND gate in the feedback for the 2nd D flip-flop
*	or the logic would be wrong
*
.SUBCKT 74F568 OEBAR U/DB CP CETBAR CEPBAR SRBAR PEBAR MRBAR 
+     D0 D1 D2 D3 CCBAR TCBAR Q0 Q1 Q2 Q3
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI MRBAR CP
+     DA DB DC DD
+     Q0_O Q1_O Q2_O Q3_O
+     Q0BAR Q1BAR Q2BAR Q3BAR
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(18,6) DPWR DGND
+     U/DB CP CETBAR CEPBAR SRBAR PEBAR D0 D1 D2 D3
+     Q0_O Q1_O Q2_O Q3_O Q0BAR Q1BAR Q2BAR Q3BAR
+     DA DB DC DD TCBAR_O CCBAR_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     clkbar = {~CP}
+     ub/d = {~U/DB}
+     ent = {~CETBAR}
+     cnt = {~(SRBAR & PEBAR)}
+     cntbar = {~cnt}
+     count = {~(CETBAR | CEPBAR | cnt)}
+     nand0 = {~(D0 & SRBAR)}
+     nand1 = {~(D1 & SRBAR)}
+     nand2 = {~(D2 & SRBAR)}
+     nand3 = {~(D3 & SRBAR)}
+     fb1 = {(U/DB | ub/d)}
*	Logic added to fb2 and fb3 so C would go to 5 on a count down
+     fb2 = {((Q3BAR & Q0_O & U/DB) | (Q3_O & Q2BAR & Q1BAR & Q0BAR & ub/d) |
+             (Q0BAR & Q1BAR & Q3BAR & Q2_O & ub/d) | (Q1_O & Q0BAR & ub/d))}
+     fb3 = {((Q1_O & Q0_O & U/DB) | (Q2BAR & Q1BAR & Q0BAR & Q3_O & ub/d) | 
+             (Q0BAR & Q1BAR & Q2_O & Q3BAR & ub/d))}
+     fb4 = {((Q0_O & Q3_O & U/DB) | (Q2_O & Q1_O & Q0_O & U/DB) |
+             (Q2BAR & Q1BAR & Q0BAR & ub/d) | (Q0BAR & ub/d & Q3_O))}
+     TCBAR_O = {~((Q3_O & Q2BAR & Q1BAR & U/DB & Q0_O & ent) |
+             (ent & Q0BAR & Q1BAR & Q2BAR & Q3BAR & ub/d))}
+     tc = {~TCBAR_O}
+     CCBAR_O = {~(tc & clkbar & count)}
+     xor0 = {(~(fb1 & count)) ^ Q0_O}
+     xor1 = {(~(fb2 & count)) ^ Q1_O}
+     xor2 = {(~(fb3 & count)) ^ Q2_O}
+     xor3 = {(~(fb4 & count)) ^ Q3_O}
+     DA = {~((xor0 & cntbar) | (nand0 & cnt))}
+     DB = {~((xor1 & cntbar) | (nand1 & cnt))}
+     DC = {~((xor2 & cntbar) | (nand2 & cnt))}
+     DD = {~((xor3 & cntbar) | (nand3 & cnt))}

U3DLY PINDLY(6,1,7) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O TCBAR_O CCBAR_O
+     OEBAR
+     CP U/DB CETBAR CEPBAR MRBAR SRBAR PEBAR
+     Q0 Q1 Q2 Q3 TCBAR CCBAR
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CP,0)}
+     CCK1 = {CHANGED(CP,0)}
+     UPDOWN = {CHANGED(U/DB,0)}
+     ENABT = {CHANGED(CETBAR,0)}
+     ENABP = {CHANGED(CEPBAR,0)}
+     CLEAR = {CHANGED_HL(MRBAR,0)}
+     SYCLR = {CHANGED(SRBAR,0)}
+     LOAD = {CHANGED(PEBAR,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     Q0 Q1 Q2 Q3 = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(6ns,8ns,11ns),
+         CLOCK & TRN_LH, DELAY(3ns,6ns,9.5ns),
+         CLOCK & TRN_HL, DELAY(4ns,7.5ns,11ns),
+         TRN_ZH, DELAY(2ns,4ns,7ns),
+         TRN_ZL, DELAY(4.5ns,6.5ns,9.5ns),
+         TRN_HZ, DELAY(1.5ns,3.5ns,6.5ns),
+         TRN_LZ, DELAY(1.5ns,3.5ns,6ns),
+         DELAY(7ns,9ns,12ns))}
+
+  PINDLY:
+     TCBAR = {
+       CASE(
+         CLEAR, DELAY(8ns,11ns,15ns),
+         CLOCK & TRN_LH, DELAY(5.5ns,10ns,15ns),
+         CLOCK & TRN_HL, DELAY(4ns,7.5ns,11ns),
+         UPDOWN & TRN_LH, DELAY(2.5ns,5ns,9ns),
+         UPDOWN & TRN_HL, DELAY(5ns,10ns,15ns),
+         ENABT & TRN_LH, DELAY(1.5ns,3ns,6ns),
+         ENABT & TRN_HL, DELAY(2.5ns,5ns,8ns),
+         DELAY(9ns,12ns,16ns))}
+
+     CCBAR = {
+        CASE(
+         CLEAR, DELAY(8ns,11ns,15ns),
+         UPDOWN & TRN_LH, DELAY(4.5ns,9ns,12ns),
+         UPDOWN & TRN_HL, DELAY(5ns,11ns,16ns),
+         (ENABT | ENABP) & TRN_LH, DELAY(2ns,4ns,7ns),
+         (ENABT | ENABP) & TRN_HL, DELAY(3.5ns,5.5ns,9ns),
+         CCK1 & TRN_LH, DELAY(2.5ns,4.5ns,7.5ns),
+         CCK1 & TRN_HL, DELAY(2ns,4ns,6.5ns),
+         SYCLR & TRN_LH, DELAY(5.5ns,8ns,11ns),
+         SYCLR & TRN_HL, DELAY(7.5ns,9.5ns,12ns),
+         LOAD & TRN_LH, DELAY(3ns,5ns,8ns),
+         LOAD & TRN_HL, DELAY(4ns,6ns,8.5ns),
+         DELAY(9ns,12ns,16ns))}

U4CON CONSTRAINT(11) DPWR DGND
+     MRBAR PEBAR CP D0 D1 D2 D3 CEPBAR CETBAR SRBAR U/DB
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CP
+     MIN_HI=8ns
+     MIN_LO=6ns
+
+  WIDTH:
+     NODE=MRBAR
+     MIN_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(4)=D0 D1 D2 D3
+     SETUPTIME=4.5ns
+     HOLDTIME=2.5ns
+     WHEN={SRBAR!='0 | MRBAR!='0}
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(2)=CEPBAR CETBAR
+     SETUPTIME=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(2)=SRBAR PEBAR
+     SETUPTIME=9ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(1)=U/DB
+     SETUPTIME_HI=12.5ns
+     SETUPTIME_LO=17.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(1)=MRBAR
+     SETUPTIME_HI=7ns

.ENDS 74F568

*-----------------------------------------------------------74LS568------

* Four-Bit Up/Down Counters with Tri-State Outputs
* Motorola Schottky TTL Data, 1983, pages 4-321 to 4-325
* jat 8/14/96

.SUBCKT 74LS568 LOADBAR A B C D CEPBAR CETBAR U/DBAR CP YA YB YC YD RCOBAR
+ ACLRBAR SCLRBAR OEBAR CCO
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(18,6) DPWR DGND
+ A B C D SCLRBAR LOADBAR CEPBAR CETBAR CP U/DBAR Q0 Q1 Q2 Q3 Q0BAR Q1BAR
+ Q2BAR Q3BAR
+ D0 D1 D2 D3 RCOBARO CCOO
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  CE = {~(CETBAR | CEPBAR)}
+  X1 = {~(Q0BAR & CE)}
+  X2 = {~(Q2BAR & Q3BAR)}
+  X3 = {~(Q0 & CE)}
+  X4 = {~(Q1 & Q0 & CE)}
+  X5 = {~(Q1BAR & Q0BAR & CE)}
+  X6 = {~(Q0BAR & CE)}
+  X7 = {~(Q0 & CE)}
+  D0 = {SCLRBAR & ((LOADBAR & ~CE & Q0) | (A & ~LOADBAR) | (CE & LOADBAR & Q0BAR))}
+  D1 = {SCLRBAR & ((X1 & LOADBAR & Q1 & ~U/DBAR) | (Q1BAR & X2 & ~U/DBAR & LOADBAR & Q0BAR & CE)
+      | (B & ~LOADBAR) | (Q1 & X3 & LOADBAR & U/DBAR) |
+        (Q1BAR & LOADBAR & U/DBAR & CE & Q0 & Q3BAR))}
+  D2 = {SCLRBAR & ((X4 & LOADBAR & U/DBAR & Q2) | (U/DBAR & LOADBAR & Q2BAR & Q1 & Q0 & CE) |
+        (C & ~LOADBAR) | (Q2 & X5 & LOADBAR & ~U/DBAR) |
+        (Q2BAR & ~U/DBAR & CE & LOADBAR & Q1BAR & Q0BAR & Q3))}
+  D3 = {SCLRBAR & ((X6 & LOADBAR & ~U/DBAR & Q3) | (~U/DBAR & LOADBAR & Q3BAR & Q2BAR & Q1BAR & Q0BAR & CE) |
+        (D & ~LOADBAR) | (Q3 & X7 & LOADBAR & U/DBAR) |
+        (Q3BAR & U/DBAR & CE & LOADBAR & Q0 & Q1 & Q2))}
+  RCOBARO = {~((~U/DBAR & ~CETBAR & Q0BAR & Q1BAR & Q2BAR & Q3BAR) |
+               (U/DBAR & ~CETBAR & Q0 & Q3))}
+  CCOO = {~(CE & ~RCOBARO & ~CP)}

U2 DFF(4) DPWR DGND
+ $D_HI ACLRBAR CP
+ D0 D1 D2 D3
+ Q0 Q1 Q2 Q3
+ Q0BAR Q1BAR Q2BAR Q3BAR
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(6,1,5) DPWR DGND
+ Q0 Q1 Q2 Q3 RCOBARO CCOO
+ OEBAR
+ CP CETBAR U/DBAR CEPBAR ACLRBAR
+ YA YB YC YD RCOBAR CCO
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+  EDGE = {CHANGED_LH(CP,0)}
+  DOWNEDGE = {CHANGED_HL(CP,0)}
+  T = {CHANGED(CETBAR,0)}
+  P = {CHANGED(CEPBAR,0)}
+  UPDOWN = {CHANGED(U/DBAR,0)}
+  ACLEAR = {CHANGED(ACLRBAR,0)}
+ TRISTATE:
+ ENABLE LO = OEBAR
+  YA YB YC YD = {
+    CASE(
+      TRN_ZH, DELAY(-1,10NS,16NS),
+      TRN_ZL, DELAY(-1,17NS,24NS),
+      TRN_HZ, DELAY(-1,20NS,25NS),
+      TRN_LZ, DELAY(-1,17NS,27NS),
+      ACLEAR & (TRN_LH | TRN_HL), DELAY(-1,21NS,32NS),
+      EDGE & TRN_LH, DELAY(-1,15NS,24NS),
+      EDGE & TRN_HL, DELAY(-1,23NS,35NS),
+      DELAY(-1,24NS,36NS))}
+ PINDLY:
+  RCOBAR = {
+    CASE(
+      T & TRN_LH, DELAY(-1,14NS,24NS),
+      T & TRN_HL, DELAY(-1,14NS,24NS),
+      UPDOWN & TRN_LH, DELAY(-1,20NS,30NS),
+      UPDOWN & TRN_HL, DELAY(-1,15NS,24NS),
+      EDGE & TRN_LH, DELAY(-1,25NS,40NS),
+      EDGE & TRN_HL, DELAY(-1,26NS,40NS),
+      DELAY(-1,27NS,41NS))}
+  CCO = {
+    CASE(
+      (T | P) & TRN_LH, DELAY(-1,12NS,20NS),
+      (T | P) & TRN_HL, DELAY(-1,20NS,30NS),
+      DOWNEDGE & TRN_LH, DELAY(-1,17NS,27NS),
+      DOWNEDGE & TRN_HL, DELAY(-1,26NS,40NS),
+      DELAY(-1,27NS,41NS))}

U4 CONSTRAINT(10) DPWR DGND
+ CP A B C D SCLRBAR LOADBAR U/DBAR CETBAR CEPBAR
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CP
+  MAXFREQ = 25MEG
+ WIDTH:
+  NODE  = CP
+  MIN_LO = 30NS
+  MIN_HI = 30NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(5) = A B C D SCLRBAR
+  SETUPTIME = 20NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(1) = LOADBAR
+  SETUPTIME = 30NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(1) = U/DBAR
+  SETUPTIME = 50NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(2) = CETBAR CEPBAR
+  SETUPTIME = 32NS

.ENDS 74LS568

* ----------------------------------------------------------- 74ALS569A ------
*  Synchronous 4-Bit Up/Down Binary Counters With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-425 to 2-433
*  bss    5/3/94
*
.SUBCKT 74ALS569A GBAR U/DB CLK ENTBAR ENPBAR SCLRBAR LOADBAR ACLRBAR 
+     A B C D CCOBAR RCOBAR QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI ACLRBAR CLK
+     DA DB DC DD
+     QA_O QB_O QC_O QD_O
+     QABAR QBBAR QCBAR QDBAR
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(18,6) DPWR DGND
+     U/DB CLK ENTBAR ENPBAR SCLRBAR LOADBAR A B C D
+     QA_O QB_O QC_O QD_O QABAR QBBAR QCBAR QDBAR
+     DA DB DC DD RCOBAR_O CCOBAR_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     clkbar = {~CLK}
+     sclr = {~SCLRBAR}
+     ub/d = {~U/DB}
+     ent = {~ENTBAR}
+     count = {~(ENTBAR | ENPBAR)}
+     sync2 = {~(sclr | LOADBAR)}
+     sync1 = {~(ENTBAR | ENPBAR | sclr | sync2)}
+     sync3 = {(SCLRBAR & LOADBAR)}
+     fba = {~((QABAR & U/DB) | (QA_O & ub/d))}
+     fbb = {~((QBBAR & U/DB) | (QB_O & ub/d))}
+     fbc = {~((QCBAR & U/DB) | (QC_O & ub/d))}
+     fbd = {~((QDBAR & U/DB) | (QD_O & ub/d))}
+     and1a = {(A & sync2)}
+     and2a = {((~sync1) & sync3 & QA_O)}
+     and3a = {((~(QA_O & sync3)) & sync1)}
+     DA = {and1a | and2a | and3a}
+     and1b = {(B & sync2)}
+     and2b = {((~(fba & sync1)) & sync3 & QB_O)}
+     and3b = {(fba & sync1 & (~(QB_O & sync3)))}
+     DB = {and1b | and2b | and3b}
+     and1c = {(C & sync2)}
+     and2c = {((~(fba & fbb & sync1)) & sync3 & QC_O)}
+     and3c = {((~(QC_O & sync3)) & fbb & fba & sync1)}
+     DC = {and1c | and2c | and3c}
+     and1d = {(D & sync2)}
+     and2d = {((~(fba & fbb & fbc & sync1)) & sync3 & QD_O)}
+     and3d = {((~(QD_O & sync3)) & fbc & fbb & fba & sync1)}
+     DD = {and1d | and2d | and3d}
+     RCOBAR_O = {~((U/DB & fbd & fbc & fbb & fba & ent) | 
+              (ent & fba & fbb & fbc & fbd & ub/d))}
+     rco = {~RCOBAR_O}
+     CCOBAR_O = {~(clkbar & count & rco)}

U3DLY PINDLY(6,1,5) DPWR DGND
+     QA_O QB_O QC_O QD_O RCOBAR_O CCOBAR_O
+     GBAR
+     CLK U/DB ENTBAR ENPBAR ACLRBAR
+     QA QB QC QD RCOBAR CCOBAR
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CLK,0)}
+     CLOCK1 = {CHANGED(CLK,0)}
+     UPDOWN = {CHANGED(U/DB,0)}
+     ENABT = {CHANGED(ENTBAR,0)}
+     ENABP = {CHANGED(ENPBAR,0)}
+     CLEAR = {CHANGED_HL(ACLRBAR,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(9ns,-1,20ns),
+         CLOCK & TRN_LH, DELAY(4ns,-1,13ns),
+         CLOCK & TRN_HL, DELAY(7ns,-1,16ns),
+         TRN_ZH, DELAY(6ns,-1,18ns),
+         TRN_ZL, DELAY(6ns,-1,24ns),
+         TRN_HZ, DELAY(1ns,-1,10ns),
+         TRN_LZ, DELAY(3ns,-1,13ns),
+         DELAY(10ns,-1,25ns))}
+
+  PINDLY:
+     RCOBAR = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(12ns,-1,28ns),
+         CLOCK & TRN_HL, DELAY(10ns,-1,19ns),
+         UPDOWN & TRN_LH, DELAY(9ns,-1,23ns),
+         UPDOWN & TRN_HL, DELAY(9ns,-1,19ns),
+         ENABT & TRN_LH, DELAY(6ns,-1,15ns),
+         ENABT & TRN_HL, DELAY(4ns,-1,13ns),
+         DELAY(13ns,-1,29ns))}
+
+     CCOBAR = {
+        CASE(
+         ENABT & TRN_LH, DELAY(5ns,-1,13ns),
+         ENABT & TRN_HL, DELAY(9ns,-1,23ns),
+         CLOCK1 & TRN_LH, DELAY(5ns,-1,13ns),
+         CLOCK1 & TRN_HL, DELAY(6ns,-1,25ns),
+         ENABP & TRN_LH, DELAY(4ns,-1,12ns),
+         ENABP & TRN_HL, DELAY(5ns,-1,14ns),
+         DELAY(10ns,-1,26ns))}

U4CON CONSTRAINT(11) DPWR DGND
+     ACLRBAR LOADBAR CLK A B C D ENPBAR ENTBAR SCLRBAR U/DB
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=30MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=16.5ns
+     MIN_LO=16.5ns
+
+  WIDTH:
+     NODE=ACLRBAR
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=LOADBAR
+     MIN_LO=15ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(4)=A B C D
+     SETUPTIME=20ns
+     WHEN={SCLRBAR!='0 | ACLRBAR!='0}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=ENPBAR ENTBAR
+     SETUPTIME_HI=30ns
+     SETUPTIME_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=SCLRBAR LOADBAR
+     SETUPTIME_LO=15ns
+     SETUPTIME_HI=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=U/DB
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=ACLRBAR
+     SETUPTIME_HI=10ns

.ENDS 74ALS569A
*
*
* ----------------------------------------------------------- 74F569 ------
*  4-Bit Bidirectional Binary Counters With 3-State Outputs
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 562 to 572
*  bss    5/3/94
*
.SUBCKT 74F569 OEBAR U/DB CP CETBAR CEPBAR SRBAR PEBAR MRBAR 
+     D0 D1 D2 D3 CCBAR TCBAR Q0 Q1 Q2 Q3
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI MRBAR CP
+     DA DB DC DD
+     Q0_O Q1_O Q2_O Q3_O
+     Q0BAR Q1BAR Q2BAR Q3BAR
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(18,6) DPWR DGND
+     U/DB CP CETBAR CEPBAR SRBAR PEBAR D0 D1 D2 D3
+     Q0_O Q1_O Q2_O Q3_O Q0BAR Q1BAR Q2BAR Q3BAR
+     DA DB DC DD TCBAR_O CCBAR_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     clkbar = {~CP}
+     ub/d = {~U/DB}
+     ent = {~CETBAR}
+     cnt = {~(SRBAR & PEBAR)}
+     cntbar = {~cnt}
+     count = {~(CETBAR | CEPBAR | cnt)}
+     nand0 = {~(D0 & SRBAR)}
+     nand1 = {~(D1 & SRBAR)}
+     nand2 = {~(D2 & SRBAR)}
+     nand3 = {~(D3 & SRBAR)}
+     fb1 = {(U/DB | ub/d)}
+     fb2 = {((Q0_O & U/DB) | (Q0BAR & ub/d))}
+     fb3 = {((Q0_O & Q1_O & U/DB) | (Q0BAR & Q1BAR & ub/d))}
+     fb4 = {((Q0_O & Q1_O & Q2_O & U/DB) | (Q0BAR & Q1BAR & Q2BAR & ub/d))}
+     TCBAR_O = {~((Q3_O & Q2_O & Q1_O & U/DB & Q0_O & ent) |
+             (ent & Q0BAR & Q1BAR & Q2BAR & Q3BAR & ub/d))}
+     tc = {~TCBAR_O}
+     CCBAR_O = {~(tc & clkbar & count)}
+     xor0 = {(~(fb1 & count)) ^ Q0_O}
+     xor1 = {(~(fb2 & count)) ^ Q1_O}
+     xor2 = {(~(fb3 & count)) ^ Q2_O}
+     xor3 = {(~(fb4 & count)) ^ Q3_O}
+     DA = {~((xor0 & cntbar) | (nand0 & cnt))}
+     DB = {~((xor1 & cntbar) | (nand1 & cnt))}
+     DC = {~((xor2 & cntbar) | (nand2 & cnt))}
+     DD = {~((xor3 & cntbar) | (nand3 & cnt))}

U3DLY PINDLY(6,1,7) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O TCBAR_O CCBAR_O
+     OEBAR
+     CP U/DB CETBAR CEPBAR MRBAR SRBAR PEBAR
+     Q0 Q1 Q2 Q3 TCBAR CCBAR
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CP,0)}
+     CCK1 = {CHANGED(CP,0)}
+     UPDOWN = {CHANGED(U/DB,0)}
+     ENABT = {CHANGED(CETBAR,0)}
+     ENABP = {CHANGED(CEPBAR,0)}
+     CLEAR = {CHANGED_HL(MRBAR,0)}
+     SYCLR = {CHANGED(SRBAR,0)}
+     LOAD = {CHANGED(PEBAR,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     Q0 Q1 Q2 Q3 = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(6ns,8ns,11ns),
+         CLOCK & TRN_LH, DELAY(3ns,6ns,9.5ns),
+         CLOCK & TRN_HL, DELAY(4ns,7.5ns,11ns),
+         TRN_ZH, DELAY(2ns,4ns,7ns),
+         TRN_ZL, DELAY(4.5ns,6.5ns,9.5ns),
+         TRN_HZ, DELAY(1.5ns,3.5ns,6.5ns),
+         TRN_LZ, DELAY(1.5ns,3.5ns,6ns),
+         DELAY(7ns,9ns,12ns))}
+
+  PINDLY:
+     TCBAR = {
+       CASE(
+         CLEAR, DELAY(8ns,11ns,15ns),
+         CLOCK & TRN_LH, DELAY(5.5ns,10ns,15ns),
+         CLOCK & TRN_HL, DELAY(4ns,7.5ns,11ns),
+         UPDOWN & TRN_LH, DELAY(4ns,7.5ns,11ns),
+         UPDOWN & TRN_HL, DELAY(4ns,6.5ns,11ns),
+         ENABT & TRN_LH, DELAY(1.5ns,3ns,6ns),
+         ENABT & TRN_HL, DELAY(2.5ns,5ns,8ns),
+         DELAY(9ns,12ns,16ns))}
+
+     CCBAR = {
+        CASE(
+         CLEAR, DELAY(8ns,11ns,15ns),
+         UPDOWN & TRN_LH, DELAY(4.5ns,9ns,12ns),
+         UPDOWN & TRN_HL, DELAY(5ns,11ns,16ns),
+         (ENABT | ENABP) & TRN_LH, DELAY(2ns,4ns,7ns),
+         (ENABT | ENABP) & TRN_HL, DELAY(3.5ns,5.5ns,9ns),
+         CCK1 & TRN_LH, DELAY(2.5ns,4.5ns,7.5ns),
+         CCK1 & TRN_HL, DELAY(2ns,4ns,6.5ns),
+         SYCLR & TRN_LH, DELAY(5.5ns,8ns,11ns),
+         SYCLR & TRN_HL, DELAY(7.5ns,9.5ns,12ns),
+         LOAD & TRN_LH, DELAY(3ns,5ns,8ns),
+         LOAD & TRN_HL, DELAY(4ns,6ns,8.5ns),
+         DELAY(9ns,12ns,16ns))}

U4CON CONSTRAINT(11) DPWR DGND
+     MRBAR PEBAR CP D0 D1 D2 D3 CEPBAR CETBAR SRBAR U/DB
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CP
+     MIN_HI=8ns
+     MIN_LO=6ns
+
+  WIDTH:
+     NODE=MRBAR
+     MIN_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(4)=D0 D1 D2 D3
+     SETUPTIME=4.5ns
+     HOLDTIME=2.5ns
+     WHEN={SRBAR!='0 | MRBAR!='0}
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(2)=CEPBAR CETBAR
+     SETUPTIME=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(2)=SRBAR PEBAR
+     SETUPTIME=9ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(1)=U/DB
+     SETUPTIME_HI=12.5ns
+     SETUPTIME_LO=8ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(1)=MRBAR
+     SETUPTIME_HI=7ns

.ENDS 74F569

*-----------------------------------------------------------74LS569------

* Four-Bit Up/Down Counter with Tri-State Outputs
* Motorola Schottky TTL Data, 1983, pages 4-321 to 4-325
* jat 8/14/96

.SUBCKT 74LS569 LOADBAR A B C D CEPBAR CETBAR U/DBAR CP YA YB YC YD RCOBAR
+ ACLRBAR SCLRBAR OEBAR CCO
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(18,6) DPWR DGND
+ A B C D SCLRBAR LOADBAR CEPBAR CETBAR CP U/DBAR Q0 Q1 Q2 Q3 Q0BAR Q1BAR
+ Q2BAR Q3BAR
+ D0 D1 D2 D3 RCOBARO CCOO
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  CE = {~(CETBAR | CEPBAR)}
+  X1 = {~(Q0BAR & CE)}
+  X3 = {~(Q0 & CE)}
+  X4 = {~(Q1 & Q0 & CE)}
+  X5 = {~(Q1BAR & Q0BAR & CE)}
+  X6 = {~(Q2BAR & Q1BAR & Q0BAR & CE)}
+  X7 = {~(Q2 & Q1 & Q0 & CE)}
+  D0 = {SCLRBAR & ((LOADBAR & ~CE & Q0) | (A & ~LOADBAR) | (CE & LOADBAR & Q0BAR))}
+  D1 = {SCLRBAR & ((X1 & LOADBAR & Q1 & ~U/DBAR) | (Q1BAR & ~U/DBAR & LOADBAR & Q0BAR & CE)
+      | (B & ~LOADBAR) | (Q1 & X3 & LOADBAR & U/DBAR) |
+        (Q1BAR & LOADBAR & U/DBAR & CE & Q0))}
+  D2 = {SCLRBAR & ((X4 & LOADBAR & U/DBAR & Q2) | (U/DBAR & LOADBAR & Q0 & Q1 & Q2BAR & CE) |
+        (C & ~LOADBAR) | (Q2 & X5 & LOADBAR & ~U/DBAR) |
+        (Q2BAR & ~U/DBAR & CE & LOADBAR & Q1BAR & Q0BAR))}
+  D3 = {SCLRBAR & ((X6 & LOADBAR & ~U/DBAR & Q3) | (~U/DBAR & LOADBAR & Q3BAR & Q2BAR & Q1BAR & Q0BAR & CE) |
+        (D & ~LOADBAR) | (Q3 & X7 & LOADBAR & U/DBAR) |
+        (Q3BAR & U/DBAR & CE & LOADBAR & Q0 & Q1 & Q2))}
+  RCOBARO = {~((~U/DBAR & ~CETBAR & Q0BAR & Q1BAR & Q2BAR & Q3BAR) |
+               (U/DBAR & ~CETBAR & Q0 & Q1 & Q2 & Q3))}
+  CCOO = {~(CE & ~RCOBARO & ~CP)}

U2 DFF(4) DPWR DGND
+ $D_HI ACLRBAR CP
+ D0 D1 D2 D3
+ Q0 Q1 Q2 Q3
+ Q0BAR Q1BAR Q2BAR Q3BAR
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(6,1,5) DPWR DGND
+ Q0 Q1 Q2 Q3 RCOBARO CCOO
+ OEBAR
+ CP CETBAR U/DBAR CEPBAR ACLRBAR
+ YA YB YC YD RCOBAR CCO
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+  EDGE = {CHANGED_LH(CP,0)}
+  DOWNEDGE = {CHANGED_HL(CP,0)}
+  T = {CHANGED(CETBAR,0)}
+  P = {CHANGED(CEPBAR,0)}
+  UPDOWN = {CHANGED(U/DBAR,0)}
+  ACLEAR = {CHANGED(ACLRBAR,0)}
+ TRISTATE:
+ ENABLE LO = OEBAR
+  YA YB YC YD = {
+    CASE(
+      TRN_ZH, DELAY(-1,10NS,16NS),
+      TRN_ZL, DELAY(-1,17NS,24NS),
+      TRN_HZ, DELAY(-1,20NS,25NS),
+      TRN_LZ, DELAY(-1,17NS,27NS),
+      ACLEAR & (TRN_LH | TRN_HL), DELAY(-1,21NS,32NS),
+      EDGE & TRN_LH, DELAY(-1,15NS,24NS),
+      EDGE & TRN_HL, DELAY(-1,23NS,35NS),
+      DELAY(-1,24NS,36NS))}
+ PINDLY:
+  RCOBAR = {
+    CASE(
+      T & TRN_LH, DELAY(-1,14NS,24NS),
+      T & TRN_HL, DELAY(-1,14NS,24NS),
+      UPDOWN & TRN_LH, DELAY(-1,20NS,30NS),
+      UPDOWN & TRN_HL, DELAY(-1,15NS,24NS),
+      EDGE & TRN_LH, DELAY(-1,25NS,40NS),
+      EDGE & TRN_HL, DELAY(-1,26NS,40NS),
+      DELAY(-1,27NS,41NS))}
+  CCO = {
+    CASE(
+      (T | P) & TRN_LH, DELAY(-1,12NS,20NS),
+      (T | P) & TRN_HL, DELAY(-1,20NS,30NS),
+      DOWNEDGE & TRN_LH, DELAY(-1,17NS,27NS),
+      DOWNEDGE & TRN_HL, DELAY(-1,26NS,40NS),
+      DELAY(-1,27NS,41NS))}

U4 CONSTRAINT(10) DPWR DGND
+ CP A B C D SCLRBAR LOADBAR U/DBAR CETBAR CEPBAR
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CP
+  MAXFREQ = 25MEG
+ WIDTH:
+  NODE  = CP
+  MIN_LO = 30NS
+  MIN_HI = 30NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(5) = A B C D SCLRBAR
+  SETUPTIME = 20NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(1) = LOADBAR
+  SETUPTIME = 30NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(1) = U/DBAR
+  SETUPTIME = 50NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(2) = CETBAR CEPBAR
+  SETUPTIME = 32NS

.ENDS 74LS569

*-----------------------------------------------------------74LS569A------

* Four-Bit Up/Down Counter with Tri-State Outputs
* Motorola FAST and LS TTL Data, 1992, pages 5-359 to 5-363
* jat 8/14/96

.SUBCKT 74LS569A LOADBAR A B C D CEPBAR CETBAR U/DBAR CP YA YB YC YD RCOBAR
+ ACLRBAR SCLRBAR OEBAR CCO
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(18,6) DPWR DGND
+ A B C D SCLRBAR LOADBAR CEPBAR CETBAR CP U/DBAR Q0 Q1 Q2 Q3 Q0BAR Q1BAR
+ Q2BAR Q3BAR
+ D0 D1 D2 D3 RCOBARO CCOO
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  CE = {~(CETBAR | CEPBAR)}
+  X1 = {~(Q0BAR & CE)}
+  X3 = {~(Q0 & CE)}
+  X4 = {~(Q1 & Q0 & CE)}
+  X5 = {~(Q1BAR & Q0BAR & CE)}
+  X6 = {~(Q2BAR & Q1BAR & Q0BAR & CE)}
+  X7 = {~(Q2 & Q1 & Q0 & CE)}
+  D0 = {SCLRBAR & ((LOADBAR & ~CE & Q0) | (A & ~LOADBAR) | (CE & LOADBAR & Q0BAR))}
+  D1 = {SCLRBAR & ((X1 & LOADBAR & Q1 & ~U/DBAR) | (Q1BAR & ~U/DBAR & LOADBAR & Q0BAR & CE)
+      | (B & ~LOADBAR) | (Q1 & X3 & LOADBAR & U/DBAR) |
+        (Q1BAR & LOADBAR & U/DBAR & CE & Q0))}
+  D2 = {SCLRBAR & ((X4 & LOADBAR & U/DBAR & Q2) | (U/DBAR & LOADBAR & Q0 & Q1 & Q2BAR & CE) |
+        (C & ~LOADBAR) | (Q2 & X5 & LOADBAR & ~U/DBAR) |
+        (Q2BAR & ~U/DBAR & CE & LOADBAR & Q1BAR & Q0BAR))}
+  D3 = {SCLRBAR & ((X6 & LOADBAR & ~U/DBAR & Q3) | (~U/DBAR & LOADBAR & Q3BAR & Q2BAR & Q1BAR & Q0BAR & CE) |
+        (D & ~LOADBAR) | (Q3 & X7 & LOADBAR & U/DBAR) |
+        (Q3BAR & U/DBAR & CE & LOADBAR & Q0 & Q1 & Q2))}
+  RCOBARO = {~((~U/DBAR & ~CETBAR & Q0BAR & Q1BAR & Q2BAR & Q3BAR) |
+               (U/DBAR & ~CETBAR & Q0 & Q1 & Q2 & Q3))}
+  CCOO = {~(CE & ~RCOBARO & ~CP)}

U2 DFF(4) DPWR DGND
+ $D_HI ACLRBAR CP
+ D0 D1 D2 D3
+ Q0 Q1 Q2 Q3
+ Q0BAR Q1BAR Q2BAR Q3BAR
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(6,1,5) DPWR DGND
+ Q0 Q1 Q2 Q3 RCOBARO CCOO
+ OEBAR
+ CP CETBAR U/DBAR CEPBAR ACLRBAR
+ YA YB YC YD RCOBAR CCO
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+  EDGE = {CHANGED_LH(CP,0)}
+  DOWNEDGE = {CHANGED_HL(CP,0)}
+  T = {CHANGED(CETBAR,0)}
+  P = {CHANGED(CEPBAR,0)}
+  UPDOWN = {CHANGED(U/DBAR,0)}
+  ACLEAR = {CHANGED(ACLRBAR,0)}
+ TRISTATE:
+ ENABLE LO = OEBAR
+  YA YB YC YD = {
+    CASE(
+      TRN_ZH, DELAY(-1,-1,15NS),
+      TRN_ZL, DELAY(-1,-1,20NS),
+      TRN_HZ, DELAY(-1,-1,20NS),
+      TRN_LZ, DELAY(-1,-1,27NS),
+      ACLEAR & TRN_LH, DELAY(-1,-1,22NS),
+      ACLEAR & TRN_HL, DELAY(-1,-1,32NS),
+      EDGE & TRN_LH, DELAY(-1,-1,15NS),
+      EDGE & TRN_HL, DELAY(-1,-1,20NS),
+      DELAY(-1,-1,33NS))}
+ PINDLY:
+  RCOBAR = {
+    CASE(
+      T & TRN_LH, DELAY(-1,-1,14NS),
+      T & TRN_HL, DELAY(-1,-1,15NS),
+      UPDOWN & TRN_LH, DELAY(-1,-1,20NS),
+      UPDOWN & TRN_HL, DELAY(-1,-1,24NS),
+      EDGE & TRN_LH, DELAY(-1,-1,20NS),
+      EDGE & TRN_HL, DELAY(-1,-1,25NS),
+      DELAY(-1,-1,26NS))}
+  CCO = {
+    CASE(
+      T & TRN_LH, DELAY(-1,-1,16NS),
+      T & TRN_HL, DELAY(-1,-1,28NS),
+      P & TRN_LH, DELAY(-1,-1,16NS),
+      P & TRN_HL, DELAY(-1,-1,26NS),
+      DOWNEDGE & TRN_LH, DELAY(-1,-1,15NS),
+      DOWNEDGE & TRN_HL, DELAY(-1,-1,17NS),
+      DELAY(-1,-1,29NS))}

U4 CONSTRAINT(11) DPWR DGND
+ CP A B C D SCLRBAR LOADBAR U/DBAR CETBAR CEPBAR ACLRBAR
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CP
+  MAXFREQ = 35MEG
+ WIDTH:
+  NODE  = CP
+  MIN_LO = 20NS
+  MIN_HI = 20NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(7) = A B C D SCLRBAR CETBAR CEPBAR
+  SETUPTIME = 20NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(1) = LOADBAR
+  SETUPTIME = 25NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(1) = U/DBAR
+  SETUPTIME = 30NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(1) = ACLRBAR
+  SETUPTIME_HI = 15NS

.ENDS 74LS569A

* ----------------------------------------------------------- 74AC573 ------
*  Octal D-Type Latch With 3-State Outputs
*
*  The FACT Data Book, 1993, Motorola Pages 5-323 to 5-329
*  bss    5/11/94
*
.SUBCKT 74AC573 OEBAR LE D0 D1 D2 D3 D4 D5 D6 D7 
+     O0 O1 O2 O3 O4 O5 O6 O7 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OEBAR OE
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI LE
+     D0 D1 D2 D3 D4 D5 D6 D7
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_AC573 IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O
+     OE
+     O0 O1 O2 O3 O4 O5 O6 O7
+     DLY_AC573Z IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AC573 ugff (tpgqlhMN=2.5ns tpgqlhMX=9.5ns tpgqhlMN=2.5ns tpgqhlMX=8.5ns
+                                  tpdqlhMN=2.5ns tpdqlhMX=10ns tpdqhlMN=2.5ns tpdqhlMX=9.5ns
+                                  twghMN=5ns tsudgMN=3.5ns thdgMN=2ns)

.model DLY_AC573Z utgate (tpzhMN=2.5ns tpzhMX=9ns tpzlMN=2.5ns tpzlMX=8.5ns
+                                        tphzMN=2.5ns tphzMX=11ns tplzMN=2.5ns tplzMX=8ns)

.ENDS 74AC573
*
*
* ----------------------------------------------------------- 74ACT573 ------
*  Octal Latch With Tri-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-244 to 4-248
*  bss    5/4/94
*
.SUBCKT 74ACT573 OEBAR LE D0 D1 D2 D3 D4 D5 D6 D7 
+     O0 O1 O2 O3 O4 O5 O6 O7 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OEBAR OE
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI LE
+     D0 D1 D2 D3 D4 D5 D6 D7
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_ACT573 IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O
+     OE
+     O0 O1 O2 O3 O4 O5 O6 O7
+     DLY_ACT573Z IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ACT573 ugff (tpgqlhMN=3ns tpgqlhTY=6ns tpgqlhMX=10.5ns
+                                  tpgqhlMN=2.5ns tpgqhlTY=5.5ns tpgqhlMX=9.5ns
+                                  tpdqlhMN=2.5ns tpdqlhTY=6ns tpdqlhMX=10.5ns
+                                  tpdqhlMN=2.5ns tpdqhlTY=6ns tpdqhlMX=10.5ns
+                                  twghMN=4ns tsudgMN=3.5ns)

.model DLY_ACT573Z utgate (tpzhMN=2ns tpzhTY=5.5ns tpzhMX=10ns
+                                        tpzlMN=1.5ns tpzlTY=5.5ns tpzlMX=9.5ns
+                                        tphzMN=2.5ns tphzTY=6.5ns tphzMX=11ns
+                                        tplzMN=1.5ns tplzTY=5ns tplzMX=8.5ns)

.ENDS 74ACT573

* ----------------------------------------------------------- 74ALS573B ------
*  Octal D-Type Transparent Latches With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-435 to 2-440
*  bss    5/4/94
*
.SUBCKT 74ALS573B OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_ALS573 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     DLY_ALS573Z IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS573 ugff (tpgqlhMN=8ns tpgqlhMX=20ns tpgqhlMN=8ns tpgqhlMX=19ns
+                                  tpdqlhMN=2ns tpdqlhMX=14ns tpdqhlMN=2ns tpdqhlMX=14ns
+                                  twghMN=10ns tsudgMN=10ns thdgMN=7ns)

.model DLY_ALS573Z utgate (tpzhMN=4ns tpzhMX=18ns tpzlMN=4ns tpzlMX=18ns
+                                        tphzMN=2ns tphzMX=10ns tplzMN=3ns tplzMX=15ns)

.ENDS 74ALS573B

*-------------------------------------------------------------74ALS573C-------

* Extended Temperature Octal D-Type Transparent Latch with Tri-State Outputs
* National ALS/AS Logic Databook, 1990, pages 9-150 to 9-153
* jat 8/21/96

.SUBCKT 74ALS573C
+ 1D 2D 3D 4D 5D 6D 7D 8D ENABG OUTBAR 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(8) DPWR DGND
+ $D_HI $D_HI ENABG
+ 1D 2D 3D 4D 5D 6D 7D 8D 
+ Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,9) DPWR DGND
+ Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+ OUTBAR
+ ENABG 1D 2D 3D 4D 5D 6D 7D 8D 
+ 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+ IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   GATE = {CHANGED(ENABG,0)}
+   DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) | CHANGED(4D,0) |
+           CHANGED(5D,0) | CHANGED(6D,0) | CHANGED(7D,0) | CHANGED(8D,0)}
+ TRISTATE:
+ ENABLE LO = OUTBAR
+   1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q = {
+     CASE(
+      TRN_ZH, DELAY(3NS,-1,18NS),
+      TRN_ZL, DELAY(4NS,-1,18NS),
+      TRN_HZ, DELAY(1NS,-1,10NS),
+      TRN_LZ, DELAY(1NS,-1,15NS),
+      GATE & TRN_LH, DELAY(6NS,-1,20NS),
+      GATE & TRN_HL, DELAY(6NS,-1,19NS),
+      DATA & TRN_LH, DELAY(2NS,-1,14NS),
+      DATA & TRN_HL, DELAY(2NS,-1,14NS),
+      DELAY(7NS,-1,21NS))}

U3 CONSTRAINT(9) DPWR DGND
+ ENABG 1D 2D 3D 4D 5D 6D 7D 8D
+ IO_ALS00 IO_LEVEL={IO_LEVEL}
+ WIDTH:
+  NODE = ENABG
+  MIN_HI = 10NS
+ SETUP_HOLD:
+  CLOCK HL = ENABG
+  DATA(8) = 1D 2D 3D 4D 5D 6D 7D 8D
+  SETUPTIME = 10NS
+  HOLDTIME = 7NS

.ENDS 74ALS573C

* ----------------------------------------------------------- 74AS573 ------
*  Octal D-Type Transparent Latches With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-435 to 2-440
*  bss    5/4/94
*
.SUBCKT 74AS573 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_AS573 IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     DLY_AS573Z IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AS573 ugff (tpgqlhMN=6ns tpgqlhMX=11.5ns tpgqhlMN=4ns tpgqhlMX=7.5ns
+                                  tpdqlhMN=3ns tpdqlhMX=6ns tpdqhlMN=3ns tpdqhlMX=6ns
+                                  twghMN=4.5ns tsudgMN=2ns thdgMN=3ns)

.model DLY_AS573Z utgate (tpzhMN=2ns tpzhMX=6.5ns tpzlMN=4ns tpzlMX=9.5ns
+                                        tphzMN=2ns tphzMX=6.5ns tplzMN=2ns tplzMX=7ns)

.ENDS 74AS573
*
*
* ----------------------------------------------------------- 74F573 ------
*  Octal D-Type Transparent Latches With 3-State Outputs
*
*  The F Logic Data Book, 1994, TI Pages 2-267 to 2-269
*  bss    5/4/94
*
.SUBCKT 74F573 OEBAR LE 1D 2D 3D 4D 5D 6D 7D 8D 
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OEBAR OE
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI LE
+     1D 2D 3D 4D 5D 6D 7D 8D
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_F573 IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OE
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     DLY_F573Z IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_F573 ugff (tpgqlhMN=4.2ns tpgqlhTY=8.6ns tpgqlhMX=11.5ns
+                                  tpgqhlMN=2.2ns tpgqhlTY=4.8ns tpgqhlMX=7ns
+                                  tpdqlhMN=2ns tpdqlhTY=4.9ns tpdqlhMX=7ns
+                                  tpdqhlMN=1.2ns tpdqhlTY=3.3ns tpdqhlMX=5ns
+                                  twghMN=6ns tsudgMN=2ns thdgMN=3ns)

.model DLY_F573Z utgate (tpzhMN=1.2ns tpzhTY=4.6ns tpzhMX=11ns
+                                        tpzlMN=1.2ns tpzlTY=5.2ns tpzlMX=7.5ns
+                                        tphzMN=1.2ns tphzTY=4.1ns tphzMX=6.5ns
+                                        tplzMN=1.2ns tplzTY=3.4ns tplzMX=6ns)

.ENDS 74F573
*
*
* ----------------------------------------------------------- 74HC573 ------
*  Octal D-Type Transparent Latches With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-501 to 2-505
*  bss    5/4/94
*
.SUBCKT 74HC573 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_HC573 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     DLY_HC573Z IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC573 ugff (tpgqlhTY=27ns tpgqlhMX=35ns tpgqhlTY=27ns tpgqhlMX=35ns
+                                  tpdqlhTY=26ns tpdqlhMX=35ns tpdqhlTY=26ns tpdqhlMX=35ns
+                                  twghMN=20ns tsudgMN=13ns thdgMN=5ns)

.model DLY_HC573Z utgate (tpzhTY=24ns tpzhMX=30ns tpzlTY=24ns tpzlMX=30ns
+                                        tphzTY=23ns tphzMX=30ns tplzTY=23ns tplzMX=30ns)

.ENDS 74HC573

*-----------------------------------------------------------------74HC573A---

* Octal Tri-State Non-Inverting Transparent Latch
* Motorola High-Speed CMOS Data, 1993, pages 5-368 to 5-371
* jat 9/11/96

.SUBCKT 74HC573A
+ LATCH OUTENAB D0 D1 D2 D3 D4 D5 D6 D7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(8) DPWR DGND
+ $D_HI $D_HI LATCH
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,9) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ OUTENAB
+ LATCH D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   OPEN = {CHANGED_LH(LATCH,0)}
+   DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+           CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+ TRISTATE:
+ ENABLE LO = OUTENAB
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+      TRN_Z$, DELAY(-1,-1,30NS),
+      TRN_$Z, DELAY(-1,-1,30NS),
+      OPEN & (TRN_LH | TRN_HL), DELAY(-1,-1,32NS),
+      DATA & (TRN_LH | TRN_HL), DELAY(-1,-1,30NS),
+      DELAY(-1,-1,33NS))}

U3 CONSTRAINT(9) DPWR DGND
+ LATCH D0 D1 D2 D3 D4 D5 D6 D7
+ IO_HC IO_LEVEL={IO_LEVEL}
+ WIDTH:
+  NODE = LATCH
+  MIN_HI = 15NS
+ SETUP_HOLD:
+  CLOCK HL = LATCH
+  DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+  SETUPTIME = 10NS
+  HOLDTIME = 5NS

.ENDS 74HC573A

* ----------------------------------------------------------- 74HCT573 ------
*  Octal D-Type Transparent Latches With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-507 to 2-510
*  bss    5/4/94
*
.SUBCKT 74HCT573 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_HCT573 IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     DLY_HCT573Z IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HCT573 ugff (tpgqlhTY=28ns tpgqlhMX=35ns tpgqhlTY=28ns tpgqhlMX=35ns
+                                  tpdqlhTY=25ns tpdqlhMX=35ns tpdqhlTY=25ns tpdqhlMX=35ns
+                                  twghMN=25ns tsudgMN=13ns thdgMN=5ns)

.model DLY_HCT573Z utgate (tpzhTY=26ns tpzhMX=35ns tpzlTY=26ns tpzlMX=35ns
+                                        tphzTY=23ns tphzMX=35ns tplzTY=23ns tplzMX=35ns)

.ENDS 74HCT573

*-----------------------------------------------------------------74HCT573A---

* Octal Tri-State Non-Inverting Transparent Latch
* Motorola High-Speed CMOS Data, 1993, pages 5-372 to 5-375
* jat 9/11/96

.SUBCKT 74HCT573A
+ LATCH OUTENAB D0 D1 D2 D3 D4 D5 D6 D7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(8) DPWR DGND
+ $D_HI $D_HI LATCH
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,9) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ OUTENAB
+ LATCH D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   OPEN = {CHANGED_LH(LATCH,0)}
+   DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+           CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+ TRISTATE:
+ ENABLE LO = OUTENAB
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+      TRN_Z$, DELAY(-1,-1,28NS),
+      TRN_$Z, DELAY(-1,-1,28NS),
+      OPEN & (TRN_LH | TRN_HL), DELAY(-1,-1,30NS),
+      DATA & (TRN_LH | TRN_HL), DELAY(-1,-1,30NS),
+      DELAY(-1,-1,31NS))}

U3 CONSTRAINT(9) DPWR DGND
+ LATCH D0 D1 D2 D3 D4 D5 D6 D7
+ IO_HCT IO_LEVEL={IO_LEVEL}
+ WIDTH:
+  NODE = LATCH
+  MIN_HI = 15NS
+ SETUP_HOLD:
+  CLOCK HL = LATCH
+  DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+  SETUPTIME = 10NS
+  HOLDTIME = 5NS

.ENDS 74HCT573A

*-------------------------------------------------------------74LS573-------

* Octal D-Type Latch with Tri-State Outputs
* National TTL/LS/S Logic Databook, 1989, pages 2-492 to 2-494
* jat 8/13/96

.SUBCKT 74LS573 D0 D1 D2 D3 D4 D5 D6 D7 O0 O1 O2 O3 O4 O5 O6 O7 LE OEBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(8) DPWR DGND
+ $D_HI $D_HI LE
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,9) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OEBAR
+ LE D0 D1 D2 D3 D4 D5 D6 D7
+ O0 O1 O2 O3 O4 O5 O6 O7
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   LATCH = {CHANGED_LH(LE,0)}
+   DATA = {CHANGED(D0,0) | CHANGED(D2,0) | CHANGED(D3,0) | CHANGED(D1,0) |
+           CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+ TRISTATE: 
+   ENABLE LO = OEBAR
+   O0 O1 O2 O3 O4 O5 O6 O7 = {
+    CASE(
+      TRN_ZH, DELAY(-1,-1,20NS),
+      TRN_ZL, DELAY(-1,-1,25NS),
+      TRN_HZ, DELAY(-1,-1,20NS),
+      TRN_LZ, DELAY(-1,-1,25NS),
+      LATCH & TRN_LH, DELAY(-1,-1,36NS),
+      LATCH & TRN_HL, DELAY(-1,-1,25NS),
+      DATA & TRN_LH, DELAY(-1,-1,27NS),
+      DATA & TRN_HL, DELAY(-1,-1,18NS),
+      DELAY(-1,-1,37NS))}

U3 CONSTRAINT(9) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 LE
+ IO_LS IO_LEVEL={IO_LEVEL}
+ WIDTH:
+    NODE = LE
+    MIN_HI = 15NS
+ SETUP_HOLD:
+    CLOCK HL = LE
+    DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+    SETUPTIME_HI = 3NS
+    SETUPTIME_LO = 7NS
+    HOLDTIME_HI = 3NS
+    HOLDTIME_LO = 7NS

.ENDS 74LS573

* ----------------------------------------------------------- 74AC574 ------
*  Octal D-Type Flip-Flop With Tri-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-249 to 4-254
*  bss    5/4/94
*
.SUBCKT 74AC574 OEBAR CP D0 D1 D2 D3 D4 D5 D6 D7 
+     O0 O1 O2 O3 O4 O5 O6 O7 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OEBAR OE
+     D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CP
+     D0 D1 D2 D3 D4 D5 D6 D7
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_AC574 IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O
+     OE
+     O0 O1 O2 O3 O4 O5 O6 O7
+     DLY_AC574Z IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AC574 ueff (tpclkqlhMN=2ns tpclkqlhTY=6ns tpclkqlhMX=9.5ns
+                                  tpclkqhlMN=2ns tpclkqhlTY=5.5ns tpclkqhlMX=8.5ns
+                                  twclkhMN=5ns twclklMN=5ns tsudclkMN=2ns thdclkMN=1.5ns)

.model DLY_AC574Z utgate (tpzhMN=2ns tpzhTY=5ns tpzhMX=8.5ns
+                                        tpzlMN=1.5ns tpzlTY=5ns tpzlMX=8ns
+                                        tphzMN=2ns tphzTY=6ns tphzMX=9.5ns
+                                        tplzMN=1.5ns tplzTY=4.5ns tplzMX=7.5ns)

.ENDS 74AC574
*
*
* ----------------------------------------------------------- 74ACT574 ------
*  Octal D-Type Flip-Flop With Tri-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-249 to 4-254
*  bss    5/4/94
*
.SUBCKT 74ACT574 OEBAR CP D0 D1 D2 D3 D4 D5 D6 D7 
+     O0 O1 O2 O3 O4 O5 O6 O7 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OEBAR OE
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CP
+     D0 D1 D2 D3 D4 D5 D6 D7
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_ACT574 IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O
+     OE
+     O0 O1 O2 O3 O4 O5 O6 O7
+     DLY_ACT574Z IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ACT574 ueff (tpclkqlhMN=2.5ns tpclkqlhTY=7ns tpclkqlhMX=11ns
+                                  tpclkqhlMN=2ns tpclkqhlTY=6.5ns tpclkqhlMX=10ns
+                                  twclkhMN=4ns twclklMN=4ns tsudclkMN=2.5ns thdclkMN=1ns)

.model DLY_ACT574Z utgate (tpzhMN=2ns tpzhTY=6.4ns tpzhMX=9.5ns
+                                        tpzlMN=2ns tpzlTY=6ns tpzlMX=9ns
+                                        tphzMN=2ns tphzTY=7ns tphzMX=10.5ns
+                                        tplzMN=2ns tplzTY=5.5ns tplzMX=8.5ns)

.ENDS 74ACT574
*
*
* ----------------------------------------------------------- 74ALS574A ------
*  Octal D-Type Edge-Triggered Flip-Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-441 to 2-447
*  bss    5/4/94
*
.SUBCKT 74ALS574A OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_ALS574 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     DLY_ALS574Z IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS574 ueff (tpclkqlhMN=4ns tpclkqlhMX=14ns tpclkqhlMN=4ns tpclkqhlMX=14ns
+                                  twclkhMN=14ns twclklMN=14ns tsudclkMN=15ns)

.model DLY_ALS574Z utgate (tpzhMN=4ns tpzhMX=18ns tpzlMN=4ns tpzlMX=18ns
+                                        tphzMN=2ns tphzMX=10ns tplzMN=2ns tplzMX=12ns)

.ENDS 74ALS574A
*
*
* ----------------------------------------------------------- 74AS574 ------
*  Octal D-Type Edge-Triggered Flip-Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-441 to 2-447
*  bss    5/4/94
*
.SUBCKT 74AS574 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_AS574 IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     DLY_AS574Z IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AS574 ueff (tpclkqlhMN=3ns tpclkqlhMX=8ns tpclkqhlMN=4ns tpclkqhlMX=9ns
+                                  twclkhMN=4ns twclklMN=2ns tsudclkMN=2ns thdclkMN=2ns)

.model DLY_AS574Z utgate (tpzhMN=2ns tpzhMX=6ns tpzlMN=3ns tpzlMX=10ns
+                                        tphzMN=2ns tphzMX=6ns tplzMN=2ns tplzMX=6ns)

.ENDS 74AS574

* -----------------------------------------------------------74F574------

* Octal Edge-Triggered D-Type Flip-Flops with 3-State Outputs
* TI F Logic Data Book, pages 2-271 to 2-273
* jat 7/3/96

.SUBCKT 74F574 OEBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI $D_HI CLK
+ 1D 2D 3D 4D 5D 6D 7D 8D
+ 1QO 2QO 3QO 4QO 5QO 6QO 7QO 8QO
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,0) DPWR DGND
+ 1QO 2QO 3QO 4QO 5QO 6QO 7QO 8QO
+ OEBAR
+ 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE LO = OEBAR
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q = {
+       CASE(
+         TRN_ZH, DELAY(1.2NS,8.6NS,11.5NS),
+         TRN_ZL, DELAY(1.2NS,4.9NS,7.5NS),
+         TRN_HZ, DELAY(1.2NS,4.9NS,7NS),
+         TRN_LZ, DELAY(1.2NS,3.9NS,5.5NS),
+         TRN_LH | TRN_HL, DELAY(3.2NS,6.1NS,8.5NS),
+         DELAY(4.2NS,9.6NS,12.5NS))}

U3 CONSTRAINT(9) DPWR DGND
+ CLK 1D 2D 3D 4D 5D 6D 7D 8D
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLK
+   MAXFREQ = 100MEG
+ WIDTH:
+   NODE = CLK
+   MIN_HI = 7NS
+   MIN_LO = 6NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(8) = 1D 2D 3D 4D 5D 6D 7D 8D
+   SETUPTIME=2NS
+   HOLDTIME=2NS

.ENDS 74F574

* ----------------------------------------------------------- 74HC574 ------
*  Octal D-Type Edge-Triggered Flip-Flops With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-511 to 2-515
*  bss    5/4/94
*
.SUBCKT 74HC574 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_HC574 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     DLY_HC574Z IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC574 ueff (tpclkqlhTY=28ns tpclkqlhMX=36ns tpclkqhlTY=28ns tpclkqhlMX=36ns
+                                  twclkhMN=20ns twclklMN=20ns tsudclkMN=25ns thdclkMN=5ns)

.model DLY_HC574Z utgate (tpzhTY=26ns tpzhMX=30ns tpzlTY=26ns tpzlMX=30ns
+                                        tphzTY=24ns tphzMX=30ns tplzTY=24ns tplzMX=30ns)

.ENDS 74HC574

*-----------------------------------------------------------------74HC574A---

* Octal Tri-State Non-Inverting D Flip-Flop
* Motorola High-Speed CMOS Data, 1993, pages 5-376 to 5-379
* jat 9/11/96

.SUBCKT 74HC574A
+ CLOCK OUTENAB D0 D1 D2 D3 D4 D5 D6 D7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI $D_HI CLOCK
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,0) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ OUTENAB
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+ ENABLE LO = OUTENAB
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+      TRN_Z$, DELAY(-1,-1,28NS),
+      TRN_$Z, DELAY(-1,-1,30NS),
+      (TRN_LH | TRN_HL), DELAY(-1,-1,32NS),
+      DELAY(-1,-1,33NS))}

U3 CONSTRAINT(9) DPWR DGND
+ CLOCK D0 D1 D2 D3 D4 D5 D6 D7
+ IO_HC IO_LEVEL={IO_LEVEL}
+ WIDTH:
+  NODE = CLOCK
+  MIN_HI = 15NS
+  MIN_LO = 15NS
+ FREQ:
+  NODE = CLOCK
+  MAXFREQ = 30MEG
+ SETUP_HOLD:
+  CLOCK LH = CLOCK
+  DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+  SETUPTIME = 10NS
+  HOLDTIME = 5NS

.ENDS 74HC574A

* ----------------------------------------------------------- 74HCT574 ------
*  Octal D-Type Edge-Triggered Flip-Flops With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-517 to 2-520
*  bss    5/4/94
*
.SUBCKT 74HCT574 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_HCT574 IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     DLY_HCT574Z IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HCT574 ueff (tpclkqlhTY=30ns tpclkqlhMX=36ns tpclkqhlTY=30ns tpclkqhlMX=36ns
+                                  twclkhMN=20ns twclklMN=20ns tsudclkMN=25ns thdclkMN=5ns)

.model DLY_HCT574Z utgate (tpzhTY=26ns tpzhMX=30ns tpzlTY=26ns tpzlMX=30ns
+                                        tphzTY=23ns tphzMX=30ns tplzTY=23ns tplzMX=30ns)

.ENDS 74HCT574

*-----------------------------------------------------------------74HCT574A---

* Octal Tri-State Non-Inverting D Flip-Flop
* Motorola High-Speed CMOS Data, 1993, pages 5-380 to 5-383
* jat 9/11/96

.SUBCKT 74HCT574A
+ CLOCK OUTENAB D0 D1 D2 D3 D4 D5 D6 D7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI $D_HI CLOCK
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,0) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ OUTENAB
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+ ENABLE LO = OUTENAB
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+      TRN_Z$, DELAY(-1,-1,28NS),
+      TRN_$Z, DELAY(-1,-1,28NS),
+      (TRN_LH | TRN_HL), DELAY(-1,-1,30NS),
+      DELAY(-1,-1,31NS))}

U3 CONSTRAINT(9) DPWR DGND
+ CLOCK D0 D1 D2 D3 D4 D5 D6 D7
+ IO_HCT IO_LEVEL={IO_LEVEL}
+ WIDTH:
+  NODE = CLOCK
+  MIN_HI = 15NS
+  MIN_LO = 15NS
+ FREQ:
+  NODE = CLOCK
+  MAXFREQ = 30MEG
+ SETUP_HOLD:
+  CLOCK LH = CLOCK
+  DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+  SETUPTIME = 10NS
+  HOLDTIME = 5NS

.ENDS 74HCT574A

*-------------------------------------------------------------74LS574-------

* Octal D-Type Flip-Flop with Tri-State Outputs
* National TTL/LS/S Logic Databook, 1989, pages 2-495 to 2-497
* jat 8/13/96

.SUBCKT 74LS574 D0 D1 D2 D3 D4 D5 D6 D7 O0 O1 O2 O3 O4 O5 O6 O7 CP OEBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI $D_HI CP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(8,1,1) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OEBAR
+ CP
+ O0 O1 O2 O3 O4 O5 O6 O7
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   EDGE = {CHANGED_LH(CP,0)}
+ TRISTATE: 
+   ENABLE LO = OEBAR
+   O0 O1 O2 O3 O4 O5 O6 O7 = {
+    CASE(
+      TRN_ZH, DELAY(-1,-1,28NS),
+      TRN_ZL, DELAY(-1,-1,28NS),
+      TRN_HZ, DELAY(-1,-1,20NS),
+      TRN_LZ, DELAY(-1,-1,25NS),
+      EDGE & TRN_LH, DELAY(-1,-1,28NS),
+      EDGE & TRN_HL, DELAY(-1,-1,28NS),
+      DELAY(-1,-1,29NS))}

U3 CONSTRAINT(9) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 CP
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+    NODE = CP
+    MAXFREQ = 35MEG
+ WIDTH:
+    NODE = CP
+    MIN_HI = 15NS
+    MIN_LO = 15NS
+ SETUP_HOLD:
+    CLOCK LH = CP
+    DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+    SETUPTIME = 20NS

.ENDS 74LS574

* ----------------------------------------------------------- 74ALS575A ------
*  Octal D-Type Edge-Triggered Flip-Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-441 to 2-447
*  bss    5/4/94
*
.SUBCKT 74ALS575A OCBAR CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 anda(2,8) DPWR DGND
+     1D CLRBAR 2D CLRBAR 3D CLRBAR 4D CLRBAR 5D CLRBAR 6D CLRBAR
+     7D CLRBAR 8D CLRBAR
+     IN1 IN2 IN3 IN4 IN5 IN6 IN7 IN8
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     IN1 IN2 IN3 IN4 IN5 IN6 IN7 IN8
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_ALS575 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     DLY_ALS575Z IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS575 ueff (tpclkqlhMN=4ns tpclkqlhMX=14ns tpclkqhlMN=4ns tpclkqhlMX=14ns
+                                  twclkhMN=16.5ns twclklMN=16.5ns tsudclkMN=15ns)

.model DLY_ALS575Z utgate (tpzhMN=4ns tpzhMX=18ns tpzlMN=4ns tpzlMX=18ns
+                                        tphzMN=2ns tphzMX=10ns tplzMN=3ns tplzMX=13ns)

.ENDS 74ALS575A
*
*
* ----------------------------------------------------------- 74AS575 ------
*  Octal D-Type Edge-Triggered Flip-Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-441 to 2-447
*  bss    5/4/94
*
.SUBCKT 74AS575 OCBAR CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 anda(2,8) DPWR DGND
+     1D CLRBAR 2D CLRBAR 3D CLRBAR 4D CLRBAR 5D CLRBAR 6D CLRBAR
+     7D CLRBAR 8D CLRBAR
+     IN1 IN2 IN3 IN4 IN5 IN6 IN7 IN8
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     IN1 IN2 IN3 IN4 IN5 IN6 IN7 IN8
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     DLY_AS575 IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 
+     DLY_AS575Z IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5CON CONSTRAINT(10) DPWR DGND
+     CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+	FREQ:
+		NODE=CLK
+		MAXFREQ=125Meg
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=4ns
+     MIN_LO=2ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=2ns
+     HOLDTIME=2ns
+		WHEN={CLRBAR!='0}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLRBAR
+     SETUPTIME=5.5ns

.model DLY_AS575 ueff (tpclkqlhMN=3ns tpclkqlhMX=8ns tpclkqhlMN=4ns tpclkqhlMX=9ns)

.model DLY_AS575Z utgate (tpzhMN=2ns tpzhMX=6ns tpzlMN=3ns tpzlMX=10ns
+                                        tphzMN=2ns tphzMX=6ns tplzMN=2ns tplzMX=6ns)

.ENDS 74AS575
*
*
* ----------------------------------------------------------- 74ALS576A ------
*  Octal D-Type Edge-Triggered Flip-Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-449 to 2-454
*  bss    5/4/94
*
.SUBCKT 74ALS576A OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     DLY_ALS576 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     DLY_ALS576Z IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS576 ueff (tpclkqlhMN=4ns tpclkqlhMX=14ns tpclkqhlMN=4ns tpclkqhlMX=14ns
+                                  twclkhMN=16.5ns twclklMN=16.5ns tsudclkMN=15ns)

.model DLY_ALS576Z utgate (tpzhMN=4ns tpzhTY=11ns tpzhMX=18ns tpzlMN=4ns
+								   tpzlTY=11ns tpzlMX=18ns tphzMN=2ns tphzTY=6ns
+									tphzMX=10ns tplzMN=3ns tplzTY=8ns tplzMX=15ns)

.ENDS 74ALS576A
*
*
* ----------------------------------------------------------- 74AS576 ------
*  Octal D-Type Edge-Triggered Flip-Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-449 to 2-454
*  bss    5/4/94
*
.SUBCKT 74AS576 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     DLY_AS576 IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     DLY_AS576Z IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AS576 ueff (tpclkqlhMN=3ns tpclkqlhMX=8ns tpclkqhlMN=4ns tpclkqhlMX=9ns
+                                  twclkhMN=4ns twclklMN=2ns tsudclkMN=2ns thdclkMN=2ns)

.model DLY_AS576Z utgate (tpzhMN=2ns tpzhMX=6ns tpzlMN=3ns tpzlMX=10ns
+                                        tphzMN=2ns tphzMX=6ns tplzMN=2ns tplzMX=6ns)

.ENDS 74AS576
*
*
* ----------------------------------------------------------- 74ALS577A ------
*  Octal D-Type Edge-Triggered Flip-Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-449 to 2-454
*  bss    5/4/94
*
.SUBCKT 74ALS577A OCBAR CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 anda(2,8) DPWR DGND
+     1D CLRBAR 2D CLRBAR 3D CLRBAR 4D CLRBAR 5D CLRBAR 6D CLRBAR
+     7D CLRBAR 8D CLRBAR
+     IN1 IN2 IN3 IN4 IN5 IN6 IN7 IN8
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     IN1 IN2 IN3 IN4 IN5 IN6 IN7 IN8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     DLY_ALS577 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     DLY_ALS577Z IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS577 ueff (tpclkqlhMN=4ns tpclkqlhTY=9ns tpclkqlhMX=14ns
+								tpclkqhlMN=4ns tpclkqlhTY=9ns tpclkqhlMX=14ns
+                       twclkhMN=16.5ns twclklMN=16.5ns tsudclkMN=15ns)

.model DLY_ALS577Z utgate (tpzhMN=4ns tpzhTY=11ns tpzhMX=18ns tpzlMN=4ns
+									tpzlTY=11ns tpzlMX=18ns tphzMN=2ns tphzTY=6ns
+									tphzMX=10ns tplzMN=3ns tplzTY=8ns tplzMX=15ns)

.ENDS 74ALS577A
*
*
* ----------------------------------------------------------- 74AS577 ------
*  Octal D-Type Edge-Triggered Flip-Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-449 to 2-454
*  bss    5/4/94
*
.SUBCKT 74AS577 OCBAR CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 anda(2,8) DPWR DGND
+     1D CLRBAR 2D CLRBAR 3D CLRBAR 4D CLRBAR 5D CLRBAR 6D CLRBAR
+     7D CLRBAR 8D CLRBAR
+     IN1 IN2 IN3 IN4 IN5 IN6 IN7 IN8
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 dff(8) DPWR DGND
+     $D_HI $D_HI CLK
+     IN1 IN2 IN3 IN4 IN5 IN6 IN7 IN8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     DLY_AS577 IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     DLY_AS577Z IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5CON CONSTRAINT(10) DPWR DGND
+     CLRBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=4ns
+     MIN_LO=2ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=2ns
+     HOLDTIME=2ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLRBAR
+     SETUPTIME=5.5ns

.model DLY_AS577 ueff (tpclkqlhMN=3ns tpclkqlhMX=8ns tpclkqhlMN=4ns tpclkqhlMX=9ns)

.model DLY_AS577Z utgate (tpzhMN=2ns tpzhMX=6ns tpzlMN=3ns tpzlMX=10ns
+                                        tphzMN=2ns tphzMX=6ns tplzMN=2ns tplzMX=6ns)

.ENDS 74AS577

*------------------------------------------------------------74F579------

* 8 Bit Bidirectional Binary Counter with Tri-State Outputs
* National AdvancedB Bipolar TTL Logic Databook, 1995, pages 7-433 to 7-438
* jat 7/16/96

.SUBCKT 74F579 I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 PEBAR CSBAR
+ SRBAR U/DBAR CP CEPBAR CETBAR OEBAR MRBAR TCBAR
+ OPTIONAL: DPWR=$D_DPWR DGND=$D_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(31,10) DPWR DGND
+ SRBAR PEBAR CSBAR OEBAR I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 CEPBAR CETBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR U/DBAR
+ D0 D1 D2 D3 D4 D5 D6 D7 TCBARO OUTENAB
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   LOAD = {~SRBAR | (~PEBAR & ~CSBAR)}
+   OUTENAB = {~CSBAR & PEBAR & ~OEBAR}
+   CAND = {~CETBAR & ~CEPBAR}
+   TOG0 = {~CAND}
+   ANDUP1 = {CAND & U/DBAR & Q0}
+   ANDDOWN1 = {CAND & ~U/DBAR & Q0BAR}
+   TOG1 = {~(ANDUP1 | ANDDOWN1)}
+   ANDUP2 = {ANDUP1 & Q1}
+   ANDDOWN2 = {ANDDOWN1 & Q1BAR}
+   TOG2 = {~(ANDUP2 | ANDDOWN2)}
+   ANDUP3 = {ANDUP2 & Q2}
+   ANDDOWN3 = {ANDDOWN2 & Q2BAR}
+   TOG3 = {~(ANDUP3 | ANDDOWN3)}
+   ANDUP4 = {ANDUP3 & Q3}
+   ANDDOWN4 = {ANDDOWN3 & Q3BAR}
+   TOG4 = {~(ANDUP4 | ANDDOWN4)}
+   ANDUP5 = {ANDUP4 & Q4}
+   ANDDOWN5 = {ANDDOWN4 & Q4BAR}
+   TOG5 = {~(ANDUP5 | ANDDOWN5)}
+   ANDUP6 = {ANDUP5 & Q5}
+   ANDDOWN6 = {ANDDOWN5 & Q5BAR}
+   TOG6 = {~(ANDUP6 | ANDDOWN6)}
+   ANDUP7 = {ANDUP6 & Q6}
+   ANDDOWN7 = {ANDDOWN6 & Q6BAR}
+   TOG7 = {~(ANDUP7 | ANDDOWN7)}
+   TCBARO = {~((~CETBAR & ~U/DBAR & Q0BAR & Q1BAR & Q2BAR & Q3BAR & Q4BAR & Q5BAR & Q6BAR & Q7BAR) | 
+               (~CETBAR &  U/DBAR & Q0 & Q1 & Q2 & Q3 & Q4 & Q5 & Q6 & Q7))}
+   DATA0 = {SRBAR & I/O0}
+   DATA1 = {SRBAR & I/O1}
+   DATA2 = {SRBAR & I/O2}
+   DATA3 = {SRBAR & I/O3}
+   DATA4 = {SRBAR & I/O4}
+   DATA5 = {SRBAR & I/O5}
+   DATA6 = {SRBAR & I/O6}
+   DATA7 = {SRBAR & I/O7}
+   D0 = {(DATA0 & LOAD) | (TOG0 & ~LOAD & Q0) | (~LOAD & ~TOG0 & Q0BAR)}
+   D1 = {(DATA1 & LOAD) | (TOG1 & ~LOAD & Q1) | (~LOAD & ~TOG1 & Q1BAR)}
+   D2 = {(DATA2 & LOAD) | (TOG2 & ~LOAD & Q2) | (~LOAD & ~TOG2 & Q2BAR)}
+   D3 = {(DATA3 & LOAD) | (TOG3 & ~LOAD & Q3) | (~LOAD & ~TOG3 & Q3BAR)}
+   D4 = {(DATA4 & LOAD) | (TOG4 & ~LOAD & Q4) | (~LOAD & ~TOG4 & Q4BAR)}
+   D5 = {(DATA5 & LOAD) | (TOG5 & ~LOAD & Q5) | (~LOAD & ~TOG5 & Q5BAR)}
+   D6 = {(DATA6 & LOAD) | (TOG6 & ~LOAD & Q6) | (~LOAD & ~TOG6 & Q6BAR)}
+   D7 = {(DATA7 & LOAD) | (TOG7 & ~LOAD & Q7) | (~LOAD & ~TOG7 & Q7BAR)}

U2 DFF(8) DPWR DGND
+ $D_HI MRBAR CP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ D0_EFF IO_F MNTYMXDLY={MNYTMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(9,1,16) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 TCBARO
+ OUTENAB
+ CP I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 U/DBAR CETBAR CEPBAR MRBAR
+ CSBAR PEBAR OEBAR
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 TCBAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   OE = {CHANGED(OEBAR,0)}
+   CSPE = {CHANGED(CSBAR,0) | CHANGED(PEBAR,0)}
+   CLEAR = {CHANGED_HL(MRBAR,0)}
+   CETP = {CHANGED(CETBAR,0) | CHANGED(CEPBAR,0)}
+   UPDOWN = {CHANGED(U/DBAR,0)}
+   EDGE = {CHANGED_LH(CP,0)}
+ TRISTATE:
+   ENABLE HI = OUTENAB
+   I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 = {
+     CASE(
+       TRN_ZH & OE, DELAY(3NS,5NS,8NS),
+       TRN_ZL & OE, DELAY(5NS,8NS,11NS),
+       TRN_HZ & OE, DELAY(2NS,4NS,6.5NS),
+       TRN_LZ & OE, DELAY(2NS,4NS,6NS),
+       TRN_ZH & CSPE, DELAY(3NS,5NS,8.5NS),
+       TRN_ZL & CSPE, DELAY(5.5NS,8NS,10.5NS),
+       TRN_HZ & CSPE, DELAY(2NS,5NS,8.5NS),
+       TRN_LZ & CSPE, DELAY(2NS,4.5NS,8NS),
+       CLEAR & TRN_HL, DELAY(5NS,7.5NS,10NS),
+       EDGE & TRN_LH, DELAY(3NS,5NS,7.5NS),
+       EDGE & TRN_HL, DELAY(5NS,8NS,11.5NS),
+       DELAY(6.5NS,9NS,12.5NS))}
+ PINDLY:
+  TCBAR = {
+     CASE(
+       CLEAR & TRN_HL, DELAY(6.5NS,10NS,13NS),
+       CETP & TRN_LH, DELAY(2.5NS,3.8NS,6NS),
+       CETP & TRN_HL, DELAY(3.5NS,6NS,8NS),
+       UPDOWN & TRN_LH, DELAY(4.5NS,7NS,9NS),
+       UPDOWN & TRN_HL, DELAY(4.5NS,8NS,9.5NS),
+       EDGE & TRN_LH, DELAY(5NS,7.5NS,11.5NS),
+       EDGE & TRN_HL, DELAY(5NS,7NS,11.5NS),
+       DELAY(7.5NS,11NS,14NS))}

U4 CONSTRAINT(16) DPWR DGND
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 CP PEBAR CSBAR SRBAR CETBAR CEPBAR
+ U/DBAR MRBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CP
+   MAXFREQ = 85MEG
+ WIDTH:
+   NODE = CP
+   MIN_HI = 4.5NS
+   MIN_LO = 4.5NS
+ WIDTH:
+   NODE = MRBAR
+   MIN_LO = 3NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(8) = I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+   SETUPTIME = 4NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(3) = PEBAR CSBAR SRBAR
+   SETUPTIME = 9.5NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(2) = CETBAR CEPBAR
+   SETUPTIME_HI = 6.5NS
+   SETUPTIME_LO = 9.5NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(1) = U/DBAR
+   SETUPTIME = 9NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(1) = MRBAR
+   SETUPTIME_HI = 4NS

.ENDS 74F579

* ----------------------------------------------------------- 74ALS580A ------
*  Octal D-Type Transparent Latches With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-435 to 2-440
*  bss    5/4/94
*
.SUBCKT 74ALS580A OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     DLY_ALS580 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     DLY_ALS580Z IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS580 ugff (tpgqlhMN=8ns tpgqlhTY=8ns tpgqlhMX=22ns tpgqhlMN=8ns
+								tpgqhlTY=14ns tpgqhlMX=21ns tpdqlhMN=3ns tpdqlhTY=10ns
+                       tpdqlhMX=18ns tpdqhlMN=3ns tpdqhlTY=8ns tpdqhlMX=14ns
+                       twghMN=15ns tsudgMN=10ns thdgMN=10ns)

.model DLY_ALS580Z utgate (tpzhMN=4ns tpzhTY=8ns tpzhMX=18ns tpzlMN=4ns
+									tpzlTY=10ns tpzlMX=18ns tphzMN=2ns tphzTY=5ns
+                          tphzMX=10ns tplzMN=3ns tplzTY=7ns tplzMX=15ns)

.ENDS 74ALS580A
*
*
* ----------------------------------------------------------- 74AS580 ------
*  Octal D-Type Transparent Latches With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-435 to 2-440
*  bss    5/4/94
*
.SUBCKT 74AS580 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     OCBAR OC
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(8) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     DLY_AS580 IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 buf3a(8) DPWR DGND
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     OC
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 
+     DLY_AS580Z IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AS580 ugff (tpgqlhMN=5ns tpgqlhMX=9ns tpgqhlMN=4ns tpgqhlMX=8ns
+                                  tpdqlhMN=3ns tpdqlhMX=7.5ns tpdqhlMN=3ns tpdqhlMX=7ns
+                                  twghMN=2ns tsudgMN=2ns thdgMN=3ns)

.model DLY_AS580Z utgate (tpzhMN=2ns tpzhMX=6.5ns tpzlMN=4ns tpzlMX=9.5ns
+                                        tphzMN=2ns tphzMX=6.5ns tplzMN=2ns tplzMX=7ns)

.ENDS 74AS580

*------------------------------------------------------------74F582--------

* 4 Bit BCD Arithmetic Logic Unit
* National Advanced Schottky Logic Databook, 1988, pages 4-493 to 4-496
* jat 7/17/96

.SUBCKT 74F582 A0 A1 A2 A3 B0 B1 B2 B3 F0 F1 F2 F3 ABAR/S C/BBAR
+ C/B4BAR AEQB GBAR PBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(10,8) DPWR DGND
+ A0 A1 A2 A3 B0 B1 B2 B3 C/BBAR ABAR/S
+ F0O F1O F2O F3O AEQBO PBARO GBARO C/B4BARO
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   X1 = {ABAR/S ^ B0}
+   X2 = {~((ABAR/S & B1 & B2) | (~B1 & ~B2) | (~B2 & ~ABAR/S))}
+   X3 = {~((~ABAR/S & ~B3) | (ABAR/S & B3) | B1 | B2)}
+   NAND0 = {~(A0 & X1)}
+   NOR0 = {~(A0 | X1)}
+   AB0 = {~NAND0 | NOR0}
+   NAND1 = {~(A1 & B1)}
+   NOR1 = {~(A1 | B1)}
+   AB1 = {~NAND1 | NOR1}
+   NAND2 = {~(A2 & X2)}
+   NOR2 = {~(A2 | X2)}
+   AB2 = {~NAND2 | NOR2}
+   NAND3 = {~(A3 & X3)}
+   NOR3 = {~(A3 | X3)}
+   AB3 = {~NAND3 | NOR3}
+   F0O = {AB0 ^ ~C/BBAR}
+   OR1 = {NOR0 | (NAND0 & ~C/BBAR)}
+   OR2 = {(NOR1 & NOR3) | (NOR3 & NAND2) | (NOR1 & NOR2 & NAND3)}
+   OR3 = {(NOR2 & NOR3) | (NAND1 & NOR3 & NAND2)}
+   OR4 = {(NAND2 & NOR3 & ~NOR2) | (~NOR2 & NAND1 & NOR3) |
+          (NOR2 & ~NOR3) | (NOR1 & NOR3)}
+   OR5 = {(NAND3 & AB1) | (NAND3 & AB2)}
+   OR6 = {(NOR2 & NOR3) | (NAND1 & NOR3 & NAND2) | NOR0}
+   OR7 = {(NOR2 & NOR3) | (NAND1 & NOR3 & NAND2) | (NAND0 & NOR1 & NOR3) |
+          (NAND0 & NOR3 & NAND2) | (NOR2 & NAND0 & NOR1 & NAND3)}
+   F1O = {~((OR1 & ~AB1 & ~OR2) | (OR1 & OR2 & AB1) | (AB1 & ~OR1 & ~OR3) |
+           (~OR1 & ~AB1 & OR3))}
+   F2O = {(~OR1 & ~OR4) | (~AB2 & NOR1 & NOR3) | (~NAND1 & NOR2) | (OR1 & ~OR5)}
+   F3O = {(~OR1 & ~OR5 & AB3) | (OR1 & ~OR3 & OR2)}
+   C/B4BARO = {~((OR6 & OR7) | (~C/BBAR & OR7))}
+   AEQBO = {~(~ABAR/S | F0O | F1O | F2O | F3O)}
+   PBARO = {OR6}
+   GBARO = {OR7}

U2 PINDLY(8,0,10) DPWR DGND
+ F0O F1O F2O F3O AEQBO PBARO GBARO C/B4BARO
+ C/BBAR A0 A1 A2 A3 B0 B1 B2 B3 ABAR/S
+ F0 F1 F2 F3 AEQBX PBAR GBAR C/B4BAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) |
+           CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0)}
+   CARRY = {CHANGED(C/BBAR,0)}
+   ADDSUB = {CHANGED(ABAR/S,0)}
+ PINDLY:
+   F0 F1 F2 F3 = {
+     CASE(
+      ADDSUB & TRN_LH, DELAY(2.5NS,-1,33NS),
+      ADDSUB & TRN_HL, DELAY(7NS,-1,18NS),
+      CARRY & TRN_LH, DELAY(4NS,-1,21NS),
+      CARRY & TRN_HL, DELAY(2.5NS,-1,14NS),
+      DATA & TRN_LH, DELAY(2.5NS,-1,29NS),
+      DATA & TRN_HL, DELAY(2.5NS,-1,22NS),
+      DELAY(8NS,-1,34NS))}
+   C/B4BAR = {
+     CASE(
+      DATA & TRN_LH, DELAY(4NS,-1,21.5NS),
+      DATA & TRN_HL, DELAY(4NS,-1,16NS),
+      CARRY & TRN_LH, DELAY(3.5NS,-1,8.5NS),
+      CARRY & TRN_HL, DELAY(2NS,-1,6.5NS),
+      DELAY(5NS,-1,22.5NS))}
+   AEQBX = {
+     CASE(
+      DATA & TRN_LH, DELAY(8NS,-1,35NS),
+      DATA & TRN_HL, DELAY(6NS,-1,25NS),
+      DELAY(9NS,-1,36NS))}
+   GBAR PBAR = {
+     CASE(
+      DATA & TRN_LH, DELAY(4NS,-1,18NS),
+      DATA & TRN_HL, DELAY(3.5NS,-1,15.5NS),
+      DELAY(5NS,-1,19NS))}

U3 BUF DPWR DGND
+ AEQBX AEQB
+ D0_GATE IO_F_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.ENDS 74F582

*------------------------------------------------------------74F583--------

* 4 Bit BCD Adder
* National Advanced Bipoloar Logic Databook, 1995, pages 7-439 to 7-442
* jat 7/16/96

.SUBCKT 74F583 A0 A1 A2 A3 B0 B1 B2 B3 CN S0 S1 S2 S3 CN4
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,5) DPWR DGND
+ A0 A1 A2 A3 B0 B1 B2 B3 CN
+ S0O S1O S2O S3O CN4O
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   NAND0 = {~(A0 & B0)}
+   NOR0 = {~(A0 | B0)}
+   AB0 = {~NAND0 | NOR0}
+   NAND1 = {~(A1 & B1)}
+   NOR1 = {~(A1 | B1)}
+   AB1 = {~NAND1 | NOR1}
+   NAND2 = {~(A2 & B2)}
+   NOR2 = {~(A2 | B2)}
+   AB2 = {~NAND2 | NOR2}
+   NAND3 = {~(A3 & B3)}
+   NOR3 = {~(A3 | B3)}
+   AB3 = {~NAND3 | NOR3}
+   S0O = {AB0 ^ ~CN}
+   OR1 = {NOR0 | (NAND0 & ~CN)}
+   OR2 = {(NOR1 & NOR3) | (NOR3 & NAND2) | (NOR1 & NOR2 & NAND3)}
+   OR3 = {(NOR2 & NOR3) | (NAND1 & NOR3 & NAND2)}
+   OR4 = {(NAND2 & NOR3 & ~NOR2) | (~NOR2 & NAND1 & NOR3) |
+          (NOR2 & ~NOR3) | (NOR1 & NOR3)}
+   OR5 = {(NAND3 & AB1) | (NAND3 & AB2)}
+   OR6 = {(NOR2 & NOR3) | (NAND1 & NOR3 & NAND2) | NOR0}
+   OR7 = {(NOR2 & NOR3) | (NAND1 & NOR3 & NAND2) | (NAND0 & NOR1 & NOR3) |
+          (NAND0 & NOR3 & NAND2) | (NOR2 & NAND0 & NOR1 & NAND3)}
+   S1O = {~((OR1 & ~AB1 & ~OR2) | (OR1 & OR2 & AB1) | (AB1 & ~OR1 & ~OR3) |
+           (~OR1 & ~AB1 & OR3))}
+   S2O = {(~OR1 & ~OR4) | (~AB2 & NOR1 & NOR3) | (~NAND1 & NOR2) | (OR1 & ~OR5)}
+   S3O = {(~OR1 & ~OR5 & AB3) | (OR1 & ~OR3 & OR2)}
+   CN4O = {~((OR6 & OR7) | (~CN & OR7))}

U2 PINDLY(5,0,9) DPWR DGND
+ S0O S1O S2O S3O CN4O
+ CN A0 A1 A2 A3 B0 B1 B2 B3
+ S0 S1 S2 S3 CN4
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) |
+           CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0)}
+   CARRY = {CHANGED(CN,0)}
+ PINDLY:
+   S0 S1 S2 S3 = {
+     CASE(
+      DATA & TRN_LH, DELAY(2.5NS,13NS,16.5NS),
+      DATA & TRN_HL, DELAY(2.5NS,11NS,14NS),
+      DELAY(3.5NS,14NS,17.5NS))}
+   CN4 = {
+     CASE(
+      DATA & TRN_LH, DELAY(4NS,11NS,14NS),
+      DATA & TRN_HL, DELAY(4NS,8NS,10.5NS),
+      CARRY & TRN_LH, DELAY(2.5NS,6.5NS,8.5NS),
+      CARRY & TRN_HL, DELAY(2.5NS,5NS,6.5NS),
+      DELAY(5NS,12NS,15NS))}

.ENDS 74F583

*------------------------------------------------------------74HC583--------

* 4 Bit Full Adder with Fast Carry
* Philips High-Speed CMOS Logic Family Data Handbook, 1994, pages 705 to 710
* jat 9/11/96

.SUBCKT 74HC583 A0 A1 A2 A3 B0 B1 B2 B3 CN S0 S1 S2 S3 CN4
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,5) DPWR DGND
+ A0 A1 A2 A3 B0 B1 B2 B3 CN
+ S0O S1O S2O S3O CN4O
+ D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   NAND0 = {~(A0 & B0)}
+   NOR0 = {~(A0 | B0)}
+   AB0 = {~NAND0 | NOR0}
+   NAND1 = {~(A1 & B1)}
+   NOR1 = {~(A1 | B1)}
+   AB1 = {~NAND1 | NOR1}
+   NAND2 = {~(A2 & B2)}
+   NOR2 = {~(A2 | B2)}
+   AB2 = {~NAND2 | NOR2}
+   NAND3 = {~(A3 & B3)}
+   NOR3 = {~(A3 | B3)}
+   AB3 = {~NAND3 | NOR3}
+   S0O = {AB0 ^ ~CN}
+   OR1 = {NOR0 | (NAND0 & ~CN)}
+   OR2 = {(NOR1 & NOR3) | (NOR3 & NAND2) | (NOR1 & NOR2 & NAND3)}
+   OR3 = {(NOR2 & NOR3) | (NAND1 & NOR3 & NAND2)}
+   OR4 = {(NAND2 & NOR3 & ~NOR2) | (~NOR2 & NAND1 & NOR3) |
+          (NOR2 & ~NOR3) | (NOR1 & NOR3)}
+   OR5 = {(NAND3 & AB1) | (NAND3 & AB2)}
+   OR6 = {(NOR2 & NOR3) | (NAND1 & NOR3 & NAND2) | NOR0}
+   OR7 = {(NOR2 & NOR3) | (NAND1 & NOR3 & NAND2) | (NAND0 & NOR1 & NOR3) |
+          (NAND0 & NOR3 & NAND2) | (NOR2 & NAND0 & NOR1 & NAND3)}
+   S1O = {~((OR1 & ~AB1 & ~OR2) | (OR1 & OR2 & AB1) | (AB1 & ~OR1 & ~OR3) |
+           (~OR1 & ~AB1 & OR3))}
+   S2O = {(~OR1 & ~OR4) | (~AB2 & NOR1 & NOR3) | (~NAND1 & NOR2) | (OR1 & ~OR5)}
+   S3O = {(~OR1 & ~OR5 & AB3) | (OR1 & ~OR3 & OR2)}
+   CN4O = {~((OR6 & OR7) | (~CN & OR7))}

U2 PINDLY(5,0,9) DPWR DGND
+ S0O S1O S2O S3O CN4O
+ CN A0 A1 A2 A3 B0 B1 B2 B3
+ S0 S1 S2 S3 CN4
+ IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) |
+           CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0)}
+   CARRY = {CHANGED(CN,0)}
+   DATAA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0)}
+   DATAB = {CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0)}
+ PINDLY:
+   S0 = {
+     CASE(
+      DATA & (TRN_LH | TRN_HL), DELAY(-1,18NS,31NS),
+      CARRY & (TRN_LH | TRN_HL), DELAY(-1,18NS,31NS),
+      DELAY(-1,19NS,32NS))}
+   S1 = {
+     CASE(
+      DATA & (TRN_LH | TRN_HL), DELAY(-1,43NS,73NS),
+      CARRY & (TRN_LH | TRN_HL), DELAY(-1,41NS,70NS),
+      DELAY(-1,44NS,74NS))}
+   S2 = {
+     CASE(
+      DATA & (TRN_LH | TRN_HL), DELAY(-1,38NS,65NS),
+      CARRY & (TRN_LH | TRN_HL), DELAY(-1,36NS,61NS),
+      DELAY(-1,39NS,66NS))}
+   S3 = {
+     CASE(
+      DATA & (TRN_LH | TRN_HL), DELAY(-1,42NS,71NS),
+      CARRY & (TRN_LH | TRN_HL), DELAY(-1,40NS,68NS),
+      DELAY(-1,43NS,72NS))}
+   CN4 = {
+     CASE(
+      DATAA & (TRN_LH | TRN_HL), DELAY(-1,26NS,44NS),
+      DATAB & (TRN_LH | TRN_HL), DELAY(-1,27NS,46NS),
+      CARRY & (TRN_LH | TRN_HL), DELAY(-1,23NS,39NS),
+      DELAY(-1,28NS,47NS))}

.ENDS 74HC583

*------------------------------------------------------------74HCT583--------

* 4 Bit Full Adder with Fast Carry
* Philips High-Speed CMOS Logic Family Data Handbook, 1994, pages 705 to 710
* jat 9/12/96

.SUBCKT 74HCT583 A0 A1 A2 A3 B0 B1 B2 B3 CN S0 S1 S2 S3 CN4
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,5) DPWR DGND
+ A0 A1 A2 A3 B0 B1 B2 B3 CN
+ S0O S1O S2O S3O CN4O
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   NAND0 = {~(A0 & B0)}
+   NOR0 = {~(A0 | B0)}
+   AB0 = {~NAND0 | NOR0}
+   NAND1 = {~(A1 & B1)}
+   NOR1 = {~(A1 | B1)}
+   AB1 = {~NAND1 | NOR1}
+   NAND2 = {~(A2 & B2)}
+   NOR2 = {~(A2 | B2)}
+   AB2 = {~NAND2 | NOR2}
+   NAND3 = {~(A3 & B3)}
+   NOR3 = {~(A3 | B3)}
+   AB3 = {~NAND3 | NOR3}
+   S0O = {AB0 ^ ~CN}
+   OR1 = {NOR0 | (NAND0 & ~CN)}
+   OR2 = {(NOR1 & NOR3) | (NOR3 & NAND2) | (NOR1 & NOR2 & NAND3)}
+   OR3 = {(NOR2 & NOR3) | (NAND1 & NOR3 & NAND2)}
+   OR4 = {(NAND2 & NOR3 & ~NOR2) | (~NOR2 & NAND1 & NOR3) |
+          (NOR2 & ~NOR3) | (NOR1 & NOR3)}
+   OR5 = {(NAND3 & AB1) | (NAND3 & AB2)}
+   OR6 = {(NOR2 & NOR3) | (NAND1 & NOR3 & NAND2) | NOR0}
+   OR7 = {(NOR2 & NOR3) | (NAND1 & NOR3 & NAND2) | (NAND0 & NOR1 & NOR3) |
+          (NAND0 & NOR3 & NAND2) | (NOR2 & NAND0 & NOR1 & NAND3)}
+   S1O = {~((OR1 & ~AB1 & ~OR2) | (OR1 & OR2 & AB1) | (AB1 & ~OR1 & ~OR3) |
+           (~OR1 & ~AB1 & OR3))}
+   S2O = {(~OR1 & ~OR4) | (~AB2 & NOR1 & NOR3) | (~NAND1 & NOR2) | (OR1 & ~OR5)}
+   S3O = {(~OR1 & ~OR5 & AB3) | (OR1 & ~OR3 & OR2)}
+   CN4O = {~((OR6 & OR7) | (~CN & OR7))}

U2 PINDLY(5,0,9) DPWR DGND
+ S0O S1O S2O S3O CN4O
+ CN A0 A1 A2 A3 B0 B1 B2 B3
+ S0 S1 S2 S3 CN4
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) |
+           CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0)}
+   CARRY = {CHANGED(CN,0)}
+   DATAA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0)}
+   DATAB = {CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0)}
+ PINDLY:
+   S0 = {
+     CASE(
+      DATA & (TRN_LH | TRN_HL), DELAY(-1,22NS,37NS),
+      CARRY & (TRN_LH | TRN_HL), DELAY(-1,20NS,34NS),
+      DELAY(-1,23NS,38NS))}
+   S1 = {
+     CASE(
+      DATA & (TRN_LH | TRN_HL), DELAY(-1,43NS,73NS),
+      CARRY & (TRN_LH | TRN_HL), DELAY(-1,40NS,68NS),
+      DELAY(-1,44NS,74NS))}
+   S2 = {
+     CASE(
+      DATA & (TRN_LH | TRN_HL), DELAY(-1,40NS,68NS),
+      CARRY & (TRN_LH | TRN_HL), DELAY(-1,38NS,65NS),
+      DELAY(-1,41NS,69NS))}
+   S3 = {
+     CASE(
+      DATA & (TRN_LH | TRN_HL), DELAY(-1,41NS,70NS),
+      CARRY & (TRN_LH | TRN_HL), DELAY(-1,38NS,65NS),
+      DELAY(-1,42NS,71NS))}
+   CN4 = {
+     CASE(
+      DATAA & (TRN_LH | TRN_HL), DELAY(-1,31NS,53NS),
+      DATAB & (TRN_LH | TRN_HL), DELAY(-1,30NS,51NS),
+      CARRY & (TRN_LH | TRN_HL), DELAY(-1,27NS,46NS),
+      DELAY(-1,32NS,54NS))}

.ENDS 74HCT583

*------------------------------------------------------------74HC589-------

* 8 Bit Serial or Parallel-Input/Serial-Output Shift Register with Tri-State Outputs
* Motorola High-Speed CMOS Data, 1993, pages 5-384 to 5-391
* jat 9/12/96

.SUBCKT 74HC589 A B C D E F G H SA SS/PLBAR SHCLK LTCLK OUTENAB QH
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,16) DPWR DGND
+ SS/PLBAR QLA QLB QLC QLD QLE QLF QLG QLH
+ SETA SETB SETC SETD SETE SETF SETG SETH CLRA CLRB CLRC CLRD CLRE CLRF
+ CLRG CLRH
+ D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   SETA = {~(QLA & ~SS/PLBAR)}
+   CLRA = {~(~QLA & ~SS/PLBAR)}
+   SETB = {~(QLB & ~SS/PLBAR)}
+   CLRB = {~(~QLB & ~SS/PLBAR)}
+   SETC = {~(QLC & ~SS/PLBAR)}
+   CLRC = {~(~QLC & ~SS/PLBAR)}
+   SETD = {~(QLD & ~SS/PLBAR)}
+   CLRD = {~(~QLD & ~SS/PLBAR)}
+   SETE = {~(QLE & ~SS/PLBAR)}
+   CLRE = {~(~QLE & ~SS/PLBAR)}
+   SETF = {~(QLF & ~SS/PLBAR)}
+   CLRF = {~(~QLF & ~SS/PLBAR)}
+   SETG = {~(QLG & ~SS/PLBAR)}
+   CLRG = {~(~QLG & ~SS/PLBAR)}
+   SETH = {~(QLH & ~SS/PLBAR)}
+   CLRH = {~(~QLH & ~SS/PLBAR)}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI LTCLK
+ A B C D E F G H
+ QLA QLB QLC QLD QLE QLF QLG QLH
+ QLABAR QLBBAR QLCBAR QLDBAR QLEBAR QLFBAR QLGBAR QLHBAR
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(1) DPWR DGND
+ SETA CLRA SHCLK
+ SA QSA $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(1) DPWR DGND
+ SETB CLRB SHCLK
+ QSA QSB $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 DFF(1) DPWR DGND
+ SETC CLRC SHCLK
+ QSB QSC $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 DFF(1) DPWR DGND
+ SETD CLRD SHCLK
+ QSC QSD $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 DFF(1) DPWR DGND
+ SETE CLRE SHCLK
+ QSD QSE $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 DFF(1) DPWR DGND
+ SETF CLRF SHCLK
+ QSE QSF $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 DFF(1) DPWR DGND
+ SETG CLRG SHCLK
+ QSF QSG $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 DFF(1) DPWR DGND
+ SETH CLRH SHCLK
+ QSG QSH $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U11 PINDLY(1,1,3) DPWR DGND
+ QSH
+ OUTENAB
+ LTCLK SHCLK SS/PLBAR
+ QH
+ IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SHIFTEDGE = {CHANGED_LH(SHCLK,0)}
+   STOREEDGE = {CHANGED_LH(LTCLK,0)}
+   LOAD = {CHANGED_HL(SS/PLBAR,0)}
+ TRISTATE:
+ ENABLE LO = OUTENAB
+   QH = {
+    CASE(
+      TRN_Z$, DELAY(-1,-1,30NS),
+      TRN_$Z, DELAY(-1,-1,30NS),
+      LOAD & (TRN_LH | TRN_HL), DELAY(-1,-1,35NS),
+      SHIFTEDGE & (TRN_LH | TRN_HL), DELAY(-1,-1,35NS),
+      STOREEDGE & (TRN_LH | TRN_HL), DELAY(-1,-1,42NS),
+      DELAY(-1,-1,43NS))}

U12 CONSTRAINT(12) DPWR DGND
+ SHCLK LTCLK SS/PLBAR SA A B C D E F G H
+ IO_HC IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = SHCLK
+   MAXFREQ = 30MEG
+ FREQ:
+   NODE = LTCLK
+   MAXFREQ = 30MEG
+ WIDTH:
+   NODE = SHCLK
+   MIN_HI = 16NS
+   MIN_LO = 16NS
+ WIDTH:
+   NODE = LTCLK
+   MIN_HI = 16NS
+   MIN_LO = 16NS
+ WIDTH:
+   NODE = SS/PLBAR
+   MIN_LO = 16NS
+ SETUP_HOLD:
+   CLOCK LH = SHCLK
+   DATA(1) = SA
+   SETUPTIME = 20NS
+   HOLDTIME = 5NS
+ SETUP_HOLD:
+   CLOCK LH = LTCLK
+   DATA(8) = A B C D E F G H
+   SETUPTIME = 20NS
+   HOLDTIME = 5NS
+ SETUP_HOLD:
+   CLOCK LH = SHCLK
+   DATA(1) = SS/PLBAR
+   SETUPTIME_HI = 20NS

.ENDS 74HC589

* ----------------------------------------------------------- 74LS589 ------
*  8-Bit Shift Registers With Input Latches And 3-State Output
*
*  The TTL  Data Book, Vol. 2, 1985, TI Pages 3-1131 to 3-1135
*  bss    5/4/94
*
.SUBCKT 74LS589 OCBAR SRCK SRLOAD RCK SER A B C D E F G H QH 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI RCK
+     A B C D E F G H
+     QDA QDB QDC QDD QDE QDF QDG QDH
+     QBDA QBDB QBDC QBDD QBDE QBDF QBDG QBDH
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(1) DPWR DGND
+     PREA CLRA SRCK SER QA QABAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     PREB CLRB SRCKBAR QA QABAR QB QBBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     PREC CLRC SRCKBAR QB QBBAR QC QCBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 jkff(1) DPWR DGND
+     PRED CLRD SRCKBAR QC QCBAR QD QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 jkff(1) DPWR DGND
+     PREE CLRE SRCKBAR QD QDBAR QE QEBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 jkff(1) DPWR DGND
+     PREF CLRF SRCKBAR QE QEBAR QF QFBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 jkff(1) DPWR DGND
+     PREG CLRG SRCKBAR QF QFBAR QG QGBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 jkff(1) DPWR DGND
+     PREH CLRH SRCKBAR QG QGBAR QH_O $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 stim(1,1) DPWR DGND CLEAR
+     IO_STM IO_LEVEL={IO_LEVEL}
+     0NS 1
+     5NS 0

U11LOG LOGICEXP(19,17) DPWR DGND
+     SRLOAD SRCK CLEAR QDA QDB QDC QDD QDE QDF QDG QDH
+		QBDA QBDB QBDC QBDD QBDE QBDF QBDG QBDH
+     PREA CLRA PREB CLRB PREC CLRC PRED CLRD 
+     PREE CLRE PREF CLRF PREG CLRG PREH CLRH SRCKBAR
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     SRCKBAR = {~SRCK}
+     srl = {~SRLOAD}
+     PREA = {~(srl & QDA)}
+     PREB = {~(srl & QDB)}
+     PREC = {~(srl & QDC)}
+     PRED = {~(srl & QDD)}
+     PREE = {~(srl & QDE)}
+     PREF = {~(srl & QDF)}
+     PREG = {~(srl & QDG)}
+     PREH = {~(srl & QDH)}
+     CLRA = {~((srl & QBDA) | CLEAR)}
+     CLRB = {~((srl & QBDB) | CLEAR)}
+     CLRC = {~((srl & QBDC) | CLEAR)}
+     CLRD = {~((srl & QBDD) | CLEAR)}
+     CLRE = {~((srl & QBDE) | CLEAR)}
+     CLRF = {~((srl & QBDF) | CLEAR)}
+     CLRG = {~((srl & QBDG) | CLEAR)}
+     CLRH = {~((srl & QBDH) | CLEAR)}

U12DLY PINDLY(1,1,3) DPWR DGND
+     QH_O
+     OCBAR
+     SRCK SRLOAD RCK
+     QH
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLK1 = {CHANGED_LH(SRCK,0)}
+     LOAD = {CHANGED_HL(SRLOAD,0)}
+     CLK2 = {CHANGED_LH(RCK,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     QH = {
+       CASE(
+         CLK2 & TRN_LH, DELAY(-1,41ns,60ns),
+         CLK2 & TRN_HL, DELAY(-1,32ns,48ns),
+         LOAD & TRN_LH, DELAY(-1,38ns,57ns),
+         LOAD & TRN_HL, DELAY(-1,29ns,44ns),
+         CLK1 & TRN_LH, DELAY(-1,15ns,23ns),
+         CLK1 & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,10ns,15ns),
+         TRN_ZL, DELAY(-1,18ns,27ns),
+         TRN_$Z, DELAY(-1,20ns,30ns),
+         DELAY(-1,42ns,61ns))}

U13CON CONSTRAINT(12) DPWR DGND
+     SRCK RCK SRLOAD SER A B C D E F G H
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=SRCK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=SRCK
+     MIN_HI=15ns
+     MIN_LO=35ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_LO=20ns
+     MIN_HI=20ns
+
+  WIDTH:
+     NODE=SRLOAD
+     MIN_LO=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(8)=A B C D E F G H
+     SETUPTIME=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SER
+     SETUPTIME=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SRLOAD
+     SETUPTIME_HI=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRLOAD
+     DATA(1)=RCK
+     SETUPTIME_HI=40ns

.ENDS 74LS589
*
*
*-------------------------------------------------------------74AC590------

* 8-Bit Binary Counter with Registered 3-State Outputs
* TI Advanced CMOS Logic Data Book, 1993, pages 2-467 to 2-473
* jat 12/26/95

.SUBCKT 74AC590
+ OEBAR RCK CCKENBAR CCK CCLRBAR RCOBAR QA QB QC QD QE QF QG QH
+ OPTIONAL: DPWR = $G_DPWR DGND= $G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(11,10) DPWR DGND
+ CCKENBAR CCK QTA QTB QTC QTD QTE QTF QTG QTH RCK
+ CLKA CLKB CLKC CLKD CLKE CLKF CLKG CLKH RCKBAR RCOBARO
+ D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   CLKA = {~(CCK & (~CCKENBAR))}
+   CLKB = {QTA}
+   CLKC = {QTB}
+   CLKD = {QTC}
+   CLKE = {QTD}
+   CLKF = {QTE}
+   CLKG = {QTF}
+   CLKH = {QTG}
+   RCKBAR = {~RCK}
+   RCOBARO = {~(QTA & QTB & QTC & QTD & QTE & QTF & QTG & QTH & (~CCKENBAR))}

U2 JKFF(1) DPWR DGND
+ $D_HI CCLRBAR CLKA
+ $D_HI $D_HI QTA QTABAR
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+ $D_HI CCLRBAR CLKB
+ $D_HI $D_HI QTB QTBBAR
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+ $D_HI CCLRBAR CLKC
+ $D_HI $D_HI QTC QTCBAR
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 JKFF(1) DPWR DGND
+ $D_HI CCLRBAR CLKD
+ $D_HI $D_HI QTD QTDBAR
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 JKFF(1) DPWR DGND
+ $D_HI CCLRBAR CLKE
+ $D_HI $D_HI QTE QTEBAR
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 JKFF(1) DPWR DGND
+ $D_HI CCLRBAR CLKF
+ $D_HI $D_HI QTF QTFBAR
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 JKFF(1) DPWR DGND
+ $D_HI CCLRBAR CLKG
+ $D_HI $D_HI QTG QTGBAR
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 JKFF(1) DPWR DGND
+ $D_HI CCLRBAR CLKH
+ $D_HI $D_HI QTH QTHBAR
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 JKFF(8) DPWR DGND
+ $D_HI $D_HI RCKBAR
+ QTA QTB QTC QTD QTE QTF QTG QTH
+ QTABAR QTBBAR QTCBAR QTDBAR QTEBAR QTFBAR QTGBAR QTHBAR
+ QAO QBO QCO QDO QEO QFO QGO QHO
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U11 PINDLY(9,1,4) DPWR DGND
+ QAO QBO QCO QDO QEO QFO QGO QHO RCOBARO
+ OEBAR
+ CCK CCLRBAR RCK CCKENBAR
+ QA QB QC QD QE QF QG QH RCOBAR
+ IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CCLOCK = {CHANGED_LH(CCK,0)}
+   RCLOCK = {CHANGED_LH(RCK,0)}
+   CLEAR = {CHANGED_HL(CCLRBAR,0)}
+   CLKENAB = {CHANGED(CCKENBAR,0)}
+ TRISTATE:
+   ENABLE LO = OEBAR
+   QA QB QC QD QE QF QG QH = {
+     CASE(
+       TRN_ZH, DELAY(3.8NS,8.9NS,11.9NS),
+       TRN_ZL, DELAY(3.7NS,9.5NS,12.6NS),
+       TRN_HZ, DELAY(4.5NS,7.5NS,9.4NS),
+       TRN_LZ, DELAY(5.4NS,8.7NS,10.8NS),
+       RCLOCK & TRN_LH, DELAY(3.7NS,8NS,10.4NS),
+       RCLOCK & TRN_HL, DELAY(3.6NS,8.2NS,10.7NS),
+       DELAY(6.4NS,10.5NS,13.6NS))}
+ PINDLY:
+    RCOBAR = {
+      CASE(
+        CLEAR & TRN_LH, DELAY(3.2NS,7.2NS,9.5NS),
+        CLKENAB & TRN_LH, DELAY(3NS,6.9NS,9NS),
+        CLKENAB & TRN_HL, DELAY(2.9NS,7NS,9.2NS),
+        CCLOCK & TRN_LH, DELAY(3.6NS,7.8NS,10.2NS),
+        CCLOCK & TRN_HL, DELAY(4.7NS,9.8NS,12.7NS),
+        DELAY(5.7NS,10.8NS,13.7NS))}

U12 CONSTRAINT(4) DPWR DGND
+ CCK RCK CCLRBAR CCKENBAR
+ IO_AC IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CCK
+   MAXFREQ = 80MEG
+ FREQ:
+   NODE = RCK
+   MAXFREQ = 80MEG
+ WIDTH:
+   NODE = CCK
+   MIN_LO = 6.3NS
+   MIN_HI = 6.3NS
+ WIDTH:
+   NODE = RCK
+   MIN_LO = 6.3NS
+   MIN_HI = 6.3NS
+ WIDTH:
+   NODE = CCLRBAR
+   MIN_LO = 4.9NS
+ SETUP_HOLD:
+   CLOCK LH = CCK
+   DATA(1) = CCKENBAR
+   SETUPTIME_LO = 3.7NS
+   HOLDTIME_LO = 0.5NS
+ SETUP_HOLD:
+   CLOCK LH = CCK
+   DATA(1) = CCLRBAR
+   SETUPTIME_HI = 1.6NS
+ SETUP_HOLD:
+   CLOCK LH = RCK
+   DATA(1) = CCK
+   SETUPTIME_HI = 5.5NS

.ENDS 74AC590

*-------------------------------------------------------------74ACT590------

* 8-Bit Binary Counter with Registered 3-State Outputs
* TI Advanced CMOS Logic Data Book, 1993, pages 2-475 to 2-481
* jat 12/27/95

.SUBCKT 74ACT590
+ OEBAR RCK CCKENBAR CCK CCLRBAR RCOBAR QA QB QC QD QE QF QG QH
+ OPTIONAL: DPWR = $G_DPWR DGND= $G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(11,10) DPWR DGND
+ CCKENBAR CCK QTA QTB QTC QTD QTE QTF QTG QTH RCK
+ CLKA CLKB CLKC CLKD CLKE CLKF CLKG CLKH RCKBAR RCOBARO
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   CLKA = {~(CCK & (~CCKENBAR))}
+   CLKB = {QTA}
+   CLKC = {QTB}
+   CLKD = {QTC}
+   CLKE = {QTD}
+   CLKF = {QTE}
+   CLKG = {QTF}
+   CLKH = {QTG}
+   RCKBAR = {~RCK}
+   RCOBARO = {~(QTA & QTB & QTC & QTD & QTE & QTF & QTG & QTH & (~CCKENBAR))}

U2 JKFF(1) DPWR DGND
+ $D_HI CCLRBAR CLKA
+ $D_HI $D_HI QTA QTABAR
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+ $D_HI CCLRBAR CLKB
+ $D_HI $D_HI QTB QTBBAR
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+ $D_HI CCLRBAR CLKC
+ $D_HI $D_HI QTC QTCBAR
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 JKFF(1) DPWR DGND
+ $D_HI CCLRBAR CLKD
+ $D_HI $D_HI QTD QTDBAR
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 JKFF(1) DPWR DGND
+ $D_HI CCLRBAR CLKE
+ $D_HI $D_HI QTE QTEBAR
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 JKFF(1) DPWR DGND
+ $D_HI CCLRBAR CLKF
+ $D_HI $D_HI QTF QTFBAR
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 JKFF(1) DPWR DGND
+ $D_HI CCLRBAR CLKG
+ $D_HI $D_HI QTG QTGBAR
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 JKFF(1) DPWR DGND
+ $D_HI CCLRBAR CLKH
+ $D_HI $D_HI QTH QTHBAR
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 JKFF(8) DPWR DGND
+ $D_HI $D_HI RCKBAR
+ QTA QTB QTC QTD QTE QTF QTG QTH
+ QTABAR QTBBAR QTCBAR QTDBAR QTEBAR QTFBAR QTGBAR QTHBAR
+ QAO QBO QCO QDO QEO QFO QGO QHO
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U11 PINDLY(9,1,4) DPWR DGND
+ QAO QBO QCO QDO QEO QFO QGO QHO RCOBARO
+ OEBAR
+ CCK CCLRBAR RCK CCKENBAR
+ QA QB QC QD QE QF QG QH RCOBAR
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CCLOCK = {CHANGED_LH(CCK,0)}
+   RCLOCK = {CHANGED_LH(RCK,0)}
+   CLEAR = {CHANGED_HL(CCLRBAR,0)}
+   CLKENAB = {CHANGED(CCKENBAR,0)}
+ TRISTATE:
+   ENABLE LO = OEBAR
+   QA QB QC QD QE QF QG QH = {
+     CASE(
+       TRN_ZH, DELAY(4NS,8.3NS,13.2NS),
+       TRN_ZL, DELAY(3.8NS,8.2NS,13.9NS),
+       TRN_HZ, DELAY(5.3NS,8NS,10.3NS),
+       TRN_LZ, DELAY(6.1NS,9.1NS,11.5NS),
+       RCLOCK & TRN_LH, DELAY(4.6NS,8NS,11.1NS),
+       RCLOCK & TRN_HL, DELAY(3.9NS,7.6NS,11.8NS),
+       DELAY(7.1NS,10.1NS,14.9NS))}
+ PINDLY:
+    RCOBAR = {
+      CASE(
+        CLEAR & TRN_LH, DELAY(3.5NS,7NS,11NS),
+        CLKENAB & TRN_LH, DELAY(3.8NS,6.8NS,9.7NS),
+        CLKENAB & TRN_HL, DELAY(2.8NS,7.6NS,11NS),
+        CCLOCK & TRN_LH, DELAY(4.5NS,8NS,11NS),
+        CCLOCK & TRN_HL, DELAY(5.1NS,9NS,13.8NS),
+        DELAY(6.1NS,10NS,14.8NS))}

U12 CONSTRAINT(4) DPWR DGND
+ CCK RCK CCLRBAR CCKENBAR
+ IO_ACT IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CCK
+   MAXFREQ = 80MEG
+ FREQ:
+   NODE = RCK
+   MAXFREQ = 80MEG
+ WIDTH:
+   NODE = CCK
+   MIN_LO = 6.3NS
+   MIN_HI = 6.3NS
+ WIDTH:
+   NODE = RCK
+   MIN_LO = 6.3NS
+   MIN_HI = 6.3NS
+ WIDTH:
+   NODE = CCLRBAR
+   MIN_LO = 8.4NS
+ SETUP_HOLD:
+   CLOCK LH = CCK
+   DATA(1) = CCKENBAR
+   SETUPTIME_LO = 5.1NS
+   HOLDTIME_LO = 0.6NS
+ SETUP_HOLD:
+   CLOCK LH = CCK
+   DATA(1) = CCLRBAR
+   SETUPTIME_HI = 1.6NS
+ SETUP_HOLD:
+   CLOCK LH = RCK
+   DATA(1) = CCK
+   SETUPTIME_HI = 5.5NS

.ENDS 74ACT590

* ----------------------------------------------------------- 74HC590A ------
*  8-Bit Binary Counters With 3-State Output Registers
*
*  The High Speed CMOS Data Book, 1989, TI Pages 2-521 to 2-525
*  bss    5/5/94
*
.SUBCKT 74HC590A GBAR RCK CCKENBAR CCK CCLRBAR RCOBAR 
+     QA QB QC QD QE QF QG QH 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(8) DPWR DGND
+     $D_HI $D_HI RCKBAR
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK1 $D_HI $D_HI Q1 Q1BAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK2 $D_HI $D_HI Q2 Q2BAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK3 $D_HI $D_HI Q3 Q3BAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK4 $D_HI $D_HI Q4 Q4BAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK5 $D_HI $D_HI Q5 Q5BAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK6 $D_HI $D_HI Q6 Q6BAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK7 $D_HI $D_HI Q7 Q7BAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK8 $D_HI $D_HI Q8 Q8BAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 nand(2) DPWR DGND
+     CCK ENCLK CLK1
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U11LOG LOGICEXP(12,10) DPWR DGND
+     RCK CCKENBAR CCK Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 CLK1
+     RCKBAR RCOBAR_O CLK2 CLK3 CLK4 CLK5 CLK6 CLK7 CLK8 ENCLK
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+		RCKBAR = {~RCK}
+     RCOBAR_O = {~(Q1 & Q2 & Q3 & Q4 & Q5 & Q6 & Q7 & Q8)}
+     ENCLK = {(~(CCKENBAR & CLK1) & CCK)}
+     CLK2 = {Q1 & CLK1}
+     CLK3 = {CLK1 & Q1 & Q2}
+     CLK4 = {CLK1 & Q1 & Q2 & Q3}
+     CLK5 = {CLK1 & Q1 & Q2 & Q3 & Q4}
+     CLK6 = {CLK1 & Q1 & Q2 & Q3 & Q4 & Q5}
+     CLK7 = {CLK1 & Q1 & Q2 & Q3 & Q4 & Q5 & Q6}
+     CLK8 = {CLK1 & Q1 & Q2 & Q3 & Q4 & Q5 & Q6 & Q7}

U12DLY PINDLY(9,1,3) DPWR DGND
+     RCOBAR_O QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O
+     GBAR
+     CCK RCK CCLRBAR
+     RCOBAR QA QB QC QD QE QF QG QH
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKC = {CHANGED_LH(CCK,0)}
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     CLEAR = {CHANGED_HL(CCLRBAR,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD QE QF QG QH = {
+       CASE(
+         CLOCKR, DELAY(-1,18ns,28ns),
+         TRN_Z$, DELAY(-1,20ns,25ns),
+         TRN_$Z, DELAY(-1,20ns,25ns),
+         DELAY(-1,21ns,29ns))}
+
+  PINDLY:
+     RCOBAR =  {
+       CASE(
+         CLEAR & TRN_LH, DELAY(-1,18ns,26ns),
+         CLOCKC, DELAY(-1,20ns,30ns),
+         DELAY(-1,21ns,31ns))}

U13CON CONSTRAINT(4) DPWR DGND
+     CCK RCK CCLRBAR CCKENBAR
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CCK
+     MAXFREQ=16MEG
+
+  FREQ:
+     NODE=RCK
+     MAXFREQ=16MEG
+
+  WIDTH:
+     NODE=CCK
+     MIN_HI=31ns
+     MIN_LO=31ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=31ns
+     MIN_LO=31ns
+
+  WIDTH:
+     NODE=CCLRBAR
+     MIN_LO=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=CCKENBAR
+     SETUPTIME_LO=25ns
+     HOLDTIME=12ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=CCK
+     SETUPTIME_HI=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=CCLRBAR
+     SETUPTIME_HI=25ns

.ENDS 74HC590A
*
*
* ----------------------------------------------------------- 74LS590 ------
*  8-Bit Binary Counters With 3-State Output Registers
*
*  The TTL Data Book, 1988, TI Pages 2-977 to 2-980
*  bss    5/5/94
*
.SUBCKT 74LS590 GBAR RCK CCKENBAR CCK CCLRBAR RCOBAR 
+     QA QB QC QD QE QF QG QH 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(8) DPWR DGND
+     $D_HI $D_HI RCKBAR
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK1 $D_HI $D_HI Q1 Q1BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK2 $D_HI $D_HI Q2 Q2BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK3 $D_HI $D_HI Q3 Q3BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK4 $D_HI $D_HI Q4 Q4BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK5 $D_HI $D_HI Q5 Q5BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK6 $D_HI $D_HI Q6 Q6BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK7 $D_HI $D_HI Q7 Q7BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK8 $D_HI $D_HI Q8 Q8BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 nand(2) DPWR DGND
+     CCK ENCLK CLK1
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U11LOG LOGICEXP(12,10) DPWR DGND
+     RCK CCKENBAR CCK Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 CLK1
+     RCKBAR RCOBAR_O CLK2 CLK3 CLK4 CLK5 CLK6 CLK7 CLK8 ENCLK
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     RCKBAR = {~RCK}
+     RCOBAR_O = {~(Q1 & Q2 & Q3 & Q4 & Q5 & Q6 & Q7 & Q8)}
+     ENCLK = {(~(CCKENBAR & CLK1) & CCK)}
+     CLK2 = {Q1 & CLK1}
+     CLK3 = {CLK1 & Q1 & Q2}
+     CLK4 = {CLK1 & Q1 & Q2 & Q3}
+     CLK5 = {CLK1 & Q1 & Q2 & Q3 & Q4}
+     CLK6 = {CLK1 & Q1 & Q2 & Q3 & Q4 & Q5}
+     CLK7 = {CLK1 & Q1 & Q2 & Q3 & Q4 & Q5 & Q6}
+     CLK8 = {CLK1 & Q1 & Q2 & Q3 & Q4 & Q5 & Q6 & Q7}

U12DLY PINDLY(9,1,3) DPWR DGND
+     RCOBAR_O QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O
+     GBAR
+     CCK RCK CCLRBAR
+     RCOBAR QA QB QC QD QE QF QG QH
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKC = {CHANGED_LH(CCK,0)}
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     CLEAR = {CHANGED_HL(CCLRBAR,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD QE QF QG QH = {
+       CASE(
+         CLOCKR & TRN_LH, DELAY(-1,12ns,18ns),
+         CLOCKR & TRN_HL, DELAY(-1,22ns,33ns),
+         TRN_ZH, DELAY(-1,25ns,38ns),
+         TRN_ZL, DELAY(-1,30ns,45ns),
+         TRN_HZ, DELAY(-1,20ns,30ns),
+         TRN_LZ, DELAY(-1,25ns,38ns),
+         DELAY(-1,31ns,46ns))}
+
+  PINDLY:
+     RCOBAR =  {
+       CASE(
+         CLEAR & TRN_LH, DELAY(-1,30ns,45ns),
+         CLOCKC & TRN_LH, DELAY(-1,14ns,22ns),
+         CLOCKC & TRN_HL, DELAY(-1,20ns,30ns),
+         DELAY(-1,31ns,46ns))}

U13CON CONSTRAINT(4) DPWR DGND
+     CCK RCK CCLRBAR CCKENBAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CCK
+     MAXFREQ=20MEG
+
+  FREQ:
+     NODE=RCK
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=CCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=CCLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=CCKENBAR
+     SETUPTIME_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=CCK
+     SETUPTIME_HI=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=CCLRBAR
+     SETUPTIME_HI=20ns

.ENDS 74LS590
*
*
* ----------------------------------------------------------- 74LS591 ------
*  8-Bit Binary Counters With Open Collector Output Registers
*
*  The TTL Data Book, 1988, TI Pages 2-977 to 2-980
*  bss    5/5/94
*
.SUBCKT 74LS591 GBAR RCK CCKENBAR CCK CCLRBAR RCOBAR 
+     QA QB QC QD QE QF QG QH 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 jkff(8) DPWR DGND
+     $D_HI $D_HI RCKBAR
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK1 $D_HI $D_HI Q1 Q1BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK2 $D_HI $D_HI Q2 Q2BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK3 $D_HI $D_HI Q3 Q3BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK4 $D_HI $D_HI Q4 Q4BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK5 $D_HI $D_HI Q5 Q5BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK6 $D_HI $D_HI Q6 Q6BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK7 $D_HI $D_HI Q7 Q7BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 jkff(1) DPWR DGND
+     $D_HI CCLRBAR CLK8 $D_HI $D_HI Q8 Q8BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 nand(2) DPWR DGND
+     CCK ENCLK CLK1
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U11LOG LOGICEXP(21,18) DPWR DGND
+     RCK CCKENBAR CCK Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 CLK1
+     GBAR QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O
+     RCKBAR RCOBAR_O CLK2 CLK3 CLK4 CLK5 CLK6 CLK7 CLK8 ENCLK
+     QA_OC QB_OC QC_OC QD_OC QE_OC QF_OC QG_OC QH_OC
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     RCKBAR = {~RCK}
+     RCOBAR_O = {~(Q1 & Q2 & Q3 & Q4 & Q5 & Q6 & Q7 & Q8)}
+     ENCLK = {(~(CCKENBAR & CLK1) & CCK)}
+     CLK2 = {Q1 & CLK1}
+     CLK3 = {CLK1 & Q1 & Q2}
+     CLK4 = {CLK1 & Q1 & Q2 & Q3}
+     CLK5 = {CLK1 & Q1 & Q2 & Q3 & Q4}
+     CLK6 = {CLK1 & Q1 & Q2 & Q3 & Q4 & Q5}
+     CLK7 = {CLK1 & Q1 & Q2 & Q3 & Q4 & Q5 & Q6}
+     CLK8 = {CLK1 & Q1 & Q2 & Q3 & Q4 & Q5 & Q6 & Q7}
+     QA_OC = {GBAR | QA_O}
+     QB_OC = {GBAR | QB_O}
+     QC_OC = {GBAR | QC_O}
+     QD_OC = {GBAR | QD_O}
+     QE_OC = {GBAR | QE_O}
+     QF_OC = {GBAR | QF_O}
+     QG_OC = {GBAR | QG_O}
+     QH_OC = {GBAR | QH_O}

U12DLY PINDLY(8,0,2) DPWR DGND
+     QA_OC QB_OC QC_OC QD_OC QE_OC QF_OC QG_OC QH_OC
+     RCK GBAR
+     QA QB QC QD QE QF QG QH
+     IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKR = {CHANGED_LH(RCK,0)}
+		ENAB = {CHANGED(GBAR,0)}
+
+  PINDLY:
+     QA QB QC QD QE QF QG QH = {
+       CASE(
+         ENAB & TRN_LH, DELAY(-1,34ns,50ns),
+			 ENAB & TRN_HL, DELAY(-1,32ns,48ns),
+			 CLOCKR & TRN_LH, DELAY(-1,25ns,38ns),
+         CLOCKR & TRN_HL, DELAY(-1,28ns,42ns),
+         DELAY(-1,31ns,46ns))}

U13DLY PINDLY(1,0,2) DPWR DGND
+     RCOBAR_O
+     CCK CCLRBAR
+     RCOBAR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKC = {CHANGED_LH(CCK,0)}
+     CLEAR = {CHANGED_HL(CCLRBAR,0)}
+
+  PINDLY:
+     RCOBAR =  {
+       CASE(
+         CLEAR & TRN_LH, DELAY(-1,32ns,48ns),
+         CLOCKC & TRN_LH, DELAY(-1,16ns,24ns),
+         CLOCKC & TRN_HL, DELAY(-1,25ns,38ns),
+         DELAY(-1,33ns,49ns))}

U14CON CONSTRAINT(4) DPWR DGND
+     CCK RCK CCLRBAR CCKENBAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CCK
+     MAXFREQ=20MEG
+
+  FREQ:
+     NODE=RCK
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=CCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=CCLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=CCKENBAR
+     SETUPTIME_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=CCK
+     SETUPTIME_HI=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=CCLRBAR
+     SETUPTIME_HI=20ns

.ENDS 74LS591
*
*
* ----------------------------------------------------------- 74LS592 ------
*  8-Bit Binary Counters With Input Registers
*
*  The TTL Data Book, 1988, TI Pages 2-981 to 2-988
*  bss    5/6/94
*
.SUBCKT 74LS592 CCLRBAR CCKENBAR CCK CLOADBAR RCK A B C D E F G H RCOBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI RCK
+     A B C D E F G H
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(1) DPWR DGND
+     J1 K1 CLK1 $D_HI $D_HI QA $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     J2 K2 CLK2 $D_HI $D_HI QB $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     J3 K3 CLK3 $D_HI $D_HI QC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 jkff(1) DPWR DGND
+     J4 K4 CLK4 $D_HI $D_HI QD $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 jkff(1) DPWR DGND
+     J5 K5 CLK5 $D_HI $D_HI QE $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 jkff(1) DPWR DGND
+     J6 K6 CLK6 $D_HI $D_HI QF $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 jkff(1) DPWR DGND
+     J7 K7 CLK7 $D_HI $D_HI QG $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 jkff(1) DPWR DGND
+     J8 K8 CLK8 $D_HI $D_HI QH $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 nand(2) DPWR DGND
+     CCK ENCLK CLK1
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U11LOG LOGICEXP(29,25) DPWR DGND
+     CCLRBAR CCKENBAR CCK CLOADBAR Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR CLK1
+		QA QB QC QD QE QF QG QH
+     RCOBAR_O J1 J2 J3 J4 J5 J6 J7 J8 K1 K2 K3 K4 K5 K6 K7 K8
+     ENCLK CLK2 CLK3 CLK4 CKL5 CLK6 CLK7 CLK8
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     ENCLK = {(~(CCKENBAR & CLK1) & CCK)}
+     cload = {~CLOADBAR}
+     J1 = {~(cload & Q1)}
+     J2 = {~(cload & Q2)}
+     J3 = {~(cload & Q3)}
+     J4 = {~(cload & Q4)}
+     J5 = {~(cload & Q5)}
+     J6 = {~(cload & Q6)}
+     J7 = {~(cload & Q7)}
+     J8 = {~(cload & Q8)}
+     K1 = {(CCLRBAR & (~(cload & Q1BAR)))}
+     K2 = {(CCLRBAR & (~(cload & Q2BAR)))}
+     K3 = {(CCLRBAR & (~(cload & Q3BAR)))}
+     K4 = {(CCLRBAR & (~(cload & Q4BAR)))}
+     K5 = {(CCLRBAR & (~(cload & Q5BAR)))}
+     K6 = {(CCLRBAR & (~(cload & Q6BAR)))}
+     K7 = {(CCLRBAR & (~(cload & Q7BAR)))}
+     K8 = {(CCLRBAR & (~(cload & Q8BAR)))}
+     RCOBAR_O = {~(QA & QB & QC & QD & QE & QF & QG & QH)}
+     CLK2 = {CLK1 & QA}
+     CLK3 = {CLK1 & QA & QB}
+     CLK4 = {CLK1 & QA & QB & QC}
+     CLK5 = {CLK1 & QA & QB & QC & QD}
+     CLK6 = {CLK1 & QA & QB & QC & QD & QE}
+     CLK7 = {CLK1 & QA & QB & QC & QD & QE & QF}
+     CLK8 = {CLK1 & QA & QB & QC & QD & QE & QF & QG}

U12DLY PINDLY(1,0,4) DPWR DGND
+     RCOBAR_O
+     CCK CLOADBAR CCLRBAR RCK
+     RCOBAR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKC = {CHANGED_LH(CCK,0)}
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     LOAD = {CHANGED_HL(CLOADBAR,0)}
+     CLEAR = {CHANGED_HL(CCLRBAR,0)}
+
+  PINDLY:
+     RCOBAR = {
+       CASE(
+         CLEAR & TRN_LH, DELAY(-1,30ns,45ns),
+         LOAD & TRN_LH, DELAY(-1,31ns,47ns),
+         LOAD & TRN_HL, DELAY(-1,27ns,41ns),
+         CLOCKR & CLOADBAR=='0 & TRN_LH, DELAY(-1,35ns,53ns),
+         CLOCKR & CLOADBAR=='0 & TRN_HL, DELAY(-1,30ns,45ns),
+         CLOCKC & TRN_LH, DELAY(-1,15ns,23ns),
+         CLOCKC & TRN_HL, DELAY(-1,20ns,30ns),
+         DELAY(-1,36ns,54ns))}

U13CON CONSTRAINT(13) DPWR DGND
+     CCK RCK CCLRBAR CLOADBAR CCKENBAR A B C D E F G H
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CCK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=CCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=CCLRBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=CLOADBAR
+     MIN_LO=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=CCKENBAR
+     SETUPTIME_LO=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLOADBAR
+     DATA(1)=RCK
+     SETUPTIME_HI=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(8)=A B C D E F G H
+     SETUPTIME=20ns
+     WHEN={CLOADBAR=='0 & CCLRBAR!='0}
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(2)=CCLRBAR CLOADBAR
+     SETUPTIME_HI=20ns

.ENDS 74LS592
*
*
*-------------------------------------------------------------74AC593------

* 8-Bit Binary Counter with 3-State I/O Input Registers
* TI Advanced CMOS Logic Data Book, 1993, pages 2-483 to 2-491
* jat 12/27/95

.SUBCKT 74AC593 OE OEBAR CCKEN CCKENBAR CCK CCLRBAR CLOADBAR RCKBAR RCK
+ A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH RCOBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(33,27) DPWR DGND
+ RCK RCKBAR CCK CCKEN CCKENBAR QA QB QC QD QE QF QG QH REGQA REGQB REGQC
+ REGQD REGQE REGQF REGQG REGQH CLOADBAR CCLRBAR REGQABAR REGQBBAR REGQCBAR
+ REGQDBAR REGQEBAR REGQFBAR REGQGBAR REGQHBAR OE OEBAR
+ REGCLOCK CLKA CLKB CLKC CLKD CLKE CLKF CLKG CLKH SA SB SC SD SE SF SG SH
+ RA RB RC RD RE RF RG RH RCOBARO OUTENAB
+ D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   REGCLOCK = {RCK & (~RCKBAR)}
+   CLKA = {~(CCK & (CCKEN | (~CCKENBAR)))}
+   CLKB = {QA}
+   CLKC = {QB}
+   CLKD = {QC}
+   CLKE = {QD}
+   CLKF = {QE}
+   CLKG = {QF}
+   CLKH = {QG}
+   SA = {~(REGQA & (~CLOADBAR))}
+   SB = {~(REGQB & (~CLOADBAR))}
+   SC = {~(REGQC & (~CLOADBAR))}
+   SD = {~(REGQD & (~CLOADBAR))}
+   SE = {~(REGQE & (~CLOADBAR))}
+   SF = {~(REGQF & (~CLOADBAR))}
+   SG = {~(REGQG & (~CLOADBAR))}
+   SH = {~(REGQH & (~CLOADBAR))}
+   RA = {~((~CCLRBAR) | ((~CLOADBAR) & REGQABAR))}
+   RB = {~((~CCLRBAR) | ((~CLOADBAR) & REGQBBAR))}
+   RC = {~((~CCLRBAR) | ((~CLOADBAR) & REGQCBAR))}
+   RD = {~((~CCLRBAR) | ((~CLOADBAR) & REGQDBAR))}
+   RE = {~((~CCLRBAR) | ((~CLOADBAR) & REGQEBAR))}
+   RF = {~((~CCLRBAR) | ((~CLOADBAR) & REGQFBAR))}
+   RG = {~((~CCLRBAR) | ((~CLOADBAR) & REGQGBAR))}
+   RH = {~((~CCLRBAR) | ((~CLOADBAR) & REGQHBAR))}
+   RCOBARO = {~(QA & QB & QC & QD & QE & QF & QG & QH)}
+   OUTENAB = {OE & (~OEBAR)}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI REGCLOCK
+ A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+ REGQA REGQB REGQC REGQD REGQE REGQF REGQG REGQH
+ REGQABAR REGQBBAR REGQCBAR REGQDBAR REGQEBAR REGQFBAR REGQGBAR REGQHBAR
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+ SA RA CLKA
+ $D_HI $D_HI QA $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+ SB RB CLKB
+ $D_HI $D_HI QB $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 JKFF(1) DPWR DGND
+ SC RC CLKC
+ $D_HI $D_HI QC $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 JKFF(1) DPWR DGND
+ SD RD CLKD
+ $D_HI $D_HI QD $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 JKFF(1) DPWR DGND
+ SE RE CLKE
+ $D_HI $D_HI QE $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 JKFF(1) DPWR DGND
+ SF RF CLKF
+ $D_HI $D_HI QF $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 JKFF(1) DPWR DGND
+ SG RG CLKG
+ $D_HI $D_HI QG $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 JKFF(1) DPWR DGND
+ SH RH CLKH
+ $D_HI $D_HI QH $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U11 PINDLY(9,1,6) DPWR DGND
+ QA QB QC QD QE QF QG QH RCOBARO
+ OUTENAB
+ CCK CLOADBAR CCLRBAR OE OEBAR RCK
+ A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH RCOBAR
+ IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    OUT = {CHANGED(OE,0)}
+    OUTBAR = {CHANGED(OEBAR,0)}
+    CLEAR = {CHANGED_HL(CCLRBAR,0)}
+    LOAD = {CHANGED_HL(CLOADBAR,0)}
+    CCLOCK = {CHANGED_LH(CCK,0)}
+    RCLOCK = {CHANGED_LH(RCK,0)}
+ TRISTATE:
+  ENABLE HI = OUTENAB
+  A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH = {
+    CASE(
+    OUT & TRN_ZH, DELAY(4.1NS,9.1NS,13.2NS),
+    OUT & TRN_ZL, DELAY(4.1NS,9.4NS,13.8NS),
+    OUT & TRN_HZ, DELAY(4.2NS,7.6NS,10.6NS),
+    OUT & TRN_LZ, DELAY(5.3NS,8.8NS,11.8NS),
+    OUTBAR & TRN_ZH, DELAY(3.8NS,8.7NS,13NS),
+    OUTBAR & TRN_ZL, DELAY(3.9NS,9.1NS,13.4NS),
+    OUTBAR & TRN_HZ, DELAY(4.4NS,7.3NS,10.1NS),
+    OUTBAR & TRN_LZ, DELAY(5.2NS,8.5NS,11.6NS),
+    CLEAR & TRN_HL, DELAY(3.3NS,7.9NS,11.8NS),
+    LOAD & TRN_LH, DELAY(3.7NS,10NS,15.3NS),
+    LOAD & TRN_HL, DELAY(3.4NS,11.4NS,18.3NS),
+    CCLOCK & TRN_LH, DELAY(4.1NS,8.7NS,12.4NS),
+    CCLOCK & TRN_HL, DELAY(4.2NS,8.9NS,12.6NS),
+    DELAY(6.3NS,12.4NS,19.3NS))}
+ PINDLY:
+    RCOBAR = {
+      CASE(
+        CLEAR & TRN_LH, DELAY(3.6NS,8NS,11.6NS),
+        LOAD & TRN_LH, DELAY(3.5NS,7.8NS,11.2NS),
+        LOAD & TRN_HL, DELAY(5.6NS,11.7NS,16.6NS),
+        CCLOCK & TRN_LH, DELAY(3.5NS,7.6NS,11.2NS),
+        CCLOCK & TRN_HL, DELAY(4.1NS,9.2NS,13.4NS),
+        RCLOCK & TRN_LH, DELAY(5NS,10.3NS,14.4NS),
+        RCLOCK & TRN_HL, DELAY(5.5NS,11.7NS,16.6NS),
+        DELAY(6.6NS,12.7NS,17.6NS))}

U12 CONSTRAINT(15) DPWR DGND
+ CCK RCK RCKBAR CCLRBAR CLOADBAR CCKENBAR CCKEN A/QA B/QB C/QC D/QD E/QE
+ F/QF G/QG H/QH
+ IO_AC IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = RCK
+  MAXFREQ = 70MEG
+ FREQ:
+  NODE = CCK
+  MAXFREQ = 70MEG
+ WIDTH:
+  NODE = RCK
+  MIN_HI = 5NS
+  MIN_LO = 5NS
+ WIDTH:
+  NODE = CCK
+  MIN_HI = 5NS
+  MIN_LO = 5NS
+ WIDTH:
+  NODE = RCKBAR
+  MIN_HI = 4.5NS
+  MIN_LO = 4.5NS
+ WIDTH:
+  NODE = CCLRBAR
+  MIN_LO = 5NS
+ WIDTH:
+  NODE = CLOADBAR
+  MIN_LO = 4.7NS
+ SETUP_HOLD:
+  CLOCK LH = CCK
+  DATA(1) = CCKENBAR
+  SETUPTIME_LO = 3.1NS
+  HOLDTIME_LO = 0.8NS
+ SETUP_HOLD:
+  CLOCK LH = CCK
+  DATA(1) = CCKEN
+  SETUPTIME_HI = 4.3NS
+  HOLDTIME_HI = 0.8NS
+ SETUP_HOLD:
+  CLOCK LH = CCK
+  DATA(1) = CCLRBAR
+  SETUPTIME_HI = 1.1NS
+  HOLDTIME_HI = 0.8NS
+ SETUP_HOLD:
+  CLOCK LH = CCK
+  DATA(1) = CLOADBAR
+  SETUPTIME_HI = 5.4NS
+  HOLDTIME_HI = 0.8NS
+ SETUP_HOLD:
+  CLOCK LH = CLOADBAR
+  DATA(1) = RCK
+  SETUPTIME_HI = 7.8NS
+  HOLDTIME_HI = 0.8NS
+ SETUP_HOLD:
+  CLOCK LH = RCK
+  DATA(8) = A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+  SETUPTIME = 2NS
+  HOLDTIME = 1.1NS

.ENDS 74AC593

*-------------------------------------------------------------74ACT593------

* 8-Bit Binary Counter with Parallel-Input Registers and 3-State Outputs
* TI Advanced CMOS Logic Data Book, 1993, pages 2-493 to 2-499
* jat 12/27/95

.SUBCKT 74ACT593 OE OEBAR CCKEN CCKENBAR CCK CCLRBAR CLOADBAR RCKBAR RCK
+ A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH RCOBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(33,27) DPWR DGND
+ RCK RCKBAR CCK CCKEN CCKENBAR QA QB QC QD QE QF QG QH REGQA REGQB REGQC
+ REGQD REGQE REGQF REGQG REGQH CLOADBAR CCLRBAR REGQABAR REGQBBAR REGQCBAR
+ REGQDBAR REGQEBAR REGQFBAR REGQGBAR REGQHBAR OE OEBAR
+ REGCLOCK CLKA CLKB CLKC CLKD CLKE CLKF CLKG CLKH SA SB SC SD SE SF SG SH
+ RA RB RC RD RE RF RG RH RCOBARO OUTENAB
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   REGCLOCK = {RCK & (~RCKBAR)}
+   CLKA = {~(CCK & (CCKEN | (~CCKENBAR)))}
+   CLKB = {QA}
+   CLKC = {QB}
+   CLKD = {QC}
+   CLKE = {QD}
+   CLKF = {QE}
+   CLKG = {QF}
+   CLKH = {QG}
+   SA = {~(REGQA & (~CLOADBAR))}
+   SB = {~(REGQB & (~CLOADBAR))}
+   SC = {~(REGQC & (~CLOADBAR))}
+   SD = {~(REGQD & (~CLOADBAR))}
+   SE = {~(REGQE & (~CLOADBAR))}
+   SF = {~(REGQF & (~CLOADBAR))}
+   SG = {~(REGQG & (~CLOADBAR))}
+   SH = {~(REGQH & (~CLOADBAR))}
+   RA = {~((~CCLRBAR) | ((~CLOADBAR) & REGQABAR))}
+   RB = {~((~CCLRBAR) | ((~CLOADBAR) & REGQBBAR))}
+   RC = {~((~CCLRBAR) | ((~CLOADBAR) & REGQCBAR))}
+   RD = {~((~CCLRBAR) | ((~CLOADBAR) & REGQDBAR))}
+   RE = {~((~CCLRBAR) | ((~CLOADBAR) & REGQEBAR))}
+   RF = {~((~CCLRBAR) | ((~CLOADBAR) & REGQFBAR))}
+   RG = {~((~CCLRBAR) | ((~CLOADBAR) & REGQGBAR))}
+   RH = {~((~CCLRBAR) | ((~CLOADBAR) & REGQHBAR))}
+   RCOBARO = {~(QA & QB & QC & QD & QE & QF & QG & QH & (CCKEN & (~CCKENBAR)))}
+   OUTENAB = {OE & (~OEBAR)}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI REGCLOCK
+ A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+ REGQA REGQB REGQC REGQD REGQE REGQF REGQG REGQH
+ REGQABAR REGQBBAR REGQCBAR REGQDBAR REGQEBAR REGQFBAR REGQGBAR REGQHBAR
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+ SA RA CLKA
+ $D_HI $D_HI QA $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+ SB RB CLKB
+ $D_HI $D_HI QB $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 JKFF(1) DPWR DGND
+ SC RC CLKC
+ $D_HI $D_HI QC $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 JKFF(1) DPWR DGND
+ SD RD CLKD
+ $D_HI $D_HI QD $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 JKFF(1) DPWR DGND
+ SE RE CLKE
+ $D_HI $D_HI QE $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 JKFF(1) DPWR DGND
+ SF RF CLKF
+ $D_HI $D_HI QF $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 JKFF(1) DPWR DGND
+ SG RG CLKG
+ $D_HI $D_HI QG $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 JKFF(1) DPWR DGND
+ SH RH CLKH
+ $D_HI $D_HI QH $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U11 PINDLY(9,1,6) DPWR DGND
+ QA QB QC QD QE QF QG QH RCOBARO
+ OUTENAB
+ CCK CLOADBAR CCLRBAR OE OEBAR RCK
+ A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH RCOBAR
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    OUT = {CHANGED(OE,0)}
+    OUTBAR = {CHANGED(OEBAR,0)}
+    CLEAR = {CHANGED_HL(CCLRBAR,0)}
+    LOAD = {CHANGED_HL(CLOADBAR,0)}
+    CCLOCK = {CHANGED_LH(CCK,0)}
+    RCLOCK = {CHANGED_LH(RCK,0)}
+ TRISTATE:
+  ENABLE HI = OUTENAB
+  A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH = {
+    CASE(
+    OUT & TRN_ZH, DELAY(5.9NS,10.9NS,14.3NS),
+    OUT & TRN_ZL, DELAY(5.9NS,11.1NS,14.8NS),
+    OUT & TRN_HZ, DELAY(5.3NS,9NS,11.8NS),
+    OUT & TRN_LZ, DELAY(6.2NS,10.2NS,13.1NS),
+    OUTBAR & TRN_ZH, DELAY(4.9NS,10.4NS,14.4NS),
+    OUTBAR & TRN_ZL, DELAY(5.1NS,10.7NS,15NS),
+    OUTBAR & TRN_HZ, DELAY(5.6NS,8.6NS,10.7NS),
+    OUTBAR & TRN_LZ, DELAY(6.4NS,9.9NS,12NS),
+    CLEAR & TRN_HL, DELAY(5NS,10.4NS,14.3NS),
+    LOAD & TRN_LH, DELAY(5.5NS,12NS,16.9NS),
+    LOAD & TRN_HL, DELAY(5.8NS,13.5NS,19.4NS),
+    CCLOCK & TRN_LH, DELAY(5.6NS,10.2NS,13.3NS),
+    CCLOCK & TRN_HL, DELAY(5.8NS,10.3NS,13.3NS),
+    DELAY(7.4NS,14.5NS,20.4NS))}
+ PINDLY:
+    RCOBAR = {
+      CASE(
+        CLEAR & TRN_LH, DELAY(5.1NS,10.3NS,14.5NS),
+        LOAD & TRN_LH, DELAY(4.6NS,9.6NS,13.3NS),
+        LOAD & TRN_HL, DELAY(7.1NS,13.6NS,18.5NS),
+        CCLOCK & TRN_LH, DELAY(4.9NS,9.2NS,12.1NS),
+        CCLOCK & TRN_HL, DELAY(5.8NS,10.9NS,14.3NS),
+        RCLOCK & TRN_LH, DELAY(6.7NS,12NS,15.6NS),
+        RCLOCK & TRN_HL, DELAY(7.5NS,13.6NS,17.8NS),
+        DELAY(8.5NS,14.6NS,19.5NS))}

U12 CONSTRAINT(14) DPWR DGND
+ CCK RCK CCLRBAR CLOADBAR CCKENBAR CCKEN A/QA B/QB C/QC D/QD E/QE
+ F/QF G/QG H/QH
+ IO_ACT IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = RCK
+  MAXFREQ = 52MEG
+ FREQ:
+  NODE = CCK
+  MAXFREQ = 52MEG
+ WIDTH:
+  NODE = RCK
+  MIN_HI = 5.8NS
+  MIN_LO = 5.8NS
+ WIDTH:
+  NODE = CCK
+  MIN_HI = 9.6NS
+  MIN_LO = 9.6NS
+ WIDTH:
+  NODE = CCLRBAR
+  MIN_LO = 7.6NS
+ WIDTH:
+  NODE = CLOADBAR
+  MIN_LO = 6.2NS
+ SETUP_HOLD:
+  CLOCK LH = CCK
+  DATA(1) = CCKENBAR
+  SETUPTIME_LO = 3.6NS
+  HOLDTIME_LO = 0.8NS
+ SETUP_HOLD:
+  CLOCK LH = CCK
+  DATA(1) = CCKEN
+  SETUPTIME_HI = 4NS
+  HOLDTIME_HI = 0.8NS
+ SETUP_HOLD:
+  CLOCK LH = CCK
+  DATA(1) = CCLRBAR
+  SETUPTIME_HI = 1.2NS
+  HOLDTIME_HI = 0.8NS
+ SETUP_HOLD:
+  CLOCK LH = CCK
+  DATA(1) = CLOADBAR
+  SETUPTIME_HI = 5.1NS
+  HOLDTIME_HI = 0.8NS
+ SETUP_HOLD:
+  CLOCK LH = CLOADBAR
+  DATA(1) = RCK
+  SETUPTIME_HI = 7.4NS
+  HOLDTIME_HI = 0.8NS
+ SETUP_HOLD:
+  CLOCK LH = RCK
+  DATA(8) = A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+  SETUPTIME = 2.4NS
+  HOLDTIME = 1.2NS

.ENDS 74ACT593

*-------------------------------------------------------------74LS593------

* 8-Bit Binary Counter with 3-State Input Registers
* TI TTL Logic Data Book, 1988, pages 2-981 to 2-988
* jat 8/14/96

.SUBCKT 74LS593 G GBAR CCKEN CCKENBAR CCK CCLRBAR CLOADBAR RCKENBAR RCK
+ A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH RCOBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(33,27) DPWR DGND
+ RCK RCKENBAR CCK CCKEN CCKENBAR QA QB QC QD QE QF QG QH REGQA REGQB REGQC
+ REGQD REGQE REGQF REGQG REGQH CLOADBAR CCLRBAR REGQABAR REGQBBAR REGQCBAR
+ REGQDBAR REGQEBAR REGQFBAR REGQGBAR REGQHBAR G GBAR
+ REGCLOCK CLKA CLKB CLKC CLKD CLKE CLKF CLKG CLKH SA SB SC SD SE SF SG SH
+ RA RB RC RD RE RF RG RH RCOBARO OUTENAB
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   REGCLOCK = {RCK & (~RCKENBAR)}
+   CLKA = {~(CCK | (~(CCKEN | (~CCKENBAR))))}
+   CLKB = {QA}
+   CLKC = {QB}
+   CLKD = {QC}
+   CLKE = {QD}
+   CLKF = {QE}
+   CLKG = {QF}
+   CLKH = {QG}
+   SA = {~(REGQA & (~CLOADBAR))}
+   SB = {~(REGQB & (~CLOADBAR))}
+   SC = {~(REGQC & (~CLOADBAR))}
+   SD = {~(REGQD & (~CLOADBAR))}
+   SE = {~(REGQE & (~CLOADBAR))}
+   SF = {~(REGQF & (~CLOADBAR))}
+   SG = {~(REGQG & (~CLOADBAR))}
+   SH = {~(REGQH & (~CLOADBAR))}
+   RA = {~((~CCLRBAR) | ((~CLOADBAR) & REGQABAR))}
+   RB = {~((~CCLRBAR) | ((~CLOADBAR) & REGQBBAR))}
+   RC = {~((~CCLRBAR) | ((~CLOADBAR) & REGQCBAR))}
+   RD = {~((~CCLRBAR) | ((~CLOADBAR) & REGQDBAR))}
+   RE = {~((~CCLRBAR) | ((~CLOADBAR) & REGQEBAR))}
+   RF = {~((~CCLRBAR) | ((~CLOADBAR) & REGQFBAR))}
+   RG = {~((~CCLRBAR) | ((~CLOADBAR) & REGQGBAR))}
+   RH = {~((~CCLRBAR) | ((~CLOADBAR) & REGQHBAR))}
+   RCOBARO = {~(QA & QB & QC & QD & QE & QF & QG & QH)}
+   OUTENAB = {G & (~GBAR)}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI REGCLOCK
+ A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+ REGQA REGQB REGQC REGQD REGQE REGQF REGQG REGQH
+ REGQABAR REGQBBAR REGQCBAR REGQDBAR REGQEBAR REGQFBAR REGQGBAR REGQHBAR
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+ SA RA CLKA
+ $D_HI $D_HI QA $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+ SB RB CLKB
+ $D_HI $D_HI QB $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 JKFF(1) DPWR DGND
+ SC RC CLKC
+ $D_HI $D_HI QC $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 JKFF(1) DPWR DGND
+ SD RD CLKD
+ $D_HI $D_HI QD $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 JKFF(1) DPWR DGND
+ SE RE CLKE
+ $D_HI $D_HI QE $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 JKFF(1) DPWR DGND
+ SF RF CLKF
+ $D_HI $D_HI QF $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 JKFF(1) DPWR DGND
+ SG RG CLKG
+ $D_HI $D_HI QG $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 JKFF(1) DPWR DGND
+ SH RH CLKH
+ $D_HI $D_HI QH $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U11 PINDLY(9,1,6) DPWR DGND
+ QA QB QC QD QE QF QG QH RCOBARO
+ OUTENAB
+ CCK CLOADBAR CCLRBAR G GBAR RCK
+ A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH RCOBAR
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    OUT = {CHANGED(G,0)}
+    OUTBAR = {CHANGED(GBAR,0)}
+    CLEAR = {CHANGED_HL(CCLRBAR,0)}
+    LOAD = {CHANGED_HL(CLOADBAR,0)}
+    CCLOCK = {CHANGED_LH(CCK,0)}
+    RCLOCK = {CHANGED_LH(RCK,0)}
+ TRISTATE:
+  ENABLE HI = OUTENAB
+  A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH = {
+    CASE(
+    OUT & TRN_ZH, DELAY(-1,31NS,47NS),
+    OUT & TRN_ZL, DELAY(-1,27NS,40NS),
+    OUT & TRN_HZ, DELAY(-1,33NS,50NS),
+    OUT & TRN_LZ, DELAY(-1,35NS,52NS),
+    OUTBAR & TRN_ZH, DELAY(-1,29NS,45NS),
+    OUTBAR & TRN_ZL, DELAY(-1,31NS,47NS),
+    OUTBAR & TRN_HZ, DELAY(-1,26NS,39NS),
+    OUTBAR & TRN_LZ, DELAY(-1,28NS,42NS),
+    CLEAR & TRN_HL, DELAY(-1,25NS,38NS),
+    LOAD & TRN_LH, DELAY(-1,34NS,51NS),
+    LOAD & TRN_HL, DELAY(-1,28NS,42NS),
+    CCLOCK & TRN_LH, DELAY(-1,14NS,21NS),
+    CCLOCK & TRN_HL, DELAY(-1,26NS,39NS),
+    DELAY(-1,36NS,53NS))}
+ PINDLY:
+    RCOBAR = {
+      CASE(
+        CLEAR & TRN_LH, DELAY(-1,30NS,45NS),
+        LOAD & TRN_LH, DELAY(-1,31NS,47NS),
+        LOAD & TRN_HL, DELAY(-1,27NS,41NS),
+        CCLOCK & TRN_LH, DELAY(-1,14NS,21NS),
+        CCLOCK & TRN_HL, DELAY(-1,20NS,30NS),
+        RCLOCK & TRN_LH, DELAY(-1,42NS,63NS),
+        RCLOCK & TRN_HL, DELAY(-1,33NS,50NS),
+        DELAY(-1,43NS,64NS))}

U12 CONSTRAINT(15) DPWR DGND
+ CCK RCK RCKENBAR CCLRBAR CLOADBAR CCKENBAR CCKEN A/QA B/QB C/QC D/QD E/QE
+ F/QF G/QG H/QH
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CCK
+  MAXFREQ = 20MEG
+ WIDTH:
+  NODE = RCK
+  MIN_HI = 20NS
+  MIN_LO = 20NS
+ WIDTH:
+  NODE = CCK
+  MIN_HI = 25NS
+  MIN_LO = 25NS
+ WIDTH:
+  NODE = CCLRBAR
+  MIN_LO = 20NS
+ WIDTH:
+  NODE = CLOADBAR
+  MIN_LO = 40NS
+ SETUP_HOLD:
+  CLOCK LH = CCK
+  DATA(1) = CCKENBAR
+  SETUPTIME_LO = 30NS
+ SETUP_HOLD:
+  CLOCK LH = CCK
+  DATA(1) = CCKEN
+  SETUPTIME_HI = 30NS
+ SETUP_HOLD:
+  CLOCK LH = CCK
+  DATA(1) = CCLRBAR
+  SETUPTIME_HI = 20NS
+ SETUP_HOLD:
+  CLOCK LH = CCK
+  DATA(1) = CLOADBAR
+  SETUPTIME_HI = 20NS
+ SETUP_HOLD:
+  CLOCK LH = CLOADBAR
+  DATA(1) = RCK
+  SETUPTIME_HI = 30NS
+ SETUP_HOLD:
+  CLOCK LH = RCK
+  DATA(8) = A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+  SETUPTIME = 20NS
+ SETUP_HOLD:
+  CLOCK LH = RCK
+  DATA(1) = RCKENBAR
+  SETUPTIME = 20NS

.ENDS 74LS593

* ----------------------------------------------------------- 74HC594 ------
*  8-Bit Shift Registers With Output Latches
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-527 to 2-532
*  bss    5/9/94
*
.SUBCKT 74HC594 RCLRBAR RCK SRCLRBAR SRCK SER 
+     QA QB QC QD QE QF QG QH QHS
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(1) DPWR DGND
+     $D_HI SRCLRBAR SRCK SER Q1 Q1BAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(7) DPWR DGND
+     $D_HI SRCLRBAR SRCKBAR
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     Q2 Q3 Q4 Q5 Q6 Q7 QHS_O Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(8) DPWR DGND
+     $D_HI RCLRBAR RCKBAR
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 QHS_O 
+     Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 inva(2) DPWR DGND
+     RCK SRCK RCKBAR SRCKBAR
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(9,0,4) DPWR DGND
+     QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O QHS_O
+     RCK SRCK SRCLRBAR RCLRBAR
+     QA QB QC QD QE QF QG QH QHS
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     CLOCKS = {CHANGED_LH(SRCK,0)}
+     CLEARR = {CHANGED_HL(RCLRBAR,0)}
+     CLEARS = {CHANGED_HL(SRCLRBAR,0)}
+
+  PINDLY:
+     QA QB QC QD QE QF QG QH = {
+       CASE(
+         CLEARR, DELAY(-1,20ns,25ns),
+         CLOCKR, DELAY(-1,20ns,30ns),
+         DELAY(-1,21ns,31ns))}
+
+     QHS = {
+       CASE(
+         CLEARS, DELAY(-1,20ns,30ns),
+         CLOCKS, DELAY(-1,20ns,30ns),
+         DELAY(-1,21ns,31ns))}

U6CON CONSTRAINT(5) DPWR DGND
+     SRCK RCK SRCLRBAR RCLRBAR SER
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=SRCK
+     MAXFREQ=20MEG
+
+  FREQ:
+     NODE=RCK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=SRCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=SRCLRBAR
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=RCLRBAR
+     MIN_LO=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SER
+     SETUPTIME=22ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=SRCK
+     SETUPTIME_HI=22ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=SRCLRBAR
+     SETUPTIME_LO=13ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SRCLRBAR
+     SETUPTIME_HI=10ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=RCLRBAR
+     SETUPTIME_HI=5ns

.ENDS 74HC594

*------------------------------------------------------------74HCT594-------

* 8-bit shift register with output register
* Philips High-Speed CMOS Logic Family Data Handbook, 1994, pages 711 to 719
* jat 9/12/96

.SUBCKT 74HCT594 STCP SHCP DS SHRBAR STRBAR Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q7P
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI SHRBAR SHCP
+ DS QS0 QS1 QS2 QS3 QS4 QS5 QS6
+ QS0 QS1 QS2 QS3 QS4 QS5 QS6 QS7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 DFF(8) DPWR DGND
+ $D_HI STRBAR STCP
+ QS0 QS1 QS2 QS3 QS4 QS5 QS6 QS7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(9,0,4) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O QS7
+ SHCP STCP SHRBAR STRBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q7P
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SHIFTEDGE = {CHANGED_LH(SHCP,0)}
+   STOREEDGE = {CHANGED_LH(STCP,0)}
+   SHIFTCLEAR = {CHANGED_HL(SHRBAR,0)}
+   STORECLEAR = {CHANGED_HL(STRBAR,0)}
+ PINDLY:
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+      STORECLEAR & TRN_HL, DELAY(-1,17NS,30NS),
+      STOREEDGE & (TRN_LH | TRN_HL), DELAY(-1,18NS,32NS),
+      DELAY(-1,19NS,33NS))}
+ PINDLY:
+   Q7P = {
+    CASE(
+      SHIFTCLEAR & TRN_HL, DELAY(-1,17NS,30NS),
+      SHIFTEDGE & (TRN_LH | TRN_HL), DELAY(-1,18NS,32NS),
+      DELAY(-1,19NS,33NS))}

U4 CONSTRAINT(5) DPWR DGND
+ DS SHCP STCP STRBAR SHRBAR
+ IO_HCT IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = SHCP
+   MAXFREQ = 92MEG
+ FREQ:
+   NODE = STCP
+   MAXFREQ = 92MEG
+ WIDTH:
+   NODE = SHCP
+   MIN_HI = 4NS
+   MIN_LO = 4NS
+ WIDTH:
+   NODE = STCP
+   MIN_HI = 4NS
+   MIN_LO = 4NS
+ WIDTH:
+   NODE = SHRBAR
+   MIN_LO = 6NS
+   MIN_HI = 6NS
+ WIDTH:
+   NODE = STRBAR
+   MIN_LO = 6NS
+   MIN_HI = 6NS
+ SETUP_HOLD:
+   CLOCK LH = SHCP
+   DATA(1) = DS
+   SETUPTIME = 4NS
+ SETUP_HOLD:
+   CLOCK LH = STCP
+   DATA(1) = SHCP
+   SETUPTIME_HI = 7NS
+ SETUP_HOLD:
+   CLOCK LH = STCP
+   DATA(1) = SHRBAR
+   SETUPTIME = 6NS

.ENDS 74HCT594

* ----------------------------------------------------------- 74LS594 ------
*  8-Bit Shift Registers With Output Latches
*
*  The TTL Logic Data Book, 1988, TI Pages 2-989 to 2-992
*  bss    5/9/94
*
.SUBCKT 74LS594 RCLRBAR RCK SRCLRBAR SRCK SER 
+     QA QB QC QD QE QF QG QH QHS
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(1) DPWR DGND
+     $D_HI SRCLRBAR SRCK SER Q1 Q1BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(7) DPWR DGND
+     $D_HI SRCLRBAR SRCKBAR
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     Q2 Q3 Q4 Q5 Q6 Q7 QHS_O Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(8) DPWR DGND
+     $D_HI RCLRBAR RCKBAR
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 QHS_O 
+     Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 inva(2) DPWR DGND
+     RCK SRCK RCKBAR SRCKBAR
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(9,0,4) DPWR DGND
+     QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O QHS_O
+     RCK SRCK SRCLRBAR RCLRBAR
+     QA QB QC QD QE QF QG QH QHS
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     CLOCKS = {CHANGED_LH(SRCK,0)}
+     CLEARR = {CHANGED_HL(RCLRBAR,0)}
+     CLEARS = {CHANGED_HL(SRCLRBAR,0)}
+
+  PINDLY:
+     QA QB QC QD QE QF QG QH = {
+       CASE(
+         CLEARR & TRN_HL, DELAY(-1,38ns,57ns),
+         CLOCKR & TRN_LH, DELAY(-1,12ns,18ns),
+         CLOCKR & TRN_HL, DELAY(-1,20ns,30ns),
+         DELAY(-1,39ns,58ns))}
+
+     QHS = {
+       CASE(
+         CLEARS & TRN_HL, DELAY(-1,22ns,33ns),
+         CLOCKS & TRN_LH, DELAY(-1,12ns,18ns),
+         CLOCKS & TRN_HL, DELAY(-1,15ns,23ns),
+         DELAY(-1,23ns,34ns))}

U6CON CONSTRAINT(5) DPWR DGND
+     SRCK RCK SRCLRBAR RCLRBAR SER
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=SRCK
+     MAXFREQ=20MEG
+
+  FREQ:
+     NODE=RCK
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=SRCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=SRCLRBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=RCLRBAR
+     MIN_LO=35ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SER
+     SETUPTIME=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=SRCK
+     SETUPTIME_HI=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=SRCLRBAR
+     SETUPTIME_LO=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SRCLRBAR
+     SETUPTIME_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=RCLRBAR
+     SETUPTIME_HI=20ns

.ENDS 74LS594

*------------------------------------------------------------74F595-------

* 8 Bit Shift Register with Output Latches (Tri-State)
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 588 to 593
* jat 7/17/96

.SUBCKT 74F595 OEBAR STCP SHCP SHRBAR DS Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 QS
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U0 LOGICEXP(2,2) DPWR DGND
+ SHCP STCP SHCPBAR STCPBAR
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   SHCPBAR = {~SHCP}
+   STCPBAR = {~STCP}

U1 DFF(1) DPWR DGND
+ $D_HI SHRBAR SHCP
+ DS QS0 QS0BAR
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(7) DPWR DGND
+ $D_HI SHRBAR SHCPBAR
+ QS0 QS1 QS2 QS3 QS4 QS5 QS6
+ QS0BAR QS1BAR QS2BAR QS3BAR QS4BAR QS5BAR QS6BAR
+ QS1 QS2 QS3 QS4 QS5 QS6 QS7
+ QS1BAR QS2BAR QS3BAR QS4BAR QS5BAR QS6BAR QS7BAR
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(8) DPWR DGND
+ $D_HI $D_HI STCPBAR
+ QS0 QS1 QS2 QS3 QS4 QS5 QS6 QS7
+ QS0BAR QS1BAR QS2BAR QS3BAR QS4BAR QS5BAR QS6BAR QS7BAR
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(9,1,3) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O QS7
+ OEBAR
+ SHCP STCP SHRBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 QS
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SHIFTEDGE = {CHANGED_LH(SHCP,0)}
+   STOREEDGE = {CHANGED_LH(STCP,0)}
+   CLEAR = {CHANGED_HL(SHRBAR,0)}
+ TRISTATE:
+   ENABLE LO = OEBAR
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+      TRN_ZH, DELAY(3.5NS,5.5NS,9NS),
+      TRN_ZL, DELAY(3NS,5.5NS,8.5NS),
+      TRN_HZ, DELAY(2NS,4NS,7NS),
+      TRN_LZ, DELAY(4NS,6NS,9NS),
+      STOREEDGE & TRN_LH, DELAY(5.5NS,8NS,10NS),
+      STOREEDGE & TRN_HL, DELAY(3NS,5NS,8NS),
+      DELAY(6.5NS,9NS,11NS))}
+ PINDLY:
+   QS = {
+    CASE(
+      CLEAR & TRN_HL, DELAY(3.5NS,5.5NS,8NS),
+      SHIFTEDGE & TRN_LH, DELAY(6NS,8NS,10.5NS),
+      SHIFTEDGE & TRN_HL, DELAY(2.5NS,4.5NS,7.5NS),
+      DELAY(7NS,9NS,11NS))}

U5 CONSTRAINT(4) DPWR DGND
+ DS SHCP STCP SHRBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = SHCP
+   MAXFREQ = 135MEG
+ WIDTH:
+   NODE = SHCP
+   MIN_HI = 3.5NS
+   MIN_LO = 4NS
+ WIDTH:
+   NODE = STCP
+   MIN_HI = 4NS
+   MIN_LO = 3NS
+ WIDTH:
+   NODE = SHRBAR
+   MIN_LO = 3NS
+ SETUP_HOLD:
+   CLOCK LH = SHCP
+   DATA(1) = DS
+   SETUPTIME = 2NS
+ SETUP_HOLD:
+   CLOCK LH = STCP
+   DATA(1) = SHRBAR
+   SETUPTIME_LO = 4.5NS
+ SETUP_HOLD:
+   CLOCK LH = STCP
+   DATA(1) = SHCP
+   SETUPTIME_HI = 4.5NS
+ SETUP_HOLD:
+   CLOCK LH = SHCP
+   DATA(1) = SHRBAR
+   SETUPTIME_HI = 3NS

.ENDS 74F595

* ----------------------------------------------------------- 74HC595 ------
*  8-Bit Shift Registers With 3-State Output Registers
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-533 to 2-537
*  bss    5/9/94
*
.SUBCKT 74HC595 GBAR RCK SRCLRBAR SRCK SER 
+     QA QB QC QD QE QF QG QH QHS
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(1) DPWR DGND
+     $D_HI SRCLRBAR SRCK SER Q1 Q1BAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(7) DPWR DGND
+     $D_HI SRCLRBAR SRCKBAR
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     Q2 Q3 Q4 Q5 Q6 Q7 QHS_O Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(8) DPWR DGND
+     $D_HI $D_HI RCKBAR
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 QHS_O 
+     Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 inva(2) DPWR DGND
+     RCK SRCK RCKBAR SRCKBAR
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(9,1,3) DPWR DGND
+     QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O QHS_O
+     GBAR
+     RCK SRCK SRCLRBAR
+     QA QB QC QD QE QF QG QH QHS
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     CLOCKS = {CHANGED_LH(SRCK,0)}
+     CLEARS = {CHANGED_HL(SRCLRBAR,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD QE QF QG QH = {
+       CASE(
+         CLOCKR & TRN_LH, DELAY(-1,17ns,30ns),
+         CLOCKR & TRN_HL, DELAY(-1,17ns,30ns),
+         TRN_Z$, DELAY(-1,15ns,30ns),
+         TRN_$Z, DELAY(-1,23ns,40ns),
+         DELAY(-1,24ns,41ns))}
+
+  PINDLY:
+     QHS = {
+       CASE(
+         CLEARS & TRN_HL, DELAY(-1,18ns,35ns),
+         CLOCKS & TRN_LH, DELAY(-1,17ns,32ns),
+         CLOCKS & TRN_HL, DELAY(-1,17ns,32ns),
+         DELAY(-1,19ns,36ns))}

U6CON CONSTRAINT(5) DPWR DGND
+     SRCK RCK SRCLRBAR RCLRBAR SER
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=SRCK
+     MAXFREQ=25MEG
+
+  FREQ:
+     NODE=RCK
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=SRCK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=SRCLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SER
+     SETUPTIME=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=SRCK
+     SETUPTIME_HI=19ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=SRCLRBAR
+     SETUPTIME_LO=13ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SRCLRBAR
+     SETUPTIME_HI=12ns

.ENDS 74HC595

*------------------------------------------------------------74HC595A-------

* 8 Bit serial in/serial out or parallel out shift register with output
* latches; tri-state
* Motorola High-Speed CMOS Logic Family Data Handbook, 1993, pages 5-392 to 398
* jat 9/12/96

.SUBCKT 74HC595A OUTENAB A SHCLK RESET LTCLK QA QB QC QD QE QF QG QH SQH
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI RESET SHCLK
+ A QSA QSB QSC QSD QSE QSF QSG
+ QSA QSB QSC QSD QSE QSF QSG QSH
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI LTCLK
+ QSA QSB QSC QSD QSE QSF QSG QSH
+ QAO QBO QCO QDO QEO QFO QGO QHO
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(9,1,3) DPWR DGND
+ QAO QBO QCO QDO QEO QFO QGO QHO QSH
+ OUTENAB
+ SHCLK LTCLK RESET
+ QA QB QC QD QE QF QG QH SQH
+ IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SHIFTEDGE = {CHANGED_LH(SHCLK,0)}
+   STOREEDGE = {CHANGED_LH(LTCLK,0)}
+   CLEAR = {CHANGED_HL(RESET,0)}
+ TRISTATE:
+   ENABLE LO = OUTENAB
+   QA QB QC QD QE QF QG QH = {
+     CASE(
+      TRN_Z$, DELAY(-1,-1,27NS),
+      TRN_$Z, DELAY(-1,-1,30NS),
+      STOREEDGE & (TRN_LH | TRN_HL), DELAY(-1,-1,28NS),
+      DELAY(-1,-1,31NS))}
+ PINDLY:
+   SQH = {
+    CASE(
+      CLEAR & TRN_HL, DELAY(-1,-1,29NS),
+      SHIFTEDGE & (TRN_LH | TRN_HL), DELAY(-1,-1,28NS),
+      DELAY(-1,-1,30NS))}

U4 CONSTRAINT(4) DPWR DGND
+ SHCLK LTCLK A RESET
+ IO_HC IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = SHCLK
+   MAXFREQ = 30MEG
+ FREQ:
+   NODE = LTCLK
+   MAXFREQ = 30MEG
+ WIDTH:
+   NODE = SHCLK
+   MIN_HI = 10NS
+   MIN_LO = 10NS
+ WIDTH:
+   NODE = LTCLK
+   MIN_HI = 10NS
+   MIN_LO = 10NS
+ WIDTH:
+   NODE = RESET
+   MIN_LO = 12NS
+ SETUP_HOLD:
+   CLOCK LH = SHCLK
+   DATA(1) = A
+   SETUPTIME = 10NS
+   HOLDTIME = 5NS
+ SETUP_HOLD:
+   CLOCK LH = LTCLK
+   DATA(1) = SHCLK
+   SETUPTIME_HI = 15NS
+ SETUP_HOLD:
+   CLOCK LH = SHCLK
+   DATA(1) = RESET
+   SETUPTIME_HI = 10NS

.ENDS 74HC595A

*------------------------------------------------------------74HCT595-------

* 8 Bit serial in/serial out or parallel out shift register with output
* latches; tri-state
* Philips High-Speed CMOS Logic Family Data Handbook, 1994, pages 721 to 732
* jat 9/12/96

.SUBCKT 74HCT595 OEBAR STCP SHCP MRBAR DS Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q7P
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI MRBAR SHCP
+ DS QS0 QS1 QS2 QS3 QS4 QS5 QS6
+ QS0 QS1 QS2 QS3 QS4 QS5 QS6 QS7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI STCP
+ QS0 QS1 QS2 QS3 QS4 QS5 QS6 QS7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(9,1,3) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O QS7
+ OEBAR
+ SHCP STCP MRBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q7P
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SHIFTEDGE = {CHANGED_LH(SHCP,0)}
+   STOREEDGE = {CHANGED_LH(STCP,0)}
+   CLEAR = {CHANGED_HL(MRBAR,0)}
+ TRISTATE:
+   ENABLE LO = OEBAR
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+      TRN_Z$, DELAY(-1,21NS,35NS),
+      TRN_$Z, DELAY(-1,18NS,30NS),
+      STOREEDGE & (TRN_LH | TRN_HL), DELAY(-1,24NS,40NS),
+      DELAY(-1,25NS,41NS))}
+ PINDLY:
+   Q7P = {
+    CASE(
+      CLEAR & TRN_HL, DELAY(-1,23NS,40NS),
+      SHIFTEDGE & (TRN_LH | TRN_HL), DELAY(-1,25NS,42NS),
+      DELAY(-1,26NS,43NS))}

U4 CONSTRAINT(4) DPWR DGND
+ DS SHCP STCP MRBAR
+ IO_HCT IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = SHCP
+   MAXFREQ = 52MEG
+ FREQ:
+   NODE = STCP
+   MAXFREQ = 52MEG
+ WIDTH:
+   NODE = SHCP
+   MIN_HI = 6NS
+   MIN_LO = 6NS
+ WIDTH:
+   NODE = STCP
+   MIN_HI = 5NS
+   MIN_LO = 5NS
+ WIDTH:
+   NODE = MRBAR
+   MIN_LO = 8NS
+ SETUP_HOLD:
+   CLOCK LH = SHCP
+   DATA(1) = DS
+   SETUPTIME = 5NS
+ SETUP_HOLD:
+   CLOCK LH = STCP
+   DATA(1) = SHCP
+   SETUPTIME_HI = 8NS

.ENDS 74HCT595

* ----------------------------------------------------------- 74LS595 ------
*  8-Bit Shift Registers With 3-State Output Registers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-993 to 2-997
*  bss    5/9/94
*
.SUBCKT 74LS595 GBAR RCK SRCLRBAR SRCK SER 
+     QA QB QC QD QE QF QG QH QHS
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(1) DPWR DGND
+     $D_HI SRCLRBAR SRCK SER Q1 Q1BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(7) DPWR DGND
+     $D_HI SRCLRBAR SRCKBAR
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     Q2 Q3 Q4 Q5 Q6 Q7 QHS_O Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(8) DPWR DGND
+     $D_HI $D_HI RCKBAR
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 QHS_O 
+     Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 inva(2) DPWR DGND
+     RCK SRCK RCKBAR SRCKBAR
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(9,1,3) DPWR DGND
+     QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O QHS_O
+     GBAR
+     RCK SRCK SRCLRBAR
+     QA QB QC QD QE QF QG QH QHS
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     CLOCKS = {CHANGED_LH(SRCK,0)}
+     CLEARS = {CHANGED_HL(SRCLRBAR,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD QE QF QG QH = {
+       CASE(
+         CLOCKR & TRN_LH, DELAY(-1,12ns,18ns),
+         CLOCKR & TRN_HL, DELAY(-1,24ns,35ns),
+         TRN_ZH, DELAY(-1,20ns,30ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,20ns,30ns),
+         TRN_LZ, DELAY(-1,25ns,38ns),
+         DELAY(-1,26ns,39ns))}
+
+  PINDLY:
+     QHS = {
+       CASE(
+         CLEARS & TRN_HL, DELAY(-1,24ns,35ns),
+         CLOCKS & TRN_LH, DELAY(-1,12ns,18ns),
+         CLOCKS & TRN_HL, DELAY(-1,17ns,25ns),
+         DELAY(-1,25ns,36ns))}

U6CON CONSTRAINT(5) DPWR DGND
+     SRCK RCK SRCLRBAR RCLRBAR SER
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=SRCK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=SRCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=SRCLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SER
+     SETUPTIME=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=SRCK
+     SETUPTIME_HI=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=SRCLRBAR
+     SETUPTIME_LO=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SRCLRBAR
+     SETUPTIME_HI=20ns

.ENDS 74LS595
*
*
* ----------------------------------------------------------- 74LS596 ------
*  8-Bit Shift Registers With 3-State Output Registers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-993 to 2-997
*  bss    5/9/94
*
.SUBCKT 74LS596 GBAR RCK SRCLRBAR SRCK SER 
+     QA QB QC QD QE QF QG QH QHS
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(1) DPWR DGND
+     $D_HI SRCLRBAR SRCK SER Q1 Q1BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(7) DPWR DGND
+     $D_HI SRCLRBAR SRCKBAR
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     Q2 Q3 Q4 Q5 Q6 Q7 QHS_O Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(8) DPWR DGND
+     $D_HI $D_HI RCKBAR
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 QHS_O 
+     Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 inva(2) DPWR DGND
+     RCK SRCK RCKBAR SRCKBAR
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 ora(2,8) DPWR DGND
+     QA_O GBAR QB_O GBAR QC_O GBAR QD_O GBAR QE_O GBAR QF_O GBAR 
+     QG_O GBAR QH_O GBAR
+     QA_OC QB_OC QC_OC QD_OC QE_OC QF_OC QG_OC QH_OC
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6DLY PINDLY(8,0,2) DPWR DGND
+     QA_OC QB_OC QC_OC QD_OC QE_OC QF_OC QG_OC QH_OC
+     GBAR RCK
+     QA QB QC QD QE QF QG QH
+     IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     GUP = {CHANGED_LH(GBAR,0)}
+     GDOWN = {CHANGED_HL(GBAR,0)}
+
+  PINDLY:
+     QA QB QC QD QE QF QG QH = {
+       CASE(
+         CLOCKR & TRN_LH, DELAY(-1,28ns,42ns),
+         CLOCKR & TRN_HL, DELAY(-1,24ns,35ns),
+         GUP & TRN_LH, DELAY(-1,40ns,60ns),
+         GDOWN & TRN_HL, DELAY(-1,25ns,38ns),
+         DELAY(-1,41ns,61ns))}

U7DLY PINDLY(1,0,2) DPWR DGND
+     QHS_O
+     SRCK SRCLRBAR
+     QHS
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKS = {CHANGED_LH(SRCK,0)}
+     CLEARS = {CHANGED_HL(SRCLRBAR,0)}
+
+  PINDLY:
+     QHS = {
+       CASE(
+         CLEARS & TRN_HL, DELAY(-1,24ns,35ns),
+         CLOCKS & TRN_LH, DELAY(-1,14ns,21ns),
+         CLOCKS & TRN_HL, DELAY(-1,20ns,30ns),
+         DELAY(-1,25ns,36ns))}

U8CON CONSTRAINT(5) DPWR DGND
+     SRCK RCK SRCLRBAR RCLRBAR SER
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=SRCK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=SRCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=SRCLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SER
+     SETUPTIME=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=SRCK
+     SETUPTIME_HI=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=SRCLRBAR
+     SETUPTIME_LO=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SRCLRBAR
+     SETUPTIME_HI=20ns

.ENDS 74LS596

*------------------------------------------------------------74F597-----

* 8 Bit Shift Register with Input Storage Registers
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 594 to 600
* jat 7/17/96

.SUBCKT 74F597 STCP SHCP SHRSTBAR SHLDBAR DS D0 D1 D2 D3 D4 D5 D6 D7 QS
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(18,16) DPWR DGND
+ SHLDBAR SHRSTBAR Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR
+ Q5BAR Q6BAR Q7BAR
+ SET0 CLR0 SET1 CLR1 SET2 CLR2 SET3 CLR3 SET4 CLR4 SET5 CLR5 SET6 CLR6
+ SET7 CLR7 
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   SET0 = {~(Q0 & ~SHLDBAR)}
+   CLR0 = {SHRSTBAR & (~(~SHLDBAR & Q0BAR))}
+   SET1 = {~(Q1 & ~SHLDBAR)}
+   CLR1 = {SHRSTBAR & (~(~SHLDBAR & Q1BAR))}
+   SET2 = {~(Q2 & ~SHLDBAR)}
+   CLR2 = {SHRSTBAR & (~(~SHLDBAR & Q2BAR))}
+   SET3 = {~(Q3 & ~SHLDBAR)}
+   CLR3 = {SHRSTBAR & (~(~SHLDBAR & Q3BAR))}
+   SET4 = {~(Q4 & ~SHLDBAR)}
+   CLR4 = {SHRSTBAR & (~(~SHLDBAR & Q4BAR))}
+   SET5 = {~(Q5 & ~SHLDBAR)}
+   CLR5 = {SHRSTBAR & (~(~SHLDBAR & Q5BAR))}
+   SET6 = {~(Q6 & ~SHLDBAR)}
+   CLR6 = {SHRSTBAR & (~(~SHLDBAR & Q6BAR))}
+   SET7 = {~(Q7 & ~SHLDBAR)}
+   CLR7 = {SHRSTBAR & (~(~SHLDBAR & Q7BAR))}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI STCP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(1) DPWR DGND
+ SET0 CLR0 SHCP
+ DS QS0 $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(1) DPWR DGND
+ SET1 CLR1 SHCP
+ QS0 QS1 $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 DFF(1) DPWR DGND
+ SET2 CLR2 SHCP
+ QS1 QS2 $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 DFF(1) DPWR DGND
+ SET3 CLR3 SHCP
+ QS2 QS3 $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 DFF(1) DPWR DGND
+ SET4 CLR4 SHCP
+ QS3 QS4 $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 DFF(1) DPWR DGND
+ SET5 CLR5 SHCP
+ QS4 QS5 $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 DFF(1) DPWR DGND
+ SET6 CLR6 SHCP
+ QS5 QS6 $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 DFF(1) DPWR DGND
+ SET7 CLR7 SHCP
+ QS6 QS7 $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U11 PINDLY(1,0,4) DPWR DGND
+ QS7
+ SHCP STCP SHRSTBAR SHLDBAR
+ QS
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SHIFTEDGE = {CHANGED_LH(SHCP,0)}
+   STOREEDGE = {CHANGED_LH(STCP,0)}
+   CLEAR = {CHANGED_HL(SHRSTBAR,0)}
+   LOAD = {CHANGED_HL(SHLDBAR,0)}
+ PINDLY:
+   QS = {
+    CASE(
+      LOAD & TRN_LH, DELAY(8NS,9.5NS,12NS),
+      LOAD & TRN_HL, DELAY(6NS,7.5NS,10NS),
+      CLEAR & TRN_HL, DELAY(2.5NS,5.5NS,9NS),
+      SHIFTEDGE & TRN_LH, DELAY(7NS,8.5NS,11NS),
+      SHIFTEDGE & TRN_HL, DELAY(6NS,7.5NS,10NS),
+      STOREEDGE & TRN_LH, DELAY(7.5NS,9.5NS,11.5NS),
+      STOREEDGE & TRN_HL, DELAY(8NS,9.5NS,12NS),
+      DELAY(9NS,10.5NS,13NS))}

U12 CONSTRAINT(13) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 DS STCP SHCP SHLDBAR SHRSTBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = SHCP
+   MAXFREQ = 135MEG
+ FREQ:
+   NODE = STCP
+   MAXFREQ = 135MEG
+ WIDTH:
+   NODE = SHCP
+   MIN_HI = 4.5NS
+   MIN_LO = 4.5NS
+ WIDTH:
+   NODE = STCP
+   MIN_HI = 4.5NS
+   MIN_LO = 4.5NS
+ WIDTH:
+   NODE = SHRSTBAR
+   MIN_LO = 4.5NS
+ WIDTH:
+   NODE = SHLDBAR
+   MIN_LO = 4.5NS
+ SETUP_HOLD:
+   CLOCK LH = SHCP
+   DATA(1) = DS
+   SETUPTIME_HI = 1NS
+   SETUPTIME_LO = 1.5NS
+   HOLDTIME_HI = 1.5NS
+   HOLDTIME_LO = 2NS
+ SETUP_HOLD:
+   CLOCK LH = STCP
+   DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+   SETUPTIME_HI = 1NS
+   SETUPTIME_LO = 1.5NS
+   HOLDTIME_LO = 2NS
+   HOLDTIME_HI = 1.5NS
+ SETUP_HOLD:
+   CLOCK LH = SHLDBAR
+   DATA(1) = STCP
+   SETUPTIME_HI = 8.5NS
+ SETUP_HOLD:
+   CLOCK LH = SHCP
+   DATA(1) = SHLDBAR
+   SETUPTIME_HI = 6NS
+ SETUP_HOLD:
+   CLOCK LH = SHCP
+   DATA(1) = SHRSTBAR
+   SETUPTIME_HI = 2NS

.ENDS 74F597

*------------------------------------------------------------74HC597-------

* 8 Bit Serial or Parallel-Input/Serial-Output Shift Register with Input Latch
* Motorola High-Speed CMOS Data, 1993, pages 5-399 to 5-405
* jat 9/12/96

.SUBCKT 74HC597 A B C D E F G H SA SS/PLBAR SHCLK LTCLK RESET QH
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(10,16) DPWR DGND
+ SS/PLBAR QLA QLB QLC QLD QLE QLF QLG QLH RESET
+ SETA SETB SETC SETD SETE SETF SETG SETH CLRA CLRB CLRC CLRD CLRE CLRF
+ CLRG CLRH
+ D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   SETA = {~(QLA & ~SS/PLBAR)}
+   CLRA = {~(~RESET | (~QLA & ~SS/PLBAR))}
+   SETB = {~(QLB & ~SS/PLBAR)}
+   CLRB = {~(~RESET | (~QLB & ~SS/PLBAR))}
+   SETC = {~(QLC & ~SS/PLBAR)}
+   CLRC = {~(~RESET | (~QLC & ~SS/PLBAR))}
+   SETD = {~(QLD & ~SS/PLBAR)}
+   CLRD = {~(~RESET | (~QLD & ~SS/PLBAR))}
+   SETE = {~(QLE & ~SS/PLBAR)}
+   CLRE = {~(~RESET | (~QLE & ~SS/PLBAR))}
+   SETF = {~(QLF & ~SS/PLBAR)}
+   CLRF = {~(~RESET | (~QLF & ~SS/PLBAR))}
+   SETG = {~(QLG & ~SS/PLBAR)}
+   CLRG = {~(~RESET | (~QLG & ~SS/PLBAR))}
+   SETH = {~(QLH & ~SS/PLBAR)}
+   CLRH = {~(~RESET | (~QLH & ~SS/PLBAR))}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI LTCLK
+ A B C D E F G H
+ QLA QLB QLC QLD QLE QLF QLG QLH
+ QLABAR QLBBAR QLCBAR QLDBAR QLEBAR QLFBAR QLGBAR QLHBAR
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(1) DPWR DGND
+ SETA CLRA SHCLK
+ SA QSA $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(1) DPWR DGND
+ SETB CLRB SHCLK
+ QSA QSB $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 DFF(1) DPWR DGND
+ SETC CLRC SHCLK
+ QSB QSC $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 DFF(1) DPWR DGND
+ SETD CLRD SHCLK
+ QSC QSD $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 DFF(1) DPWR DGND
+ SETE CLRE SHCLK
+ QSD QSE $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 DFF(1) DPWR DGND
+ SETF CLRF SHCLK
+ QSE QSF $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 DFF(1) DPWR DGND
+ SETG CLRG SHCLK
+ QSF QSG $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 DFF(1) DPWR DGND
+ SETH CLRH SHCLK
+ QSG QSH $D_NC
+ D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U11 PINDLY(1,0,4) DPWR DGND
+ QSH
+ LTCLK SHCLK SS/PLBAR RESET
+ QH
+ IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SHIFTEDGE = {CHANGED_LH(SHCLK,0)}
+   STOREEDGE = {CHANGED_LH(LTCLK,0)}
+   LOAD = {CHANGED_HL(SS/PLBAR,0)}
+   CLEAR = {CHANGED_HL(RESET,0)}
+ PINDLY:
+   QH = {
+    CASE(
+      CLEAR & TRN_HL, DELAY(-1,-1,35NS),
+      LOAD & (TRN_LH | TRN_HL), DELAY(-1,-1,35NS),
+      SHIFTEDGE & (TRN_LH | TRN_HL), DELAY(-1,-1,35NS),
+      STOREEDGE & (TRN_LH | TRN_HL), DELAY(-1,-1,42NS),
+      DELAY(-1,-1,43NS))}

U12 CONSTRAINT(13) DPWR DGND
+ SHCLK LTCLK SS/PLBAR SA A B C D E F G H RESET
+ IO_HC IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = SHCLK
+   MAXFREQ = 30MEG
+ FREQ:
+   NODE = LTCLK
+   MAXFREQ = 30MEG
+ WIDTH:
+   NODE = SHCLK
+   MIN_HI = 16NS
+   MIN_LO = 16NS
+ WIDTH:
+   NODE = LTCLK
+   MIN_HI = 16NS
+   MIN_LO = 16NS
+ WIDTH:
+   NODE = RESET
+   MIN_LO = 16NS
+ WIDTH:
+   NODE = SS/PLBAR
+   MIN_LO = 16NS
+ SETUP_HOLD:
+   CLOCK LH = SHCLK
+   DATA(1) = SA
+   SETUPTIME = 20NS
+   HOLDTIME = 5NS
+ SETUP_HOLD:
+   CLOCK LH = LTCLK
+   DATA(8) = A B C D E F G H
+   SETUPTIME = 20NS
+   HOLDTIME = 5NS
+ SETUP_HOLD:
+   CLOCK LH = SHCLK
+   DATA(1) = SS/PLBAR
+   SETUPTIME_HI = 20NS
+ SETUP_HOLD:
+   CLOCK LH = SHCLK
+   DATA(1) = RESET
+   SETUPTIME_HI = 20NS

.ENDS 74HC597

*------------------------------------------------------------74HCT597-------

* 8 Bit Shift Register with Input Flip-Flops
* Philips High-Speed CMOS Logic Family Data Handbook, 1994, pages 733 to 740
* jat 9/12/96

.SUBCKT 74HCT597 D0 D1 D2 D3 D4 D5 D6 D7 STCP MRBAR DS PLBAR SHCP Q
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(10,16) DPWR DGND
+ PLBAR QL0 QL1 QL2 QL3 QL4 QL5 QL6 QL7 MRBAR
+ SET0 SET1 SET2 SET3 SET4 SET5 SET6 SET7 CLR0 CLR1 CLR2 CLR3 CLR4 CLR5
+ CLR6 CLR7
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   SET0 = {~(QL0 & ~PLBAR)}
+   CLR0 = {~(~MRBAR | (~QL0 & ~PLBAR))}
+   SET1 = {~(QL1 & ~PLBAR)}
+   CLR1 = {~(~MRBAR | (~QL1 & ~PLBAR))}
+   SET2 = {~(QL2 & ~PLBAR)}
+   CLR2 = {~(~MRBAR | (~QL2 & ~PLBAR))}
+   SET3 = {~(QL3 & ~PLBAR)}
+   CLR3 = {~(~MRBAR | (~QL3 & ~PLBAR))}
+   SET4 = {~(QL4 & ~PLBAR)}
+   CLR4 = {~(~MRBAR | (~QL4 & ~PLBAR))}
+   SET5 = {~(QL5 & ~PLBAR)}
+   CLR5 = {~(~MRBAR | (~QL5 & ~PLBAR))}
+   SET6 = {~(QL6 & ~PLBAR)}
+   CLR6 = {~(~MRBAR | (~QL6 & ~PLBAR))}
+   SET7 = {~(QL7 & ~PLBAR)}
+   CLR7 = {~(~MRBAR | (~QL7 & ~PLBAR))}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI STCP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ QL0 QL1 QL2 QL3 QL4 QL5 QL6 QL7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(1) DPWR DGND
+ SET0 CLR0 SHCP
+ DS Q0 $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(1) DPWR DGND
+ SET1 CLR1 SHCP
+ Q0 Q1 $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 DFF(1) DPWR DGND
+ SET2 CLR2 SHCP
+ Q1 Q2 $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 DFF(1) DPWR DGND
+ SET3 CLR3 SHCP
+ Q2 Q3 $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 DFF(1) DPWR DGND
+ SET4 CLR4 SHCP
+ Q3 Q4 $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 DFF(1) DPWR DGND
+ SET5 CLR5 SHCP
+ Q4 Q5 $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 DFF(1) DPWR DGND
+ SET6 CLR6 SHCP
+ Q5 Q6 $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 DFF(1) DPWR DGND
+ SET7 CLR7 SHCP
+ Q6 Q7 $D_NC
+ D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U11 PINDLY(1,0,4) DPWR DGND
+ Q7
+ STCP SHCP MRBAR PLBAR
+ Q
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SHIFTEDGE = {CHANGED_LH(SHCP,0)}
+   STOREEDGE = {CHANGED_LH(STCP,0)}
+   LOAD = {CHANGED_HL(PLBAR,0)}
+   CLEAR = {CHANGED_HL(MRBAR,0)}
+ PINDLY:
+   Q = {
+    CASE(
+      CLEAR & TRN_HL, DELAY(-1,28NS,49NS),
+      LOAD & (TRN_LH | TRN_HL), DELAY(-1,30NS,52NS),
+      SHIFTEDGE & (TRN_LH | TRN_HL), DELAY(-1,23NS,40NS),
+      STOREEDGE & (TRN_LH | TRN_HL), DELAY(-1,33NS,57NS),
+      DELAY(-1,34NS,58NS))}

U12 CONSTRAINT(13) DPWR DGND
+ SHCP STCP DS D0 D1 D2 D3 D4 D5 D6 D7 MRBAR PLBAR
+ IO_HCT IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = SHCP
+   MAXFREQ = 75MEG
+ WIDTH:
+   NODE = SHCP
+   MIN_HI = 7NS
+   MIN_LO = 7NS
+ WIDTH:
+   NODE = STCP
+   MIN_HI = 6NS
+   MIN_LO = 6NS
+ WIDTH:
+   NODE = MRBAR
+   MIN_LO = 14NS
+ WIDTH:
+   NODE = PLBAR
+   MIN_LO = 10NS
+ SETUP_HOLD:
+   CLOCK LH = SHCP
+   DATA(1) = DS
+   SETUPTIME = 2NS
+ SETUP_HOLD:
+   CLOCK LH = STCP
+   DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+   SETUPTIME = 5NS
+ SETUP_HOLD:
+   CLOCK LH = SHCP
+   DATA(1) = PLBAR
+   SETUPTIME_HI = 4NS

.ENDS 74HCT597

* ----------------------------------------------------------- 74LS597 ------
*  8-Bit Shift Registers With Input Latches
*
*  The TTL Logic Data Book, 1988, TI Pages 2-999 to 2-1006
*  bss    5/9/94
*
.SUBCKT 74LS597 SRCLRBAR SRCK SRLOADBAR RCK SER A B C D E F G H QH 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI RCK
+     A B C D E F G H
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(1) DPWR DGND
+     PREA CLRA SRCK SER QA QABAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     PREB CLRB SRCKBAR QA QABAR QB QBBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     PREC CLRC SRCKBAR QB QBBAR QC QCBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 jkff(1) DPWR DGND
+     PRED CLRD SRCKBAR QC QCBAR QD QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 jkff(1) DPWR DGND
+     PREE CLRE SRCKBAR QD QDBAR QE QEBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 jkff(1) DPWR DGND
+     PREF CLRF SRCKBAR QE QEBAR QF QFBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 jkff(1) DPWR DGND
+     PREG CLRG SRCKBAR QF QFBAR QG QGBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 jkff(1) DPWR DGND
+     PREH CLRH SRCKBAR QG QGBAR QH_O $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10LOG LOGICEXP(19,17) DPWR DGND
+     SRCK SRLOADBAR SRCLRBAR Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     PREA CLRA PREB CLRB PREC CLRC PRED CLRD
+     PREE CLRE PREF CLRF PREG CLRG PREH CLRH SRCKBAR
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     SRCKBAR = {~SRCK}
+     SRLOAD = {~SRLOADBAR}
+     PREA = {~(Q1 & SRLOAD)}
+     PREB = {~(Q2 & SRLOAD)}
+     PREC = {~(Q3 & SRLOAD)}
+     PRED = {~(Q4 & SRLOAD)}
+     PREE = {~(Q5 & SRLOAD)}
+     PREF = {~(Q6 & SRLOAD)}
+     PREG = {~(Q7 & SRLOAD)}
+     PREH = {~(Q8 & SRLOAD)}
+     CLRA = {(~(Q1BAR & SRLOAD)) & SRCLRBAR}
+     CLRB = {(~(Q2BAR & SRLOAD)) & SRCLRBAR}
+     CLRC = {(~(Q3BAR & SRLOAD)) & SRCLRBAR}
+     CLRD = {(~(Q4BAR & SRLOAD)) & SRCLRBAR}
+     CLRE = {(~(Q5BAR & SRLOAD)) & SRCLRBAR}
+     CLRF = {(~(Q6BAR & SRLOAD)) & SRCLRBAR}
+     CLRG = {(~(Q7BAR & SRLOAD)) & SRCLRBAR}
+     CLRH = {(~(Q8BAR & SRLOAD)) & SRCLRBAR}

U11DLY PINDLY(1,0,4) DPWR DGND
+     QH_O
+     SRCK SRLOADBAR RCK SRCLRBAR
+     QH
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKS = {CHANGED_LH(SRCK,0)}
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     LOAD = {CHANGED_HL(SRLOADBAR,0)}
+     CLEAR = {CHANGED_HL(SRCLRBAR,0)}
+
+  PINDLY:
+     QH = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,24ns,36ns),
+         LOAD & TRN_LH, DELAY(-1,38ns,57ns),
+         LOAD & TRN_HL, DELAY(-1,29ns,44ns),
+         CLOCKS & TRN_LH, DELAY(-1,15ns,23ns),
+         CLOCKS & TRN_HL, DELAY(-1,20ns,30ns),
+         CLOCKR & TRN_LH, DELAY(-1,41ns,60ns),
+         CLOCKR & TRN_HL, DELAY(-1,32ns,48ns),
+         DELAY(-1,42ns,61ns))}

U12CON CONSTRAINT(13) DPWR DGND
+     SRCK RCK SRCLRBAR SRLOADBAR SER A B C D E F G H
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE= SRCK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=SRCK
+     MIN_HI=15ns
+     MIN_LO=35ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=SRCLRBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=SRLOADBAR
+     MIN_LO=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(8)=A B C D E F G H
+     SETUPTIME=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SER
+     SETUPTIME=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRLOADBAR
+     DATA(1)=RCK
+     SETUPTIME=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SRCLRBAR
+     SETUPTIME_HI=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SRLOADBAR
+     SETUPTIME_HI=30ns

.ENDS 74LS597

*------------------------------------------------------------74F598-----

* 8 Bit Shift Register with Input Storage Registers (Tri-State)
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 600 to 608
* jat 7/17/96

.SUBCKT 74F598 STCP SHCP SHRSTBAR SHLDBAR SHCPENBAR OEBAR S DS0 DS1
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 QS
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(23,18) DPWR DGND
+ SHLDBAR SHRSTBAR Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR
+ Q5BAR Q6BAR Q7BAR DS0 DS1 S SHCP SHCPENBAR
+ SET0 CLR0 SET1 CLR1 SET2 CLR2 SET3 CLR3 SET4 CLR4 SET5 CLR5 SET6 CLR6
+ SET7 CLR7 DATA SHCLK
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   SET0 = {~(Q0 & ~SHLDBAR)}
+   CLR0 = {SHRSTBAR & (~(~SHLDBAR & Q0BAR))}
+   SET1 = {~(Q1 & ~SHLDBAR)}
+   CLR1 = {SHRSTBAR & (~(~SHLDBAR & Q1BAR))}
+   SET2 = {~(Q2 & ~SHLDBAR)}
+   CLR2 = {SHRSTBAR & (~(~SHLDBAR & Q2BAR))}
+   SET3 = {~(Q3 & ~SHLDBAR)}
+   CLR3 = {SHRSTBAR & (~(~SHLDBAR & Q3BAR))}
+   SET4 = {~(Q4 & ~SHLDBAR)}
+   CLR4 = {SHRSTBAR & (~(~SHLDBAR & Q4BAR))}
+   SET5 = {~(Q5 & ~SHLDBAR)}
+   CLR5 = {SHRSTBAR & (~(~SHLDBAR & Q5BAR))}
+   SET6 = {~(Q6 & ~SHLDBAR)}
+   CLR6 = {SHRSTBAR & (~(~SHLDBAR & Q6BAR))}
+   SET7 = {~(Q7 & ~SHLDBAR)}
+   CLR7 = {SHRSTBAR & (~(~SHLDBAR & Q7BAR))}
+   DATA = {(DS0 & ~S) | (DS1 & S)}
+   SHCLK = {SHCPENBAR | SHCP}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI STCP
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(1) DPWR DGND
+ SET0 CLR0 SHCLK
+ DATA QS0 $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(1) DPWR DGND
+ SET1 CLR1 SHCLK
+ QS0 QS1 $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 DFF(1) DPWR DGND
+ SET2 CLR2 SHCLK
+ QS1 QS2 $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 DFF(1) DPWR DGND
+ SET3 CLR3 SHCLK
+ QS2 QS3 $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 DFF(1) DPWR DGND
+ SET4 CLR4 SHCLK
+ QS3 QS4 $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 DFF(1) DPWR DGND
+ SET5 CLR5 SHCLK
+ QS4 QS5 $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 DFF(1) DPWR DGND
+ SET6 CLR6 SHCLK
+ QS5 QS6 $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 DFF(1) DPWR DGND
+ SET7 CLR7 SHCLK
+ QS6 QS7 $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U11 PINDLY(9,1,4) DPWR DGND
+ QS7 QS0 QS1 QS2 QS3 QS4 QS5 QS6 QS7
+ OEBAR
+ SHCP STCP SHRSTBAR SHLDBAR
+ QS I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SHIFTEDGE = {CHANGED_LH(SHCP,0)}
+   STOREEDGE = {CHANGED_LH(STCP,0)}
+   CLEAR = {CHANGED_HL(SHRSTBAR,0)}
+   LOAD = {CHANGED_HL(SHLDBAR,0)}
+ PINDLY:
+   QS = {
+    CASE(
+      LOAD & TRN_LH, DELAY(9NS,11NS,13.5NS),
+      LOAD & TRN_HL, DELAY(6NS,8NS,10.5NS),
+      CLEAR & TRN_HL, DELAY(6NS,7.5NS,10.5NS),
+      SHIFTEDGE & TRN_LH, DELAY(9.5NS,11.5NS,14NS),
+      SHIFTEDGE & TRN_HL, DELAY(6.5NS,8.5NS,11.5NS),
+      STOREEDGE & TRN_LH, DELAY(10NS,11.5NS,14.5NS),
+      STOREEDGE & TRN_HL, DELAY(7NS,8.5NS,11.5NS),
+      DELAY(11NS,12.5NS,15NS))}
+ TRISTATE:
+ ENABLE LO = OEBAR
+   I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 = {
+    CASE(
+      TRN_ZH, DELAY(3.5NS,5.5NS,8.5NS),
+      TRN_ZL, DELAY(3NS,5NS,7.5NS),
+      TRN_HZ, DELAY(1.5NS,3.5NS,6.5NS),
+      TRN_LZ, DELAY(4NS,6NS,9NS),
+      LOAD & TRN_LH, DELAY(7.5NS,9.5NS,12.5NS),
+      LOAD & TRN_HL, DELAY(6NS,8NS,11NS),
+      CLEAR & TRN_HL, DELAY(6.5NS,9NS,12NS),
+      SHIFTEDGE & TRN_LH, DELAY(8.5NS,10.5NS,13.5NS),
+      SHIFTEDGE & TRN_HL, DELAY(5NS,7NS,9.5NS),
+      DELAY(9.5NS,11.5NS,14.5NS))}

U12 CONSTRAINT(16) DPWR DGND
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 DS0 DS1 S STCP SHCP SHCPENBAR SHLDBAR SHRSTBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = SHCP
+   MAXFREQ = 100MEG
+ FREQ:
+   NODE = STCP
+   MAXFREQ = 160MEG
+ WIDTH:
+   NODE = SHCP
+   MIN_HI = 5.5NS
+   MIN_LO = 4NS
+ WIDTH:
+   NODE = STCP
+   MIN_HI = 4.5NS
+   MIN_LO = 4NS
+ WIDTH:
+   NODE = SHRSTBAR
+   MIN_LO = 4NS
+ WIDTH:
+   NODE = SHLDBAR
+   MIN_LO = 4NS
+ SETUP_HOLD:
+   CLOCK LH = SHCP
+   DATA(2) = DS0 DS1
+   SETUPTIME_LO = 3.5NS
+   HOLDTIME_LO = 2.5NS
+ SETUP_HOLD:
+   CLOCK LH = STCP
+   DATA(8) = I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 
+   SETUPTIME = 2.5NS
+ SETUP_HOLD:
+   CLOCK LH = SHCP
+   DATA(1) = S
+   SETUPTIME_HI = 3.5NS
+   SETUPTIME_LO = 3NS
+   HOLDTIME_HI = 2.5NS
+   HOLDTIME_LO = 3NS
+ SETUP_HOLD:
+   CLOCK LH = SHLDBAR
+   DATA(1) = STCP
+   SETUPTIME_HI = 7NS
+ SETUP_HOLD:
+   CLOCK LH = SHCP
+   DATA(1) = SHLDBAR
+   SETUPTIME_HI = 7.5NS
+   SETUPTIME_HI = 2NS
+ SETUP_HOLD:
+   CLOCK LH = SHCP
+   DATA(1) = SHCPENBAR
+   SETUPTIME_LO = 2NS
+   HOLDTIME_LO = 4.5NS

.ENDS 74F598

* ----------------------------------------------------------- 74LS598 ------
*  8-Bit Shift Registers With Input Latches
*
*  The TTL Logic Data Book, 1988, TI Pages 2-999 to 2-1006
*  bss    5/9/94
*
.SUBCKT 74LS598 GBAR SRCLRBAR SRCKENBAR SRCK SRLOADBAR DS SER0 SER1 RCK
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH QH
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI RCK
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+     Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(1) DPWR DGND
+     PREA CLRA CLKSBAR SERIN QA QABAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(1) DPWR DGND
+     PREB CLRB CLKS QA QABAR QB QBBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 jkff(1) DPWR DGND
+     PREC CLRC CLKS QB QBBAR QC QCBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 jkff(1) DPWR DGND
+     PRED CLRD CLKS QC QCBAR QD QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 jkff(1) DPWR DGND
+     PREE CLRE CLKS QD QDBAR QE QEBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 jkff(1) DPWR DGND
+     PREF CLRF CLKS QE QEBAR QF QFBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 jkff(1) DPWR DGND
+     PREG CLRG CLKS QF QFBAR QG QGBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 jkff(1) DPWR DGND
+     PREH CLRH CLKS QG QGBAR QH_O $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 nand(2) DPWR DGND
+     SRCK CLKEN CLKS
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U11LOG LOGICEXP(24,19) DPWR DGND
+     SRCLRBAR SRCKENBAR SRCK SRLOADBAR DS SER0 SER1
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 CLKS
+     Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     CLKSBAR CLKEN SERIN PREA PREB PREC PRED PREE PREF PREG PREH
+     CLRA CLRB CLRC CLRD CLRE CLRF CLRG CLRH
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     CLKSBAR = {~CLKS}
+     CLKEN = {(~(SRCKENBAR & CLKS) & SRCK)}
+     dsbar = {~DS}
+     SERIN = {(dsbar & SER0) | (DS & SER1)}
+     srload = {~SRLOADBAR}
+     PREA = {~(Q1 & srload)}
+     PREB = {~(Q2 & srload)}
+     PREC = {~(Q3 & srload)}
+     PRED = {~(Q4 & srload)}
+     PREE = {~(Q5 & srload)}
+     PREF = {~(Q6 & srload)}
+     PREG = {~(Q7 & srload)}
+     PREH = {~(Q8 & srload)}
+     CLRA = {(~(Q1BAR & srload)) & SRCLRBAR}
+     CLRB = {(~(Q2BAR & srload)) & SRCLRBAR}
+     CLRC = {(~(Q3BAR & srload)) & SRCLRBAR}
+     CLRD = {(~(Q4BAR & srload)) & SRCLRBAR}
+     CLRE = {(~(Q5BAR & srload)) & SRCLRBAR}
+     CLRF = {(~(Q6BAR & srload)) & SRCLRBAR}
+     CLRG = {(~(Q7BAR & srload)) & SRCLRBAR}
+     CLRH = {(~(Q8BAR & srload)) & SRCLRBAR}

U12DLY PINDLY(9,1,4) DPWR DGND
+     QA QB QC QD QE QF QG QH_O QH_O
+     GBAR
+     SRCLRBAR SRLOADBAR SRCK RCK
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH QH
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKS = {CHANGED_LH(SRCK,0)}
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     LOAD = {CHANGED_HL(SRLOADBAR,0)}
+     CLEAR = {CHANGED_HL(SRCLRBAR,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,25ns,38ns),
+         LOAD & TRN_LH, DELAY(-1,32ns,48ns),
+         LOAD & TRN_HL, DELAY(-1,27ns,40ns),
+         CLOCKS & TRN_LH, DELAY(-1,12ns,18ns),
+         CLOCKS & TRN_HL, DELAY(-1,19ns,28ns),
+         TRN_ZH, DELAY(-1,26ns,31ns),
+         TRN_ZL, DELAY(-1,29ns,43ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,20ns,30ns),
+         DELAY(-1,33ns,49ns))}
+
+  PINDLY:
+     QH = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,18ns,27ns),
+         LOAD & TRN_LH, DELAY(-1,28ns,42ns),
+         LOAD & TRN_HL, DELAY(-1,20ns,30ns),
+         CLOCKS & TRN_LH, DELAY(-1,11ns,17ns),
+         CLOCKS & TRN_HL, DELAY(-1,15ns,23ns),
+         CLOCKR & TRN_LH, DELAY(-1,32ns,48ns),
+         CLOCKR & TRN_HL, DELAY(-1,24ns,36ns),
+         DELAY(-1,33ns,49ns))}

U13CON CONSTRAINT(16) DPWR DGND
+     SRCK RCK SRCLRBAR SRLOADBAR SER0 SER1
+     A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH DS SRCKENBAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE= SRCK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=SRCK
+     MIN_HI=15ns
+     MIN_LO=35ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=SRCLRBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=SRLOADBAR
+     MIN_LO=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(8)=A/QA B/QB C/QC D/QD E/QE F/QF G/QG H/QH
+     SETUPTIME=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=DS
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(2)=SER0 SER1
+     SETUPTIME=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRLOADBAR
+     DATA(1)=RCK
+     SETUPTIME_HI=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SRCKENBAR
+     SETUPTIME_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SRCLRBAR
+     SETUPTIME_HI=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SRLOADBAR
+     SETUPTIME_HI=30ns

.ENDS 74LS598
*
*
* ----------------------------------------------------------- 74LS599 ------
*  8-Bit Shift Registers With Output Latches
*
*  The TTL Logic Data Book, 1988, TI Pages 2-989 to 2-992
*  bss    5/9/94
*
.SUBCKT 74LS599 RCLRBAR RCK SRCLRBAR SRCK SER 
+     QA QB QC QD QE QF QG QH QHS
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(1) DPWR DGND
+     $D_HI SRCLRBAR SRCK SER Q1 Q1BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 jkff(7) DPWR DGND
+     $D_HI SRCLRBAR SRCKBAR
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     Q2 Q3 Q4 Q5 Q6 Q7 QHS_O Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 jkff(8) DPWR DGND
+     $D_HI RCLRBAR RCKBAR
+     Q1 Q2 Q3 Q4 Q5 Q6 Q7 QHS_O 
+     Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR
+     QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 inva(2) DPWR DGND
+     RCK SRCK RCKBAR SRCKBAR
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(8,0,2) DPWR DGND
+     QA_O QB_O QC_O QD_O QE_O QF_O QG_O QH_O
+     RCK  RCLRBAR
+     QA QB QC QD QE QF QG QH
+     IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     CLEARR = {CHANGED_HL(RCLRBAR,0)}
+
+  PINDLY:
+     QA QB QC QD QE QF QG QH = {
+       CASE(
+         CLEARR & TRN_HL, DELAY(-1,40ns,60ns),
+         CLOCKR & TRN_LH, DELAY(-1,28ns,42ns),
+         CLOCKR & TRN_HL, DELAY(-1,24ns,35ns),
+         DELAY(-1,41ns,61ns))}

U6DLY PINDLY(1,0,2) DPWR DGND
+     QHS_O
+     SRCK SRCLRBAR
+     QHS
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKS = {CHANGED_LH(SRCK,0)}
+     CLEARS = {CHANGED_HL(SRCLRBAR,0)}
+
+  PINDLY:
+     QHS = {
+       CASE(
+         CLEARS & TRN_HL, DELAY(-1,24ns,35ns),
+         CLOCKS & TRN_LH, DELAY(-1,12ns,18ns),
+         CLOCKS & TRN_HL, DELAY(-1,17ns,25ns),
+         DELAY(-1,25ns,36ns))}

U7CON CONSTRAINT(5) DPWR DGND
+     SRCK RCK SRCLRBAR RCLRBAR SER
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=SRCK
+     MAXFREQ=20MEG
+
+  FREQ:
+     NODE=RCK
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=SRCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=SRCLRBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=RCLRBAR
+     MIN_LO=35ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SER
+     SETUPTIME=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=SRCK
+     SETUPTIME_HI=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=SRCLRBAR
+     SETUPTIME_LO=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SRCLRBAR
+     SETUPTIME_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=RCLRBAR
+     SETUPTIME_HI=20ns

.ENDS 74LS599
*
*
