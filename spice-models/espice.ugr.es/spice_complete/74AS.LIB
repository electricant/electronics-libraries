**********
* Copyright Intusoft 1997
* All Rights Reserved
**********
*********************************************************
*  ADVANCED SCHOTTKY (AS) DIGITAL LIBRARY BASED ON THE  *
*	  TEXAS INSTRUMENTS DATA BOOK (Volume 2)		    *							
*									  					*
*DEVELOPPED FOR INTUSOFT BY JEAN-CLAUDE MBOLI		  	*
*Phone:(33) 4 76 44 43 30	    Fax:(33) 4 76 44 43 52	* 
*e-mail:101736.631@compuserve.com				  		*
*														*
*				September 1996							*
*				  										*
*********************************************************
**********************
*SRC=74AS00;74AS00;TTL;74ASxx;2 input NAND gate
*SYM=NAND2
*74AS00 QUADRUPLE 2-INPUT POSITIVE-NAND GATES
***
.subckt 74AS00 in1 in2 out
*FAMILY TTLin TTLin TTLout
*pinout M14A 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7
*pinout N14A 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7
anand [in1 in2] out ls_nand 
.model ls_nand d_nand(rise_delay=2.5n fall_delay=2.5n)
.ends
*
*
**********************
*SRC=74AS02;74AS02;TTL;74ASxx;2 input NOR gate
*SYM=NOR2
*74AS02 QUADRUPLE 2-INPUT POSITIVE-NOR GATES
***
.subckt 74AS02 in1 in2 out
*FAMILY TTLin TTLin TTLout
*pinout M14A 2 3 1;5 6 4;8 9 10;11 12 13:VCC=14 GND=7
*pinout M14D 2 3 1;5 6 4;8 9 10;11 12 13:VCC=14 GND=7
*pinout N14A 2 3 1;5 6 4;8 9 10;11 12 13:VCC=14 GND=7
anor [in1 in2] out ls_nor 
.model ls_nor d_nor(rise_delay=2.5n fall_delay=2.5n)
.ends
*
*
**********************
*SRC=74AS04;74AS04;TTL;74ASxx;inverter
*SYM=INV
*74AS04 HEX INVERTERS
***
.subckt 74AS04 in out
*FAMILY TTLin TTLout
*pinout M14A 1 2;3 4;5 6;9 8;11 10;13 12:VCC=14 GND=7
*pinout M14D 1 2;3 4;5 6;9 8;11 10;13 12:VCC=14 GND=7
*pinout N14A 1 2;3 4;5 6;9 8;11 10;13 12:VCC=14 GND=7
ainv in out ls_inv 
.model ls_inv d_inverter(rise_delay=3n fall_delay=2.5n)
.ends
*
*

**********************
*SRC=74AS08;74AS08;TTL;74ASxx;2 input AND gate
*SYM=AND2
*74AS08 QUADRUPLE 2-INPUT POSITIVE-AND GATES
***
.subckt 74AS08 in1 in2 out
*FAMILY TTLin TTLin TTLout
*pinout M14A 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7
*pinout N14A 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7
aand [in1 in2] out ls_and 
.model ls_and d_and(rise_delay=3n fall_delay=3n)
.ends
*
*
**********************
*SRC=74AS10;74AS10;TTL;74ASxx;3 input NAND gate
*SYM=NAND3
*74AS10 TRIPLE 3-INPUT POSITIVE-NAND GATES
***
.subckt 74AS10 in1 in2 in3 out
*FAMILY TTLin TTLin TTLin TTLout
*pinout M14A 1 2 13 12;3 4 5 6;9 10 11 8:VCC=14 GND=7
*pinout N14A 1 2 13 12;3 4 5 6;9 10 11 8:VCC=14 GND=7
anand [in1 in2 in3] out ls_nand 
.model ls_nand d_nand(rise_delay=2.5n fall_delay=2.5n)
.ends
*
*
**********************
*SRC=74AS11;74AS11;TTL;74ASxx;3 input AND gate
*SYM=AND3
*74AS11 TRIPLE 3-INPUT POSITIVE-AND GATES
***
.subckt 74AS11 in1 in2 in3 out
*FAMILY TTLin TTLin TTLin TTLout
*pinout M14A 1 2 13 12;3 4 5 6;9 10 11 8:VCC=14 GND=7
*pinout N14A 1 2 13 12;3 4 5 6;9 10 11 8:VCC=14 GND=7
aand [in1 in2 in3] out ls_and 
.model ls_and d_and(rise_delay=3n fall_delay=3n)
.ends
*
*
**********************
*SRC=74AS20;74AS20;TTL;74AS Series;4 input NAND gate
*SYM=NAND4
*74AS20 DUAL 4-INPUT POSITIVE-NAND GATES
***
.subckt 74AS20 in1 in2 in3 in4 out
*FAMILY TTLin TTLin TTLin TTLin TTLout
*pinout M14A 1 2 4 5 6;9 10 12 13 8:VCC=14 GND=7
*pinout N14A 1 2 4 5 6;9 10 12 13 8:VCC=14 GND=7
anand [in1 in2 in3 in4] out ls_nand
.model ls_nand d_nand(rise_delay=3n fall_delay=3n)
.ends
*
*
**********************
*SRC=74AS21;74AS21;TTL;74AS Series;4 input AND gate
*SYM=AND4
*74AS21 DUAL 4-INPUT POSITIVE-AND GATES
***
.subckt 74AS21 in1 in2 in3 in4 out
*FAMILY TTLin TTLin TTLin TTLin TTLout
*pinout M14A 1 2 4 5 6;9 10 12 13 8:VCC=14 GND=7
*pinout N14A 1 2 4 5 6;9 10 12 13 8:VCC=14 GND=7
aand [in1 in2 in3 in4] out ls_and
.model ls_and d_and(rise_delay=3.5n fall_delay=3.5n)
.ends
*
*
**********************
*SRC=74AS27;74AS27;TTL;74AS Series;3 input NOR gate
*SYM=NOR3
*74AS27 TRIPLE 3-INPUT POSITIVE-NOR GATES
***
.subckt 74AS27 in1 in2 in3 out
*FAMILY TTLin TTLin TTLin TTLout
*pinout M14A 1 2 13 12;3 4 5 6;9 10 11 8:VCC=14 GND=7
*pinout N14A 1 2 13 12;3 4 5 6;9 10 11 8:VCC=14 GND=7
anor [in1 in2 in3] out ls_nor
.model ls_nor d_nor(rise_delay=3.5n fall_delay=3n)
.ends
*
*
**********************
*SRC=74AS30;74AS30;TTL;74ASxx;8 input NAND gate
*SYM=T7430
*74AS30 8-INPUT POSITIVE-NAND GATES
***
.subckt 74AS30 in1 in2 in3 in4
+		in5 in6 in7 in8 out
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLout
*pinout M14A 1 2 3 4 5 6 11 12 8:VCC=14 GND=7
*pinout N14A 1 2 3 4 5 6 11 12 8:VCC=14 GND=7
anand [in1 in2 in3 in4
+	in5 in6 in7 in8] out ls_nand 
.model ls_nand d_nand(rise_delay=3n fall_delay=3n)
.ends
*
*
**********************
*SRC=74AS32;74AS32;TTL;74ASxx;2 input OR gate
*SYM=OR2
*74AS32 QUADRUPLE 2-INPUT POSITIVE-OR GATES
***
.subckt 74AS32 in1 in2 out
*FAMILY TTLin TTLin TTLout
*pinout M14A 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7
*pinout N14A 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7
aor [in1 in2] out ls_or 
.model ls_or d_or(rise_delay=3.5n fall_delay=3.5n)
.ends
*
*
**********************
*SRC=74AS74;74AS74;TTL;74ASxx;D Flip-Flop
*SYM=T7474
*74AS74 DUAL D-TYPE POSITIVE-EDGE-TRIGGERED 
*FLIP-FLOPS WITH PRESET & CLEAR 
***
.subckt 74AS74 clrbar d clk prebar q qbar
*FAMILY  TTLin TTLin TTLin TTLin TTLout TTLout
*pinout M14A 1 2 3 4 5 6;13 12 11 10 9 8:VCC=14 GND=7
*pinout N14A 1 2 3 4 5 6;13 12 11 10 9 8:VCC=14 GND=7
adff d clk prebar clrbar q qbar ls_dff

.model ls_dff d_dff(clk_delay=2n rise_delay=11n 
+ fall_delay=11n ic=1)
.ends
*
*
**********************
*SRC=74AS86A;74AS86A;TTL;74ASxx;2 input XOR
*SYM=XOR
*74AS86A QUADRUPLE 2-INPUT EXCLUSIVE-OR GATES
***
.subckt 74AS86A in1 in2 out
*FAMILY TTLin TTLin TTLout
*pinout M14A 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7
*pinout N14A 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7
axor [in1 in2] out ls_xor 
.model ls_xor d_xor(rise_delay=4n fall_delay=4n)
.ends
*
*
**********************
*SRC=74AS109;74AS109;TTL;74ASxx;J-K Flip-Flop
*SYM=T74109
*74AS109 DUAL J-KBAR POSITIVE-EDGE-TRIGGERED FLIP-FLOPS
*WITH PRESET AND CLEAR
***
.subckt 74AS109 clk prebar clrbar j kbar q qbar
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLout TTLout
*pinout M16A 4 5 1 2 3 6 7;12 11 15 14 13 10 9:VCC=16 GND=8
*pinout N16A 4 5 1 2 3 6 7;12 11 15 14 13 10 9:VCC=16 GND=8
ajk j k clk pre clr q qbar ls_jkff
ainv1 prebar pre ls_inv
ainv2 clrbar clr ls_inv
ainv3 kbar k ls_inv

.model ls_jkff d_jkff(clk_delay=6.5n set_delay=5.5n
+ reset_delay=7n)
.model ls_inv d_inverter
.ends
*
*
**********************
*SRC=74AS131A;74AS131A;TTL;74ASxx;3to8 Decoders
*SYM=T74131
*74AS131A 3-LINE TO 8-LINE DECODERS/DEMULTIPLEXERS
*WITH ADDRESS REGISTERS
***
.subckt 74AS131A clk a b c g1 g2b y0 y1 y2 y3
+ y4 y5 y6 y7
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLout TTLout
+ TTLout TTLout TTLout TTLout TTLout TTLout
*pinout M16A 4 1 2 3 6 5 15 14 13 12 11 10 9 7:VCC=16 GND=8
*pinout N16A 4 1 2 3 6 5 15 14 13 12 11 10 9 7:VCC=16 GND=8

ainv1 g2b g2 inv
aand1 [g1 g2] en and

adffa a clk h h qa qab dff
adffb b clk h h qb qbb dff
adffc c clk h h qc qcb dff

anand0 [qab qbb qcb en] y0 nand
anand1 [qab qbb qcb en] y1 nand
anand2 [qab qbb qcb en] y2 nand
anand3 [qab qbb qcb en] y3 nand
anand4 [qab qbb qcb en] y4 nand
anand5 [qab qbb qcb en] y5 nand
anand6 [qab qbb qcb en] y6 nand
anand7 [qab qbb qcb en] y7 nand

.model ls_jkff d_jkff(clk_delay=6.5n set_delay=5.5n
+ reset_delay=7n)
.model ls_inv d_inverter
.ends
*
*
**********************
*SRC=74as161;74as161;TTL;74ASxx;4-bit counter
*SYM=T74161
*74AS161 SYNCHRONOUS 4-BIT BINARY COUNTER
*WITH DIRECT CLEAR
.subckt 74as161 clk enp ent clrb loadb a b c d qa qb qc qd rco
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin 
+ TTLout TTLout TTLout TTLout TTLout
*pinout M16A 2 7 10 1 9 3 4 5 6 14 13 12 11 15:VCC=16 GND=8
*pinout N16A 2 7 10 1 9 3 4 5 6 14 13 12 11 15:VCC=16 GND=8

ainv1 loadb ld inv
ainv2 clrb clr inv

aand1 [enp ent] en and
aand2 [en qa] 1 and
aand3 [en qa qb] 2 and
aand4 [en qa qb qc] 3 and
aand5 [ent qa qb qc qd] rco ls_and

x1 ld en a clk clr qa jk_bloc 
x2 ld 1 b clk clr qb jk_bloc 
x3 ld 2 c clk clr qc jk_bloc 
x4 ld 3 d clk clr qd jk_bloc 

.subckt jk_bloc ld en d clk clr q
anand1 [ld 2] 1 nand
anand2 [ld d] 2 nand
aor [en ld] 3 or
aand1 [1 3] j and
aand2 [2 3] k and
ajk j k clk l clr q qb ls_jkff
al l low
.model low d_pulldown
.model nand d_nand
.model or d_or
.model and d_and
.model ls_jkff d_jkff(reset_delay=1p
+ rise_delay=4n fall_delay=8n) 

.ends jk_bloc

.model and d_and
.model inv d_inverter
.model or d_or
.model ls_and d_and(rise_delay=8n fall_delay=8n)

.ENDS
**********************OBSOLETE/NO DATASHEET
*SRC=74as162;74as162;TTL;74ASxx;4-bit decade counter
*SYM=T74162
*74162 SYNCHRONOUS 4-BIT DECADE COUNTERS
*WITH SYNCHRONOUS CLEAR
*
.subckt 74as162 clk enp ent clrb loadb a b c d qa qb qc qd rco
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin 
+ TTLout TTLout TTLout TTLout TTLout
*pinout M16A 2 7 10 1 9 3 4 5 6 14 13 12 11 15:VCC=16 GND=8
*pinout N16A 2 7 10 1 9 3 4 5 6 14 13 12 11 15:VCC=16 GND=8
.ENDS
**********************
*SRC=74AS163;74AS163;TTL;74ASxx;4-bit counter
*SYM=T74163
*74AS163 SYNCHRONOUS 4-BIT BINARY COUNTER
***
.subckt 74AS163 clk enp ent clrb loadb a b c d
+ qa qb qc qd rco
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin 
+ TTLout TTLout TTLout TTLout TTLout
*pinout M16A 2 7 10 1 9 3 4 5 6 14 13 12 11 15:VCC=16 GND=8
*pinout N16A 2 7 10 1 9 3 4 5 6 14 13 12 11 15:VCC=16 GND=8
ainv1 clrb clr inva
anor1 [loadb clr] lc nor
anor2 [clr lc] u1 nor
aand1 [enp ent] en and

xa clk lc u1 a en en qa qab d_bloc
xb clk lc u1 b en qa qb qbb d_bloc
xc clk lc u1 c en rc qc qcb d_bloc
xd clk lc u1 d en rd qd qdb d_bloc

anorc [qab qbb] rc nor
anord [qab abb qcb] rd nor

aandrco [qa qb qc qd ent] rco andmod

.subckt d_bloc clk ld u1 a en r1 q qb
aand1 [a ld] a1 and
aand2 [ox u1] a2 and
axnor [ix qb] ox xnor
aand3 [en r1] ix and
aor [a1 a2] d or
ad d clk h h q qb ls_dff
al h high
.model high d_pullup
.model xnor d_xnor
.model or d_or
.model ls_dff d_dff(rise_delay=6n fall_delay=6n) 
.ends d_bloc

.model and d_and
.model nand d_nand
.model nor d_nor
.model inv d_inverter
.model or d_or
.model andmod d_and(rise_delay=1n fall_delay=1n)
.model inva d_inverter

.ends
*
*
**********************
*SRC=74AS174;74AS174;TTL;74ASxx;D-type Flip-Flop
*SYM=T74174
*74AS174 HEX D-TYPE FLIP-FLOPS WITH CLEAR
***
.subckt 74AS174 clrb clk d1 d2 d3 d4 d5
+ d6 q1 q2 q3 q4 q5 q6
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin
+ TTLin TTLin TTLout TTLout TTLout TTLout TTLout TTLout
*pinout N16A 1 9 3 4 6 11 13 14 2 5 7 10 12 15:VCC=16 GND=8
adff1 d1 clk pre clrb q1 q1b ls_dff 
adff2 d2 clk pre clrb q2 q2b ls_dff
adff3 d3 clk pre clrb q3 q3b ls_dff
adff4 d4 clk pre clrb q4 q4b ls_dff
adff5 d5 clk pre clrb q5 q5b ls_dff
adff6 d6 clk pre clrb q6 q6b ls_dff


aone pre plup

.model ls_dff d_dff(clk_delay=1p nreset_delay=2n
+ rise_delay=6n fall_delay=7.5n)
.model plup d_pullup

.ends
*
*
**********************
*SRC=74AS175A;74AS175A;TTL;74ASxx;D-type Flip-Flop
*SYM=T74175
*74AS175A QUADRUPLE D-TYPE FLIP-FLOPS WITH CLEAR
***
.subckt 74AS175A clrb clk d1 d2 d3 d4
+ q1 q2 q3 q4 q1b q2b q3b q4b
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLout
+ TTLout TTLout TTLout TTLout TTLout TTLout TTLout
*pinout M16A 1 9 4 5 12 13 2 7 10 15 3 6 11 14:VCC=16 GND=8
*pinout M16D 1 9 4 5 12 13 2 7 10 15 3 6 11 14:VCC=16 GND=8
*pinout N16A 1 9 4 5 12 13 2 7 10 15 3 6 11 14:VCC=16 GND=8
adff1 d1 clk pre clrb q1 q1b ls_dff 
adff2 d2 clk pre clrb q2 q2b ls_dff
adff3 d3 clk pre clrb q3 q3b ls_dff
adff4 d4 clk pre clrb q4 q4b ls_dff

aone pre plup

.model ls_dff d_dff(clk_delay=1p nreset_delay=2n
+ rise_delay=6n fall_delay=7n)
.model plup d_pullup

.ends
*
*
**********************
*SRC=74AS194;74AS194;TTL;74ASxx;4-bit shift register
*SYM=T74194
*74AS194 4-BIT BIDIRECTIONAL UNIVERSAL
*SHIFT REGISTERS
***
.subckt 74AS194 clk clrb s1 s0 sl sr 
+ a b c d qa qb qc qd
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin
+ TTLin TTLin TTLin TTLin TTLout TTLout TTLout TTLout
*pinout M16A 11 1 10 9 7 2 3 4 5 6 15 14 13 12:VCC=16 GND=8
*pinout M16D 11 1 10 9 7 2 3 4 5 6 15 14 13 12:VCC=16 GND=8
*pinout N16A 11 1 10 9 7 2 3 4 5 6 15 14 13 12:VCC=16 GND=8
ainv1 s0 s0b inv
ainv2 s1 s1b inv
ainva clrb clr inv
x1 qd s1b s0b sl s1 s0b
+ d s1 s0 s0 s1b qc kd andnor
ainv3 kd jd inv
ajkd jd kd clk l clr qd qdb ls_jk

x2 qc s1b s0b qd s1 s0b
+ c s1 s0 s0 s1b qb kc andnor
ainv4 kc jc inv
ajkc jc kc clk l clr qc qcb ls_jk

x3 qb s1b s0b qc s1 s0b
+ b s1 s0 s0 s1b qa kb andnor
ainv5 kb jb inv
ajkb jb kb clk l clr qb qbb ls_jk

x4 qa s1b s0b qb s1 s0b
+ a s1 s0 s0 s1b sr ka andnor 
ainv6 ka ja inv
ajka ja ka clk l clr qa qab ls_jk

az l low

.subckt andnor 1a 2a 3a 1b 2b 3b 1c 2c 3c
+ 1d 2d 3d out
aand1a [1a 2a 3a] 1 and
aand2a [1b 2b 3b] 2 and
aand3a [1c 2c 3c] 3 and
aand4a [1d 2d 3d] 4 and
anor [1 2 3 4] out nor
.model and d_and
.model nor d_nor
.ends andnor

.model low d_pulldown
.model inv d_inverter
.model ls_jk d_jkff(reset_delay=3n
+ rise_delay=5n fall_delay=5n)

.ends
*
*
**********************
*SRC=74AS195;74AS195;TTL;74ASxx;4-bit shift register
*SYM=T74195
*74AS195 4-BIT PARALLEL-ACCESS SHIFT REGISTERS
***
.subckt 74AS195 clki sh/ldb clrb j kbar 
+ a b c d qa qb qc qd qdb
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin
+ TTLin TTLin TTLin TTLout TTLout TTLout TTLout TTLout
*pinout M16A 10 9 1 2 3 4 5 6 7 15 14 13 12 11:VCC=16 GND=8
*pinout M16D 10 9 1 2 3 4 5 6 7 15 14 13 12 11:VCC=16 GND=8
*pinout N16A 10 9 1 2 3 4 5 6 7 15 14 13 12 11:VCC=16 GND=8
ainv1 sh/ldb sh/ld inv
ainv2 clrb clr inv

aand1 [clki clrb] clk and

aand1a [sh/ldb j qab] 1a and
aand2a [sh/ldb kbar qa] 2a and
aand3a [sh/ld a] 3a and
anora [1a 2a 3a] ka nor
ainva ka ja inv
ajka ja ka clk l clr qa qab ls_jk

aand1b [sh/ldb qa] 1b and
aand2b [sh/ld b] 2b and
anorb [1b 2b] kb nor
ainvb kb jb inv
ajkb jb kb clk l clr qb qbb ls_jk

aand1c [sh/ldb qb] 1c and
aand2c [sh/ld c] 2c and
anorc [1c 2c] kc nor
ainvc kc jc inv
ajkc jc kc clk l clr qc qcb ls_jk

aand1d [sh/ldb qc] 1d and
aand2d [sh/ld d] 2d and
anord [1d 2d] kd nor
ainvd kd jd inv
ajkd jd kd clk l clr qd qdb ls_jk

al l low
.model low d_pulldown
.model and d_and
.model nor d_nor
.model inv d_inverter
.model ls_jk d_jkff(reset_delay=1n
+ rise_delay=6n fall_delay=7.5n)

.ends
*
*
**********************
*SRC=74AS298;74AS298;TTL;74ASxx;2 input multiplexer
*SYM=T74298
*74AS298 MULTIPLEXERS QUAD 2-INPUT WITH STORAGE
***
.subckt 74AS298 ws clk a1 a2 b1 b2 c1 c2 
+ d1 d2 qa qb qc qd
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLin
+ TTLin TTLin TTLin TTLout TTLout TTLout TTLout
*pinout M16A 10 11 3 2 4 1 9 5 7 6 15 14 13 12:VCC=16 GND=8
*pinout M16D 10 11 3 2 4 1 9 5 7 6 15 14 13 12:VCC=16 GND=8
*pinout N16A 10 11 3 2 4 1 9 5 7 6 15 14 13 12:VCC=16 GND=8
ainv ws wsb inv
x1 clk a1 wsb a2 ws qa bloc
x2 clk b1 wsb b2 ws qb bloc
x3 clk c1 wsb c2 ws qc bloc
x4 clk d1 wsb d2 ws qd bloc

.subckt bloc clk a1 a2 b1 b2 out

aanda [a1 a2] a and
aandb [b1 b2] b and
aor [a b] j or
ainv1 j k inv
ainv2 clk clkb inv
ajkff j k clkb l l out outb ls_jkff
.model and d_and
.model or d_or
.model inv d_inverter
.model ls_jkff d_jkff(rise_delay=5.5n fall_delay=6n)
.ends bloc

.model inv d_inverter
.ends
*
*
**************

