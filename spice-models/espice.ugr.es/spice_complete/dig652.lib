*  Digital Library: 74AC652 to

*--------------------------------------------------------------74AC652----

* Octal Bus Transceiver and Register with 3-State Outputs
* TI Advanced CMOS Logic Data Book, 1993, pages 2-541 to 2-548
* jat 12/28/95

.SUBCKT 74AC652
+ OEAB OEBABAR CLKBA CLKAB SBA SAB A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(36,18) DPWR DGND
+ SBA SAB A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 QA1 QA2 QA3 QA4 QA5
+ QA6 QA7 QA8 QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8 OEAB OEBABAR
+ A1O A2O A3O A4O A5O A6O A7O A8O B1O B2O B3O B4O B5O B6O B7O B8O ENABAB ENABBA
+ D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   A1O = {(SBA & QB1) | ((~SBA) & B1)}
+   A2O = {(SBA & QB2) | ((~SBA) & B2)}
+   A3O = {(SBA & QB3) | ((~SBA) & B3)}
+   A4O = {(SBA & QB4) | ((~SBA) & B4)}
+   A5O = {(SBA & QB5) | ((~SBA) & B5)}
+   A6O = {(SBA & QB6) | ((~SBA) & B6)}
+   A7O = {(SBA & QB7) | ((~SBA) & B7)}
+   A8O = {(SBA & QB8) | ((~SBA) & B8)}
+   B1O = {(SAB & QA1) | ((~SAB) & A1)}
+   B2O = {(SAB & QA2) | ((~SAB) & A2)}
+   B3O = {(SAB & QA3) | ((~SAB) & A3)}
+   B4O = {(SAB & QA4) | ((~SAB) & A4)}
+   B5O = {(SAB & QA5) | ((~SAB) & A5)}
+   B6O = {(SAB & QA6) | ((~SAB) & A6)}
+   B7O = {(SAB & QA7) | ((~SAB) & A7)}
+   B8O = {(SAB & QA8) | ((~SAB) & A8)}
+   ENABAB = {OEAB}
+   ENABBA = {OEBABAR}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CLKAB
+ A1 A2 A3 A4 A5 A6 A7 A8
+ QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(8) DPWR DGND
+ $D_HI $D_HI CLKBA
+ B1 B2 B3 B4 B5 B6 B7 B8
+ QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(16,2,22) DPWR DGND
+ A1O A2O A3O A4O A5O A6O A7O A8O B1O B2O B3O B4O B5O B6O B7O B8O
+ ENABAB ENABBA
+ OEAB OEBABAR SAB SBA CLKAB CLKBA A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+ A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 
+ IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+ ENGAB = {CHANGED(OEAB,0)}
+ ENGBABAR = {CHANGED(OEBABAR,0)}
+ SELAB = {CHANGED(SAB,0)}
+ SELBA = {CHANGED(SBA,0)}
+ CLOCKAB = {CHANGED_LH(CLKAB,0)}
+ CLOCKBA = {CHANGED_LH(CLKBA,0)}
+ DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+          CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0)}
+ DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+          CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B8,0)} 
+ TRISTATE:
+   ENABLE HI = ENABAB
+   B1 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(4.1NS,7.2NS,10.1NS),
+       ENGAB & TRN_ZL, DELAY(4.6NS,7.9NS,11.1NS),
+       ENGAB & TRN_HZ, DELAY(3.9NS,5.6NS,7.3NS),
+       ENGAB & TRN_LZ, DELAY(3.4NS,5.2NS,6.8NS),
+       SELAB & A1=='1 & TRN_LH, DELAY(2.9NS,5.6NS,8.1NS),
+       SELAB & A1=='1 & TRN_HL, DELAY(3.8NS,6.9NS,9.6NS),
+       SELAB & A1=='0 & TRN_LH, DELAY(3.3NS,6.2NS,8.8NS),
+       SELAB & A1=='0 & TRN_HL, DELAY(4NS,7.1NS,9.9NS),
+       CLOCKAB & TRN_LH, DELAY(3.6NS,6.7NS,9.5NS),
+       CLOCKAB & TRN_HL, DELAY(4.4NS,7.8NS,10.8NS),
+       DATAA & TRN_LH, DELAY(2.4NS,5.2NS,7.6NS),
+       DATAA & TRN_HL, DELAY(3.1NS,6NS,8.7NS),
+       DELAY(5.6NS,8.9NS,12.1NS))}
+   B2 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(4.1NS,7.2NS,10.1NS),
+       ENGAB & TRN_ZL, DELAY(4.6NS,7.9NS,11.1NS),
+       ENGAB & TRN_HZ, DELAY(3.9NS,5.6NS,7.3NS),
+       ENGAB & TRN_LZ, DELAY(3.4NS,5.2NS,6.8NS),
+       SELAB & A2=='1 & TRN_LH, DELAY(2.9NS,5.6NS,8.1NS),
+       SELAB & A2=='1 & TRN_HL, DELAY(3.8NS,6.9NS,9.6NS),
+       SELAB & A2=='0 & TRN_LH, DELAY(3.3NS,6.2NS,8.8NS),
+       SELAB & A2=='0 & TRN_HL, DELAY(4NS,7.1NS,9.9NS),
+       CLOCKAB & TRN_LH, DELAY(3.6NS,6.7NS,9.5NS),
+       CLOCKAB & TRN_HL, DELAY(4.4NS,7.8NS,10.8NS),
+       DATAA & TRN_LH, DELAY(2.4NS,5.2NS,7.6NS),
+       DATAA & TRN_HL, DELAY(3.1NS,6NS,8.7NS),
+       DELAY(5.6NS,8.9NS,12.1NS))}
+   B3 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(4.1NS,7.2NS,10.1NS),
+       ENGAB & TRN_ZL, DELAY(4.6NS,7.9NS,11.1NS),
+       ENGAB & TRN_HZ, DELAY(3.9NS,5.6NS,7.3NS),
+       ENGAB & TRN_LZ, DELAY(3.4NS,5.2NS,6.8NS),
+       SELAB & A3=='1 & TRN_LH, DELAY(2.9NS,5.6NS,8.1NS),
+       SELAB & A3=='1 & TRN_HL, DELAY(3.8NS,6.9NS,9.6NS),
+       SELAB & A3=='0 & TRN_LH, DELAY(3.3NS,6.2NS,8.8NS),
+       SELAB & A3=='0 & TRN_HL, DELAY(4NS,7.1NS,9.9NS),
+       CLOCKAB & TRN_LH, DELAY(3.6NS,6.7NS,9.5NS),
+       CLOCKAB & TRN_HL, DELAY(4.4NS,7.8NS,10.8NS),
+       DATAA & TRN_LH, DELAY(2.4NS,5.2NS,7.6NS),
+       DATAA & TRN_HL, DELAY(3.1NS,6NS,8.7NS),
+       DELAY(5.6NS,8.9NS,12.1NS))}
+   B4 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(4.1NS,7.2NS,10.1NS),
+       ENGAB & TRN_ZL, DELAY(4.6NS,7.9NS,11.1NS),
+       ENGAB & TRN_HZ, DELAY(3.9NS,5.6NS,7.3NS),
+       ENGAB & TRN_LZ, DELAY(3.4NS,5.2NS,6.8NS),
+       SELAB & A4=='1 & TRN_LH, DELAY(2.9NS,5.6NS,8.1NS),
+       SELAB & A4=='1 & TRN_HL, DELAY(3.8NS,6.9NS,9.6NS),
+       SELAB & A4=='0 & TRN_LH, DELAY(3.3NS,6.2NS,8.8NS),
+       SELAB & A4=='0 & TRN_HL, DELAY(4NS,7.1NS,9.9NS),
+       CLOCKAB & TRN_LH, DELAY(3.6NS,6.7NS,9.5NS),
+       CLOCKAB & TRN_HL, DELAY(4.4NS,7.8NS,10.8NS),
+       DATAA & TRN_LH, DELAY(2.4NS,5.2NS,7.6NS),
+       DATAA & TRN_HL, DELAY(3.1NS,6NS,8.7NS),
+       DELAY(5.6NS,8.9NS,12.1NS))}
+   B5 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(4.1NS,7.2NS,10.1NS),
+       ENGAB & TRN_ZL, DELAY(4.6NS,7.9NS,11.1NS),
+       ENGAB & TRN_HZ, DELAY(3.9NS,5.6NS,7.3NS),
+       ENGAB & TRN_LZ, DELAY(3.4NS,5.2NS,6.8NS),
+       SELAB & A5=='1 & TRN_LH, DELAY(2.9NS,5.6NS,8.1NS),
+       SELAB & A5=='1 & TRN_HL, DELAY(3.8NS,6.9NS,9.6NS),
+       SELAB & A5=='0 & TRN_LH, DELAY(3.3NS,6.2NS,8.8NS),
+       SELAB & A5=='0 & TRN_HL, DELAY(4NS,7.1NS,9.9NS),
+       CLOCKAB & TRN_LH, DELAY(3.6NS,6.7NS,9.5NS),
+       CLOCKAB & TRN_HL, DELAY(4.4NS,7.8NS,10.8NS),
+       DATAA & TRN_LH, DELAY(2.4NS,5.2NS,7.6NS),
+       DATAA & TRN_HL, DELAY(3.1NS,6NS,8.7NS),
+       DELAY(5.6NS,8.9NS,12.1NS))}
+   B6 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(4.1NS,7.2NS,10.1NS),
+       ENGAB & TRN_ZL, DELAY(4.6NS,7.9NS,11.1NS),
+       ENGAB & TRN_HZ, DELAY(3.9NS,5.6NS,7.3NS),
+       ENGAB & TRN_LZ, DELAY(3.4NS,5.2NS,6.8NS),
+       SELAB & A6=='1 & TRN_LH, DELAY(2.9NS,5.6NS,8.1NS),
+       SELAB & A6=='1 & TRN_HL, DELAY(3.8NS,6.9NS,9.6NS),
+       SELAB & A6=='0 & TRN_LH, DELAY(3.3NS,6.2NS,8.8NS),
+       SELAB & A6=='0 & TRN_HL, DELAY(4NS,7.1NS,9.9NS),
+       CLOCKAB & TRN_LH, DELAY(3.6NS,6.7NS,9.5NS),
+       CLOCKAB & TRN_HL, DELAY(4.4NS,7.8NS,10.8NS),
+       DATAA & TRN_LH, DELAY(2.4NS,5.2NS,7.6NS),
+       DATAA & TRN_HL, DELAY(3.1NS,6NS,8.7NS),
+       DELAY(5.6NS,8.9NS,12.1NS))}
+   B7 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(4.1NS,7.2NS,10.1NS),
+       ENGAB & TRN_ZL, DELAY(4.6NS,7.9NS,11.1NS),
+       ENGAB & TRN_HZ, DELAY(3.9NS,5.6NS,7.3NS),
+       ENGAB & TRN_LZ, DELAY(3.4NS,5.2NS,6.8NS),
+       SELAB & A7=='1 & TRN_LH, DELAY(2.9NS,5.6NS,8.1NS),
+       SELAB & A7=='1 & TRN_HL, DELAY(3.8NS,6.9NS,9.6NS),
+       SELAB & A7=='0 & TRN_LH, DELAY(3.3NS,6.2NS,8.8NS),
+       SELAB & A7=='0 & TRN_HL, DELAY(4NS,7.1NS,9.9NS),
+       CLOCKAB & TRN_LH, DELAY(3.6NS,6.7NS,9.5NS),
+       CLOCKAB & TRN_HL, DELAY(4.4NS,7.8NS,10.8NS),
+       DATAA & TRN_LH, DELAY(2.4NS,5.2NS,7.6NS),
+       DATAA & TRN_HL, DELAY(3.1NS,6NS,8.7NS),
+       DELAY(5.6NS,8.9NS,12.1NS))}
+   B8 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(4.1NS,7.2NS,10.1NS),
+       ENGAB & TRN_ZL, DELAY(4.6NS,7.9NS,11.1NS),
+       ENGAB & TRN_HZ, DELAY(3.9NS,5.6NS,7.3NS),
+       ENGAB & TRN_LZ, DELAY(3.4NS,5.2NS,6.8NS),
+       SELAB & A8=='1 & TRN_LH, DELAY(2.9NS,5.6NS,8.1NS),
+       SELAB & A8=='1 & TRN_HL, DELAY(3.8NS,6.9NS,9.6NS),
+       SELAB & A8=='0 & TRN_LH, DELAY(3.3NS,6.2NS,8.8NS),
+       SELAB & A8=='0 & TRN_HL, DELAY(4NS,7.1NS,9.9NS),
+       CLOCKAB & TRN_LH, DELAY(3.6NS,6.7NS,9.5NS),
+       CLOCKAB & TRN_HL, DELAY(4.4NS,7.8NS,10.8NS),
+       DATAA & TRN_LH, DELAY(2.4NS,5.2NS,7.6NS),
+       DATAA & TRN_HL, DELAY(3.1NS,6NS,8.7NS),
+       DELAY(5.6NS,8.9NS,12.1NS))}
+ TRISTATE:
+   ENABLE LO = ENABBA
+   A1 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(4.1NS,7.2NS,10.1NS),
+       ENGBABAR & TRN_ZL, DELAY(4.6NS,7.9NS,11.1NS),
+       ENGBABAR & TRN_HZ, DELAY(3.9NS,5.6NS,7.3NS),
+       ENGBABAR & TRN_LZ, DELAY(3.4NS,5.2NS,6.8NS),
+       SELBA & B1=='1 & TRN_LH, DELAY(2.9NS,5.6NS,8.1NS),
+       SELBA & B1=='1 & TRN_HL, DELAY(3.8NS,6.9NS,9.6NS),
+       SELBA & B1=='0 & TRN_LH, DELAY(3.3NS,6.2NS,8.8NS),
+       SELBA & B1=='0 & TRN_HL, DELAY(4NS,7.1NS,9.9NS),
+       CLOCKBA & TRN_LH, DELAY(3.6NS,6.7NS,9.5NS),
+       CLOCKBA & TRN_HL, DELAY(4.4NS,7.8NS,10.8NS),
+       DATAB & TRN_LH, DELAY(2.4NS,5.2NS,7.6NS),
+       DATAB & TRN_HL, DELAY(3.1NS,6NS,8.7NS),
+       DELAY(5.6NS,8.9NS,12.1NS))}
+   A2 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(4.1NS,7.2NS,10.1NS),
+       ENGBABAR & TRN_ZL, DELAY(4.6NS,7.9NS,11.1NS),
+       ENGBABAR & TRN_HZ, DELAY(3.9NS,5.6NS,7.3NS),
+       ENGBABAR & TRN_LZ, DELAY(3.4NS,5.2NS,6.8NS),
+       SELBA & B2=='1 & TRN_LH, DELAY(2.9NS,5.6NS,8.1NS),
+       SELBA & B2=='1 & TRN_HL, DELAY(3.8NS,6.9NS,9.6NS),
+       SELBA & B2=='0 & TRN_LH, DELAY(3.3NS,6.2NS,8.8NS),
+       SELBA & B2=='0 & TRN_HL, DELAY(4NS,7.1NS,9.9NS),
+       CLOCKBA & TRN_LH, DELAY(3.6NS,6.7NS,9.5NS),
+       CLOCKBA & TRN_HL, DELAY(4.4NS,7.8NS,10.8NS),
+       DATAB & TRN_LH, DELAY(2.4NS,5.2NS,7.6NS),
+       DATAB & TRN_HL, DELAY(3.1NS,6NS,8.7NS),
+       DELAY(5.6NS,8.9NS,12.1NS))}
+   A3 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(4.1NS,7.2NS,10.1NS),
+       ENGBABAR & TRN_ZL, DELAY(4.6NS,7.9NS,11.1NS),
+       ENGBABAR & TRN_HZ, DELAY(3.9NS,5.6NS,7.3NS),
+       ENGBABAR & TRN_LZ, DELAY(3.4NS,5.2NS,6.8NS),
+       SELBA & B3=='1 & TRN_LH, DELAY(2.9NS,5.6NS,8.1NS),
+       SELBA & B3=='1 & TRN_HL, DELAY(3.8NS,6.9NS,9.6NS),
+       SELBA & B3=='0 & TRN_LH, DELAY(3.3NS,6.2NS,8.8NS),
+       SELBA & B3=='0 & TRN_HL, DELAY(4NS,7.1NS,9.9NS),
+       CLOCKBA & TRN_LH, DELAY(3.6NS,6.7NS,9.5NS),
+       CLOCKBA & TRN_HL, DELAY(4.4NS,7.8NS,10.8NS),
+       DATAB & TRN_LH, DELAY(2.4NS,5.2NS,7.6NS),
+       DATAB & TRN_HL, DELAY(3.1NS,6NS,8.7NS),
+       DELAY(5.6NS,8.9NS,12.1NS))}
+   A4 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(4.1NS,7.2NS,10.1NS),
+       ENGBABAR & TRN_ZL, DELAY(4.6NS,7.9NS,11.1NS),
+       ENGBABAR & TRN_HZ, DELAY(3.9NS,5.6NS,7.3NS),
+       ENGBABAR & TRN_LZ, DELAY(3.4NS,5.2NS,6.8NS),
+       SELBA & B4=='1 & TRN_LH, DELAY(2.9NS,5.6NS,8.1NS),
+       SELBA & B4=='1 & TRN_HL, DELAY(3.8NS,6.9NS,9.6NS),
+       SELBA & B4=='0 & TRN_LH, DELAY(3.3NS,6.2NS,8.8NS),
+       SELBA & B4=='0 & TRN_HL, DELAY(4NS,7.1NS,9.9NS),
+       CLOCKBA & TRN_LH, DELAY(3.6NS,6.7NS,9.5NS),
+       CLOCKBA & TRN_HL, DELAY(4.4NS,7.8NS,10.8NS),
+       DATAB & TRN_LH, DELAY(2.4NS,5.2NS,7.6NS),
+       DATAB & TRN_HL, DELAY(3.1NS,6NS,8.7NS),
+       DELAY(5.6NS,8.9NS,12.1NS))}
+   A5 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(4.1NS,7.2NS,10.1NS),
+       ENGBABAR & TRN_ZL, DELAY(4.6NS,7.9NS,11.1NS),
+       ENGBABAR & TRN_HZ, DELAY(3.9NS,5.6NS,7.3NS),
+       ENGBABAR & TRN_LZ, DELAY(3.4NS,5.2NS,6.8NS),
+       SELBA & B5=='1 & TRN_LH, DELAY(2.9NS,5.6NS,8.1NS),
+       SELBA & B5=='1 & TRN_HL, DELAY(3.8NS,6.9NS,9.6NS),
+       SELBA & B5=='0 & TRN_LH, DELAY(3.3NS,6.2NS,8.8NS),
+       SELBA & B5=='0 & TRN_HL, DELAY(4NS,7.1NS,9.9NS),
+       CLOCKBA & TRN_LH, DELAY(3.6NS,6.7NS,9.5NS),
+       CLOCKBA & TRN_HL, DELAY(4.4NS,7.8NS,10.8NS),
+       DATAB & TRN_LH, DELAY(2.4NS,5.2NS,7.6NS),
+       DATAB & TRN_HL, DELAY(3.1NS,6NS,8.7NS),
+       DELAY(5.6NS,8.9NS,12.1NS))}
+   A6 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(4.1NS,7.2NS,10.1NS),
+       ENGBABAR & TRN_ZL, DELAY(4.6NS,7.9NS,11.1NS),
+       ENGBABAR & TRN_HZ, DELAY(3.9NS,5.6NS,7.3NS),
+       ENGBABAR & TRN_LZ, DELAY(3.4NS,5.2NS,6.8NS),
+       SELBA & B6=='1 & TRN_LH, DELAY(2.9NS,5.6NS,8.1NS),
+       SELBA & B6=='1 & TRN_HL, DELAY(3.8NS,6.9NS,9.6NS),
+       SELBA & B6=='0 & TRN_LH, DELAY(3.3NS,6.2NS,8.8NS),
+       SELBA & B6=='0 & TRN_HL, DELAY(4NS,7.1NS,9.9NS),
+       CLOCKBA & TRN_LH, DELAY(3.6NS,6.7NS,9.5NS),
+       CLOCKBA & TRN_HL, DELAY(4.4NS,7.8NS,10.8NS),
+       DATAB & TRN_LH, DELAY(2.4NS,5.2NS,7.6NS),
+       DATAB & TRN_HL, DELAY(3.1NS,6NS,8.7NS),
+       DELAY(5.6NS,8.9NS,12.1NS))}
+   A7 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(4.1NS,7.2NS,10.1NS),
+       ENGBABAR & TRN_ZL, DELAY(4.6NS,7.9NS,11.1NS),
+       ENGBABAR & TRN_HZ, DELAY(3.9NS,5.6NS,7.3NS),
+       ENGBABAR & TRN_LZ, DELAY(3.4NS,5.2NS,6.8NS),
+       SELBA & B7=='1 & TRN_LH, DELAY(2.9NS,5.6NS,8.1NS),
+       SELBA & B7=='1 & TRN_HL, DELAY(3.8NS,6.9NS,9.6NS),
+       SELBA & B7=='0 & TRN_LH, DELAY(3.3NS,6.2NS,8.8NS),
+       SELBA & B7=='0 & TRN_HL, DELAY(4NS,7.1NS,9.9NS),
+       CLOCKBA & TRN_LH, DELAY(3.6NS,6.7NS,9.5NS),
+       CLOCKBA & TRN_HL, DELAY(4.4NS,7.8NS,10.8NS),
+       DATAB & TRN_LH, DELAY(2.4NS,5.2NS,7.6NS),
+       DATAB & TRN_HL, DELAY(3.1NS,6NS,8.7NS),
+       DELAY(5.6NS,8.9NS,12.1NS))}
+   A8 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(4.1NS,7.2NS,10.1NS),
+       ENGBABAR & TRN_ZL, DELAY(4.6NS,7.9NS,11.1NS),
+       ENGBABAR & TRN_HZ, DELAY(3.9NS,5.6NS,7.3NS),
+       ENGBABAR & TRN_LZ, DELAY(3.4NS,5.2NS,6.8NS),
+       SELBA & B8=='1 & TRN_LH, DELAY(2.9NS,5.6NS,8.1NS),
+       SELBA & B8=='1 & TRN_HL, DELAY(3.8NS,6.9NS,9.6NS),
+       SELBA & B8=='0 & TRN_LH, DELAY(3.3NS,6.2NS,8.8NS),
+       SELBA & B8=='0 & TRN_HL, DELAY(4NS,7.1NS,9.9NS),
+       CLOCKBA & TRN_LH, DELAY(3.6NS,6.7NS,9.5NS),
+       CLOCKBA & TRN_HL, DELAY(4.4NS,7.8NS,10.8NS),
+       DATAB & TRN_LH, DELAY(2.4NS,5.2NS,7.6NS),
+       DATAB & TRN_HL, DELAY(3.1NS,6NS,8.7NS),
+       DELAY(5.6NS,8.9NS,12.1NS))}

U5 CONSTRAINT(18) DPWR DGND
+ CLKAB CLKBA A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+ IO_AC IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLKAB
+   MAXFREQ = 105MEG
+ FREQ:
+   NODE = CLKBA
+   MAXFREQ = 105MEG
+ WIDTH:
+   NODE = CLKAB
+   MIN_LO = 4.8NS
+   MIN_HI = 4.8NS
+ WIDTH:
+   NODE = CLKBA
+   MIN_LO = 4.8NS
+   MIN_HI = 4.8NS
+ SETUP_HOLD:
+   CLOCK LH = CLKAB
+   DATA(8) = A1 A2 A3 A4 A5 A6 A7 A8
+   SETUPTIME = 4.5NS
+   HOLDTIME = 1NS
+ SETUP_HOLD:
+   CLOCK LH = CLKBA
+   DATA(8) = B1 B2 B3 B4 B5 B6 B7 B8
+   SETUPTIME = 4.5NS
+   HOLDTIME = 1NS

.ENDS 74AC652

*--------------------------------------------------------------74ACT652----

* Octal Bus Transceiver and Register with 3-State Outputs
* TI Advanced CMOS Logic Data Book, 1993, pages 2-549 to 2-555
* jat 12/28/95

.SUBCKT 74ACT652
+ GAB GBABAR CBA CAB SBA SAB A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(36,18) DPWR DGND
+ SBA SAB A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 QA1 QA2 QA3 QA4 QA5
+ QA6 QA7 QA8 QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8 GAB GBABAR
+ A1O A2O A3O A4O A5O A6O A7O A8O B1O B2O B3O B4O B5O B6O B7O B8O ENABAB ENABBA
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   A1O = {(SBA & QB1) | ((~SBA) & B1)}
+   A2O = {(SBA & QB2) | ((~SBA) & B2)}
+   A3O = {(SBA & QB3) | ((~SBA) & B3)}
+   A4O = {(SBA & QB4) | ((~SBA) & B4)}
+   A5O = {(SBA & QB5) | ((~SBA) & B5)}
+   A6O = {(SBA & QB6) | ((~SBA) & B6)}
+   A7O = {(SBA & QB7) | ((~SBA) & B7)}
+   A8O = {(SBA & QB8) | ((~SBA) & B8)}
+   B1O = {(SAB & QA1) | ((~SAB) & A1)}
+   B2O = {(SAB & QA2) | ((~SAB) & A2)}
+   B3O = {(SAB & QA3) | ((~SAB) & A3)}
+   B4O = {(SAB & QA4) | ((~SAB) & A4)}
+   B5O = {(SAB & QA5) | ((~SAB) & A5)}
+   B6O = {(SAB & QA6) | ((~SAB) & A6)}
+   B7O = {(SAB & QA7) | ((~SAB) & A7)}
+   B8O = {(SAB & QA8) | ((~SAB) & A8)}
+   ENABAB = {GAB}
+   ENABBA = {GBABAR}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CAB
+ A1 A2 A3 A4 A5 A6 A7 A8
+ QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(8) DPWR DGND
+ $D_HI $D_HI CBA
+ B1 B2 B3 B4 B5 B6 B7 B8
+ QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(16,2,22) DPWR DGND
+ A1O A2O A3O A4O A5O A6O A7O A8O B1O B2O B3O B4O B5O B6O B7O B8O
+ ENABAB ENABBA
+ GAB GBABAR SAB SBA CAB CBA A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+ A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+ ENGAB = {CHANGED(GAB,0)}
+ ENGBABAR = {CHANGED(GBABAR,0)}
+ SELAB = {CHANGED(SAB,0)}
+ SELBA = {CHANGED(SBA,0)}
+ CLOCKAB = {CHANGED_LH(CAB,0)}
+ CLOCKBA = {CHANGED_LH(CBA,0)}
+ DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+          CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0)}
+ DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+          CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B8,0)} 
+ TRISTATE:
+   ENABLE HI = ENABAB
+   B1 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(5.1NS,9.1NS,13.4NS),
+       ENGAB & TRN_ZL, DELAY(5.8NS,9.7NS,14.2NS),
+       ENGAB & TRN_HZ, DELAY(3.4NS,6.8NS,9.7NS),
+       ENGAB & TRN_LZ, DELAY(3.1NS,6NS,8.8NS),
+       SELAB & A1=='1 & TRN_LH, DELAY(2.8NS,6.2NS,10.1NS),
+       SELAB & A1=='1 & TRN_HL, DELAY(5.5NS,8.7NS,12.1NS),
+       SELAB & A1=='0 & TRN_LH, DELAY(4.9NS,7.8NS,11NS),
+       SELAB & A1=='0 & TRN_HL, DELAY(3.9NS,7.5NS,11.6NS),
+       CLOCKAB & TRN_LH, DELAY(5.4NS,8.4NS,11.8NS),
+       CLOCKAB & TRN_HL, DELAY(6.1NS,9.4NS,13.1NS),
+       DATAA & TRN_LH, DELAY(3.8NS,7NS,9.9NS),
+       DATAA & TRN_HL, DELAY(3.4NS,6.7NS,10.7NS),
+       DELAY(7.1NS,10.7NS,15.2NS))}
+   B2 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(5.1NS,9.1NS,13.4NS),
+       ENGAB & TRN_ZL, DELAY(5.8NS,9.7NS,14.2NS),
+       ENGAB & TRN_HZ, DELAY(3.4NS,6.8NS,9.7NS),
+       ENGAB & TRN_LZ, DELAY(3.1NS,6NS,8.8NS),
+       SELAB & A2=='1 & TRN_LH, DELAY(2.8NS,6.2NS,10.1NS),
+       SELAB & A2=='1 & TRN_HL, DELAY(5.5NS,8.7NS,12.1NS),
+       SELAB & A2=='0 & TRN_LH, DELAY(4.9NS,7.8NS,11NS),
+       SELAB & A2=='0 & TRN_HL, DELAY(3.9NS,7.5NS,11.6NS),
+       CLOCKAB & TRN_LH, DELAY(5.4NS,8.4NS,11.8NS),
+       CLOCKAB & TRN_HL, DELAY(6.1NS,9.4NS,13.1NS),
+       DATAA & TRN_LH, DELAY(3.8NS,7NS,9.9NS),
+       DATAA & TRN_HL, DELAY(3.4NS,6.7NS,10.7NS),
+       DELAY(7.1NS,10.7NS,15.2NS))}
+   B3 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(5.1NS,9.1NS,13.4NS),
+       ENGAB & TRN_ZL, DELAY(5.8NS,9.7NS,14.2NS),
+       ENGAB & TRN_HZ, DELAY(3.4NS,6.8NS,9.7NS),
+       ENGAB & TRN_LZ, DELAY(3.1NS,6NS,8.8NS),
+       SELAB & A3=='1 & TRN_LH, DELAY(2.8NS,6.2NS,10.1NS),
+       SELAB & A3=='1 & TRN_HL, DELAY(5.5NS,8.7NS,12.1NS),
+       SELAB & A3=='0 & TRN_LH, DELAY(4.9NS,7.8NS,11NS),
+       SELAB & A3=='0 & TRN_HL, DELAY(3.9NS,7.5NS,11.6NS),
+       CLOCKAB & TRN_LH, DELAY(5.4NS,8.4NS,11.8NS),
+       CLOCKAB & TRN_HL, DELAY(6.1NS,9.4NS,13.1NS),
+       DATAA & TRN_LH, DELAY(3.8NS,7NS,9.9NS),
+       DATAA & TRN_HL, DELAY(3.4NS,6.7NS,10.7NS),
+       DELAY(7.1NS,10.7NS,15.2NS))}
+   B4 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(5.1NS,9.1NS,13.4NS),
+       ENGAB & TRN_ZL, DELAY(5.8NS,9.7NS,14.2NS),
+       ENGAB & TRN_HZ, DELAY(3.4NS,6.8NS,9.7NS),
+       ENGAB & TRN_LZ, DELAY(3.1NS,6NS,8.8NS),
+       SELAB & A4=='1 & TRN_LH, DELAY(2.8NS,6.2NS,10.1NS),
+       SELAB & A4=='1 & TRN_HL, DELAY(5.5NS,8.7NS,12.1NS),
+       SELAB & A4=='0 & TRN_LH, DELAY(4.9NS,7.8NS,11NS),
+       SELAB & A4=='0 & TRN_HL, DELAY(3.9NS,7.5NS,11.6NS),
+       CLOCKAB & TRN_LH, DELAY(5.4NS,8.4NS,11.8NS),
+       CLOCKAB & TRN_HL, DELAY(6.1NS,9.4NS,13.1NS),
+       DATAA & TRN_LH, DELAY(3.8NS,7NS,9.9NS),
+       DATAA & TRN_HL, DELAY(3.4NS,6.7NS,10.7NS),
+       DELAY(7.1NS,10.7NS,15.2NS))}
+   B5 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(5.1NS,9.1NS,13.4NS),
+       ENGAB & TRN_ZL, DELAY(5.8NS,9.7NS,14.2NS),
+       ENGAB & TRN_HZ, DELAY(3.4NS,6.8NS,9.7NS),
+       ENGAB & TRN_LZ, DELAY(3.1NS,6NS,8.8NS),
+       SELAB & A5=='1 & TRN_LH, DELAY(2.8NS,6.2NS,10.1NS),
+       SELAB & A5=='1 & TRN_HL, DELAY(5.5NS,8.7NS,12.1NS),
+       SELAB & A5=='0 & TRN_LH, DELAY(4.9NS,7.8NS,11NS),
+       SELAB & A5=='0 & TRN_HL, DELAY(3.9NS,7.5NS,11.6NS),
+       CLOCKAB & TRN_LH, DELAY(5.4NS,8.4NS,11.8NS),
+       CLOCKAB & TRN_HL, DELAY(6.1NS,9.4NS,13.1NS),
+       DATAA & TRN_LH, DELAY(3.8NS,7NS,9.9NS),
+       DATAA & TRN_HL, DELAY(3.4NS,6.7NS,10.7NS),
+       DELAY(7.1NS,10.7NS,15.2NS))}
+   B6 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(5.1NS,9.1NS,13.4NS),
+       ENGAB & TRN_ZL, DELAY(5.8NS,9.7NS,14.2NS),
+       ENGAB & TRN_HZ, DELAY(3.4NS,6.8NS,9.7NS),
+       ENGAB & TRN_LZ, DELAY(3.1NS,6NS,8.8NS),
+       SELAB & A6=='1 & TRN_LH, DELAY(2.8NS,6.2NS,10.1NS),
+       SELAB & A6=='1 & TRN_HL, DELAY(5.5NS,8.7NS,12.1NS),
+       SELAB & A6=='0 & TRN_LH, DELAY(4.9NS,7.8NS,11NS),
+       SELAB & A6=='0 & TRN_HL, DELAY(3.9NS,7.5NS,11.6NS),
+       CLOCKAB & TRN_LH, DELAY(5.4NS,8.4NS,11.8NS),
+       CLOCKAB & TRN_HL, DELAY(6.1NS,9.4NS,13.1NS),
+       DATAA & TRN_LH, DELAY(3.8NS,7NS,9.9NS),
+       DATAA & TRN_HL, DELAY(3.4NS,6.7NS,10.7NS),
+       DELAY(7.1NS,10.7NS,15.2NS))}
+   B7 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(5.1NS,9.1NS,13.4NS),
+       ENGAB & TRN_ZL, DELAY(5.8NS,9.7NS,14.2NS),
+       ENGAB & TRN_HZ, DELAY(3.4NS,6.8NS,9.7NS),
+       ENGAB & TRN_LZ, DELAY(3.1NS,6NS,8.8NS),
+       SELAB & A7=='1 & TRN_LH, DELAY(2.8NS,6.2NS,10.1NS),
+       SELAB & A7=='1 & TRN_HL, DELAY(5.5NS,8.7NS,12.1NS),
+       SELAB & A7=='0 & TRN_LH, DELAY(4.9NS,7.8NS,11NS),
+       SELAB & A7=='0 & TRN_HL, DELAY(3.9NS,7.5NS,11.6NS),
+       CLOCKAB & TRN_LH, DELAY(5.4NS,8.4NS,11.8NS),
+       CLOCKAB & TRN_HL, DELAY(6.1NS,9.4NS,13.1NS),
+       DATAA & TRN_LH, DELAY(3.8NS,7NS,9.9NS),
+       DATAA & TRN_HL, DELAY(3.4NS,6.7NS,10.7NS),
+       DELAY(7.1NS,10.7NS,15.2NS))}
+   B8 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(5.1NS,9.1NS,13.4NS),
+       ENGAB & TRN_ZL, DELAY(5.8NS,9.7NS,14.2NS),
+       ENGAB & TRN_HZ, DELAY(3.4NS,6.8NS,9.7NS),
+       ENGAB & TRN_LZ, DELAY(3.1NS,6NS,8.8NS),
+       SELAB & A8=='1 & TRN_LH, DELAY(2.8NS,6.2NS,10.1NS),
+       SELAB & A8=='1 & TRN_HL, DELAY(5.5NS,8.7NS,12.1NS),
+       SELAB & A8=='0 & TRN_LH, DELAY(4.9NS,7.8NS,11NS),
+       SELAB & A8=='0 & TRN_HL, DELAY(3.9NS,7.5NS,11.6NS),
+       CLOCKAB & TRN_LH, DELAY(5.4NS,8.4NS,11.8NS),
+       CLOCKAB & TRN_HL, DELAY(6.1NS,9.4NS,13.1NS),
+       DATAA & TRN_LH, DELAY(3.8NS,7NS,9.9NS),
+       DATAA & TRN_HL, DELAY(3.4NS,6.7NS,10.7NS),
+       DELAY(7.1NS,10.7NS,15.2NS))}
+ TRISTATE:
+   ENABLE LO = ENABBA
+   A1 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(3.3NS,7.2NS,11.4NS),
+       ENGBABAR & TRN_ZL, DELAY(4.1NS,7.8NS,12.6NS),
+       ENGBABAR & TRN_HZ, DELAY(5.2NS,7.2NS,9.3NS),
+       ENGBABAR & TRN_LZ, DELAY(4.8NS,6.7NS,8.6NS),
+       SELBA & B1=='1 & TRN_LH, DELAY(2.8NS,6.2NS,10.1NS),
+       SELBA & B1=='1 & TRN_HL, DELAY(5.5NS,8.7NS,12.1NS),
+       SELBA & B1=='0 & TRN_LH, DELAY(4.9NS,7.8NS,11NS),
+       SELBA & B1=='0 & TRN_HL, DELAY(3.9NS,7.5NS,11.6NS),
+       CLOCKBA & TRN_LH, DELAY(5.4NS,8.4NS,11.8NS),
+       CLOCKBA & TRN_HL, DELAY(6.1NS,9.4NS,13.1NS),
+       DATAB & TRN_LH, DELAY(3.8NS,7NS,9.9NS),
+       DATAB & TRN_HL, DELAY(3.4NS,6.7NS,10.7NS),
+       DELAY(7.1NS,10.7NS,15.2NS))}
+   A2 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(3.3NS,7.2NS,11.4NS),
+       ENGBABAR & TRN_ZL, DELAY(4.1NS,7.8NS,12.6NS),
+       ENGBABAR & TRN_HZ, DELAY(5.2NS,7.2NS,9.3NS),
+       ENGBABAR & TRN_LZ, DELAY(4.8NS,6.7NS,8.6NS),
+       SELBA & B2=='1 & TRN_LH, DELAY(2.8NS,6.2NS,10.1NS),
+       SELBA & B2=='1 & TRN_HL, DELAY(5.5NS,8.7NS,12.1NS),
+       SELBA & B2=='0 & TRN_LH, DELAY(4.9NS,7.8NS,11NS),
+       SELBA & B2=='0 & TRN_HL, DELAY(3.9NS,7.5NS,11.6NS),
+       CLOCKBA & TRN_LH, DELAY(5.4NS,8.4NS,11.8NS),
+       CLOCKBA & TRN_HL, DELAY(6.1NS,9.4NS,13.1NS),
+       DATAB & TRN_LH, DELAY(3.8NS,7NS,9.9NS),
+       DATAB & TRN_HL, DELAY(3.4NS,6.7NS,10.7NS),
+       DELAY(7.1NS,10.7NS,15.2NS))}
+   A3 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(3.3NS,7.2NS,11.4NS),
+       ENGBABAR & TRN_ZL, DELAY(4.1NS,7.8NS,12.6NS),
+       ENGBABAR & TRN_HZ, DELAY(5.2NS,7.2NS,9.3NS),
+       ENGBABAR & TRN_LZ, DELAY(4.8NS,6.7NS,8.6NS),
+       SELBA & B3=='1 & TRN_LH, DELAY(2.8NS,6.2NS,10.1NS),
+       SELBA & B3=='1 & TRN_HL, DELAY(5.5NS,8.7NS,12.1NS),
+       SELBA & B3=='0 & TRN_LH, DELAY(4.9NS,7.8NS,11NS),
+       SELBA & B3=='0 & TRN_HL, DELAY(3.9NS,7.5NS,11.6NS),
+       CLOCKBA & TRN_LH, DELAY(5.4NS,8.4NS,11.8NS),
+       CLOCKBA & TRN_HL, DELAY(6.1NS,9.4NS,13.1NS),
+       DATAB & TRN_LH, DELAY(3.8NS,7NS,9.9NS),
+       DATAB & TRN_HL, DELAY(3.4NS,6.7NS,10.7NS),
+       DELAY(7.1NS,10.7NS,15.2NS))}
+   A4 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(3.3NS,7.2NS,11.4NS),
+       ENGBABAR & TRN_ZL, DELAY(4.1NS,7.8NS,12.6NS),
+       ENGBABAR & TRN_HZ, DELAY(5.2NS,7.2NS,9.3NS),
+       ENGBABAR & TRN_LZ, DELAY(4.8NS,6.7NS,8.6NS),
+       SELBA & B4=='1 & TRN_LH, DELAY(2.8NS,6.2NS,10.1NS),
+       SELBA & B4=='1 & TRN_HL, DELAY(5.5NS,8.7NS,12.1NS),
+       SELBA & B4=='0 & TRN_LH, DELAY(4.9NS,7.8NS,11NS),
+       SELBA & B4=='0 & TRN_HL, DELAY(3.9NS,7.5NS,11.6NS),
+       CLOCKBA & TRN_LH, DELAY(5.4NS,8.4NS,11.8NS),
+       CLOCKBA & TRN_HL, DELAY(6.1NS,9.4NS,13.1NS),
+       DATAB & TRN_LH, DELAY(3.8NS,7NS,9.9NS),
+       DATAB & TRN_HL, DELAY(3.4NS,6.7NS,10.7NS),
+       DELAY(7.1NS,10.7NS,15.2NS))}
+   A5 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(3.3NS,7.2NS,11.4NS),
+       ENGBABAR & TRN_ZL, DELAY(4.1NS,7.8NS,12.6NS),
+       ENGBABAR & TRN_HZ, DELAY(5.2NS,7.2NS,9.3NS),
+       ENGBABAR & TRN_LZ, DELAY(4.8NS,6.7NS,8.6NS),
+       SELBA & B5=='1 & TRN_LH, DELAY(2.8NS,6.2NS,10.1NS),
+       SELBA & B5=='1 & TRN_HL, DELAY(5.5NS,8.7NS,12.1NS),
+       SELBA & B5=='0 & TRN_LH, DELAY(4.9NS,7.8NS,11NS),
+       SELBA & B5=='0 & TRN_HL, DELAY(3.9NS,7.5NS,11.6NS),
+       CLOCKBA & TRN_LH, DELAY(5.4NS,8.4NS,11.8NS),
+       CLOCKBA & TRN_HL, DELAY(6.1NS,9.4NS,13.1NS),
+       DATAB & TRN_LH, DELAY(3.8NS,7NS,9.9NS),
+       DATAB & TRN_HL, DELAY(3.4NS,6.7NS,10.7NS),
+       DELAY(7.1NS,10.7NS,15.2NS))}
+   A6 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(3.3NS,7.2NS,11.4NS),
+       ENGBABAR & TRN_ZL, DELAY(4.1NS,7.8NS,12.6NS),
+       ENGBABAR & TRN_HZ, DELAY(5.2NS,7.2NS,9.3NS),
+       ENGBABAR & TRN_LZ, DELAY(4.8NS,6.7NS,8.6NS),
+       SELBA & B6=='1 & TRN_LH, DELAY(2.8NS,6.2NS,10.1NS),
+       SELBA & B6=='1 & TRN_HL, DELAY(5.5NS,8.7NS,12.1NS),
+       SELBA & B6=='0 & TRN_LH, DELAY(4.9NS,7.8NS,11NS),
+       SELBA & B6=='0 & TRN_HL, DELAY(3.9NS,7.5NS,11.6NS),
+       CLOCKBA & TRN_LH, DELAY(5.4NS,8.4NS,11.8NS),
+       CLOCKBA & TRN_HL, DELAY(6.1NS,9.4NS,13.1NS),
+       DATAB & TRN_LH, DELAY(3.8NS,7NS,9.9NS),
+       DATAB & TRN_HL, DELAY(3.4NS,6.7NS,10.7NS),
+       DELAY(7.1NS,10.7NS,15.2NS))}
+   A7 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(3.3NS,7.2NS,11.4NS),
+       ENGBABAR & TRN_ZL, DELAY(4.1NS,7.8NS,12.6NS),
+       ENGBABAR & TRN_HZ, DELAY(5.2NS,7.2NS,9.3NS),
+       ENGBABAR & TRN_LZ, DELAY(4.8NS,6.7NS,8.6NS),
+       SELBA & B7=='1 & TRN_LH, DELAY(2.8NS,6.2NS,10.1NS),
+       SELBA & B7=='1 & TRN_HL, DELAY(5.5NS,8.7NS,12.1NS),
+       SELBA & B7=='0 & TRN_LH, DELAY(4.9NS,7.8NS,11NS),
+       SELBA & B7=='0 & TRN_HL, DELAY(3.9NS,7.5NS,11.6NS),
+       CLOCKBA & TRN_LH, DELAY(5.4NS,8.4NS,11.8NS),
+       CLOCKBA & TRN_HL, DELAY(6.1NS,9.4NS,13.1NS),
+       DATAB & TRN_LH, DELAY(3.8NS,7NS,9.9NS),
+       DATAB & TRN_HL, DELAY(3.4NS,6.7NS,10.7NS),
+       DELAY(7.1NS,10.7NS,15.2NS))}
+   A8 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(3.3NS,7.2NS,11.4NS),
+       ENGBABAR & TRN_ZL, DELAY(4.1NS,7.8NS,12.6NS),
+       ENGBABAR & TRN_HZ, DELAY(5.2NS,7.2NS,9.3NS),
+       ENGBABAR & TRN_LZ, DELAY(4.8NS,6.7NS,8.6NS),
+       SELBA & B8=='1 & TRN_LH, DELAY(2.8NS,6.2NS,10.1NS),
+       SELBA & B8=='1 & TRN_HL, DELAY(5.5NS,8.7NS,12.1NS),
+       SELBA & B8=='0 & TRN_LH, DELAY(4.9NS,7.8NS,11NS),
+       SELBA & B8=='0 & TRN_HL, DELAY(3.9NS,7.5NS,11.6NS),
+       CLOCKBA & TRN_LH, DELAY(5.4NS,8.4NS,11.8NS),
+       CLOCKBA & TRN_HL, DELAY(6.1NS,9.4NS,13.1NS),
+       DATAB & TRN_LH, DELAY(3.8NS,7NS,9.9NS),
+       DATAB & TRN_HL, DELAY(3.4NS,6.7NS,10.7NS),
+       DELAY(7.1NS,10.7NS,15.2NS))}

U5 CONSTRAINT(18) DPWR DGND
+ CAB CBA A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+ IO_ACT IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CAB
+   MAXFREQ = 105MEG
+ FREQ:
+   NODE = CBA
+   MAXFREQ = 105MEG
+ WIDTH:
+   NODE = CAB
+   MIN_LO = 4.8NS
+   MIN_HI = 4.8NS
+ WIDTH:
+   NODE = CBA
+   MIN_LO = 4.8NS
+   MIN_HI = 4.8NS
+ SETUP_HOLD:
+   CLOCK LH = CAB
+   DATA(8) = A1 A2 A3 A4 A5 A6 A7 A8
+   SETUPTIME = 4NS
+   HOLDTIME = 2.5NS
+ SETUP_HOLD:
+   CLOCK LH = CBA
+   DATA(8) = B1 B2 B3 B4 B5 B6 B7 B8
+   SETUPTIME = 4NS
+   HOLDTIME = 2.5NS

.ENDS 74ACT652

* ----------------------------------------------------------- 74ALS652 ------
*  Octal Bus Transceivers And Registers With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-547 to 2-558
*  bss    5/23/94
*
.SUBCKT 74ALS652 GBABAR GAB CBA SBA CAB SAB A1 A2 A3 A4 A5 A6 A7 A8
+     B1 B2 B3 B4 B5 B6 B7 B8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CBA
+     B1 B2 B3 B4 B5 B6 B7 B8
+     QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CAB
+     A1 A2 A3 A4 A5 A6 A7 A8
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(34,16) DPWR DGND
+     SBA SAB A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8 QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbabar = {~SBA}
+     sabbar = {~SAB}
+     A1_O = {((SBA & QB1) | (sbabar & B1))}
+     A2_O = {((SBA & QB2) | (sbabar & B2))}
+     A3_O = {((SBA & QB3) | (sbabar & B3))}
+     A4_O = {((SBA & QB4) | (sbabar & B4))}
+     A5_O = {((SBA & QB5) | (sbabar & B5))}
+     A6_O = {((SBA & QB6) | (sbabar & B6))}
+     A7_O = {((SBA & QB7) | (sbabar & B7))}
+     A8_O = {((SBA & QB8) | (sbabar & B8))}
+     B1_O = {((SAB & QA1) | (sabbar & A1))}
+     B2_O = {((SAB & QA2) | (sabbar & A2))}
+     B3_O = {((SAB & QA3) | (sabbar & A3))}
+     B4_O = {((SAB & QA4) | (sabbar & A4))}
+     B5_O = {((SAB & QA5) | (sabbar & A5))}
+     B6_O = {((SAB & QA6) | (sabbar & A6))}
+     B7_O = {((SAB & QA7) | (sabbar & A7))}
+     B8_O = {((SAB & QA8) | (sabbar & A8))}

U4DLY PINDLY(16,2,20) DPWR DGND
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O 
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     GBABAR GAB
+     CBA CAB SBA SAB
+     A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELBA = {CHANGED(SBA,0)}
+     SELAB = {CHANGED(SAB,0)}
+     CLOCKBA = {CHANGED_LH(CBA,0)}
+     CLOCKAB = {CHANGED_LH(CAB,0)}
+
+  TRISTATE:
+     ENABLE LO=GBABAR
+     A1 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & B1!='0 & TRN_LH, DELAY(-1,17ns,22ns),
+         SELBA & B1!='0 & TRN_HL, DELAY(-1,13ns,17ns),
+         SELBA & B1!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELBA & B1!='1 & TRN_HL, DELAY(-1,13ns,17ns),
+         CHANGED(B1,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(B1,0) & TRN_HL, DELAY(-1,8ns,10ns),
+         TRN_ZH, DELAY(-1,10ns,15ns),
+         TRN_ZL, DELAY(-1,10ns,14ns),
+         TRN_HZ, DELAY(-1,6ns,8ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     A2 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & B2!='0 & TRN_LH, DELAY(-1,17ns,22ns),
+         SELBA & B2!='0 & TRN_HL, DELAY(-1,13ns,17ns),
+         SELBA & B2!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELBA & B2!='1 & TRN_HL, DELAY(-1,13ns,17ns),
+         CHANGED(B2,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(B2,0) & TRN_HL, DELAY(-1,8ns,10ns),
+         TRN_ZH, DELAY(-1,10ns,15ns),
+         TRN_ZL, DELAY(-1,10ns,14ns),
+         TRN_HZ, DELAY(-1,6ns,8ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     A3 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & B3!='0 & TRN_LH, DELAY(-1,17ns,22ns),
+         SELBA & B3!='0 & TRN_HL, DELAY(-1,13ns,17ns),
+         SELBA & B3!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELBA & B3!='1 & TRN_HL, DELAY(-1,13ns,17ns),
+         CHANGED(B3,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(B3,0) & TRN_HL, DELAY(-1,8ns,10ns),
+         TRN_ZH, DELAY(-1,10ns,15ns),
+         TRN_ZL, DELAY(-1,10ns,14ns),
+         TRN_HZ, DELAY(-1,6ns,8ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     A4 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & B4!='0 & TRN_LH, DELAY(-1,17ns,22ns),
+         SELBA & B4!='0 & TRN_HL, DELAY(-1,13ns,17ns),
+         SELBA & B4!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELBA & B4!='1 & TRN_HL, DELAY(-1,13ns,17ns),
+         CHANGED(B4,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(B4,0) & TRN_HL, DELAY(-1,8ns,10ns),
+         TRN_ZH, DELAY(-1,10ns,15ns),
+         TRN_ZL, DELAY(-1,10ns,14ns),
+         TRN_HZ, DELAY(-1,6ns,8ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     A5 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & B5!='0 & TRN_LH, DELAY(-1,17ns,22ns),
+         SELBA & B5!='0 & TRN_HL, DELAY(-1,13ns,17ns),
+         SELBA & B5!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELBA & B5!='1 & TRN_HL, DELAY(-1,13ns,17ns),
+         CHANGED(B5,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(B5,0) & TRN_HL, DELAY(-1,8ns,10ns),
+         TRN_ZH, DELAY(-1,10ns,15ns),
+         TRN_ZL, DELAY(-1,10ns,14ns),
+         TRN_HZ, DELAY(-1,6ns,8ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     A6 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & B6!='0 & TRN_LH, DELAY(-1,17ns,22ns),
+         SELBA & B6!='0 & TRN_HL, DELAY(-1,13ns,17ns),
+         SELBA & B6!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELBA & B6!='1 & TRN_HL, DELAY(-1,13ns,17ns),
+         CHANGED(B6,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(B6,0) & TRN_HL, DELAY(-1,8ns,10ns),
+         TRN_ZH, DELAY(-1,10ns,15ns),
+         TRN_ZL, DELAY(-1,10ns,14ns),
+         TRN_HZ, DELAY(-1,6ns,8ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     A7 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & B7!='0 & TRN_LH, DELAY(-1,17ns,22ns),
+         SELBA & B7!='0 & TRN_HL, DELAY(-1,13ns,17ns),
+         SELBA & B7!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELBA & B7!='1 & TRN_HL, DELAY(-1,13ns,17ns),
+         CHANGED(B7,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(B7,0) & TRN_HL, DELAY(-1,8ns,10ns),
+         TRN_ZH, DELAY(-1,10ns,15ns),
+         TRN_ZL, DELAY(-1,10ns,14ns),
+         TRN_HZ, DELAY(-1,6ns,8ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     A8 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & B8!='0 & TRN_LH, DELAY(-1,17ns,22ns),
+         SELBA & B8!='0 & TRN_HL, DELAY(-1,13ns,17ns),
+         SELBA & B8!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELBA & B8!='1 & TRN_HL, DELAY(-1,13ns,17ns),
+         CHANGED(B8,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(B8,0) & TRN_HL, DELAY(-1,8ns,10ns),
+         TRN_ZH, DELAY(-1,10ns,15ns),
+         TRN_ZL, DELAY(-1,10ns,14ns),
+         TRN_HZ, DELAY(-1,6ns,8ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+  TRISTATE:
+     ENABLE HI=GAB
+     B1 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A1!='0 & TRN_LH, DELAY(-1,17ns,22ns),
+         SELAB & A1!='0 & TRN_HL, DELAY(-1,13ns,17ns),
+         SELAB & A1!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A1!='1 & TRN_HL, DELAY(-1,13ns,17ns),
+         CHANGED(A1,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A1,0) & TRN_HL, DELAY(-1,8ns,10ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,12ns,16ns),
+         TRN_HZ, DELAY(-1,6ns,8ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B2 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A2!='0 & TRN_LH, DELAY(-1,17ns,22ns),
+         SELAB & A2!='0 & TRN_HL, DELAY(-1,13ns,17ns),
+         SELAB & A2!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A2!='1 & TRN_HL, DELAY(-1,13ns,17ns),
+         CHANGED(A2,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A2,0) & TRN_HL, DELAY(-1,8ns,10ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,12ns,16ns),
+         TRN_HZ, DELAY(-1,6ns,8ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B3 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A3!='0 & TRN_LH, DELAY(-1,17ns,22ns),
+         SELAB & A3!='0 & TRN_HL, DELAY(-1,13ns,17ns),
+         SELAB & A3!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A3!='1 & TRN_HL, DELAY(-1,13ns,17ns),
+         CHANGED(A3,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A3,0) & TRN_HL, DELAY(-1,8ns,10ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,12ns,16ns),
+         TRN_HZ, DELAY(-1,6ns,8ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B4 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A4!='0 & TRN_LH, DELAY(-1,17ns,22ns),
+         SELAB & A4!='0 & TRN_HL, DELAY(-1,13ns,17ns),
+         SELAB & A4!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A4!='1 & TRN_HL, DELAY(-1,13ns,17ns),
+         CHANGED(A4,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A4,0) & TRN_HL, DELAY(-1,8ns,10ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,12ns,16ns),
+         TRN_HZ, DELAY(-1,6ns,8ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B5 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A5!='0 & TRN_LH, DELAY(-1,17ns,22ns),
+         SELAB & A5!='0 & TRN_HL, DELAY(-1,13ns,17ns),
+         SELAB & A5!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A5!='1 & TRN_HL, DELAY(-1,13ns,17ns),
+         CHANGED(A5,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A5,0) & TRN_HL, DELAY(-1,8ns,10ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,12ns,16ns),
+         TRN_HZ, DELAY(-1,6ns,8ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B6 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A6!='0 & TRN_LH, DELAY(-1,17ns,22ns),
+         SELAB & A6!='0 & TRN_HL, DELAY(-1,13ns,17ns),
+         SELAB & A6!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A6!='1 & TRN_HL, DELAY(-1,13ns,17ns),
+         CHANGED(A6,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A6,0) & TRN_HL, DELAY(-1,8ns,10ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,12ns,16ns),
+         TRN_HZ, DELAY(-1,6ns,8ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B7 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A7!='0 & TRN_LH, DELAY(-1,17ns,22ns),
+         SELAB & A7!='0 & TRN_HL, DELAY(-1,13ns,17ns),
+         SELAB & A7!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A7!='1 & TRN_HL, DELAY(-1,13ns,17ns),
+         CHANGED(A7,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A7,0) & TRN_HL, DELAY(-1,8ns,10ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,12ns,16ns),
+         TRN_HZ, DELAY(-1,6ns,8ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B8 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A8!='0 & TRN_LH, DELAY(-1,17ns,22ns),
+         SELAB & A8!='0 & TRN_HL, DELAY(-1,13ns,17ns),
+         SELAB & A8!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A8!='1 & TRN_HL, DELAY(-1,13ns,17ns),
+         CHANGED(A8,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A8,0) & TRN_HL, DELAY(-1,8ns,10ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,12ns,16ns),
+         TRN_HZ, DELAY(-1,6ns,8ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}

U5CON CONSTRAINT(18) DPWR DGND
+     CAB CBA A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CAB
+     MAXFREQ=40MEG
+
+  FREQ:
+     NODE=CBA
+     MAXFREQ=40MEG
+
+  WIDTH:
+     NODE=CAB
+     MIN_HI=12.5ns
+     MIN_LO=12.5ns
+
+  WIDTH:
+     NODE=CBA
+     MIN_HI=12.5ns
+     MIN_LO=12.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CAB
+     DATA(8)=A1 A2 A3 A4 A5 A6 A7 A8
+     SETUPTIME=10ns
+
+  SETUP_HOLD:
+     CLOCK LH=CBA
+     DATA(8)=B1 B2 B3 B4 B5 B6 B7 B8
+     SETUPTIME=10ns

.ENDS 74ALS652

*--------------------------------------------------------------74ALS652-1----

* Octal Tri-State Bus Transceiver and Register
* National Advanced Bipolar Logic Databook, 1995, pages 9-176 to 9-179
* jat 8/21/95

.SUBCKT 74ALS652-1
+ GAB GBABAR CBA CAB SBA SAB A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(36,18) DPWR DGND
+ SBA SAB A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 QA1 QA2 QA3 QA4 QA5
+ QA6 QA7 QA8 QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8 GAB GBABAR
+ A1O A2O A3O A4O A5O A6O A7O A8O B1O B2O B3O B4O B5O B6O B7O B8O ENABAB ENABBA
+ D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   A1O = {(SBA & QB1) | ((~SBA) & B1)}
+   A2O = {(SBA & QB2) | ((~SBA) & B2)}
+   A3O = {(SBA & QB3) | ((~SBA) & B3)}
+   A4O = {(SBA & QB4) | ((~SBA) & B4)}
+   A5O = {(SBA & QB5) | ((~SBA) & B5)}
+   A6O = {(SBA & QB6) | ((~SBA) & B6)}
+   A7O = {(SBA & QB7) | ((~SBA) & B7)}
+   A8O = {(SBA & QB8) | ((~SBA) & B8)}
+   B1O = {(SAB & QA1) | ((~SAB) & A1)}
+   B2O = {(SAB & QA2) | ((~SAB) & A2)}
+   B3O = {(SAB & QA3) | ((~SAB) & A3)}
+   B4O = {(SAB & QA4) | ((~SAB) & A4)}
+   B5O = {(SAB & QA5) | ((~SAB) & A5)}
+   B6O = {(SAB & QA6) | ((~SAB) & A6)}
+   B7O = {(SAB & QA7) | ((~SAB) & A7)}
+   B8O = {(SAB & QA8) | ((~SAB) & A8)}
+   ENABAB = {GAB}
+   ENABBA = {GBABAR}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CAB
+ A1 A2 A3 A4 A5 A6 A7 A8
+ QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(8) DPWR DGND
+ $D_HI $D_HI CBA
+ B1 B2 B3 B4 B5 B6 B7 B8
+ QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(16,2,22) DPWR DGND
+ A1O A2O A3O A4O A5O A6O A7O A8O B1O B2O B3O B4O B5O B6O B7O B8O
+ ENABAB ENABBA
+ GAB GBABAR SAB SBA CAB CBA A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+ A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 
+ IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+ ENGAB = {CHANGED(GAB,0)}
+ ENGBABAR = {CHANGED(GBABAR,0)}
+ SELAB = {CHANGED(SAB,0)}
+ SELBA = {CHANGED(SBA,0)}
+ CLOCKAB = {CHANGED_LH(CAB,0)}
+ CLOCKBA = {CHANGED_LH(CBA,0)}
+ DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+          CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0)}
+ DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+          CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B8,0)} 
+ TRISTATE:
+   ENABLE HI = ENABAB
+   B1 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(6NS,-1,22NS),
+       ENGAB & TRN_ZL, DELAY(6NS,-1,18NS),
+       ENGAB & TRN_HZ, DELAY(1NS,-1,10NS),
+       ENGAB & TRN_LZ, DELAY(2NS,-1,16NS),
+       SELAB & A1=='1 & TRN_LH, DELAY(6NS,-1,25NS),
+       SELAB & A1=='1 & TRN_HL, DELAY(5NS,-1,20NS),
+       SELAB & A1=='0 & TRN_LH, DELAY(12NS,-1,35NS),
+       SELAB & A1=='0 & TRN_HL, DELAY(6NS,-1,20NS),
+       CLOCKAB & TRN_LH, DELAY(10NS,-1,30NS),
+       CLOCKAB & TRN_HL, DELAY(5NS,-1,17NS),
+       DATAA & TRN_LH, DELAY(5NS,-1,18NS),
+       DATAA & TRN_HL, DELAY(3NS,-1,12NS),
+       DELAY(13NS,-1,36NS))}
+   B2 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(6NS,-1,22NS),
+       ENGAB & TRN_ZL, DELAY(6NS,-1,18NS),
+       ENGAB & TRN_HZ, DELAY(1NS,-1,10NS),
+       ENGAB & TRN_LZ, DELAY(2NS,-1,16NS),
+       SELAB & A2=='1 & TRN_LH, DELAY(6NS,-1,25NS),
+       SELAB & A2=='1 & TRN_HL, DELAY(5NS,-1,20NS),
+       SELAB & A2=='0 & TRN_LH, DELAY(12NS,-1,35NS),
+       SELAB & A2=='0 & TRN_HL, DELAY(6NS,-1,20NS),
+       CLOCKAB & TRN_LH, DELAY(10NS,-1,30NS),
+       CLOCKAB & TRN_HL, DELAY(5NS,-1,17NS),
+       DATAA & TRN_LH, DELAY(5NS,-1,18NS),
+       DATAA & TRN_HL, DELAY(3NS,-1,12NS),
+       DELAY(13NS,-1,36NS))}
+   B3 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(6NS,-1,22NS),
+       ENGAB & TRN_ZL, DELAY(6NS,-1,18NS),
+       ENGAB & TRN_HZ, DELAY(1NS,-1,10NS),
+       ENGAB & TRN_LZ, DELAY(2NS,-1,16NS),
+       SELAB & A3=='1 & TRN_LH, DELAY(6NS,-1,25NS),
+       SELAB & A3=='1 & TRN_HL, DELAY(5NS,-1,20NS),
+       SELAB & A3=='0 & TRN_LH, DELAY(12NS,-1,35NS),
+       SELAB & A3=='0 & TRN_HL, DELAY(6NS,-1,20NS),
+       CLOCKAB & TRN_LH, DELAY(10NS,-1,30NS),
+       CLOCKAB & TRN_HL, DELAY(5NS,-1,17NS),
+       DATAA & TRN_LH, DELAY(5NS,-1,18NS),
+       DATAA & TRN_HL, DELAY(3NS,-1,12NS),
+       DELAY(13NS,-1,36NS))}
+   B4 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(6NS,-1,22NS),
+       ENGAB & TRN_ZL, DELAY(6NS,-1,18NS),
+       ENGAB & TRN_HZ, DELAY(1NS,-1,10NS),
+       ENGAB & TRN_LZ, DELAY(2NS,-1,16NS),
+       SELAB & A4=='1 & TRN_LH, DELAY(6NS,-1,25NS),
+       SELAB & A4=='1 & TRN_HL, DELAY(5NS,-1,20NS),
+       SELAB & A4=='0 & TRN_LH, DELAY(12NS,-1,35NS),
+       SELAB & A4=='0 & TRN_HL, DELAY(6NS,-1,20NS),
+       CLOCKAB & TRN_LH, DELAY(10NS,-1,30NS),
+       CLOCKAB & TRN_HL, DELAY(5NS,-1,17NS),
+       DATAA & TRN_LH, DELAY(5NS,-1,18NS),
+       DATAA & TRN_HL, DELAY(3NS,-1,12NS),
+       DELAY(13NS,-1,36NS))}
+   B5 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(6NS,-1,22NS),
+       ENGAB & TRN_ZL, DELAY(6NS,-1,18NS),
+       ENGAB & TRN_HZ, DELAY(1NS,-1,10NS),
+       ENGAB & TRN_LZ, DELAY(2NS,-1,16NS),
+       SELAB & A5=='1 & TRN_LH, DELAY(6NS,-1,25NS),
+       SELAB & A5=='1 & TRN_HL, DELAY(5NS,-1,20NS),
+       SELAB & A5=='0 & TRN_LH, DELAY(12NS,-1,35NS),
+       SELAB & A5=='0 & TRN_HL, DELAY(6NS,-1,20NS),
+       CLOCKAB & TRN_LH, DELAY(10NS,-1,30NS),
+       CLOCKAB & TRN_HL, DELAY(5NS,-1,17NS),
+       DATAA & TRN_LH, DELAY(5NS,-1,18NS),
+       DATAA & TRN_HL, DELAY(3NS,-1,12NS),
+       DELAY(13NS,-1,36NS))}
+   B6 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(6NS,-1,22NS),
+       ENGAB & TRN_ZL, DELAY(6NS,-1,18NS),
+       ENGAB & TRN_HZ, DELAY(1NS,-1,10NS),
+       ENGAB & TRN_LZ, DELAY(2NS,-1,16NS),
+       SELAB & A6=='1 & TRN_LH, DELAY(6NS,-1,25NS),
+       SELAB & A6=='1 & TRN_HL, DELAY(5NS,-1,20NS),
+       SELAB & A6=='0 & TRN_LH, DELAY(12NS,-1,35NS),
+       SELAB & A6=='0 & TRN_HL, DELAY(6NS,-1,20NS),
+       CLOCKAB & TRN_LH, DELAY(10NS,-1,30NS),
+       CLOCKAB & TRN_HL, DELAY(5NS,-1,17NS),
+       DATAA & TRN_LH, DELAY(5NS,-1,18NS),
+       DATAA & TRN_HL, DELAY(3NS,-1,12NS),
+       DELAY(13NS,-1,36NS))}
+   B7 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(6NS,-1,22NS),
+       ENGAB & TRN_ZL, DELAY(6NS,-1,18NS),
+       ENGAB & TRN_HZ, DELAY(1NS,-1,10NS),
+       ENGAB & TRN_LZ, DELAY(2NS,-1,16NS),
+       SELAB & A7=='1 & TRN_LH, DELAY(6NS,-1,25NS),
+       SELAB & A7=='1 & TRN_HL, DELAY(5NS,-1,20NS),
+       SELAB & A7=='0 & TRN_LH, DELAY(12NS,-1,35NS),
+       SELAB & A7=='0 & TRN_HL, DELAY(6NS,-1,20NS),
+       CLOCKAB & TRN_LH, DELAY(10NS,-1,30NS),
+       CLOCKAB & TRN_HL, DELAY(5NS,-1,17NS),
+       DATAA & TRN_LH, DELAY(5NS,-1,18NS),
+       DATAA & TRN_HL, DELAY(3NS,-1,12NS),
+       DELAY(13NS,-1,36NS))}
+   B8 = {
+     CASE(
+       ENGAB & TRN_ZH, DELAY(6NS,-1,22NS),
+       ENGAB & TRN_ZL, DELAY(6NS,-1,18NS),
+       ENGAB & TRN_HZ, DELAY(1NS,-1,10NS),
+       ENGAB & TRN_LZ, DELAY(2NS,-1,16NS),
+       SELAB & A8=='1 & TRN_LH, DELAY(6NS,-1,25NS),
+       SELAB & A8=='1 & TRN_HL, DELAY(5NS,-1,20NS),
+       SELAB & A8=='0 & TRN_LH, DELAY(12NS,-1,35NS),
+       SELAB & A8=='0 & TRN_HL, DELAY(6NS,-1,20NS),
+       CLOCKAB & TRN_LH, DELAY(10NS,-1,30NS),
+       CLOCKAB & TRN_HL, DELAY(5NS,-1,17NS),
+       DATAA & TRN_LH, DELAY(5NS,-1,18NS),
+       DATAA & TRN_HL, DELAY(3NS,-1,12NS),
+       DELAY(13NS,-1,36NS))}
+ TRISTATE:
+   ENABLE LO = ENABBA
+   A1 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(3NS,-1,17NS),
+       ENGBABAR & TRN_ZL, DELAY(5NS,-1,18NS),
+       ENGBABAR & TRN_HZ, DELAY(1NS,-1,10NS),
+       ENGBABAR & TRN_LZ, DELAY(2NS,-1,16NS),
+       SELBA & B1=='1 & TRN_LH, DELAY(6NS,-1,25NS),
+       SELBA & B1=='1 & TRN_HL, DELAY(5NS,-1,20NS),
+       SELBA & B1=='0 & TRN_LH, DELAY(12NS,-1,35NS),
+       SELBA & B1=='0 & TRN_HL, DELAY(6NS,-1,20NS),
+       CLOCKBA & TRN_LH, DELAY(10NS,-1,30NS),
+       CLOCKBA & TRN_HL, DELAY(5NS,-1,17NS),
+       DATAB & TRN_LH, DELAY(5NS,-1,18NS),
+       DATAB & TRN_HL, DELAY(3NS,-1,12NS),
+       DELAY(13NS,-1,36NS))}
+   A2 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(3NS,-1,17NS),
+       ENGBABAR & TRN_ZL, DELAY(5NS,-1,18NS),
+       ENGBABAR & TRN_HZ, DELAY(1NS,-1,10NS),
+       ENGBABAR & TRN_LZ, DELAY(2NS,-1,16NS),
+       SELBA & B2=='1 & TRN_LH, DELAY(6NS,-1,25NS),
+       SELBA & B2=='1 & TRN_HL, DELAY(5NS,-1,20NS),
+       SELBA & B2=='0 & TRN_LH, DELAY(12NS,-1,35NS),
+       SELBA & B2=='0 & TRN_HL, DELAY(6NS,-1,20NS),
+       CLOCKBA & TRN_LH, DELAY(10NS,-1,30NS),
+       CLOCKBA & TRN_HL, DELAY(5NS,-1,17NS),
+       DATAB & TRN_LH, DELAY(5NS,-1,18NS),
+       DATAB & TRN_HL, DELAY(3NS,-1,12NS),
+       DELAY(13NS,-1,36NS))}
+   A3 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(3NS,-1,17NS),
+       ENGBABAR & TRN_ZL, DELAY(5NS,-1,18NS),
+       ENGBABAR & TRN_HZ, DELAY(1NS,-1,10NS),
+       ENGBABAR & TRN_LZ, DELAY(2NS,-1,16NS),
+       SELBA & B3=='1 & TRN_LH, DELAY(6NS,-1,25NS),
+       SELBA & B3=='1 & TRN_HL, DELAY(5NS,-1,20NS),
+       SELBA & B3=='0 & TRN_LH, DELAY(12NS,-1,35NS),
+       SELBA & B3=='0 & TRN_HL, DELAY(6NS,-1,20NS),
+       CLOCKBA & TRN_LH, DELAY(10NS,-1,30NS),
+       CLOCKBA & TRN_HL, DELAY(5NS,-1,17NS),
+       DATAB & TRN_LH, DELAY(5NS,-1,18NS),
+       DATAB & TRN_HL, DELAY(3NS,-1,12NS),
+       DELAY(13NS,-1,36NS))}
+   A4 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(3NS,-1,17NS),
+       ENGBABAR & TRN_ZL, DELAY(5NS,-1,18NS),
+       ENGBABAR & TRN_HZ, DELAY(1NS,-1,10NS),
+       ENGBABAR & TRN_LZ, DELAY(2NS,-1,16NS),
+       SELBA & B4=='1 & TRN_LH, DELAY(6NS,-1,25NS),
+       SELBA & B4=='1 & TRN_HL, DELAY(5NS,-1,20NS),
+       SELBA & B4=='0 & TRN_LH, DELAY(12NS,-1,35NS),
+       SELBA & B4=='0 & TRN_HL, DELAY(6NS,-1,20NS),
+       CLOCKBA & TRN_LH, DELAY(10NS,-1,30NS),
+       CLOCKBA & TRN_HL, DELAY(5NS,-1,17NS),
+       DATAB & TRN_LH, DELAY(5NS,-1,18NS),
+       DATAB & TRN_HL, DELAY(3NS,-1,12NS),
+       DELAY(13NS,-1,36NS))}
+   A5 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(3NS,-1,17NS),
+       ENGBABAR & TRN_ZL, DELAY(5NS,-1,18NS),
+       ENGBABAR & TRN_HZ, DELAY(1NS,-1,10NS),
+       ENGBABAR & TRN_LZ, DELAY(2NS,-1,16NS),
+       SELBA & B5=='1 & TRN_LH, DELAY(6NS,-1,25NS),
+       SELBA & B5=='1 & TRN_HL, DELAY(5NS,-1,20NS),
+       SELBA & B5=='0 & TRN_LH, DELAY(12NS,-1,35NS),
+       SELBA & B5=='0 & TRN_HL, DELAY(6NS,-1,20NS),
+       CLOCKBA & TRN_LH, DELAY(10NS,-1,30NS),
+       CLOCKBA & TRN_HL, DELAY(5NS,-1,17NS),
+       DATAB & TRN_LH, DELAY(5NS,-1,18NS),
+       DATAB & TRN_HL, DELAY(3NS,-1,12NS),
+       DELAY(13NS,-1,36NS))}
+   A6 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(3NS,-1,17NS),
+       ENGBABAR & TRN_ZL, DELAY(5NS,-1,18NS),
+       ENGBABAR & TRN_HZ, DELAY(1NS,-1,10NS),
+       ENGBABAR & TRN_LZ, DELAY(2NS,-1,16NS),
+       SELBA & B6=='1 & TRN_LH, DELAY(6NS,-1,25NS),
+       SELBA & B6=='1 & TRN_HL, DELAY(5NS,-1,20NS),
+       SELBA & B6=='0 & TRN_LH, DELAY(12NS,-1,35NS),
+       SELBA & B6=='0 & TRN_HL, DELAY(6NS,-1,20NS),
+       CLOCKBA & TRN_LH, DELAY(10NS,-1,30NS),
+       CLOCKBA & TRN_HL, DELAY(5NS,-1,17NS),
+       DATAB & TRN_LH, DELAY(5NS,-1,18NS),
+       DATAB & TRN_HL, DELAY(3NS,-1,12NS),
+       DELAY(13NS,-1,36NS))}
+   A7 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(3NS,-1,17NS),
+       ENGBABAR & TRN_ZL, DELAY(5NS,-1,18NS),
+       ENGBABAR & TRN_HZ, DELAY(1NS,-1,10NS),
+       ENGBABAR & TRN_LZ, DELAY(2NS,-1,16NS),
+       SELBA & B7=='1 & TRN_LH, DELAY(6NS,-1,25NS),
+       SELBA & B7=='1 & TRN_HL, DELAY(5NS,-1,20NS),
+       SELBA & B7=='0 & TRN_LH, DELAY(12NS,-1,35NS),
+       SELBA & B7=='0 & TRN_HL, DELAY(6NS,-1,20NS),
+       CLOCKBA & TRN_LH, DELAY(10NS,-1,30NS),
+       CLOCKBA & TRN_HL, DELAY(5NS,-1,17NS),
+       DATAB & TRN_LH, DELAY(5NS,-1,18NS),
+       DATAB & TRN_HL, DELAY(3NS,-1,12NS),
+       DELAY(13NS,-1,36NS))}
+   A8 = {
+     CASE(
+       ENGBABAR & TRN_ZH, DELAY(3NS,-1,17NS),
+       ENGBABAR & TRN_ZL, DELAY(5NS,-1,18NS),
+       ENGBABAR & TRN_HZ, DELAY(1NS,-1,10NS),
+       ENGBABAR & TRN_LZ, DELAY(2NS,-1,16NS),
+       SELBA & B8=='1 & TRN_LH, DELAY(6NS,-1,25NS),
+       SELBA & B8=='1 & TRN_HL, DELAY(5NS,-1,20NS),
+       SELBA & B8=='0 & TRN_LH, DELAY(12NS,-1,35NS),
+       SELBA & B8=='0 & TRN_HL, DELAY(6NS,-1,20NS),
+       CLOCKBA & TRN_LH, DELAY(10NS,-1,30NS),
+       CLOCKBA & TRN_HL, DELAY(5NS,-1,17NS),
+       DATAB & TRN_LH, DELAY(5NS,-1,18NS),
+       DATAB & TRN_HL, DELAY(3NS,-1,12NS),
+       DELAY(13NS,-1,36NS))}

U5 CONSTRAINT(18) DPWR DGND
+ CAB CBA A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+ IO_ALS00 IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CAB
+   MAXFREQ = 40MEG
+ FREQ:
+   NODE = CBA
+   MAXFREQ = 40MEG
+ WIDTH:
+   NODE = CAB
+   MIN_LO = 12.5NS
+   MIN_HI = 12.5NS
+ WIDTH:
+   NODE = CBA
+   MIN_LO = 12.5NS
+   MIN_HI = 12.5NS
+ SETUP_HOLD:
+   CLOCK LH = CAB
+   DATA(8) = A1 A2 A3 A4 A5 A6 A7 A8
+   SETUPTIME = 10NS
+ SETUP_HOLD:
+   CLOCK LH = CBA
+   DATA(8) = B1 B2 B3 B4 B5 B6 B7 B8
+   SETUPTIME = 10NS

.ENDS 74ALS652-1

* ----------------------------------------------------------- 74AS652 ------
*  Octal Bus Transceivers And Registers With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-547 to 2-558
*  bss    5/23/94
*
.SUBCKT 74AS652 GBABAR GAB CBA SBA CAB SAB A1 A2 A3 A4 A5 A6 A7 A8
+     B1 B2 B3 B4 B5 B6 B7 B8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CBA
+     B1 B2 B3 B4 B5 B6 B7 B8
+     QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CAB
+     A1 A2 A3 A4 A5 A6 A7 A8
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(34,16) DPWR DGND
+     SBA SAB A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8 QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbabar = {~SBA}
+     sabbar = {~SAB}
+     A1_O = {((SBA & QB1) | (sbabar & B1))}
+     A2_O = {((SBA & QB2) | (sbabar & B2))}
+     A3_O = {((SBA & QB3) | (sbabar & B3))}
+     A4_O = {((SBA & QB4) | (sbabar & B4))}
+     A5_O = {((SBA & QB5) | (sbabar & B5))}
+     A6_O = {((SBA & QB6) | (sbabar & B6))}
+     A7_O = {((SBA & QB7) | (sbabar & B7))}
+     A8_O = {((SBA & QB8) | (sbabar & B8))}
+     B1_O = {((SAB & QA1) | (sabbar & A1))}
+     B2_O = {((SAB & QA2) | (sabbar & A2))}
+     B3_O = {((SAB & QA3) | (sabbar & A3))}
+     B4_O = {((SAB & QA4) | (sabbar & A4))}
+     B5_O = {((SAB & QA5) | (sabbar & A5))}
+     B6_O = {((SAB & QA6) | (sabbar & A6))}
+     B7_O = {((SAB & QA7) | (sabbar & A7))}
+     B8_O = {((SAB & QA8) | (sabbar & A8))}

U4DLY PINDLY(16,2,20) DPWR DGND
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O 
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     GBABAR GAB
+     CBA CAB SBA SAB
+     A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELBA = {CHANGED(SBA,0)}
+     SELAB = {CHANGED(SAB,0)}
+     CLOCKBA = {CHANGED_LH(CBA,0)}
+     CLOCKAB = {CHANGED_LH(CAB,0)}
+     DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+            CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0)}
+     DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+            CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B8,0)}
+
+  TRISTATE:
+     ENABLE LO=GBABAR
+     A1 A2 A3 A4 A5 A6 A7 A8 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(2ns,-1,8.5ns),
+         CLOCKBA & SAB=='1 & TRN_HL, DELAY(2ns,-1,9ns),
+         SELBA & TRN_LH, DELAY(2ns,-1,11ns),
+         SELBA & TRN_HL, DELAY(2ns,-1,9ns),
+         DATAB & TRN_LH, DELAY(2ns,-1,9ns),
+         DATAB & TRN_HL, DELAY(1ns,-1,7ns),
+         TRN_ZH, DELAY(2ns,-1,10ns),
+         TRN_ZL, DELAY(3ns,-1,16ns),
+         TRN_HZ, DELAY(2ns,-1,9ns),
+         TRN_LZ, DELAY(2ns,-1,9ns),
+         DELAY(4ns,-1,17ns))}
+
+  TRISTATE:
+     ENABLE HI=GAB
+     B1 B2 B3 B4 B5 B6 B7 B8 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(2ns,-1,8.5ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(2ns,-1,9ns),
+         SELAB & TRN_LH, DELAY(2ns,-1,11ns),
+         SELAB & TRN_HL, DELAY(2ns,-1,9ns),
+         DATAA & TRN_LH, DELAY(2ns,-1,9ns),
+         DATAA & TRN_HL, DELAY(1ns,-1,7ns),
+         TRN_ZH, DELAY(3ns,-1,11ns),
+         TRN_ZL, DELAY(3ns,-1,16ns),
+         TRN_HZ, DELAY(2ns,-1,10ns),
+         TRN_LZ, DELAY(2ns,-1,11ns),
+         DELAY(4ns,-1,17ns))}

U5CON CONSTRAINT(18) DPWR DGND
+     CAB CBA A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CAB
+     MAXFREQ=90MEG
+
+  FREQ:
+     NODE=CBA
+     MAXFREQ=90MEG
+
+  WIDTH:
+     NODE=CAB
+     MIN_HI=5ns
+     MIN_LO=6ns
+
+  WIDTH:
+     NODE=CBA
+     MIN_HI=5ns
+     MIN_LO=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CAB
+     DATA(8)=A1 A2 A3 A4 A5 A6 A7 A8
+     SETUPTIME=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CBA
+     DATA(8)=B1 B2 B3 B4 B5 B6 B7 B8
+     SETUPTIME=6ns

.ENDS 74AS652
*
*
* ----------------------------------------------------------- 74F652 ------
*  Octal Transceiver/Register, Noninverting With 3-State Outputs
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 651 to 659
*  bss    5/23/94
*
.SUBCKT 74F652 OEBABAR OEAB CPBA SBA CPAB SAB A0 A1 A2 A3 A4 A5 A6 A7
+     B0 B1 B2 B3 B4 B5 B6 B7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CPBA
+     B0 B1 B2 B3 B4 B5 B6 B7
+     QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CPAB
+     A0 A1 A2 A3 A4 A5 A6 A7
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(34,16) DPWR DGND
+     SBA SAB A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8 QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     A0_O A1_O A2_O A3_O A4_O A5_O A6_O A7_O
+     B0_O B1_O B2_O B3_O B4_O B5_O B6_O B7_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbabar = {~SBA}
+     sabbar = {~SAB}
+     A0_O = {((SBA & QB1) | (sbabar & B0))}
+     A1_O = {((SBA & QB2) | (sbabar & B1))}
+     A2_O = {((SBA & QB3) | (sbabar & B2))}
+     A3_O = {((SBA & QB4) | (sbabar & B3))}
+     A4_O = {((SBA & QB5) | (sbabar & B4))}
+     A5_O = {((SBA & QB6) | (sbabar & B5))}
+     A6_O = {((SBA & QB7) | (sbabar & B6))}
+     A7_O = {((SBA & QB8) | (sbabar & B7))}
+     B0_O = {((SAB & QA1) | (sabbar & A0))}
+     B1_O = {((SAB & QA2) | (sabbar & A1))}
+     B2_O = {((SAB & QA3) | (sabbar & A2))}
+     B3_O = {((SAB & QA4) | (sabbar & A3))}
+     B4_O = {((SAB & QA5) | (sabbar & A4))}
+     B5_O = {((SAB & QA6) | (sabbar & A5))}
+     B6_O = {((SAB & QA7) | (sabbar & A6))}
+     B7_O = {((SAB & QA8) | (sabbar & A7))}

U4DLY PINDLY(16,2,20) DPWR DGND
+     A0_O A1_O A2_O A3_O A4_O A5_O A6_O A7_O
+     B0_O B1_O B2_O B3_O B4_O B5_O B6_O B7_O
+     OEBABAR OEAB
+     CPBA CPAB SBA SAB
+     A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7
+     A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELBA = {CHANGED(SBA,0)}
+     SELAB = {CHANGED(SAB,0)}
+     CLOCKBA = {CHANGED_LH(CPBA,0)}
+     CLOCKAB = {CHANGED_LH(CPAB,0)}
+     DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+            CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A0,0)}
+     DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+            CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B0,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBABAR
+     A0 A1 A2 A3 A4 A5 A6 A7 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(5ns,7ns,10.5ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(5.5ns,7.5ns,11ns),
+         SELBA & TRN_LH, DELAY(4ns,7ns,10ns),
+         SELBA & TRN_HL, DELAY(4ns,6.5ns,9.5ns),
+         DATAB & TRN_LH, DELAY(3ns,6ns,10ns),
+         DATAB & TRN_HL, DELAY(3ns,6ns,9ns),
+         TRN_ZH, DELAY(4ns,7ns,10ns),
+         TRN_ZL, DELAY(6ns,10.5ns,12ns),
+         TRN_HZ, DELAY(4.5ns,9.5ns,13ns),
+         TRN_LZ, DELAY(4.5ns,9ns,13ns),
+         DELAY(7ns,11.5ns,14ns))}
+
+  TRISTATE:
+     ENABLE HI=OEAB
+     B0 B1 B2 B3 B4 B5 B6 B7 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(5ns,7ns,10.5ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(5.5ns,7.5ns,11ns),
+         SELAB & TRN_LH, DELAY(4ns,7ns,10ns),
+         SELAB & TRN_HL, DELAY(4ns,6.5ns,9.5ns),
+         DATAA & TRN_LH, DELAY(3ns,6ns,10ns),
+         DATAA & TRN_HL, DELAY(3ns,6ns,9ns),
+         TRN_ZH, DELAY(4ns,7ns,10ns),
+         TRN_ZL, DELAY(6ns,10.5ns,12ns),
+         TRN_HZ, DELAY(4.5ns,9.5ns,13ns),
+         TRN_LZ, DELAY(4.5ns,9ns,13ns),
+         DELAY(7ns,11.5ns,14ns))}

U5CON CONSTRAINT(20) DPWR DGND
+     CPAB CPBA A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 OEBABAR OEAB
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CPAB
+     MIN_HI=4.5ns
+     MIN_LO=6.5ns
+
+  WIDTH:
+     NODE=CPBA
+     MIN_HI=4.5ns
+     MIN_LO=6.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CPAB
+     DATA(8)=A0 A1 A2 A3 A4 A5 A6 A7
+     SETUPTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CPBA
+     DATA(8)=B0 B1 B2 B3 B4 B5 B6 B7
+     SETUPTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK HL=OEBABAR
+     DATA(1)=OEAB
+     SETUPTIME_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=OEAB
+     DATA(1)=OEBABAR
+     SETUPTIME_HI=5ns

.ENDS 74F652
*
*
* ----------------------------------------------------------- 74F652A ------
*  Octal Transceiver/Register, Noninverting With 3-State Outputs
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 651 to 659
*  bss    5/23/94
*
.SUBCKT 74F652A OEBABAR OEAB CPBA SBA CPAB SAB A0 A1 A2 A3 A4 A5 A6 A7
+     B0 B1 B2 B3 B4 B5 B6 B7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CPBA
+     B0 B1 B2 B3 B4 B5 B6 B7
+     QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CPAB
+     A0 A1 A2 A3 A4 A5 A6 A7
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(34,16) DPWR DGND
+     SBA SAB A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8 QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     A0_O A1_O A2_O A3_O A4_O A5_O A6_O A7_O
+     B0_O B1_O B2_O B3_O B4_O B5_O B6_O B7_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbabar = {~SBA}
+     sabbar = {~SAB}
+     A0_O = {((SBA & QB1) | (sbabar & B0))}
+     A1_O = {((SBA & QB2) | (sbabar & B1))}
+     A2_O = {((SBA & QB3) | (sbabar & B2))}
+     A3_O = {((SBA & QB4) | (sbabar & B3))}
+     A4_O = {((SBA & QB5) | (sbabar & B4))}
+     A5_O = {((SBA & QB6) | (sbabar & B5))}
+     A6_O = {((SBA & QB7) | (sbabar & B6))}
+     A7_O = {((SBA & QB8) | (sbabar & B7))}
+     B0_O = {((SAB & QA1) | (sabbar & A0))}
+     B1_O = {((SAB & QA2) | (sabbar & A1))}
+     B2_O = {((SAB & QA3) | (sabbar & A2))}
+     B3_O = {((SAB & QA4) | (sabbar & A3))}
+     B4_O = {((SAB & QA5) | (sabbar & A4))}
+     B5_O = {((SAB & QA6) | (sabbar & A5))}
+     B6_O = {((SAB & QA7) | (sabbar & A6))}
+     B7_O = {((SAB & QA8) | (sabbar & A7))}

U4DLY PINDLY(16,2,20) DPWR DGND
+     A0_O A1_O A2_O A3_O A4_O A5_O A6_O A7_O
+     B0_O B1_O B2_O B3_O B4_O B5_O B6_O B7_O
+     OEBABAR OEAB
+     CPBA CPAB SBA SAB
+     A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7
+     A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELBA = {CHANGED(SBA,0)}
+     SELAB = {CHANGED(SAB,0)}
+     CLOCKBA = {CHANGED_LH(CPBA,0)}
+     CLOCKAB = {CHANGED_LH(CPAB,0)}
+     DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+            CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A0,0)}
+     DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+            CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B0,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBABAR
+     A0 A1 A2 A3 A4 A5 A6 A7 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(5ns,7.5ns,10ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(5ns,7ns,10ns),
+         SELBA & TRN_LH, DELAY(4.5ns,7ns,10ns),
+         SELBA & TRN_HL, DELAY(4ns,8ns,10ns),
+         DATAB & TRN_LH, DELAY(4ns,6ns,9ns),
+         DATAB & TRN_HL, DELAY(3ns,5ns,8ns),
+         TRN_ZH, DELAY(3ns,5ns,8ns),
+         TRN_ZL, DELAY(3.5ns,6ns,8.5ns),
+         TRN_HZ, DELAY(1.5ns,4ns,7ns),
+         TRN_LZ, DELAY(2.5ns,6ns,8.5ns),
+         DELAY(6ns,9ns,11ns))}
+
+  TRISTATE:
+     ENABLE HI=OEAB
+     B0 B1 B2 B3 B4 B5 B6 B7 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(5ns,7.5ns,10ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(5ns,7ns,10ns),
+         SELAB & TRN_LH, DELAY(4.5ns,7ns,10ns),
+         SELAB & TRN_HL, DELAY(4ns,8ns,10ns),
+         DATAA & TRN_LH, DELAY(4ns,6ns,9ns),
+         DATAA & TRN_HL, DELAY(3ns,5ns,8ns),
+         TRN_ZH, DELAY(3ns,5ns,8ns),
+         TRN_ZL, DELAY(3.5ns,6ns,8.5ns),
+         TRN_HZ, DELAY(1.5ns,4ns,7ns),
+         TRN_LZ, DELAY(2.5ns,6ns,8.5ns),
+         DELAY(6ns,9ns,11ns))}

U5CON CONSTRAINT(20) DPWR DGND
+     CPAB CPBA A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 OEBABAR OEAB
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CPAB
+     MIN_HI=4.5ns
+     MIN_LO=4ns
+
+  WIDTH:
+     NODE=CPBA
+     MIN_HI=4.5ns
+     MIN_LO=4ns
+
+  SETUP_HOLD:
+     CLOCK LH=CPAB
+     DATA(8)=A0 A1 A2 A3 A4 A5 A6 A7
+     SETUPTIME_HI=4ns
+     SETUPTIME_LO=4.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CPBA
+     DATA(8)=B0 B1 B2 B3 B4 B5 B6 B7
+     SETUPTIME_HI=4ns
+     SETUPTIME_LO=4.5ns
+
+  SETUP_HOLD:
+     CLOCK HL=OEBABAR
+     DATA(1)=OEAB
+     SETUPTIME_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=OEAB
+     DATA(1)=OEBABAR
+     SETUPTIME_HI=5ns

.ENDS 74F652A
*
*
* ----------------------------------------------------------- 74HC652 ------
*  Octal Bus Transceivers And Registers With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-573 to 2-579
*  bss    5/23/94
*
.SUBCKT 74HC652 GBABAR GAB CBA SBA CAB SAB A1 A2 A3 A4 A5 A6 A7 A8
+     B1 B2 B3 B4 B5 B6 B7 B8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CBA
+     B1 B2 B3 B4 B5 B6 B7 B8
+     QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CAB
+     A1 A2 A3 A4 A5 A6 A7 A8
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(34,16) DPWR DGND
+     SBA SAB A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8 QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbabar = {~SBA}
+     sabbar = {~SAB}
+     A1_O = {((SBA & QB1) | (sbabar & B1))}
+     A2_O = {((SBA & QB2) | (sbabar & B2))}
+     A3_O = {((SBA & QB3) | (sbabar & B3))}
+     A4_O = {((SBA & QB4) | (sbabar & B4))}
+     A5_O = {((SBA & QB5) | (sbabar & B5))}
+     A6_O = {((SBA & QB6) | (sbabar & B6))}
+     A7_O = {((SBA & QB7) | (sbabar & B7))}
+     A8_O = {((SBA & QB8) | (sbabar & B8))}
+     B1_O = {((SAB & QA1) | (sabbar & A1))}
+     B2_O = {((SAB & QA2) | (sabbar & A2))}
+     B3_O = {((SAB & QA3) | (sabbar & A3))}
+     B4_O = {((SAB & QA4) | (sabbar & A4))}
+     B5_O = {((SAB & QA5) | (sabbar & A5))}
+     B6_O = {((SAB & QA6) | (sabbar & A6))}
+     B7_O = {((SAB & QA7) | (sabbar & A7))}
+     B8_O = {((SAB & QA8) | (sabbar & A8))}

U4DLY PINDLY(16,2,20) DPWR DGND
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O 
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     GBABAR GAB
+     CBA CAB SBA SAB
+     A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELBA = {CHANGED(SBA,0)}
+     SELAB = {CHANGED(SAB,0)}
+     CLOCKBA = {CHANGED_LH(CBA,0)}
+     CLOCKAB = {CHANGED_LH(CAB,0)}
+     DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+            CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0)}
+     DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+            CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B8,0)}
+
+  TRISTATE:
+     ENABLE LO=GBABAR
+     A1 A2 A3 A4 A5 A6 A7 A8 = {
+       CASE(
+         CLOCKBA & SBA=='1, DELAY(-1,18ns,36ns),
+         SELBA, DELAY(-1,20ns,38ns),
+         DATAB, DELAY(-1,14ns,27ns),
+         TRN_Z$, DELAY(-1,25ns,49ns),
+         TRN_$Z, DELAY(-1,23ns,49ns),
+         DELAY(-1,26ns,50ns))}
+
+  TRISTATE:
+     ENABLE HI=GAB
+     B1 B2 B3 B4 B5 B6 B7 B8 = {
+       CASE(
+         CLOCKAB & SAB=='1, DELAY(-1,18ns,36ns),
+         SELAB, DELAY(-1,20ns,38ns),
+         DATAA, DELAY(-1,14ns,27ns),
+         TRN_Z$, DELAY(-1,25ns,49ns),
+         TRN_$Z, DELAY(-1,23ns,49ns),
+         DELAY(-1,26ns,50ns))}

U5CON CONSTRAINT(18) DPWR DGND
+     CAB CBA A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CAB
+     MAXFREQ=27MEG
+
+  FREQ:
+     NODE=CBA
+     MAXFREQ=27MEG
+
+  WIDTH:
+     NODE=CAB
+     MIN_HI=19ns
+     MIN_LO=19ns
+
+  WIDTH:
+     NODE=CBA
+     MIN_HI=19ns
+     MIN_LO=19ns
+
+  SETUP_HOLD:
+     CLOCK LH=CAB
+     DATA(8)=A1 A2 A3 A4 A5 A6 A7 A8
+     SETUPTIME=25ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CBA
+     DATA(8)=B1 B2 B3 B4 B5 B6 B7 B8
+     SETUPTIME=25ns
+     HOLDTIME=5ns

.ENDS 74HC652
*
*
* ----------------------------------------------------------- 74HCT652 ------
*  Octal Bus Transceivers And Registers With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-581 to 2-586
*  bss    5/23/94
*
.SUBCKT 74HCT652 GBABAR GAB CBA SBA CAB SAB A1 A2 A3 A4 A5 A6 A7 A8
+     B1 B2 B3 B4 B5 B6 B7 B8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CBA
+     B1 B2 B3 B4 B5 B6 B7 B8
+     QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CAB
+     A1 A2 A3 A4 A5 A6 A7 A8
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(34,16) DPWR DGND
+     SBA SAB A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8 QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbabar = {~SBA}
+     sabbar = {~SAB}
+     A1_O = {((SBA & QB1) | (sbabar & B1))}
+     A2_O = {((SBA & QB2) | (sbabar & B2))}
+     A3_O = {((SBA & QB3) | (sbabar & B3))}
+     A4_O = {((SBA & QB4) | (sbabar & B4))}
+     A5_O = {((SBA & QB5) | (sbabar & B5))}
+     A6_O = {((SBA & QB6) | (sbabar & B6))}
+     A7_O = {((SBA & QB7) | (sbabar & B7))}
+     A8_O = {((SBA & QB8) | (sbabar & B8))}
+     B1_O = {((SAB & QA1) | (sabbar & A1))}
+     B2_O = {((SAB & QA2) | (sabbar & A2))}
+     B3_O = {((SAB & QA3) | (sabbar & A3))}
+     B4_O = {((SAB & QA4) | (sabbar & A4))}
+     B5_O = {((SAB & QA5) | (sabbar & A5))}
+     B6_O = {((SAB & QA6) | (sabbar & A6))}
+     B7_O = {((SAB & QA7) | (sabbar & A7))}
+     B8_O = {((SAB & QA8) | (sabbar & A8))}

U4DLY PINDLY(16,2,20) DPWR DGND
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O 
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     GBABAR GAB
+     CBA CAB SBA SAB
+     A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELBA = {CHANGED(SBA,0)}
+     SELAB = {CHANGED(SAB,0)}
+     CLOCKBA = {CHANGED_LH(CBA,0)}
+     CLOCKAB = {CHANGED_LH(CAB,0)}
+     DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+            CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0)}
+     DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+            CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B8,0)}
+
+  TRISTATE:
+     ENABLE LO=GBABAR
+     A1 A2 A3 A4 A5 A6 A7 A8 = {
+       CASE(
+         CLOCKBA & SBA=='1, DELAY(-1,18ns,36ns),
+         SELBA, DELAY(-1,20ns,38ns),
+         DATAB, DELAY(-1,14ns,27ns),
+         TRN_Z$, DELAY(-1,25ns,49ns),
+         TRN_$Z, DELAY(-1,25ns,49ns),
+         DELAY(-1,26ns,50ns))}
+
+  TRISTATE:
+     ENABLE HI=GAB
+     B1 B2 B3 B4 B5 B6 B7 B8 = {
+       CASE(
+         CLOCKAB & SAB=='1, DELAY(-1,18ns,36ns),
+         SELAB, DELAY(-1,20ns,38ns),
+         DATAA, DELAY(-1,14ns,27ns),
+         TRN_Z$, DELAY(-1,25ns,49ns),
+         TRN_$Z, DELAY(-1,25ns,49ns),
+         DELAY(-1,26ns,50ns))}

U5CON CONSTRAINT(18) DPWR DGND
+     CAB CBA A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     IO_HCT IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CAB
+     MAXFREQ=20MEG
+
+  FREQ:
+     NODE=CBA
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=CAB
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=CBA
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=CAB
+     DATA(8)=A1 A2 A3 A4 A5 A6 A7 A8
+     SETUPTIME=19ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CBA
+     DATA(8)=B1 B2 B3 B4 B5 B6 B7 B8
+     SETUPTIME=19ns
+     HOLDTIME=5ns

.ENDS 74HCT652
*
*
* ----------------------------------------------------------- 74LS652 ------
*  Octal Bus Transceivers And Registers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1085 to 2-1092
*  bss    5/23/94
*
.SUBCKT 74LS652 GBABAR GAB CBA SBA CAB SAB A1 A2 A3 A4 A5 A6 A7 A8
+     B1 B2 B3 B4 B5 B6 B7 B8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CBA
+     B1 B2 B3 B4 B5 B6 B7 B8
+     QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CAB
+     A1 A2 A3 A4 A5 A6 A7 A8
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(34,16) DPWR DGND
+     SBA SAB A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8 QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbabar = {~SBA}
+     sabbar = {~SAB}
+     A1_O = {((SBA & QB1) | (sbabar & B1))}
+     A2_O = {((SBA & QB2) | (sbabar & B2))}
+     A3_O = {((SBA & QB3) | (sbabar & B3))}
+     A4_O = {((SBA & QB4) | (sbabar & B4))}
+     A5_O = {((SBA & QB5) | (sbabar & B5))}
+     A6_O = {((SBA & QB6) | (sbabar & B6))}
+     A7_O = {((SBA & QB7) | (sbabar & B7))}
+     A8_O = {((SBA & QB8) | (sbabar & B8))}
+     B1_O = {((SAB & QA1) | (sabbar & A1))}
+     B2_O = {((SAB & QA2) | (sabbar & A2))}
+     B3_O = {((SAB & QA3) | (sabbar & A3))}
+     B4_O = {((SAB & QA4) | (sabbar & A4))}
+     B5_O = {((SAB & QA5) | (sabbar & A5))}
+     B6_O = {((SAB & QA6) | (sabbar & A6))}
+     B7_O = {((SAB & QA7) | (sabbar & A7))}
+     B8_O = {((SAB & QA8) | (sabbar & A8))}

U4DLY PINDLY(16,2,20) DPWR DGND
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O 
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     GBABAR GAB
+     CBA CAB SBA SAB
+     A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELBA = {CHANGED(SBA,0)}
+     SELAB = {CHANGED(SAB,0)}
+     CLOCKBA = {CHANGED_LH(CBA,0)}
+     CLOCKAB = {CHANGED_LH(CAB,0)}
+
+  TRISTATE:
+     ENABLE LO=GBABAR
+     A1 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,15ns,25ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELBA & B1!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELBA & B1!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELBA & B1!='1 & TRN_LH, DELAY(-1,33ns,50ns),
+         SELBA & B1!='1 & TRN_HL, DELAY(-1,15ns,23ns),
+         CHANGED(B1,0) & TRN_LH, DELAY(-1,12ns,18ns),
+         CHANGED(B1,0) & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,30ns,45ns),
+         TRN_ZL, DELAY(-1,36ns,54ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,19ns,30ns),
+         DELAY(-1,37ns,55ns))}
+
+     A2 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,15ns,25ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELBA & B2!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELBA & B2!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELBA & B2!='1 & TRN_LH, DELAY(-1,33ns,50ns),
+         SELBA & B2!='1 & TRN_HL, DELAY(-1,15ns,23ns),
+         CHANGED(B2,0) & TRN_LH, DELAY(-1,12ns,18ns),
+         CHANGED(B2,0) & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,30ns,45ns),
+         TRN_ZL, DELAY(-1,36ns,54ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,19ns,30ns),
+         DELAY(-1,37ns,55ns))}
+
+     A3 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,15ns,25ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELBA & B3!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELBA & B3!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELBA & B3!='1 & TRN_LH, DELAY(-1,33ns,50ns),
+         SELBA & B3!='1 & TRN_HL, DELAY(-1,15ns,23ns),
+         CHANGED(B3,0) & TRN_LH, DELAY(-1,12ns,18ns),
+         CHANGED(B3,0) & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,30ns,45ns),
+         TRN_ZL, DELAY(-1,36ns,54ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,19ns,30ns),
+         DELAY(-1,37ns,55ns))}
+
+     A4 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,15ns,25ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELBA & B4!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELBA & B4!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELBA & B4!='1 & TRN_LH, DELAY(-1,33ns,50ns),
+         SELBA & B4!='1 & TRN_HL, DELAY(-1,15ns,23ns),
+         CHANGED(B4,0) & TRN_LH, DELAY(-1,12ns,18ns),
+         CHANGED(B4,0) & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,30ns,45ns),
+         TRN_ZL, DELAY(-1,36ns,54ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,19ns,30ns),
+         DELAY(-1,37ns,55ns))}
+
+     A5 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,15ns,25ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELBA & B5!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELBA & B5!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELBA & B5!='1 & TRN_LH, DELAY(-1,33ns,50ns),
+         SELBA & B5!='1 & TRN_HL, DELAY(-1,15ns,23ns),
+         CHANGED(B5,0) & TRN_LH, DELAY(-1,12ns,18ns),
+         CHANGED(B5,0) & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,30ns,45ns),
+         TRN_ZL, DELAY(-1,36ns,54ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,19ns,30ns),
+         DELAY(-1,37ns,55ns))}
+
+     A6 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,15ns,25ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELBA & B6!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELBA & B6!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELBA & B6!='1 & TRN_LH, DELAY(-1,33ns,50ns),
+         SELBA & B6!='1 & TRN_HL, DELAY(-1,15ns,23ns),
+         CHANGED(B6,0) & TRN_LH, DELAY(-1,12ns,18ns),
+         CHANGED(B6,0) & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,30ns,45ns),
+         TRN_ZL, DELAY(-1,36ns,54ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,19ns,30ns),
+         DELAY(-1,37ns,55ns))}
+
+     A7 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,15ns,25ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELBA & B7!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELBA & B7!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELBA & B7!='1 & TRN_LH, DELAY(-1,33ns,50ns),
+         SELBA & B7!='1 & TRN_HL, DELAY(-1,15ns,23ns),
+         CHANGED(B7,0) & TRN_LH, DELAY(-1,12ns,18ns),
+         CHANGED(B7,0) & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,30ns,45ns),
+         TRN_ZL, DELAY(-1,36ns,54ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,19ns,30ns),
+         DELAY(-1,37ns,55ns))}
+
+     A8 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,15ns,25ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELBA & B8!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELBA & B8!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELBA & B8!='1 & TRN_LH, DELAY(-1,33ns,50ns),
+         SELBA & B8!='1 & TRN_HL, DELAY(-1,15ns,23ns),
+         CHANGED(B8,0) & TRN_LH, DELAY(-1,12ns,18ns),
+         CHANGED(B8,0) & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,30ns,45ns),
+         TRN_ZL, DELAY(-1,36ns,54ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,19ns,30ns),
+         DELAY(-1,37ns,55ns))}
+
+  TRISTATE:
+     ENABLE HI=GAB
+     B1 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,15ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELAB & A1!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELAB & A1!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELAB & A1!='1 & TRN_LH, DELAY(-1,33ns,50ns),
+         SELAB & A1!='1 & TRN_HL, DELAY(-1,15ns,23ns),
+         CHANGED(A1,0) & TRN_LH, DELAY(-1,12ns,18ns),
+         CHANGED(A1,0) & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,20ns,30ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,19ns,30ns),
+         DELAY(-1,34ns,51ns))}
+
+     B2 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,15ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELAB & A2!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELAB & A2!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELAB & A2!='1 & TRN_LH, DELAY(-1,33ns,50ns),
+         SELAB & A2!='1 & TRN_HL, DELAY(-1,15ns,23ns),
+         CHANGED(A2,0) & TRN_LH, DELAY(-1,12ns,18ns),
+         CHANGED(A2,0) & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,20ns,30ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,19ns,30ns),
+         DELAY(-1,34ns,51ns))}
+
+     B3 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,15ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELAB & A3!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELAB & A3!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELAB & A3!='1 & TRN_LH, DELAY(-1,33ns,50ns),
+         SELAB & A3!='1 & TRN_HL, DELAY(-1,15ns,23ns),
+         CHANGED(A3,0) & TRN_LH, DELAY(-1,12ns,18ns),
+         CHANGED(A3,0) & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,20ns,30ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,19ns,30ns),
+         DELAY(-1,34ns,51ns))}
+
+     B4 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,15ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELAB & A4!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELAB & A4!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELAB & A4!='1 & TRN_LH, DELAY(-1,33ns,50ns),
+         SELAB & A4!='1 & TRN_HL, DELAY(-1,15ns,23ns),
+         CHANGED(A4,0) & TRN_LH, DELAY(-1,12ns,18ns),
+         CHANGED(A4,0) & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,20ns,30ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,19ns,30ns),
+         DELAY(-1,34ns,51ns))}
+
+     B5 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,15ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELAB & A5!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELAB & A5!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELAB & A5!='1 & TRN_LH, DELAY(-1,33ns,50ns),
+         SELAB & A5!='1 & TRN_HL, DELAY(-1,15ns,23ns),
+         CHANGED(A5,0) & TRN_LH, DELAY(-1,12ns,18ns),
+         CHANGED(A5,0) & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,20ns,30ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,19ns,30ns),
+         DELAY(-1,34ns,51ns))}
+
+     B6 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,15ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELAB & A6!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELAB & A6!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELAB & A6!='1 & TRN_LH, DELAY(-1,33ns,50ns),
+         SELAB & A6!='1 & TRN_HL, DELAY(-1,15ns,23ns),
+         CHANGED(A6,0) & TRN_LH, DELAY(-1,12ns,18ns),
+         CHANGED(A6,0) & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,20ns,30ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,19ns,30ns),
+         DELAY(-1,34ns,51ns))}
+
+     B7 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,15ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELAB & A7!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELAB & A7!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELAB & A7!='1 & TRN_LH, DELAY(-1,33ns,50ns),
+         SELAB & A7!='1 & TRN_HL, DELAY(-1,15ns,23ns),
+         CHANGED(A7,0) & TRN_LH, DELAY(-1,12ns,18ns),
+         CHANGED(A7,0) & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,20ns,30ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,19ns,30ns),
+         DELAY(-1,34ns,51ns))}
+
+     B8 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,15ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELAB & A8!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELAB & A8!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELAB & A8!='1 & TRN_LH, DELAY(-1,33ns,50ns),
+         SELAB & A8!='1 & TRN_HL, DELAY(-1,15ns,23ns),
+         CHANGED(A8,0) & TRN_LH, DELAY(-1,12ns,18ns),
+         CHANGED(A8,0) & TRN_HL, DELAY(-1,13ns,20ns),
+         TRN_ZH, DELAY(-1,20ns,30ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,25ns,38ns),
+         TRN_LZ, DELAY(-1,19ns,30ns),
+         DELAY(-1,34ns,51ns))}

U5CON CONSTRAINT(20) DPWR DGND
+     CAB CBA A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 GAB GBABAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CAB
+     MIN_HI=15ns
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=CBA
+     MIN_HI=15ns
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=A1
+     MIN_HI=15ns
+     MIN_LO=15ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A2
+     MIN_HI=15ns
+     MIN_LO=15ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A3
+     MIN_HI=15ns
+     MIN_LO=15ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A4
+     MIN_HI=15ns
+     MIN_LO=15ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A5
+     MIN_HI=15ns
+     MIN_LO=15ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A6
+     MIN_HI=15ns
+     MIN_LO=15ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A7
+     MIN_HI=15ns
+     MIN_LO=15ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A8
+     MIN_HI=15ns
+     MIN_LO=15ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=B1
+     MIN_HI=15ns
+     MIN_LO=15ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B2
+     MIN_HI=15ns
+     MIN_LO=15ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B3
+     MIN_HI=15ns
+     MIN_LO=15ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B4
+     MIN_HI=15ns
+     MIN_LO=15ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B5
+     MIN_HI=15ns
+     MIN_LO=15ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B6
+     MIN_HI=15ns
+     MIN_LO=15ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B7
+     MIN_HI=15ns
+     MIN_LO=15ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B8
+     MIN_HI=15ns
+     MIN_LO=15ns
+     WHEN={GBABAR=='0}
+
+  SETUP_HOLD:
+     CLOCK LH=CAB
+     DATA(8)=A1 A2 A3 A4 A5 A6 A7 A8
+     SETUPTIME=15ns
+
+  SETUP_HOLD:
+     CLOCK LH=CBA
+     DATA(8)=B1 B2 B3 B4 B5 B6 B7 B8
+     SETUPTIME=15ns

.ENDS 74LS652

*------------------------------------------------------------74AC653-----

* Octal Bus Transceiver/Register, Tri-State (B Side) and Open Drain (A Side)
* Harris Answer Fax, Document # 1975
* jat 9/5/96

.SUBCKT 74AC653 A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 OEAB
+ OEBABAR CBA CAB SBA SAB
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(35,16) DPWR DGND
+ SBA SAB A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 OEBABAR
+ QA0 QA1 QA2 QA3 QA4 QA5 QA6 QA7 QB0 QB1 QB2 QB3 QB4 QB5 QB6 QB7
+ A0O A1O A2O A3O A4O A5O A6O A7O B0O B1O B2O B3O B4O B5O B6O B7O
+ D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   A0O = {OEBABAR | ~((QB0 & SBA) | (B0 & ~SBA))}
+   A1O = {OEBABAR | ~((QB1 & SBA) | (B1 & ~SBA))}
+   A2O = {OEBABAR | ~((QB2 & SBA) | (B2 & ~SBA))}
+   A3O = {OEBABAR | ~((QB3 & SBA) | (B3 & ~SBA))}
+   A4O = {OEBABAR | ~((QB4 & SBA) | (B4 & ~SBA))}
+   A5O = {OEBABAR | ~((QB5 & SBA) | (B5 & ~SBA))}
+   A6O = {OEBABAR | ~((QB6 & SBA) | (B6 & ~SBA))}
+   A7O = {OEBABAR | ~((QB7 & SBA) | (B7 & ~SBA))}
+   B0O = {~((QA0 & SAB) | (A0 & ~SAB))}
+   B1O = {~((QA1 & SAB) | (A1 & ~SAB))}
+   B2O = {~((QA2 & SAB) | (A2 & ~SAB))}
+   B3O = {~((QA3 & SAB) | (A3 & ~SAB))}
+   B4O = {~((QA4 & SAB) | (A4 & ~SAB))}
+   B5O = {~((QA5 & SAB) | (A5 & ~SAB))}
+   B6O = {~((QA6 & SAB) | (A6 & ~SAB))}
+   B7O = {~((QA7 & SAB) | (A7 & ~SAB))}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CAB
+ A0 A1 A2 A3 A4 A5 A6 A7
+ QA0 QA1 QA2 QA3 QA4 QA5 QA6 QA7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(8) DPWR DGND
+ $D_HI $D_HI CBA
+ B0 B1 B2 B3 B4 B5 B6 B7
+ QB0 QB1 QB2 QB3 QB4 QB5 QB6 QB7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(8,0,11) DPWR DGND
+ A0O A1O A2O A3O A4O A5O A6O A7O
+ OEBABAR B0 B1 B2 B3 B4 B5 B6 B7 CBA SBA
+ A0 A1 A2 A3 A4 A5 A6 A7
+ IO_AC_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SELBA = {CHANGED(SBA,0)}
+   BDATA = {CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) |
+            CHANGED(B4,0) | CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0)}
+   BAEDGE = {CHANGED_LH(CBA,0)}
+   ENABS = {CHANGED(OEBABAR,0)}
+ PINDLY:
+   A0 A1 A2 A3 A4 A5 A6 A7 = {
+      CASE(
+        ENABS & (TRN_LH | TRN_HL), DELAY(3.5NS,-1,12.3NS),
+        SELBA & TRN_LH, DELAY(3.4NS,-1,11.9NS),
+        SELBA & TRN_HL, DELAY(3.1NS,-1,10.9NS),
+        BAEDGE & TRN_LH, DELAY(3.8NS,-1,13.3NS),
+        BAEDGE & TRN_HL, DELAY(3.5NS,-1,12.3NS),
+        BDATA & TRN_LH, DELAY(3.1NS,-1,11NS),
+        BDATA & TRN_HL, DELAY(2.8NS,-1,10NS),
+        DELAY(4.8NS,-1,14.3NS))}

U5 PINDLY(8,1,10) DPWR DGND
+ B0O B1O B2O B3O B4O B5O B6O B7O
+ OEAB
+ A0 A1 A2 A3 A4 A5 A6 A7 CAB SAB
+ B0 B1 B2 B3 B4 B5 B6 B7
+ IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SELAB = {CHANGED(SAB,0)}
+   ADATA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) |
+            CHANGED(A4,0) | CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0)}
+   ABEDGE = {CHANGED_LH(CAB,0)}
+ TRISTATE:
+ ENABLE HI = OEAB
+   B0 B1 B2 B3 B4 B5 B6 B7 = {
+      CASE(
+        TRN_Z$, DELAY(3.5NS,-1,12.3NS),
+        TRN_$Z, DELAY(3.5NS,-1,12.3NS),
+        SELAB & (TRN_LH | TRN_HL), DELAY(3.1NS,-1,10.9NS),
+        ABEDGE & (TRN_HL | TRN_LH), DELAY(3.5NS,-1,12.3NS),
+        ADATA & (TRN_LH | TRN_HL), DELAY(2.8NS,-1,10NS),
+        DELAY(4.4NS,-1,13.3NS))}

U6 CONSTRAINT(18) DPWR DGND
+ A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 CAB CBA
+ IO_AC IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE =CAB
+  MAXFREQ = 143MEG
+ FREQ:
+  NODE = CBA
+  MAXFREQ = 143MEG
+ WIDTH:
+  NODE = CAB
+  MIN_LO = 3.5NS
+  MIN_HI = 3.5NS
+ WIDTH:
+  NODE = CBA
+  MIN_LO = 3.5NS
+  MIN_HI = 3.5NS
+ SETUP_HOLD:
+  CLOCK LH = CAB
+  DATA(8) = A0 A1 A2 A3 A4 A5 A6 A7
+  SETUPTIME = 2.2NS
+  HOLDTIME = 2NS
+ SETUP_HOLD:
+  CLOCK LH = CBA
+  DATA(8) = B0 B1 B2 B3 B4 B5 B6 B7
+  SETUPTIME = 2.2NS
+  HOLDTIME = 2NS

.ENDS 74AC653

*------------------------------------------------------------74ACT653-----

* Octal Bus Transceiver/Register, Tri-State (B Side) and Open Drain (A Side)
* Harris Answer Fax, Document # 1975
* jat 9/10/96

.SUBCKT 74ACT653 A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 OEAB
+ OEBABAR CBA CAB SBA SAB
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(35,16) DPWR DGND
+ SBA SAB A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 OEBABAR
+ QA0 QA1 QA2 QA3 QA4 QA5 QA6 QA7 QB0 QB1 QB2 QB3 QB4 QB5 QB6 QB7
+ A0O A1O A2O A3O A4O A5O A6O A7O B0O B1O B2O B3O B4O B5O B6O B7O
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   A0O = {OEBABAR | ~((QB0 & SBA) | (B0 & ~SBA))}
+   A1O = {OEBABAR | ~((QB1 & SBA) | (B1 & ~SBA))}
+   A2O = {OEBABAR | ~((QB2 & SBA) | (B2 & ~SBA))}
+   A3O = {OEBABAR | ~((QB3 & SBA) | (B3 & ~SBA))}
+   A4O = {OEBABAR | ~((QB4 & SBA) | (B4 & ~SBA))}
+   A5O = {OEBABAR | ~((QB5 & SBA) | (B5 & ~SBA))}
+   A6O = {OEBABAR | ~((QB6 & SBA) | (B6 & ~SBA))}
+   A7O = {OEBABAR | ~((QB7 & SBA) | (B7 & ~SBA))}
+   B0O = {~((QA0 & SAB) | (A0 & ~SAB))}
+   B1O = {~((QA1 & SAB) | (A1 & ~SAB))}
+   B2O = {~((QA2 & SAB) | (A2 & ~SAB))}
+   B3O = {~((QA3 & SAB) | (A3 & ~SAB))}
+   B4O = {~((QA4 & SAB) | (A4 & ~SAB))}
+   B5O = {~((QA5 & SAB) | (A5 & ~SAB))}
+   B6O = {~((QA6 & SAB) | (A6 & ~SAB))}
+   B7O = {~((QA7 & SAB) | (A7 & ~SAB))}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CAB
+ A0 A1 A2 A3 A4 A5 A6 A7
+ QA0 QA1 QA2 QA3 QA4 QA5 QA6 QA7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(8) DPWR DGND
+ $D_HI $D_HI CBA
+ B0 B1 B2 B3 B4 B5 B6 B7
+ QB0 QB1 QB2 QB3 QB4 QB5 QB6 QB7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(8,0,11) DPWR DGND
+ A0O A1O A2O A3O A4O A5O A6O A7O
+ OEBABAR B0 B1 B2 B3 B4 B5 B6 B7 CBA SBA
+ A0 A1 A2 A3 A4 A5 A6 A7
+ IO_ACT_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SELBA = {CHANGED(SBA,0)}
+   BDATA = {CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) |
+            CHANGED(B4,0) | CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0)}
+   BAEDGE = {CHANGED_LH(CBA,0)}
+   ENABS = {CHANGED(OEBABAR,0)}
+ PINDLY:
+   A0 A1 A2 A3 A4 A5 A6 A7 = {
+      CASE(
+        ENABS & (TRN_LH | TRN_HL), DELAY(4NS,-1,14.1NS),
+        SELBA & TRN_LH, DELAY(4.3NS,-1,15.1NS),
+        SELBA & TRN_HL, DELAY(4NS,-1,14.1NS),
+        BAEDGE & TRN_LH, DELAY(4.3NS,-1,15.1NS),
+        BAEDGE & TRN_HL, DELAY(4NS,-1,14.1NS),
+        BDATA & TRN_LH, DELAY(3.5NS,-1,12.4NS),
+        BDATA & TRN_HL, DELAY(3.2NS,-1,11.4NS),
+        DELAY(5.3NS,-1,16.1NS))}

U5 PINDLY(8,1,10) DPWR DGND
+ B0O B1O B2O B3O B4O B5O B6O B7O
+ OEAB
+ A0 A1 A2 A3 A4 A5 A6 A7 CAB SAB
+ B0 B1 B2 B3 B4 B5 B6 B7
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SELAB = {CHANGED(SAB,0)}
+   ADATA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) |
+            CHANGED(A4,0) | CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0)}
+   ABEDGE = {CHANGED_LH(CAB,0)}
+ TRISTATE:
+ ENABLE HI = OEAB
+   B0 B1 B2 B3 B4 B5 B6 B7 = {
+      CASE(
+        TRN_Z$, DELAY(4NS,-1,14.1NS),
+        TRN_$Z, DELAY(4NS,-1,14.1NS),
+        SELAB & (TRN_LH | TRN_HL), DELAY(4NS,-1,14.1NS),
+        ABEDGE & (TRN_HL | TRN_LH), DELAY(4NS,-1,14.1NS),
+        ADATA & (TRN_LH | TRN_HL), DELAY(3.2NS,-1,11.4NS),
+        DELAY(5NS,-1,15.1NS))}

U6 CONSTRAINT(18) DPWR DGND
+ A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 CAB CBA
+ IO_ACT IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE =CAB
+  MAXFREQ = 125MEG
+ FREQ:
+  NODE = CBA
+  MAXFREQ = 125MEG
+ WIDTH:
+  NODE = CAB
+  MIN_LO = 3.9NS
+  MIN_HI = 3.9NS
+ WIDTH:
+  NODE = CBA
+  MIN_LO = 3.9NS
+  MIN_HI = 3.9NS
+ SETUP_HOLD:
+  CLOCK LH = CAB
+  DATA(8) = A0 A1 A2 A3 A4 A5 A6 A7
+  SETUPTIME = 2.2NS
+  HOLDTIME = 2NS
+ SETUP_HOLD:
+  CLOCK LH = CBA
+  DATA(8) = B0 B1 B2 B3 B4 B5 B6 B7
+  SETUPTIME = 2.2NS
+  HOLDTIME = 2NS

.ENDS 74ACT653

* ----------------------------------------------------------- 74ALS653 ------
*  Octal Bus Transceivers And Registers
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-547 to 2-558
*  bss    5/23/94
*
.SUBCKT 74ALS653 GBABAR GAB CBA SBA CAB SAB A1 A2 A3 A4 A5 A6 A7 A8
+     B1 B2 B3 B4 B5 B6 B7 B8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CBA
+     B1 B2 B3 B4 B5 B6 B7 B8
+     QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CAB
+     A1 A2 A3 A4 A5 A6 A7 A8
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(35,16) DPWR DGND
+     SBA SAB A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 GBABAR
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8 QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbabar = {~SBA}
+     sabbar = {~SAB}
+     A1_OC = {~((SBA & QB1) | (sbabar & B1))}
+     A2_OC = {~((SBA & QB2) | (sbabar & B2))}
+     A3_OC = {~((SBA & QB3) | (sbabar & B3))}
+     A4_OC = {~((SBA & QB4) | (sbabar & B4))}
+     A5_OC = {~((SBA & QB5) | (sbabar & B5))}
+     A6_OC = {~((SBA & QB6) | (sbabar & B6))}
+     A7_OC = {~((SBA & QB7) | (sbabar & B7))}
+     A8_OC = {~((SBA & QB8) | (sbabar & B8))}
+     B1_O = {~((SAB & QA1) | (sabbar & A1))}
+     B2_O = {~((SAB & QA2) | (sabbar & A2))}
+     B3_O = {~((SAB & QA3) | (sabbar & A3))}
+     B4_O = {~((SAB & QA4) | (sabbar & A4))}
+     B5_O = {~((SAB & QA5) | (sabbar & A5))}
+     B6_O = {~((SAB & QA6) | (sabbar & A6))}
+     B7_O = {~((SAB & QA7) | (sabbar & A7))}
+     B8_O = {~((SAB & QA8) | (sabbar & A8))}
+     A1_O = {(A1_OC | GBABAR)}
+     A2_O = {(A2_OC | GBABAR)}
+     A3_O = {(A3_OC | GBABAR)}
+     A4_O = {(A4_OC | GBABAR)}
+     A5_O = {(A5_OC | GBABAR)}
+     A6_O = {(A6_OC | GBABAR)}
+     A7_O = {(A7_OC | GBABAR)}
+     A8_O = {(A8_OC | GBABAR)}

U4DLY PINDLY(8,0,11) DPWR DGND
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O 
+     CBA SBA GBABAR B1 B2 B3 B4 B5 B6 B7 B8
+     A1 A2 A3 A4 A5 A6 A7 A8
+     IO_ALS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELBA = {CHANGED(SBA,0)}
+     CLOCKBA = {CHANGED_LH(CBA,0)}
+     ENBA = {CHANGED(GBABAR,0)}
+
+  PINDLY:
+     A1 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,30ns,50ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & TRN_LH, DELAY(-1,35ns,50ns),
+         SELBA & TRN_HL, DELAY(-1,15ns,22ns),
+         CHANGED(B1,0) & TRN_LH, DELAY(-1,20ns,44ns),
+         CHANGED(B1,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         ENBA & TRN_LH, DELAY(-1,17ns,23ns),
+         ENBA & TRN_HL, DELAY(-1,14ns,20ns),
+         DELAY(-1,36ns,51ns))}
+
+     A2 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,30ns,50ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & TRN_LH, DELAY(-1,35ns,50ns),
+         SELBA & TRN_HL, DELAY(-1,15ns,22ns),
+         CHANGED(B2,0) & TRN_LH, DELAY(-1,20ns,44ns),
+         CHANGED(B2,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         ENBA & TRN_LH, DELAY(-1,17ns,23ns),
+         ENBA & TRN_HL, DELAY(-1,14ns,20ns),
+         DELAY(-1,36ns,51ns))}
+
+     A3 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,30ns,50ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & TRN_LH, DELAY(-1,35ns,50ns),
+         SELBA & TRN_HL, DELAY(-1,15ns,22ns),
+         CHANGED(B3,0) & TRN_LH, DELAY(-1,20ns,44ns),
+         CHANGED(B3,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         ENBA & TRN_LH, DELAY(-1,17ns,23ns),
+         ENBA & TRN_HL, DELAY(-1,14ns,20ns),
+         DELAY(-1,36ns,51ns))}
+
+     A4 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,30ns,50ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & TRN_LH, DELAY(-1,35ns,50ns),
+         SELBA & TRN_HL, DELAY(-1,15ns,22ns),
+         CHANGED(B4,0) & TRN_LH, DELAY(-1,20ns,44ns),
+         CHANGED(B4,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         ENBA & TRN_LH, DELAY(-1,17ns,23ns),
+         ENBA & TRN_HL, DELAY(-1,14ns,20ns),
+         DELAY(-1,36ns,51ns))}
+
+     A5 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,30ns,50ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & TRN_LH, DELAY(-1,35ns,50ns),
+         SELBA & TRN_HL, DELAY(-1,15ns,22ns),
+         CHANGED(B5,0) & TRN_LH, DELAY(-1,20ns,44ns),
+         CHANGED(B5,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         ENBA & TRN_LH, DELAY(-1,17ns,23ns),
+         ENBA & TRN_HL, DELAY(-1,14ns,20ns),
+         DELAY(-1,36ns,51ns))}
+
+     A6 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,30ns,50ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & TRN_LH, DELAY(-1,35ns,50ns),
+         SELBA & TRN_HL, DELAY(-1,15ns,22ns),
+         CHANGED(B6,0) & TRN_LH, DELAY(-1,20ns,44ns),
+         CHANGED(B6,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         ENBA & TRN_LH, DELAY(-1,17ns,23ns),
+         ENBA & TRN_HL, DELAY(-1,14ns,20ns),
+         DELAY(-1,36ns,51ns))}
+
+     A7 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,30ns,50ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & TRN_LH, DELAY(-1,35ns,50ns),
+         SELBA & TRN_HL, DELAY(-1,15ns,22ns),
+         CHANGED(B7,0) & TRN_LH, DELAY(-1,20ns,44ns),
+         CHANGED(B7,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         ENBA & TRN_LH, DELAY(-1,17ns,23ns),
+         ENBA & TRN_HL, DELAY(-1,14ns,20ns),
+         DELAY(-1,36ns,51ns))}
+
+     A8 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,30ns,50ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & TRN_LH, DELAY(-1,35ns,50ns),
+         SELBA & TRN_HL, DELAY(-1,15ns,22ns),
+         CHANGED(B8,0) & TRN_LH, DELAY(-1,20ns,44ns),
+         CHANGED(B8,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         ENBA & TRN_LH, DELAY(-1,17ns,23ns),
+         ENBA & TRN_HL, DELAY(-1,14ns,20ns),
+         DELAY(-1,36ns,51ns))}

U5DLY PINDLY(8,1,10) DPWR DGND
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     GAB
+     CAB SAB A1 A2 A3 A4 A5 A6 A7 A8
+     B1 B2 B3 B4 B5 B6 B7 B8
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELAB = {CHANGED(SAB,0)}
+     CLOCKAB = {CHANGED_LH(CAB,0)}
+
+  TRISTATE:
+     ENABLE HI=GAB
+     B1 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A1!='0 & TRN_LH, DELAY(-1,18ns,22ns),
+         SELAB & A1!='0 & TRN_HL, DELAY(-1,13ns,19ns),
+         SELAB & A1!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A1!='1 & TRN_HL, DELAY(-1,13ns,18ns),
+         CHANGED(A1,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A1,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,13ns,17ns),
+         TRN_HZ, DELAY(-1,8ns,12ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B2 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A2!='0 & TRN_LH, DELAY(-1,18ns,22ns),
+         SELAB & A2!='0 & TRN_HL, DELAY(-1,13ns,19ns),
+         SELAB & A2!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A2!='1 & TRN_HL, DELAY(-1,13ns,18ns),
+         CHANGED(A2,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A2,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,13ns,17ns),
+         TRN_HZ, DELAY(-1,8ns,12ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B3 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A3!='0 & TRN_LH, DELAY(-1,18ns,22ns),
+         SELAB & A3!='0 & TRN_HL, DELAY(-1,13ns,19ns),
+         SELAB & A3!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A3!='1 & TRN_HL, DELAY(-1,13ns,18ns),
+         CHANGED(A3,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A3,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,13ns,17ns),
+         TRN_HZ, DELAY(-1,8ns,12ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B4 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A4!='0 & TRN_LH, DELAY(-1,18ns,22ns),
+         SELAB & A4!='0 & TRN_HL, DELAY(-1,13ns,19ns),
+         SELAB & A4!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A4!='1 & TRN_HL, DELAY(-1,13ns,18ns),
+         CHANGED(A4,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A4,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,13ns,17ns),
+         TRN_HZ, DELAY(-1,8ns,12ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B5 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A5!='0 & TRN_LH, DELAY(-1,18ns,22ns),
+         SELAB & A5!='0 & TRN_HL, DELAY(-1,13ns,19ns),
+         SELAB & A5!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A5!='1 & TRN_HL, DELAY(-1,13ns,18ns),
+         CHANGED(A5,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A5,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,13ns,17ns),
+         TRN_HZ, DELAY(-1,8ns,12ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B6 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A6!='0 & TRN_LH, DELAY(-1,18ns,22ns),
+         SELAB & A6!='0 & TRN_HL, DELAY(-1,13ns,19ns),
+         SELAB & A6!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A6!='1 & TRN_HL, DELAY(-1,13ns,18ns),
+         CHANGED(A6,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A6,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,13ns,17ns),
+         TRN_HZ, DELAY(-1,8ns,12ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B7 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A7!='0 & TRN_LH, DELAY(-1,18ns,22ns),
+         SELAB & A7!='0 & TRN_HL, DELAY(-1,13ns,19ns),
+         SELAB & A7!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A7!='1 & TRN_HL, DELAY(-1,13ns,18ns),
+         CHANGED(A7,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A7,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,13ns,17ns),
+         TRN_HZ, DELAY(-1,8ns,12ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B8 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A8!='0 & TRN_LH, DELAY(-1,18ns,22ns),
+         SELAB & A8!='0 & TRN_HL, DELAY(-1,13ns,19ns),
+         SELAB & A8!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A8!='1 & TRN_HL, DELAY(-1,13ns,18ns),
+         CHANGED(A8,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A8,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,13ns,17ns),
+         TRN_HZ, DELAY(-1,8ns,12ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}

U6CON CONSTRAINT(18) DPWR DGND
+     CAB CBA A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CAB
+     MAXFREQ=35MEG
+
+  FREQ:
+     NODE=CBA
+     MAXFREQ=35MEG
+
+  WIDTH:
+     NODE=CAB
+     MIN_HI=14.5ns
+     MIN_LO=14.5ns
+
+  WIDTH:
+     NODE=CBA
+     MIN_HI=14.5ns
+     MIN_LO=14.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CAB
+     DATA(8)=A1 A2 A3 A4 A5 A6 A7 A8
+     SETUPTIME=10ns
+
+  SETUP_HOLD:
+     CLOCK LH=CBA
+     DATA(8)=B1 B2 B3 B4 B5 B6 B7 B8
+     SETUPTIME=10ns

.ENDS 74ALS653
*
*
* ----------------------------------------------------------- 74F653 ------
*  Octal Transceiver/Register, Inverting
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 660 to 667
*  bss    5/23/94
*
.SUBCKT 74F653 OEBABAR OEAB CPBA SBA CPAB SAB A0 A1 A2 A3 A4 A5 A6 A7
+     B0 B1 B2 B3 B4 B5 B6 B7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CPBA
+     B0 B1 B2 B3 B4 B5 B6 B7
+     QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CPAB
+     A0 A1 A2 A3 A4 A5 A6 A7
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(35,16) DPWR DGND
+     SBA SAB A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 OEBABAR
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8 QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     A0_O A1_O A2_O A3_O A4_O A5_O A6_O A7_O
+     B0_O B1_O B2_O B3_O B4_O B5_O B6_O B7_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbabar = {~SBA}
+     sabbar = {~SAB}
+     A0_OC = {~((SBA & QB1) | (sbabar & B0))}
+     A1_OC = {~((SBA & QB2) | (sbabar & B1))}
+     A2_OC = {~((SBA & QB3) | (sbabar & B2))}
+     A3_OC = {~((SBA & QB4) | (sbabar & B3))}
+     A4_OC = {~((SBA & QB5) | (sbabar & B4))}
+     A5_OC = {~((SBA & QB6) | (sbabar & B5))}
+     A6_OC = {~((SBA & QB7) | (sbabar & B6))}
+     A7_OC = {~((SBA & QB8) | (sbabar & B7))}
+     B0_O = {~((SAB & QA1) | (sabbar & A0))}
+     B1_O = {~((SAB & QA2) | (sabbar & A1))}
+     B2_O = {~((SAB & QA3) | (sabbar & A2))}
+     B3_O = {~((SAB & QA4) | (sabbar & A3))}
+     B4_O = {~((SAB & QA5) | (sabbar & A4))}
+     B5_O = {~((SAB & QA6) | (sabbar & A5))}
+     B6_O = {~((SAB & QA7) | (sabbar & A6))}
+     B7_O = {~((SAB & QA8) | (sabbar & A7))}
+     A0_O = {(A0_OC | OEBABAR)}
+     A1_O = {(A1_OC | OEBABAR)}
+     A2_O = {(A2_OC | OEBABAR)}
+     A3_O = {(A3_OC | OEBABAR)}
+     A4_O = {(A4_OC | OEBABAR)}
+     A5_O = {(A5_OC | OEBABAR)}
+     A6_O = {(A6_OC | OEBABAR)}
+     A7_O = {(A7_OC | OEBABAR)}

U4DLY PINDLY(8,0,11) DPWR DGND
+     A0_O A1_O A2_O A3_O A4_O A5_O A6_O A7_O
+     CPBA SBA OEBABAR B0 B1 B2 B3 B4 B5 B6 B7
+     A0 A1 A2 A3 A4 A5 A6 A7
+     IO_F_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELBA = {CHANGED(SBA,0)}
+     CLOCKBA = {CHANGED_LH(CPBA,0)}
+     DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+            CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B0,0)}
+     ENBA = {CHANGED(OEBABAR,0)}
+
+  PINDLY:
+     A0 A1 A2 A3 A4 A5 A6 A7 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(6ns,14.5ns,19ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(6ns,8ns,11ns),
+         SELBA & TRN_LH, DELAY(5ns,15ns,18.5ns),
+         SELBA & TRN_HL, DELAY(5ns,7.5ns,10.5ns),
+         DATAB & TRN_LH, DELAY(4.5ns,14ns,18.5ns),
+         DATAB & TRN_HL, DELAY(4.5ns,7ns,10ns),
+         ENBA & TRN_LH, DELAY(6.5ns,16ns,20ns),
+         ENBA & TRN_HL, DELAY(6.5ns,10ns,12.5ns),
+         DELAY(7.5ns,17ns,21ns))}

U5DLY PINDLY(8,1,10) DPWR DGND
+     B0_O B1_O B2_O B3_O B4_O B5_O B6_O B7_O
+     OEAB
+     CPAB SAB A0 A1 A2 A3 A4 A5 A6 A7
+     B0 B1 B2 B3 B4 B5 B6 B7
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELAB = {CHANGED(SAB,0)}
+     CLOCKAB = {CHANGED_LH(CPAB,0)}
+     DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+            CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A0,0)}
+
+  TRISTATE:
+     ENABLE HI=OEAB
+     B0 B1 B2 B3 B4 B5 B6 B7 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(5.5ns,7.5ns,10.5ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(5.5ns,8ns,10.5ns),
+         SELAB & TRN_LH, DELAY(5ns,7ns,10ns),
+         SELAB & TRN_HL, DELAY(5ns,7ns,10ns),
+         DATAA & TRN_LH, DELAY(4ns,6ns,9.5ns),
+         DATAA & TRN_HL, DELAY(4ns,6.5ns,9.5ns),
+         TRN_ZH, DELAY(4.5ns,6.5ns,9.5ns),
+         TRN_ZL, DELAY(6ns,8ns,11ns),
+         TRN_HZ, DELAY(6.5ns,9.5ns,13ns),
+         TRN_LZ, DELAY(6ns,9ns,12ns),
+         DELAY(7ns,10ns,14ns))}

U6CON CONSTRAINT(20) DPWR DGND
+     CPAB CPBA A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 OEBABAR OEAB
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CPAB
+     MIN_HI=4.5ns
+     MIN_LO=6.5ns
+
+  WIDTH:
+     NODE=CPBA
+     MIN_HI=4.5ns
+     MIN_LO=6.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CPAB
+     DATA(8)=A0 A1 A2 A3 A4 A5 A6 A7
+     SETUPTIME_HI=5.5ns
+     SETUPTIME_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CPBA
+     DATA(8)=B0 B1 B2 B3 B4 B5 B6 B7
+     SETUPTIME_HI=5.5ns
+     SETUPTIME_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK HL=OEBABAR
+     DATA(1)=OEAB
+     SETUPTIME_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=OEAB
+     DATA(1)=OEBABAR
+     SETUPTIME_HI=5ns

.ENDS 74F653
*
*
* ----------------------------------------------------------- 74LS653 ------
*  Octal Bus Transceivers And Registers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1085 to 2-1092
*  bss    5/23/94
*
.SUBCKT 74LS653 GBABAR GAB CBA SBA CAB SAB A1 A2 A3 A4 A5 A6 A7 A8
+     B1 B2 B3 B4 B5 B6 B7 B8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CBA
+     B1 B2 B3 B4 B5 B6 B7 B8
+     QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CAB
+     A1 A2 A3 A4 A5 A6 A7 A8
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(35,16) DPWR DGND
+     SBA SAB A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 GBABAR
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8 QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbabar = {~SBA}
+     sabbar = {~SAB}
+     A1_OC = {~((SBA & QB1) | (sbabar & B1))}
+     A2_OC = {~((SBA & QB2) | (sbabar & B2))}
+     A3_OC = {~((SBA & QB3) | (sbabar & B3))}
+     A4_OC = {~((SBA & QB4) | (sbabar & B4))}
+     A5_OC = {~((SBA & QB5) | (sbabar & B5))}
+     A6_OC = {~((SBA & QB6) | (sbabar & B6))}
+     A7_OC = {~((SBA & QB7) | (sbabar & B7))}
+     A8_OC = {~((SBA & QB8) | (sbabar & B8))}
+     B1_O = {~((SAB & QA1) | (sabbar & A1))}
+     B2_O = {~((SAB & QA2) | (sabbar & A2))}
+     B3_O = {~((SAB & QA3) | (sabbar & A3))}
+     B4_O = {~((SAB & QA4) | (sabbar & A4))}
+     B5_O = {~((SAB & QA5) | (sabbar & A5))}
+     B6_O = {~((SAB & QA6) | (sabbar & A6))}
+     B7_O = {~((SAB & QA7) | (sabbar & A7))}
+     B8_O = {~((SAB & QA8) | (sabbar & A8))}
+     A1_O = {(A1_OC | GBABAR)}
+     A2_O = {(A2_OC | GBABAR)}
+     A3_O = {(A3_OC | GBABAR)}
+     A4_O = {(A4_OC | GBABAR)}
+     A5_O = {(A5_OC | GBABAR)}
+     A6_O = {(A6_OC | GBABAR)}
+     A7_O = {(A7_OC | GBABAR)}
+     A8_O = {(A8_OC | GBABAR)}

U4DLY PINDLY(8,0,11) DPWR DGND
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O 
+     CBA SBA GBABAR B1 B2 B3 B4 B5 B6 B7 B8
+     A1 A2 A3 A4 A5 A6 A7 A8
+     IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELBA = {CHANGED(SBA,0)}
+     CLOCKBA = {CHANGED_LH(CBA,0)}
+     ENBA = {CHANGED(GBABAR,0)}
+
+  PINDLY:
+     A1 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,25ns,38ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,26ns,39ns),
+         SELBA & B1!='0 & TRN_LH, DELAY(-1,38ns,57ns),
+         SELBA & B1!='0 & TRN_HL, DELAY(-1,26ns,39ns),
+         SELBA & B1!='1 & TRN_LH, DELAY(-1,34ns,51ns),
+         SELBA & B1!='1 & TRN_HL, DELAY(-1,23ns,35ns),
+         CHANGED(B1,0) & TRN_LH, DELAY(-1,21ns,32ns),
+         CHANGED(B1,0) & TRN_HL, DELAY(-1,16ns,24ns),
+         ENBA & TRN_LH, DELAY(-1,23ns,35ns),
+         ENBA & TRN_HL, DELAY(-1,37ns,55ns),
+         DELAY(-1,39ns,58ns))}
+
+     A2 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,25ns,38ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,26ns,39ns),
+         SELBA & B2!='0 & TRN_LH, DELAY(-1,38ns,57ns),
+         SELBA & B2!='0 & TRN_HL, DELAY(-1,26ns,39ns),
+         SELBA & B2!='1 & TRN_LH, DELAY(-1,34ns,51ns),
+         SELBA & B2!='1 & TRN_HL, DELAY(-1,23ns,35ns),
+         CHANGED(B2,0) & TRN_LH, DELAY(-1,21ns,32ns),
+         CHANGED(B2,0) & TRN_HL, DELAY(-1,16ns,24ns),
+         ENBA & TRN_LH, DELAY(-1,23ns,35ns),
+         ENBA & TRN_HL, DELAY(-1,37ns,55ns),
+         DELAY(-1,39ns,58ns))}
+
+     A3 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,25ns,38ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,26ns,39ns),
+         SELBA & B3!='0 & TRN_LH, DELAY(-1,38ns,57ns),
+         SELBA & B3!='0 & TRN_HL, DELAY(-1,26ns,39ns),
+         SELBA & B3!='1 & TRN_LH, DELAY(-1,34ns,51ns),
+         SELBA & B3!='1 & TRN_HL, DELAY(-1,23ns,35ns),
+         CHANGED(B3,0) & TRN_LH, DELAY(-1,21ns,32ns),
+         CHANGED(B3,0) & TRN_HL, DELAY(-1,16ns,24ns),
+         ENBA & TRN_LH, DELAY(-1,23ns,35ns),
+         ENBA & TRN_HL, DELAY(-1,37ns,55ns),
+         DELAY(-1,39ns,58ns))}
+
+     A4 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,25ns,38ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,26ns,39ns),
+         SELBA & B4!='0 & TRN_LH, DELAY(-1,38ns,57ns),
+         SELBA & B4!='0 & TRN_HL, DELAY(-1,26ns,39ns),
+         SELBA & B4!='1 & TRN_LH, DELAY(-1,34ns,51ns),
+         SELBA & B4!='1 & TRN_HL, DELAY(-1,23ns,35ns),
+         CHANGED(B4,0) & TRN_LH, DELAY(-1,21ns,32ns),
+         CHANGED(B4,0) & TRN_HL, DELAY(-1,16ns,24ns),
+         ENBA & TRN_LH, DELAY(-1,23ns,35ns),
+         ENBA & TRN_HL, DELAY(-1,37ns,55ns),
+         DELAY(-1,39ns,58ns))}
+
+     A5 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,25ns,38ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,26ns,39ns),
+         SELBA & B5!='0 & TRN_LH, DELAY(-1,38ns,57ns),
+         SELBA & B5!='0 & TRN_HL, DELAY(-1,26ns,39ns),
+         SELBA & B5!='1 & TRN_LH, DELAY(-1,34ns,51ns),
+         SELBA & B5!='1 & TRN_HL, DELAY(-1,23ns,35ns),
+         CHANGED(B5,0) & TRN_LH, DELAY(-1,21ns,32ns),
+         CHANGED(B5,0) & TRN_HL, DELAY(-1,16ns,24ns),
+         ENBA & TRN_LH, DELAY(-1,23ns,35ns),
+         ENBA & TRN_HL, DELAY(-1,37ns,55ns),
+         DELAY(-1,39ns,58ns))}
+
+     A6 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,25ns,38ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,26ns,39ns),
+         SELBA & B6!='0 & TRN_LH, DELAY(-1,38ns,57ns),
+         SELBA & B6!='0 & TRN_HL, DELAY(-1,26ns,39ns),
+         SELBA & B6!='1 & TRN_LH, DELAY(-1,34ns,51ns),
+         SELBA & B6!='1 & TRN_HL, DELAY(-1,23ns,35ns),
+         CHANGED(B6,0) & TRN_LH, DELAY(-1,21ns,32ns),
+         CHANGED(B6,0) & TRN_HL, DELAY(-1,16ns,24ns),
+         ENBA & TRN_LH, DELAY(-1,23ns,35ns),
+         ENBA & TRN_HL, DELAY(-1,37ns,55ns),
+         DELAY(-1,39ns,58ns))}
+
+     A7 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,25ns,38ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,26ns,39ns),
+         SELBA & B7!='0 & TRN_LH, DELAY(-1,38ns,57ns),
+         SELBA & B7!='0 & TRN_HL, DELAY(-1,26ns,39ns),
+         SELBA & B7!='1 & TRN_LH, DELAY(-1,34ns,51ns),
+         SELBA & B7!='1 & TRN_HL, DELAY(-1,23ns,35ns),
+         CHANGED(B7,0) & TRN_LH, DELAY(-1,21ns,32ns),
+         CHANGED(B7,0) & TRN_HL, DELAY(-1,16ns,24ns),
+         ENBA & TRN_LH, DELAY(-1,23ns,35ns),
+         ENBA & TRN_HL, DELAY(-1,37ns,55ns),
+         DELAY(-1,39ns,58ns))}
+
+     A8 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,25ns,38ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,26ns,39ns),
+         SELBA & B8!='0 & TRN_LH, DELAY(-1,38ns,57ns),
+         SELBA & B8!='0 & TRN_HL, DELAY(-1,26ns,39ns),
+         SELBA & B8!='1 & TRN_LH, DELAY(-1,34ns,51ns),
+         SELBA & B8!='1 & TRN_HL, DELAY(-1,23ns,35ns),
+         CHANGED(B8,0) & TRN_LH, DELAY(-1,21ns,32ns),
+         CHANGED(B8,0) & TRN_HL, DELAY(-1,16ns,24ns),
+         ENBA & TRN_LH, DELAY(-1,23ns,35ns),
+         ENBA & TRN_HL, DELAY(-1,37ns,55ns),
+         DELAY(-1,39ns,58ns))}

U5DLY PINDLY(8,1,10) DPWR DGND
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     GAB
+     CAB SAB A1 A2 A3 A4 A5 A6 A7 A8
+     B1 B2 B3 B4 B5 B6 B7 B8
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELAB = {CHANGED(SAB,0)}
+     CLOCKAB = {CHANGED_LH(CAB,0)}
+
+  TRISTATE:
+     ENABLE HI=GAB
+     B1 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,15ns,23ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELAB & A1!='0 & TRN_LH, DELAY(-1,32ns,48ns),
+         SELAB & A1!='0 & TRN_HL, DELAY(-1,22ns,33ns),
+         SELAB & A1!='1 & TRN_LH, DELAY(-1,24ns,36ns),
+         SELAB & A1!='1 & TRN_HL, DELAY(-1,20ns,30ns),
+         CHANGED(A1,0) & TRN_LH, DELAY(-1,10ns,18ns),
+         CHANGED(A1,0) & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,19ns,29ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,26ns,39ns),
+         TRN_LZ, DELAY(-1,19ns,29ns),
+         DELAY(-1,33ns,49ns))}
+
+     B2 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,15ns,23ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELAB & A2!='0 & TRN_LH, DELAY(-1,32ns,48ns),
+         SELAB & A2!='0 & TRN_HL, DELAY(-1,22ns,33ns),
+         SELAB & A2!='1 & TRN_LH, DELAY(-1,24ns,36ns),
+         SELAB & A2!='1 & TRN_HL, DELAY(-1,20ns,30ns),
+         CHANGED(A2,0) & TRN_LH, DELAY(-1,10ns,18ns),
+         CHANGED(A2,0) & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,19ns,29ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,26ns,39ns),
+         TRN_LZ, DELAY(-1,19ns,29ns),
+         DELAY(-1,33ns,49ns))}
+
+     B3 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,15ns,23ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELAB & A3!='0 & TRN_LH, DELAY(-1,32ns,48ns),
+         SELAB & A3!='0 & TRN_HL, DELAY(-1,22ns,33ns),
+         SELAB & A3!='1 & TRN_LH, DELAY(-1,24ns,36ns),
+         SELAB & A3!='1 & TRN_HL, DELAY(-1,20ns,30ns),
+         CHANGED(A3,0) & TRN_LH, DELAY(-1,10ns,18ns),
+         CHANGED(A3,0) & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,19ns,29ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,26ns,39ns),
+         TRN_LZ, DELAY(-1,19ns,29ns),
+         DELAY(-1,33ns,49ns))}
+
+     B4 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,15ns,23ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELAB & A4!='0 & TRN_LH, DELAY(-1,32ns,48ns),
+         SELAB & A4!='0 & TRN_HL, DELAY(-1,22ns,33ns),
+         SELAB & A4!='1 & TRN_LH, DELAY(-1,24ns,36ns),
+         SELAB & A4!='1 & TRN_HL, DELAY(-1,20ns,30ns),
+         CHANGED(A4,0) & TRN_LH, DELAY(-1,10ns,18ns),
+         CHANGED(A4,0) & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,19ns,29ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,26ns,39ns),
+         TRN_LZ, DELAY(-1,19ns,29ns),
+         DELAY(-1,33ns,49ns))}
+
+     B5 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,15ns,23ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELAB & A5!='0 & TRN_LH, DELAY(-1,32ns,48ns),
+         SELAB & A5!='0 & TRN_HL, DELAY(-1,22ns,33ns),
+         SELAB & A5!='1 & TRN_LH, DELAY(-1,24ns,36ns),
+         SELAB & A5!='1 & TRN_HL, DELAY(-1,20ns,30ns),
+         CHANGED(A5,0) & TRN_LH, DELAY(-1,10ns,18ns),
+         CHANGED(A5,0) & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,19ns,29ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,26ns,39ns),
+         TRN_LZ, DELAY(-1,19ns,29ns),
+         DELAY(-1,33ns,49ns))}
+
+     B6 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,15ns,23ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELAB & A6!='0 & TRN_LH, DELAY(-1,32ns,48ns),
+         SELAB & A6!='0 & TRN_HL, DELAY(-1,22ns,33ns),
+         SELAB & A6!='1 & TRN_LH, DELAY(-1,24ns,36ns),
+         SELAB & A6!='1 & TRN_HL, DELAY(-1,20ns,30ns),
+         CHANGED(A6,0) & TRN_LH, DELAY(-1,10ns,18ns),
+         CHANGED(A6,0) & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,19ns,29ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,26ns,39ns),
+         TRN_LZ, DELAY(-1,19ns,29ns),
+         DELAY(-1,33ns,49ns))}
+
+     B7 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,15ns,23ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELAB & A7!='0 & TRN_LH, DELAY(-1,32ns,48ns),
+         SELAB & A7!='0 & TRN_HL, DELAY(-1,22ns,33ns),
+         SELAB & A7!='1 & TRN_LH, DELAY(-1,24ns,36ns),
+         SELAB & A7!='1 & TRN_HL, DELAY(-1,20ns,30ns),
+         CHANGED(A7,0) & TRN_LH, DELAY(-1,10ns,18ns),
+         CHANGED(A7,0) & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,19ns,29ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,26ns,39ns),
+         TRN_LZ, DELAY(-1,19ns,29ns),
+         DELAY(-1,33ns,49ns))}
+
+     B8 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,15ns,23ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELAB & A8!='0 & TRN_LH, DELAY(-1,32ns,48ns),
+         SELAB & A8!='0 & TRN_HL, DELAY(-1,22ns,33ns),
+         SELAB & A8!='1 & TRN_LH, DELAY(-1,24ns,36ns),
+         SELAB & A8!='1 & TRN_HL, DELAY(-1,20ns,30ns),
+         CHANGED(A8,0) & TRN_LH, DELAY(-1,10ns,18ns),
+         CHANGED(A8,0) & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,19ns,29ns),
+         TRN_ZL, DELAY(-1,25ns,38ns),
+         TRN_HZ, DELAY(-1,26ns,39ns),
+         TRN_LZ, DELAY(-1,19ns,29ns),
+         DELAY(-1,33ns,49ns))}

U6CON CONSTRAINT(20) DPWR DGND
+     CAB CBA A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 GAB GBABAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CAB
+     MIN_HI=15ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=CBA
+     MIN_HI=15ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=A1
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A2
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A3
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A4
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A5
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A6
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A7
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A8
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=B1
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B2
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B3
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B4
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B5
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B6
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B7
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B8
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GBABAR=='0}
+
+  SETUP_HOLD:
+     CLOCK LH=CAB
+     DATA(8)=A1 A2 A3 A4 A5 A6 A7 A8
+     SETUPTIME=15ns
+
+  SETUP_HOLD:
+     CLOCK LH=CBA
+     DATA(8)=B1 B2 B3 B4 B5 B6 B7 B8
+     SETUPTIME=15ns

.ENDS 74LS653

*------------------------------------------------------------74AC654-----

* Octal Bus Transceiver/Register, Tri-State (B Side) and Open Drain (A Side)
* Harris Answer Fax, Document # 1975
* jat 9/10/96

.SUBCKT 74AC654 A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 OEAB
+ OEBABAR CBA CAB SBA SAB
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(35,16) DPWR DGND
+ SBA SAB A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 OEBABAR
+ QA0 QA1 QA2 QA3 QA4 QA5 QA6 QA7 QB0 QB1 QB2 QB3 QB4 QB5 QB6 QB7
+ A0O A1O A2O A3O A4O A5O A6O A7O B0O B1O B2O B3O B4O B5O B6O B7O
+ D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   A0O = {OEBABAR | ((QB0 & SBA) | (B0 & ~SBA))}
+   A1O = {OEBABAR | ((QB1 & SBA) | (B1 & ~SBA))}
+   A2O = {OEBABAR | ((QB2 & SBA) | (B2 & ~SBA))}
+   A3O = {OEBABAR | ((QB3 & SBA) | (B3 & ~SBA))}
+   A4O = {OEBABAR | ((QB4 & SBA) | (B4 & ~SBA))}
+   A5O = {OEBABAR | ((QB5 & SBA) | (B5 & ~SBA))}
+   A6O = {OEBABAR | ((QB6 & SBA) | (B6 & ~SBA))}
+   A7O = {OEBABAR | ((QB7 & SBA) | (B7 & ~SBA))}
+   B0O = {((QA0 & SAB) | (A0 & ~SAB))}
+   B1O = {((QA1 & SAB) | (A1 & ~SAB))}
+   B2O = {((QA2 & SAB) | (A2 & ~SAB))}
+   B3O = {((QA3 & SAB) | (A3 & ~SAB))}
+   B4O = {((QA4 & SAB) | (A4 & ~SAB))}
+   B5O = {((QA5 & SAB) | (A5 & ~SAB))}
+   B6O = {((QA6 & SAB) | (A6 & ~SAB))}
+   B7O = {((QA7 & SAB) | (A7 & ~SAB))}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CAB
+ A0 A1 A2 A3 A4 A5 A6 A7
+ QA0 QA1 QA2 QA3 QA4 QA5 QA6 QA7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(8) DPWR DGND
+ $D_HI $D_HI CBA
+ B0 B1 B2 B3 B4 B5 B6 B7
+ QB0 QB1 QB2 QB3 QB4 QB5 QB6 QB7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(8,0,11) DPWR DGND
+ A0O A1O A2O A3O A4O A5O A6O A7O
+ OEBABAR B0 B1 B2 B3 B4 B5 B6 B7 CBA SBA
+ A0 A1 A2 A3 A4 A5 A6 A7
+ IO_AC_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SELBA = {CHANGED(SBA,0)}
+   BDATA = {CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) |
+            CHANGED(B4,0) | CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0)}
+   BAEDGE = {CHANGED_LH(CBA,0)}
+   ENABS = {CHANGED(OEBABAR,0)}
+ PINDLY:
+   A0 A1 A2 A3 A4 A5 A6 A7 = {
+      CASE(
+        ENABS & (TRN_LH | TRN_HL), DELAY(3.5NS,-1,12.3NS),
+        SELBA & TRN_LH, DELAY(3.4NS,-1,11.9NS),
+        SELBA & TRN_HL, DELAY(3.1NS,-1,10.9NS),
+        BAEDGE & TRN_LH, DELAY(3.8NS,-1,13.3NS),
+        BAEDGE & TRN_HL, DELAY(3.5NS,-1,12.3NS),
+        BDATA & TRN_LH, DELAY(3.1NS,-1,11NS),
+        BDATA & TRN_HL, DELAY(2.8NS,-1,10NS),
+        DELAY(4.8NS,-1,14.3NS))}

U5 PINDLY(8,1,10) DPWR DGND
+ B0O B1O B2O B3O B4O B5O B6O B7O
+ OEAB
+ A0 A1 A2 A3 A4 A5 A6 A7 CAB SAB
+ B0 B1 B2 B3 B4 B5 B6 B7
+ IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SELAB = {CHANGED(SAB,0)}
+   ADATA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) |
+            CHANGED(A4,0) | CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0)}
+   ABEDGE = {CHANGED_LH(CAB,0)}
+ TRISTATE:
+ ENABLE HI = OEAB
+   B0 B1 B2 B3 B4 B5 B6 B7 = {
+      CASE(
+        TRN_Z$, DELAY(3.5NS,-1,12.3NS),
+        TRN_$Z, DELAY(3.5NS,-1,12.3NS),
+        SELAB & (TRN_LH | TRN_HL), DELAY(3.1NS,-1,10.9NS),
+        ABEDGE & (TRN_HL | TRN_LH), DELAY(3.5NS,-1,12.3NS),
+        ADATA & (TRN_LH | TRN_HL), DELAY(2.8NS,-1,10NS),
+        DELAY(4.4NS,-1,13.3NS))}

U6 CONSTRAINT(18) DPWR DGND
+ A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 CAB CBA
+ IO_AC IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE =CAB
+  MAXFREQ = 143MEG
+ FREQ:
+  NODE = CBA
+  MAXFREQ = 143MEG
+ WIDTH:
+  NODE = CAB
+  MIN_LO = 3.5NS
+  MIN_HI = 3.5NS
+ WIDTH:
+  NODE = CBA
+  MIN_LO = 3.5NS
+  MIN_HI = 3.5NS
+ SETUP_HOLD:
+  CLOCK LH = CAB
+  DATA(8) = A0 A1 A2 A3 A4 A5 A6 A7
+  SETUPTIME = 2.2NS
+  HOLDTIME = 2NS
+ SETUP_HOLD:
+  CLOCK LH = CBA
+  DATA(8) = B0 B1 B2 B3 B4 B5 B6 B7
+  SETUPTIME = 2.2NS
+  HOLDTIME = 2NS

.ENDS 74AC654

*------------------------------------------------------------74ACT654-----

* Octal Bus Transceiver/Register, Tri-State (B Side) and Open Drain (A Side)
* Harris Answer Fax, Document # 1975
* jat 9/10/96

.SUBCKT 74ACT654 A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 OEAB
+ OEBABAR CBA CAB SBA SAB
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(35,16) DPWR DGND
+ SBA SAB A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 OEBABAR
+ QA0 QA1 QA2 QA3 QA4 QA5 QA6 QA7 QB0 QB1 QB2 QB3 QB4 QB5 QB6 QB7
+ A0O A1O A2O A3O A4O A5O A6O A7O B0O B1O B2O B3O B4O B5O B6O B7O
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   A0O = {OEBABAR | ((QB0 & SBA) | (B0 & ~SBA))}
+   A1O = {OEBABAR | ((QB1 & SBA) | (B1 & ~SBA))}
+   A2O = {OEBABAR | ((QB2 & SBA) | (B2 & ~SBA))}
+   A3O = {OEBABAR | ((QB3 & SBA) | (B3 & ~SBA))}
+   A4O = {OEBABAR | ((QB4 & SBA) | (B4 & ~SBA))}
+   A5O = {OEBABAR | ((QB5 & SBA) | (B5 & ~SBA))}
+   A6O = {OEBABAR | ((QB6 & SBA) | (B6 & ~SBA))}
+   A7O = {OEBABAR | ((QB7 & SBA) | (B7 & ~SBA))}
+   B0O = {((QA0 & SAB) | (A0 & ~SAB))}
+   B1O = {((QA1 & SAB) | (A1 & ~SAB))}
+   B2O = {((QA2 & SAB) | (A2 & ~SAB))}
+   B3O = {((QA3 & SAB) | (A3 & ~SAB))}
+   B4O = {((QA4 & SAB) | (A4 & ~SAB))}
+   B5O = {((QA5 & SAB) | (A5 & ~SAB))}
+   B6O = {((QA6 & SAB) | (A6 & ~SAB))}
+   B7O = {((QA7 & SAB) | (A7 & ~SAB))}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CAB
+ A0 A1 A2 A3 A4 A5 A6 A7
+ QA0 QA1 QA2 QA3 QA4 QA5 QA6 QA7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(8) DPWR DGND
+ $D_HI $D_HI CBA
+ B0 B1 B2 B3 B4 B5 B6 B7
+ QB0 QB1 QB2 QB3 QB4 QB5 QB6 QB7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(8,0,11) DPWR DGND
+ A0O A1O A2O A3O A4O A5O A6O A7O
+ OEBABAR B0 B1 B2 B3 B4 B5 B6 B7 CBA SBA
+ A0 A1 A2 A3 A4 A5 A6 A7
+ IO_ACT_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SELBA = {CHANGED(SBA,0)}
+   BDATA = {CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) |
+            CHANGED(B4,0) | CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0)}
+   BAEDGE = {CHANGED_LH(CBA,0)}
+   ENABS = {CHANGED(OEBABAR,0)}
+ PINDLY:
+   A0 A1 A2 A3 A4 A5 A6 A7 = {
+      CASE(
+        ENABS & (TRN_LH | TRN_HL), DELAY(4NS,-1,14.1NS),
+        SELBA & TRN_LH, DELAY(4.3NS,-1,15.1NS),
+        SELBA & TRN_HL, DELAY(4NS,-1,14.1NS),
+        BAEDGE & TRN_LH, DELAY(4.3NS,-1,15.1NS),
+        BAEDGE & TRN_HL, DELAY(4NS,-1,14.1NS),
+        BDATA & TRN_LH, DELAY(3.5NS,-1,12.4NS),
+        BDATA & TRN_HL, DELAY(3.2NS,-1,11.4NS),
+        DELAY(5.3NS,-1,16.1NS))}

U5 PINDLY(8,1,10) DPWR DGND
+ B0O B1O B2O B3O B4O B5O B6O B7O
+ OEAB
+ A0 A1 A2 A3 A4 A5 A6 A7 CAB SAB
+ B0 B1 B2 B3 B4 B5 B6 B7
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SELAB = {CHANGED(SAB,0)}
+   ADATA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) |
+            CHANGED(A4,0) | CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0)}
+   ABEDGE = {CHANGED_LH(CAB,0)}
+ TRISTATE:
+ ENABLE HI = OEAB
+   B0 B1 B2 B3 B4 B5 B6 B7 = {
+      CASE(
+        TRN_Z$, DELAY(4NS,-1,14.1NS),
+        TRN_$Z, DELAY(4NS,-1,14.1NS),
+        SELAB & (TRN_LH | TRN_HL), DELAY(3.7NS,-1,13.2NS),
+        ABEDGE & (TRN_HL | TRN_LH), DELAY(4NS,-1,14.1NS),
+        ADATA & (TRN_LH | TRN_HL), DELAY(3.2NS,-1,11.4NS),
+        DELAY(5NS,-1,15.1NS))}

U6 CONSTRAINT(18) DPWR DGND
+ A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 CAB CBA
+ IO_ACT IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE =CAB
+  MAXFREQ = 125MEG
+ FREQ:
+  NODE = CBA
+  MAXFREQ = 125MEG
+ WIDTH:
+  NODE = CAB
+  MIN_LO = 3.9NS
+  MIN_HI = 3.9NS
+ WIDTH:
+  NODE = CBA
+  MIN_LO = 3.9NS
+  MIN_HI = 3.9NS
+ SETUP_HOLD:
+  CLOCK LH = CAB
+  DATA(8) = A0 A1 A2 A3 A4 A5 A6 A7
+  SETUPTIME = 2.2NS
+  HOLDTIME = 2NS
+ SETUP_HOLD:
+  CLOCK LH = CBA
+  DATA(8) = B0 B1 B2 B3 B4 B5 B6 B7
+  SETUPTIME = 2.2NS
+  HOLDTIME = 2NS

.ENDS 74ACT654

* ----------------------------------------------------------- 74ALS654 ------
*  Octal Bus Transceivers And Registers
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-547 to 2-558
*  bss    5/23/94
*
.SUBCKT 74ALS654 GBABAR GAB CBA SBA CAB SAB A1 A2 A3 A4 A5 A6 A7 A8
+     B1 B2 B3 B4 B5 B6 B7 B8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CBA
+     B1 B2 B3 B4 B5 B6 B7 B8
+     QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CAB
+     A1 A2 A3 A4 A5 A6 A7 A8
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(35,16) DPWR DGND
+     SBA SAB A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 GBABAR
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8 QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbabar = {~SBA}
+     sabbar = {~SAB}
+     A1_OC = {((SBA & QB1) | (sbabar & B1))}
+     A2_OC = {((SBA & QB2) | (sbabar & B2))}
+     A3_OC = {((SBA & QB3) | (sbabar & B3))}
+     A4_OC = {((SBA & QB4) | (sbabar & B4))}
+     A5_OC = {((SBA & QB5) | (sbabar & B5))}
+     A6_OC = {((SBA & QB6) | (sbabar & B6))}
+     A7_OC = {((SBA & QB7) | (sbabar & B7))}
+     A8_OC = {((SBA & QB8) | (sbabar & B8))}
+     B1_O = {((SAB & QA1) | (sabbar & A1))}
+     B2_O = {((SAB & QA2) | (sabbar & A2))}
+     B3_O = {((SAB & QA3) | (sabbar & A3))}
+     B4_O = {((SAB & QA4) | (sabbar & A4))}
+     B5_O = {((SAB & QA5) | (sabbar & A5))}
+     B6_O = {((SAB & QA6) | (sabbar & A6))}
+     B7_O = {((SAB & QA7) | (sabbar & A7))}
+     B8_O = {((SAB & QA8) | (sabbar & A8))}
+     A1_O = {(A1_OC | GBABAR)}
+     A2_O = {(A2_OC | GBABAR)}
+     A3_O = {(A3_OC | GBABAR)}
+     A4_O = {(A4_OC | GBABAR)}
+     A5_O = {(A5_OC | GBABAR)}
+     A6_O = {(A6_OC | GBABAR)}
+     A7_O = {(A7_OC | GBABAR)}
+     A8_O = {(A8_OC | GBABAR)}

U4DLY PINDLY(8,0,11) DPWR DGND
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O 
+     CBA SBA GBABAR B1 B2 B3 B4 B5 B6 B7 B8
+     A1 A2 A3 A4 A5 A6 A7 A8
+     IO_ALS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELBA = {CHANGED(SBA,0)}
+     CLOCKBA = {CHANGED_LH(CBA,0)}
+     ENBA = {CHANGED(GBABAR,0)}
+
+  PINDLY:
+     A1 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,30ns,50ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & TRN_LH, DELAY(-1,35ns,50ns),
+         SELBA & TRN_HL, DELAY(-1,15ns,22ns),
+         CHANGED(B1,0) & TRN_LH, DELAY(-1,20ns,44ns),
+         CHANGED(B1,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         ENBA & TRN_LH, DELAY(-1,17ns,23ns),
+         ENBA & TRN_HL, DELAY(-1,14ns,20ns),
+         DELAY(-1,36ns,51ns))}
+
+     A2 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,30ns,50ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & TRN_LH, DELAY(-1,35ns,50ns),
+         SELBA & TRN_HL, DELAY(-1,15ns,22ns),
+         CHANGED(B2,0) & TRN_LH, DELAY(-1,20ns,44ns),
+         CHANGED(B2,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         ENBA & TRN_LH, DELAY(-1,17ns,23ns),
+         ENBA & TRN_HL, DELAY(-1,14ns,20ns),
+         DELAY(-1,36ns,51ns))}
+
+     A3 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,30ns,50ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & TRN_LH, DELAY(-1,35ns,50ns),
+         SELBA & TRN_HL, DELAY(-1,15ns,22ns),
+         CHANGED(B3,0) & TRN_LH, DELAY(-1,20ns,44ns),
+         CHANGED(B3,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         ENBA & TRN_LH, DELAY(-1,17ns,23ns),
+         ENBA & TRN_HL, DELAY(-1,14ns,20ns),
+         DELAY(-1,36ns,51ns))}
+
+     A4 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,30ns,50ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & TRN_LH, DELAY(-1,35ns,50ns),
+         SELBA & TRN_HL, DELAY(-1,15ns,22ns),
+         CHANGED(B4,0) & TRN_LH, DELAY(-1,20ns,44ns),
+         CHANGED(B4,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         ENBA & TRN_LH, DELAY(-1,17ns,23ns),
+         ENBA & TRN_HL, DELAY(-1,14ns,20ns),
+         DELAY(-1,36ns,51ns))}
+
+     A5 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,30ns,50ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & TRN_LH, DELAY(-1,35ns,50ns),
+         SELBA & TRN_HL, DELAY(-1,15ns,22ns),
+         CHANGED(B5,0) & TRN_LH, DELAY(-1,20ns,44ns),
+         CHANGED(B5,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         ENBA & TRN_LH, DELAY(-1,17ns,23ns),
+         ENBA & TRN_HL, DELAY(-1,14ns,20ns),
+         DELAY(-1,36ns,51ns))}
+
+     A6 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,30ns,50ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & TRN_LH, DELAY(-1,35ns,50ns),
+         SELBA & TRN_HL, DELAY(-1,15ns,22ns),
+         CHANGED(B6,0) & TRN_LH, DELAY(-1,20ns,44ns),
+         CHANGED(B6,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         ENBA & TRN_LH, DELAY(-1,17ns,23ns),
+         ENBA & TRN_HL, DELAY(-1,14ns,20ns),
+         DELAY(-1,36ns,51ns))}
+
+     A7 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,30ns,50ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & TRN_LH, DELAY(-1,35ns,50ns),
+         SELBA & TRN_HL, DELAY(-1,15ns,22ns),
+         CHANGED(B7,0) & TRN_LH, DELAY(-1,20ns,44ns),
+         CHANGED(B7,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         ENBA & TRN_LH, DELAY(-1,17ns,23ns),
+         ENBA & TRN_HL, DELAY(-1,14ns,20ns),
+         DELAY(-1,36ns,51ns))}
+
+     A8 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,30ns,50ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELBA & TRN_LH, DELAY(-1,35ns,50ns),
+         SELBA & TRN_HL, DELAY(-1,15ns,22ns),
+         CHANGED(B8,0) & TRN_LH, DELAY(-1,20ns,44ns),
+         CHANGED(B8,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         ENBA & TRN_LH, DELAY(-1,17ns,23ns),
+         ENBA & TRN_HL, DELAY(-1,14ns,20ns),
+         DELAY(-1,36ns,51ns))}

U5DLY PINDLY(8,1,10) DPWR DGND
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     GAB
+     CAB SAB A1 A2 A3 A4 A5 A6 A7 A8
+     B1 B2 B3 B4 B5 B6 B7 B8
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELAB = {CHANGED(SAB,0)}
+     CLOCKAB = {CHANGED_LH(CAB,0)}
+
+  TRISTATE:
+     ENABLE HI=GAB
+     B1 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A1!='0 & TRN_LH, DELAY(-1,18ns,22ns),
+         SELAB & A1!='0 & TRN_HL, DELAY(-1,13ns,19ns),
+         SELAB & A1!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A1!='1 & TRN_HL, DELAY(-1,13ns,18ns),
+         CHANGED(A1,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A1,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,13ns,17ns),
+         TRN_HZ, DELAY(-1,8ns,12ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B2 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A2!='0 & TRN_LH, DELAY(-1,18ns,22ns),
+         SELAB & A2!='0 & TRN_HL, DELAY(-1,13ns,19ns),
+         SELAB & A2!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A2!='1 & TRN_HL, DELAY(-1,13ns,18ns),
+         CHANGED(A2,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A2,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,13ns,17ns),
+         TRN_HZ, DELAY(-1,8ns,12ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B3 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A3!='0 & TRN_LH, DELAY(-1,18ns,22ns),
+         SELAB & A3!='0 & TRN_HL, DELAY(-1,13ns,19ns),
+         SELAB & A3!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A3!='1 & TRN_HL, DELAY(-1,13ns,18ns),
+         CHANGED(A3,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A3,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,13ns,17ns),
+         TRN_HZ, DELAY(-1,8ns,12ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B4 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A4!='0 & TRN_LH, DELAY(-1,18ns,22ns),
+         SELAB & A4!='0 & TRN_HL, DELAY(-1,13ns,19ns),
+         SELAB & A4!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A4!='1 & TRN_HL, DELAY(-1,13ns,18ns),
+         CHANGED(A4,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A4,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,13ns,17ns),
+         TRN_HZ, DELAY(-1,8ns,12ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B5 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A5!='0 & TRN_LH, DELAY(-1,18ns,22ns),
+         SELAB & A5!='0 & TRN_HL, DELAY(-1,13ns,19ns),
+         SELAB & A5!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A5!='1 & TRN_HL, DELAY(-1,13ns,18ns),
+         CHANGED(A5,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A5,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,13ns,17ns),
+         TRN_HZ, DELAY(-1,8ns,12ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B6 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A6!='0 & TRN_LH, DELAY(-1,18ns,22ns),
+         SELAB & A6!='0 & TRN_HL, DELAY(-1,13ns,19ns),
+         SELAB & A6!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A6!='1 & TRN_HL, DELAY(-1,13ns,18ns),
+         CHANGED(A6,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A6,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,13ns,17ns),
+         TRN_HZ, DELAY(-1,8ns,12ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B7 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A7!='0 & TRN_LH, DELAY(-1,18ns,22ns),
+         SELAB & A7!='0 & TRN_HL, DELAY(-1,13ns,19ns),
+         SELAB & A7!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A7!='1 & TRN_HL, DELAY(-1,13ns,18ns),
+         CHANGED(A7,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A7,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,13ns,17ns),
+         TRN_HZ, DELAY(-1,8ns,12ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}
+
+     B8 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,20ns,25ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,11ns,15ns),
+         SELAB & A8!='0 & TRN_LH, DELAY(-1,18ns,22ns),
+         SELAB & A8!='0 & TRN_HL, DELAY(-1,13ns,19ns),
+         SELAB & A8!='1 & TRN_LH, DELAY(-1,24ns,32ns),
+         SELAB & A8!='1 & TRN_HL, DELAY(-1,13ns,18ns),
+         CHANGED(A8,0) & TRN_LH, DELAY(-1,11ns,15ns),
+         CHANGED(A8,0) & TRN_HL, DELAY(-1,10ns,13ns),
+         TRN_ZH, DELAY(-1,15ns,20ns),
+         TRN_ZL, DELAY(-1,13ns,17ns),
+         TRN_HZ, DELAY(-1,8ns,12ns),
+         TRN_LZ, DELAY(-1,10ns,13ns),
+         DELAY(-1,25ns,33ns))}

U6CON CONSTRAINT(18) DPWR DGND
+     CAB CBA A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CAB
+     MAXFREQ=35MEG
+
+  FREQ:
+     NODE=CBA
+     MAXFREQ=35MEG
+
+  WIDTH:
+     NODE=CAB
+     MIN_HI=14.5ns
+     MIN_LO=14.5ns
+
+  WIDTH:
+     NODE=CBA
+     MIN_HI=14.5ns
+     MIN_LO=14.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CAB
+     DATA(8)=A1 A2 A3 A4 A5 A6 A7 A8
+     SETUPTIME=10ns
+
+  SETUP_HOLD:
+     CLOCK LH=CBA
+     DATA(8)=B1 B2 B3 B4 B5 B6 B7 B8
+     SETUPTIME=10ns

.ENDS 74ALS654
*
*
* ----------------------------------------------------------- 74F654 ------
*  Octal Transceiver/Register, Inverting
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 660 to 667
*  bss    5/23/94
*
.SUBCKT 74F654 OEBABAR OEAB CPBA SBA CPAB SAB A0 A1 A2 A3 A4 A5 A6 A7
+     B0 B1 B2 B3 B4 B5 B6 B7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CPBA
+     B0 B1 B2 B3 B4 B5 B6 B7
+     QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CPAB
+     A0 A1 A2 A3 A4 A5 A6 A7
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(35,16) DPWR DGND
+     SBA SAB A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 OEBABAR
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8 QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     A0_O A1_O A2_O A3_O A4_O A5_O A6_O A7_O
+     B0_O B1_O B2_O B3_O B4_O B5_O B6_O B7_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbabar = {~SBA}
+     sabbar = {~SAB}
+     A0_OC = {((SBA & QB1) | (sbabar & B0))}
+     A1_OC = {((SBA & QB2) | (sbabar & B1))}
+     A2_OC = {((SBA & QB3) | (sbabar & B2))}
+     A3_OC = {((SBA & QB4) | (sbabar & B3))}
+     A4_OC = {((SBA & QB5) | (sbabar & B4))}
+     A5_OC = {((SBA & QB6) | (sbabar & B5))}
+     A6_OC = {((SBA & QB7) | (sbabar & B6))}
+     A7_OC = {((SBA & QB8) | (sbabar & B7))}
+     B0_O = {((SAB & QA1) | (sabbar & A0))}
+     B1_O = {((SAB & QA2) | (sabbar & A1))}
+     B2_O = {((SAB & QA3) | (sabbar & A2))}
+     B3_O = {((SAB & QA4) | (sabbar & A3))}
+     B4_O = {((SAB & QA5) | (sabbar & A4))}
+     B5_O = {((SAB & QA6) | (sabbar & A5))}
+     B6_O = {((SAB & QA7) | (sabbar & A6))}
+     B7_O = {((SAB & QA8) | (sabbar & A7))}
+     A0_O = {(A0_OC | OEBABAR)}
+     A1_O = {(A1_OC | OEBABAR)}
+     A2_O = {(A2_OC | OEBABAR)}
+     A3_O = {(A3_OC | OEBABAR)}
+     A4_O = {(A4_OC | OEBABAR)}
+     A5_O = {(A5_OC | OEBABAR)}
+     A6_O = {(A6_OC | OEBABAR)}
+     A7_O = {(A7_OC | OEBABAR)}

U4DLY PINDLY(8,0,11) DPWR DGND
+     A0_O A1_O A2_O A3_O A4_O A5_O A6_O A7_O
+     CPBA SBA OEBABAR B0 B1 B2 B3 B4 B5 B6 B7
+     A0 A1 A2 A3 A4 A5 A6 A7
+     IO_F_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELBA = {CHANGED(SBA,0)}
+     CLOCKBA = {CHANGED_LH(CPBA,0)}
+     DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+            CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B0,0)}
+     ENBA = {CHANGED(OEBABAR,0)}
+
+  PINDLY:
+     A0 A1 A2 A3 A4 A5 A6 A7 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(6ns,14.5ns,19ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(6ns,8ns,11ns),
+         SELBA & TRN_LH, DELAY(5ns,15ns,18.5ns),
+         SELBA & TRN_HL, DELAY(5ns,7.5ns,10.5ns),
+         DATAB & TRN_LH, DELAY(4.5ns,14ns,18.5ns),
+         DATAB & TRN_HL, DELAY(4.5ns,7ns,10ns),
+         ENBA & TRN_LH, DELAY(6.5ns,16ns,20ns),
+         ENBA & TRN_HL, DELAY(6.5ns,10ns,12.5ns),
+         DELAY(7.5ns,17ns,21ns))}

U5DLY PINDLY(8,1,10) DPWR DGND
+     B0_O B1_O B2_O B3_O B4_O B5_O B6_O B7_O
+     OEAB
+     CPAB SAB A0 A1 A2 A3 A4 A5 A6 A7
+     B0 B1 B2 B3 B4 B5 B6 B7
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELAB = {CHANGED(SAB,0)}
+     CLOCKAB = {CHANGED_LH(CPAB,0)}
+     DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+            CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A0,0)}
+
+  TRISTATE:
+     ENABLE HI=OEAB
+     B0 B1 B2 B3 B4 B5 B6 B7 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(5.5ns,7.5ns,10.5ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(5.5ns,8ns,10.5ns),
+         SELAB & TRN_LH, DELAY(5ns,7ns,10ns),
+         SELAB & TRN_HL, DELAY(5ns,7ns,10ns),
+         DATAA & TRN_LH, DELAY(4ns,6ns,9.5ns),
+         DATAA & TRN_HL, DELAY(4ns,6.5ns,9.5ns),
+         TRN_ZH, DELAY(4.5ns,6.5ns,9.5ns),
+         TRN_ZL, DELAY(6ns,8ns,11ns),
+         TRN_HZ, DELAY(6.5ns,9.5ns,13ns),
+         TRN_LZ, DELAY(6ns,9ns,12ns),
+         DELAY(7ns,10ns,14ns))}

U6CON CONSTRAINT(20) DPWR DGND
+     CPAB CPBA A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 OEBABAR OEAB
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CPAB
+     MIN_HI=4.5ns
+     MIN_LO=6.5ns
+
+  WIDTH:
+     NODE=CPBA
+     MIN_HI=4.5ns
+     MIN_LO=6.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CPAB
+     DATA(8)=A0 A1 A2 A3 A4 A5 A6 A7
+     SETUPTIME_HI=5.5ns
+     SETUPTIME_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CPBA
+     DATA(8)=B0 B1 B2 B3 B4 B5 B6 B7
+     SETUPTIME_HI=5.5ns
+     SETUPTIME_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK HL=OEBABAR
+     DATA(1)=OEAB
+     SETUPTIME_LO=5ns
+
+  SETUP_HOLD:
+     CLOCK LH=OEAB
+     DATA(1)=OEBABAR
+     SETUPTIME_HI=5ns

.ENDS 74F654
*
*
* ----------------------------------------------------------- 74LS654 ------
*  Octal Bus Transceivers And Registers
*
*  TI TTL Data Book Volume 2, 1985, pages 3-1251 to 3-1258
*  bss    5/23/94
*
.SUBCKT 74LS654 GBABAR GAB CBA SBA CAB SAB A1 A2 A3 A4 A5 A6 A7 A8
+     B1 B2 B3 B4 B5 B6 B7 B8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(8) DPWR DGND
+     $D_HI $D_HI CBA
+     B1 B2 B3 B4 B5 B6 B7 B8
+     QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI $D_HI CAB
+     A1 A2 A3 A4 A5 A6 A7 A8
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(35,16) DPWR DGND
+     SBA SAB A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 GBABAR
+     QA1 QA2 QA3 QA4 QA5 QA6 QA7 QA8 QB1 QB2 QB3 QB4 QB5 QB6 QB7 QB8
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     sbabar = {~SBA}
+     sabbar = {~SAB}
+     A1_OC = {((SBA & QB1) | (sbabar & B1))}
+     A2_OC = {((SBA & QB2) | (sbabar & B2))}
+     A3_OC = {((SBA & QB3) | (sbabar & B3))}
+     A4_OC = {((SBA & QB4) | (sbabar & B4))}
+     A5_OC = {((SBA & QB5) | (sbabar & B5))}
+     A6_OC = {((SBA & QB6) | (sbabar & B6))}
+     A7_OC = {((SBA & QB7) | (sbabar & B7))}
+     A8_OC = {((SBA & QB8) | (sbabar & B8))}
+     B1_O = {((SAB & QA1) | (sabbar & A1))}
+     B2_O = {((SAB & QA2) | (sabbar & A2))}
+     B3_O = {((SAB & QA3) | (sabbar & A3))}
+     B4_O = {((SAB & QA4) | (sabbar & A4))}
+     B5_O = {((SAB & QA5) | (sabbar & A5))}
+     B6_O = {((SAB & QA6) | (sabbar & A6))}
+     B7_O = {((SAB & QA7) | (sabbar & A7))}
+     B8_O = {((SAB & QA8) | (sabbar & A8))}
+     A1_O = {(A1_OC | GBABAR)}
+     A2_O = {(A2_OC | GBABAR)}
+     A3_O = {(A3_OC | GBABAR)}
+     A4_O = {(A4_OC | GBABAR)}
+     A5_O = {(A5_OC | GBABAR)}
+     A6_O = {(A6_OC | GBABAR)}
+     A7_O = {(A7_OC | GBABAR)}
+     A8_O = {(A8_OC | GBABAR)}

U4DLY PINDLY(8,0,11) DPWR DGND
+     A1_O A2_O A3_O A4_O A5_O A6_O A7_O A8_O 
+     CBA SBA GBABAR B1 B2 B3 B4 B5 B6 B7 B8
+     A1 A2 A3 A4 A5 A6 A7 A8
+     IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELBA = {CHANGED(SBA,0)}
+     CLOCKBA = {CHANGED_LH(CBA,0)}
+     ENBA = {CHANGED(GBABAR,0)}
+
+  PINDLY:
+     A1 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,22ns,33ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELBA & B1!='0 & TRN_LH, DELAY(-1,32ns,48ns),
+         SELBA & B1!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELBA & B1!='1 & TRN_LH, DELAY(-1,36ns,54ns),
+         SELBA & B1!='1 & TRN_HL, DELAY(-1,19ns,29ns),
+         CHANGED(B1,0) & TRN_LH, DELAY(-1,18ns,27ns),
+         CHANGED(B1,0) & TRN_HL, DELAY(-1,14ns,21ns),
+         ENBA & TRN_LH, DELAY(-1,23ns,35ns),
+         ENBA & TRN_HL, DELAY(-1,35ns,53ns),
+         DELAY(-1,37ns,55ns))}
+
+     A2 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,22ns,33ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELBA & B2!='0 & TRN_LH, DELAY(-1,32ns,48ns),
+         SELBA & B2!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELBA & B2!='1 & TRN_LH, DELAY(-1,36ns,54ns),
+         SELBA & B2!='1 & TRN_HL, DELAY(-1,19ns,29ns),
+         CHANGED(B2,0) & TRN_LH, DELAY(-1,18ns,27ns),
+         CHANGED(B2,0) & TRN_HL, DELAY(-1,14ns,21ns),
+         ENBA & TRN_LH, DELAY(-1,23ns,35ns),
+         ENBA & TRN_HL, DELAY(-1,35ns,53ns),
+         DELAY(-1,37ns,55ns))}
+
+     A3 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,22ns,33ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELBA & B3!='0 & TRN_LH, DELAY(-1,32ns,48ns),
+         SELBA & B3!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELBA & B3!='1 & TRN_LH, DELAY(-1,36ns,54ns),
+         SELBA & B3!='1 & TRN_HL, DELAY(-1,19ns,29ns),
+         CHANGED(B3,0) & TRN_LH, DELAY(-1,18ns,27ns),
+         CHANGED(B3,0) & TRN_HL, DELAY(-1,14ns,21ns),
+         ENBA & TRN_LH, DELAY(-1,23ns,35ns),
+         ENBA & TRN_HL, DELAY(-1,35ns,53ns),
+         DELAY(-1,37ns,55ns))}
+
+     A4 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,22ns,33ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELBA & B4!='0 & TRN_LH, DELAY(-1,32ns,48ns),
+         SELBA & B4!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELBA & B4!='1 & TRN_LH, DELAY(-1,36ns,54ns),
+         SELBA & B4!='1 & TRN_HL, DELAY(-1,19ns,29ns),
+         CHANGED(B4,0) & TRN_LH, DELAY(-1,18ns,27ns),
+         CHANGED(B4,0) & TRN_HL, DELAY(-1,14ns,21ns),
+         ENBA & TRN_LH, DELAY(-1,23ns,35ns),
+         ENBA & TRN_HL, DELAY(-1,35ns,53ns),
+         DELAY(-1,37ns,55ns))}
+
+     A5 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,22ns,33ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELBA & B5!='0 & TRN_LH, DELAY(-1,32ns,48ns),
+         SELBA & B5!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELBA & B5!='1 & TRN_LH, DELAY(-1,36ns,54ns),
+         SELBA & B5!='1 & TRN_HL, DELAY(-1,19ns,29ns),
+         CHANGED(B5,0) & TRN_LH, DELAY(-1,18ns,27ns),
+         CHANGED(B5,0) & TRN_HL, DELAY(-1,14ns,21ns),
+         ENBA & TRN_LH, DELAY(-1,23ns,35ns),
+         ENBA & TRN_HL, DELAY(-1,35ns,53ns),
+         DELAY(-1,37ns,55ns))}
+
+     A6 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,22ns,33ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELBA & B6!='0 & TRN_LH, DELAY(-1,32ns,48ns),
+         SELBA & B6!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELBA & B6!='1 & TRN_LH, DELAY(-1,36ns,54ns),
+         SELBA & B6!='1 & TRN_HL, DELAY(-1,19ns,29ns),
+         CHANGED(B6,0) & TRN_LH, DELAY(-1,18ns,27ns),
+         CHANGED(B6,0) & TRN_HL, DELAY(-1,14ns,21ns),
+         ENBA & TRN_LH, DELAY(-1,23ns,35ns),
+         ENBA & TRN_HL, DELAY(-1,35ns,53ns),
+         DELAY(-1,37ns,55ns))}
+
+     A7 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,22ns,33ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELBA & B7!='0 & TRN_LH, DELAY(-1,32ns,48ns),
+         SELBA & B7!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELBA & B7!='1 & TRN_LH, DELAY(-1,36ns,54ns),
+         SELBA & B7!='1 & TRN_HL, DELAY(-1,19ns,29ns),
+         CHANGED(B7,0) & TRN_LH, DELAY(-1,18ns,27ns),
+         CHANGED(B7,0) & TRN_HL, DELAY(-1,14ns,21ns),
+         ENBA & TRN_LH, DELAY(-1,23ns,35ns),
+         ENBA & TRN_HL, DELAY(-1,35ns,53ns),
+         DELAY(-1,37ns,55ns))}
+
+     A8 = {
+       CASE(
+         CLOCKBA & SBA=='1 & TRN_LH, DELAY(-1,22ns,33ns),
+         CLOCKBA & SBA=='1 & TRN_HL, DELAY(-1,24ns,36ns),
+         SELBA & B8!='0 & TRN_LH, DELAY(-1,32ns,48ns),
+         SELBA & B8!='0 & TRN_HL, DELAY(-1,21ns,32ns),
+         SELBA & B8!='1 & TRN_LH, DELAY(-1,36ns,54ns),
+         SELBA & B8!='1 & TRN_HL, DELAY(-1,19ns,29ns),
+         CHANGED(B8,0) & TRN_LH, DELAY(-1,18ns,27ns),
+         CHANGED(B8,0) & TRN_HL, DELAY(-1,14ns,21ns),
+         ENBA & TRN_LH, DELAY(-1,23ns,35ns),
+         ENBA & TRN_HL, DELAY(-1,35ns,53ns),
+         DELAY(-1,37ns,55ns))}

U5DLY PINDLY(8,1,10) DPWR DGND
+     B1_O B2_O B3_O B4_O B5_O B6_O B7_O B8_O
+     GAB
+     CAB SAB A1 A2 A3 A4 A5 A6 A7 A8
+     B1 B2 B3 B4 B5 B6 B7 B8
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SELAB = {CHANGED(SAB,0)}
+     CLOCKAB = {CHANGED_LH(CAB,0)}
+
+  TRISTATE:
+     ENABLE HI=GAB
+     B1 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,14ns,21ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,22ns,33ns),
+         SELAB & A1!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELAB & A1!='0 & TRN_HL, DELAY(-1,18ns,27ns),
+         SELAB & A1!='1 & TRN_LH, DELAY(-1,30ns,45ns),
+         SELAB & A1!='1 & TRN_HL, DELAY(-1,14ns,21ns),
+         CHANGED(A1,0) & TRN_LH, DELAY(-1,10ns,18ns),
+         CHANGED(A1,0) & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,19ns,29ns),
+         TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_HZ, DELAY(-1,26ns,39ns),
+         TRN_LZ, DELAY(-1,19ns,29ns),
+         DELAY(-1,31ns,46ns))}
+
+     B2 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,14ns,21ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,22ns,33ns),
+         SELAB & A2!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELAB & A2!='0 & TRN_HL, DELAY(-1,18ns,27ns),
+         SELAB & A2!='1 & TRN_LH, DELAY(-1,30ns,45ns),
+         SELAB & A2!='1 & TRN_HL, DELAY(-1,14ns,21ns),
+         CHANGED(A2,0) & TRN_LH, DELAY(-1,10ns,18ns),
+         CHANGED(A2,0) & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,19ns,29ns),
+         TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_HZ, DELAY(-1,26ns,39ns),
+         TRN_LZ, DELAY(-1,19ns,29ns),
+         DELAY(-1,31ns,46ns))}
+
+     B3 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,14ns,21ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,22ns,33ns),
+         SELAB & A3!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELAB & A3!='0 & TRN_HL, DELAY(-1,18ns,27ns),
+         SELAB & A3!='1 & TRN_LH, DELAY(-1,30ns,45ns),
+         SELAB & A3!='1 & TRN_HL, DELAY(-1,14ns,21ns),
+         CHANGED(A3,0) & TRN_LH, DELAY(-1,10ns,18ns),
+         CHANGED(A3,0) & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,19ns,29ns),
+         TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_HZ, DELAY(-1,26ns,39ns),
+         TRN_LZ, DELAY(-1,19ns,29ns),
+         DELAY(-1,31ns,46ns))}
+
+     B4 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,14ns,21ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,22ns,33ns),
+         SELAB & A4!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELAB & A4!='0 & TRN_HL, DELAY(-1,18ns,27ns),
+         SELAB & A4!='1 & TRN_LH, DELAY(-1,30ns,45ns),
+         SELAB & A4!='1 & TRN_HL, DELAY(-1,14ns,21ns),
+         CHANGED(A4,0) & TRN_LH, DELAY(-1,10ns,18ns),
+         CHANGED(A4,0) & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,19ns,29ns),
+         TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_HZ, DELAY(-1,26ns,39ns),
+         TRN_LZ, DELAY(-1,19ns,29ns),
+         DELAY(-1,31ns,46ns))}
+
+     B5 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,14ns,21ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,22ns,33ns),
+         SELAB & A5!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELAB & A5!='0 & TRN_HL, DELAY(-1,18ns,27ns),
+         SELAB & A5!='1 & TRN_LH, DELAY(-1,30ns,45ns),
+         SELAB & A5!='1 & TRN_HL, DELAY(-1,14ns,21ns),
+         CHANGED(A5,0) & TRN_LH, DELAY(-1,10ns,18ns),
+         CHANGED(A5,0) & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,19ns,29ns),
+         TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_HZ, DELAY(-1,26ns,39ns),
+         TRN_LZ, DELAY(-1,19ns,29ns),
+         DELAY(-1,31ns,46ns))}
+
+     B6 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,14ns,21ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,22ns,33ns),
+         SELAB & A6!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELAB & A6!='0 & TRN_HL, DELAY(-1,18ns,27ns),
+         SELAB & A6!='1 & TRN_LH, DELAY(-1,30ns,45ns),
+         SELAB & A6!='1 & TRN_HL, DELAY(-1,14ns,21ns),
+         CHANGED(A6,0) & TRN_LH, DELAY(-1,10ns,18ns),
+         CHANGED(A6,0) & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,19ns,29ns),
+         TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_HZ, DELAY(-1,26ns,39ns),
+         TRN_LZ, DELAY(-1,19ns,29ns),
+         DELAY(-1,31ns,46ns))}
+
+     B7 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,14ns,21ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,22ns,33ns),
+         SELAB & A7!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELAB & A7!='0 & TRN_HL, DELAY(-1,18ns,27ns),
+         SELAB & A7!='1 & TRN_LH, DELAY(-1,30ns,45ns),
+         SELAB & A7!='1 & TRN_HL, DELAY(-1,14ns,21ns),
+         CHANGED(A7,0) & TRN_LH, DELAY(-1,10ns,18ns),
+         CHANGED(A7,0) & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,19ns,29ns),
+         TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_HZ, DELAY(-1,26ns,39ns),
+         TRN_LZ, DELAY(-1,19ns,29ns),
+         DELAY(-1,31ns,46ns))}
+
+     B8 = {
+       CASE(
+         CLOCKAB & SAB=='1 & TRN_LH, DELAY(-1,14ns,21ns),
+         CLOCKAB & SAB=='1 & TRN_HL, DELAY(-1,22ns,33ns),
+         SELAB & A8!='0 & TRN_LH, DELAY(-1,23ns,35ns),
+         SELAB & A8!='0 & TRN_HL, DELAY(-1,18ns,27ns),
+         SELAB & A8!='1 & TRN_LH, DELAY(-1,30ns,45ns),
+         SELAB & A8!='1 & TRN_HL, DELAY(-1,14ns,21ns),
+         CHANGED(A8,0) & TRN_LH, DELAY(-1,10ns,18ns),
+         CHANGED(A8,0) & TRN_HL, DELAY(-1,20ns,30ns),
+         TRN_ZH, DELAY(-1,19ns,29ns),
+         TRN_ZL, DELAY(-1,22ns,33ns),
+         TRN_HZ, DELAY(-1,26ns,39ns),
+         TRN_LZ, DELAY(-1,19ns,29ns),
+         DELAY(-1,31ns,46ns))}

U6CON CONSTRAINT(20) DPWR DGND
+     CAB CBA A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 GAB GBABAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CAB
+     MIN_HI=15ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=CBA
+     MIN_HI=15ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=A1
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A2
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A3
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A4
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A5
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A6
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A7
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=A8
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GAB=='1}
+
+  WIDTH:
+     NODE=B1
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B2
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B3
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B4
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B5
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B6
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B7
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GBABAR=='0}
+
+  WIDTH:
+     NODE=B8
+     MIN_HI=30ns
+     MIN_LO=30ns
+     WHEN={GBABAR=='0}
+
+  SETUP_HOLD:
+     CLOCK LH=CAB
+     DATA(8)=A1 A2 A3 A4 A5 A6 A7 A8
+     SETUPTIME=15ns
+
+  SETUP_HOLD:
+     CLOCK LH=CBA
+     DATA(8)=B1 B2 B3 B4 B5 B6 B7 B8
+     SETUPTIME=15ns

.ENDS 74LS654

*-------------------------------------------------------------74F655A------

* Octal Buffer/Driver with parity, inverting (3-State)
* Philips FAST TTL Logic Data Handbook, 1992, pages 668 to 674
* jat 7/18/96

.SUBCKT 74F655A OE0BAR OE1BAR OE2BAR PI D0 D1 D2 D3 D4 D5 D6 D7
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR EVEN ODD
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(12,11) DPWR DGND
+ PI D0 D1 D2 D3 D4 D5 D6 D7 OE0BAR OE1BAR OE2BAR
+ EVENO ODDO Q0BARO Q1BARO Q2BARO Q3BARO Q4BARO Q5BARO Q6BARO Q7BARO ENAB
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(OE0BAR | OE1BAR | OE2BAR)}
+   Q0BARO = {~D0}
+   Q1BARO = {~D1}
+   Q2BARO = {~D2}
+   Q3BARO = {~D3}
+   Q4BARO = {~D4}
+   Q5BARO = {~D5}
+   Q6BARO = {~D6}
+   Q7BARO = {~D7}
+   NOR1 = {~((~D1 & ~D0 & PI) | (~D1 & D0 & ~PI) | (D1 & ~D0 &~PI) |
+             (D1 & D0 & PI))}
+   NOR2 = {~((~D4 & ~D3 & D2) | (~D4 & D3 & ~D2) | (D4 & ~D3 & ~D2) |
+             (D4 & D3 & D2))}
+   NOR3 = {~((~D7 & ~D6 & D5) | (~D7 & D6 & ~D5) | (D7 & ~D6 & ~D5) |
+             (D7 & D6 & D5))}
+   ODDO = {(NOR3 & NOR2 & ~NOR1) | (NOR3 & ~NOR2 & NOR1) |
+           (~NOR3 & NOR2 & NOR1) | (~NOR3 & ~NOR2 & ~NOR1)}
+   EVENO = {~ODDO}

U2 PINDLY(10,1,0) DPWR DGND
+ Q0BARO Q1BARO Q2BARO Q3BARO Q4BARO Q5BARO Q6BARO Q7BARO EVENO ODDO
+ ENAB
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR EVEN ODD
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = ENAB
+   Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR = {
+     CASE(
+       TRN_ZH, DELAY(3.5NS,7NS,10.5NS),
+       TRN_ZL, DELAY(4NS,8NS,11NS),
+       TRN_HZ, DELAY(1.5NS,4.5NS,8NS),
+       TRN_LZ, DELAY(2NS,5NS,8NS),
+       TRN_LH, DELAY(2NS,4.5NS,6.5NS),
+       TRN_HL, DELAY(1NS,2.5NS,4NS),
+       DELAY(4.5NS,8NS,11.5NS))}
+ TRISTATE:
+   ENABLE HI = ENAB
+   EVEN ODD = {
+      CASE(
+       TRN_ZH, DELAY(3.5NS,7NS,10.5NS),
+       TRN_ZL, DELAY(4NS,8NS,11NS),
+       TRN_HZ, DELAY(1.5NS,4.5NS,8NS),
+       TRN_LZ, DELAY(2NS,5NS,8NS),
+       TRN_LH, DELAY(5.5NS,10NS,13NS),
+       TRN_HL, DELAY(5.5NS,11NS,14.5NS),
+       DELAY(6.5NS,12NS,15.5NS))}

.ENDS 74F655A

*-------------------------------------------------------------74F656A------

* Octal Buffer/Driver with parity, non-inverting (3-State)
* Philips FAST TTL Logic Data Handbook, 1992, pages 668 to 674
* jat 7/18/96

.SUBCKT 74F656A OE0BAR OE1BAR OE2BAR PI D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 EVEN ODD
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(12,3) DPWR DGND
+ PI D0 D1 D2 D3 D4 D5 D6 D7 OE0BAR OE1BAR OE2BAR
+ EVENO ODDO ENAB
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(OE0BAR | OE1BAR | OE2BAR)}
+   NOR1 = {~((~D1 & ~D0 & PI) | (~D1 & D0 & ~PI) | (D1 & ~D0 &~PI) |
+             (D1 & D0 & PI))}
+   NOR2 = {~((~D4 & ~D3 & D2) | (~D4 & D3 & ~D2) | (D4 & ~D3 & ~D2) |
+             (D4 & D3 & D2))}
+   NOR3 = {~((~D7 & ~D6 & D5) | (~D7 & D6 & ~D5) | (D7 & ~D6 & ~D5) |
+             (D7 & D6 & D5))}
+   ODDO = {(NOR3 & NOR2 & ~NOR1) | (NOR3 & ~NOR2 & NOR1) |
+           (~NOR3 & NOR2 & NOR1) | (~NOR3 & ~NOR2 & ~NOR1)}
+   EVENO = {~ODDO}

U2 PINDLY(10,1,0) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 EVENO ODDO
+ ENAB
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 EVEN ODD
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = ENAB
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+       TRN_ZH, DELAY(3.5NS,7NS,10.5NS),
+       TRN_ZL, DELAY(4NS,8NS,11NS),
+       TRN_HZ, DELAY(1.5NS,4.5NS,8NS),
+       TRN_LZ, DELAY(2NS,5NS,8NS),
+       TRN_LH, DELAY(2NS,4NS,6.5NS),
+       TRN_HL, DELAY(2.5NS,5.5NS,7NS),
+       DELAY(4.5NS,8NS,11.5NS))}
+ TRISTATE:
+   ENABLE HI = ENAB
+   EVEN ODD = {
+      CASE(
+       TRN_ZH, DELAY(3.5NS,7NS,10.5NS),
+       TRN_ZL, DELAY(4NS,8NS,11NS),
+       TRN_HZ, DELAY(1.5NS,4.5NS,8NS),
+       TRN_LZ, DELAY(2NS,5NS,8NS),
+       TRN_LH, DELAY(5.5NS,10NS,13NS),
+       TRN_HL, DELAY(5.5NS,11NS,14.5NS),
+       DELAY(6.5NS,12NS,15.5NS))}

.ENDS 74F656A

*-------------------------------------------------------------74ACT657------

* Octal Transceiver with Parity Generator/Checker and 3-State Outputs
* TI Advanced CMOS Logic Data Book, 1993, pages 2-557 to 2-562
* jat 12/28/95

.SUBCKT 74ACT657 T/RBAR OEBAR A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7
+ B8 ODD/EVENBAR PARITY ERRBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(13,11) DPWR DGND
+ T/RBAR OEBAR A1 A2 A3 A4 A5 A6 A7 A8 ODD/EVENBAR PARITY ERRBAR
+ ENABAB ENABBA PARITYO ERRBARO OUT1 OUT2 OUT3 OUT4 NOR1 NOR2 NOR3
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+    ENABAB = {T/RBAR & (~OEBAR)}
+    ENABBA = {(~T/RBAR) & (~OEBAR)}
+    AND1 = {A8 & (~A7) & (~A6)}
+    AND2 = {A7 & (~A8) & (~A6)}
+    AND3 = {A6 & (~A7) & (~A8)}
+    AND4 = {A6 & A7 & A8}
+    AND5 = {A5 & (~A4) & (~A3)}
+    AND6 = {A3 & (~A4) & (~A5)}
+    AND7 = {A4 & (~A3) & (~A5)}
+    AND8 = {A3 & A4 & A5}
+    ANDPAR = {PARITY & ENABBA}
+    AND9 = {ANDPAR & (~A1) & (~A2)}
+    AND10 = {A1 & (~ANDPAR) & (~A2)}
+    AND11 = {A2 & (~A1) & (~ANDPAR)}
+    AND12 = {A1 & A2 & ANDPAR}
+    NOR1 = {~(AND1 | AND2 | AND3 | AND4)}
+    NOR2 = {~(AND5 | AND6 | AND7 | AND8)}
+    NOR3 = {~(AND9 | AND10 | AND11 | AND12)}
+    OUT1 = {NOR2 & NOR3 & (~NOR1)}
+    OUT2 = {NOR1 & NOR3 & (~NOR2)}
+    OUT3 = {NOR1 & NOR2 & (~NOR3)}
+    OUT4 = {(~NOR1) & (~NOR2) & (~NOR3)}
+    NOROUT = {~(OUT1 | OUT2 | OUT3 | OUT4)}
+    PARITYO = {~(NOROUT ^ ODD/EVENBAR)}
+    ERRBARO = {~PARITYO}

U2 PINDLY(18,2,18) DPWR DGND
+ A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 PARITYO ERRBARO
+ ENABAB ENABBA
+ A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 ODD/EVENBAR PARITY
+ B1 B2 B3 B4 B5 B6 B7 B8 A1 A2 A3 A4 A5 A6 A7 A8 PARITY ERRBAR
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+            CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0)}
+   DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+            CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B8,0)}
+   ODDEVEN = {CHANGED(ODD/EVENBAR,0)}
+   PAR = {CHANGED(PARITY,0)}
+ TRISTATE:
+   ENABLE HI = ENABBA
+   A1 A2 A3 A4 A5 A6 A7 A8 = {
+     CASE(
+        TRN_ZH, DELAY(2.6NS,9.1NS,10.8NS),
+        TRN_ZL, DELAY(3.1NS,10.6NS,12.3NS),
+        TRN_HZ, DELAY(4.5NS,9.1NS,10.8NS),
+        TRN_LZ, DELAY(4.5NS,8.7NS,10.5NS),
+        DATAB & TRN_LH, DELAY(2.9NS,6.7NS,8.4NS),
+        DATAB & TRN_HL, DELAY(2.2NS,7NS,8.4NS),
+        DELAY(5.5NS,11.6NS,13.3NS))}
+ TRISTATE:
+   ENABLE HI = ENABAB
+   B1 B2 B3 B4 B5 B6 B7 B8 = {
+     CASE(
+        TRN_ZH, DELAY(2.6NS,9.1NS,10.8NS),
+        TRN_ZL, DELAY(3.1NS,10.6NS,12.3NS),
+        TRN_HZ, DELAY(4.5NS,9.1NS,10.8NS),
+        TRN_LZ, DELAY(4.5NS,8.7NS,10.5NS),
+        DATAA & TRN_LH, DELAY(2.9NS,6.7NS,8.4NS),
+        DATAA & TRN_HL, DELAY(2.2NS,7NS,8.4NS),
+        DELAY(5.5NS,11.6NS,13.3NS))}
+ TRISTATE:
+    ENABLE HI = ENABAB
+    PARITY = {
+       CASE(
+        TRN_ZH, DELAY(2.6NS,9.1NS,10.8NS),
+        TRN_ZL, DELAY(3.1NS,10.6NS,12.3NS),
+        TRN_HZ, DELAY(4.5NS,9.1NS,10.8NS),
+        TRN_LZ, DELAY(4.5NS,8.7NS,10.5NS),
+        ODDEVEN & TRN_LH, DELAY(2.5NS,7.9NS,9.4NS),
+        ODDEVEN & TRN_HL, DELAY(3NS,8.5NS,10NS),
+        DATAA & TRN_LH, DELAY(3.4NS,10.4NS,12.7NS),
+        DATAA & TRN_HL, DELAY(3.9NS,10.9NS,13.2NS),
+        DELAY(5.5NS,11.9NS,14.2NS))}
+ TRISTATE:
+ ENABLE HI = ENABBA
+   ERRBAR = {
+    CASE(
+        TRN_ZH, DELAY(2.6NS,9.1NS,10.8NS),
+        TRN_ZL, DELAY(3.1NS,10.6NS,12.3NS),
+        TRN_HZ, DELAY(4.5NS,9.1NS,10.8NS),
+        TRN_LZ, DELAY(4.5NS,8.7NS,10.5NS),
+        ODDEVEN & TRN_LH, DELAY(2.5NS,7.9NS,9.4NS),
+        ODDEVEN & TRN_HL, DELAY(3NS,8.5NS,10NS),
+        PAR & TRN_LH, DELAY(4NS,10.9NS,12.8NS),
+        PAR & TRN_HL, DELAY(3.9NS,11NS,12.9NS),
+        DATAB & TRN_LH, DELAY(4.6NS,18.1NS,20.6NS),
+        DATAB & TRN_HL, DELAY(4.9NS,18.5NS,21.8NS),
+        DELAY(5.9NS,19.5NS,22.8NS))}

.ENDS 74ACT657

*-------------------------------------------------------------74F657------

* Octal Transceiver with Parity Generator/Checker and 3-State Outputs
* TI F Data Book, 1994, pages 2-283 to 2-288
* jat 7/3/96

.SUBCKT 74F657 T/RBAR OEBAR A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7
+ B8 ODD/EVENBAR PARITY ERRBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(13,11) DPWR DGND
+ T/RBAR OEBAR A1 A2 A3 A4 A5 A6 A7 A8 ODD/EVENBAR PARITY ERRBAR
+ ENABAB ENABBA PARITYO ERRBARO OUT1 OUT2 OUT3 OUT4 NOR1 NOR2 NOR3
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+    ENABAB = {T/RBAR & (~OEBAR)}
+    ENABBA = {(~T/RBAR) & (~OEBAR)}
+    AND1 = {A8 & (~A7) & (~A6)}
+    AND2 = {A7 & (~A8) & (~A6)}
+    AND3 = {A6 & (~A7) & (~A8)}
+    AND4 = {A6 & A7 & A8}
+    AND5 = {A5 & (~A4) & (~A3)}
+    AND6 = {A3 & (~A4) & (~A5)}
+    AND7 = {A4 & (~A3) & (~A5)}
+    AND8 = {A3 & A4 & A5}
+    ANDPAR = {PARITY & ENABBA}
+    AND9 = {ANDPAR & (~A1) & (~A2)}
+    AND10 = {A1 & (~ANDPAR) & (~A2)}
+    AND11 = {A2 & (~A1) & (~ANDPAR)}
+    AND12 = {A1 & A2 & ANDPAR}
+    NOR1 = {~(AND1 | AND2 | AND3 | AND4)}
+    NOR2 = {~(AND5 | AND6 | AND7 | AND8)}
+    NOR3 = {~(AND9 | AND10 | AND11 | AND12)}
+    OUT1 = {NOR2 & NOR3 & (~NOR1)}
+    OUT2 = {NOR1 & NOR3 & (~NOR2)}
+    OUT3 = {NOR1 & NOR2 & (~NOR3)}
+    OUT4 = {(~NOR1) & (~NOR2) & (~NOR3)}
+    NOROUT = {~(OUT1 | OUT2 | OUT3 | OUT4)}
+    PARITYO = {~(NOROUT ^ ODD/EVENBAR)}
+    ERRBARO = {~PARITYO}

U2 PINDLY(18,2,18) DPWR DGND
+ A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 PARITYO ERRBARO
+ ENABAB ENABBA
+ A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 ODD/EVENBAR PARITY
+ B1 B2 B3 B4 B5 B6 B7 B8 A1 A2 A3 A4 A5 A6 A7 A8 PARITY ERRBAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+            CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0)}
+   DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+            CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B8,0)}
+   ODDEVEN = {CHANGED(ODD/EVENBAR,0)}
+   PAR = {CHANGED(PARITY,0)}
+ TRISTATE:
+   ENABLE HI = ENABBA
+   A1 A2 A3 A4 A5 A6 A7 A8 = {
+     CASE(
+        TRN_ZH, DELAY(3NS,5.3NS,8NS),
+        TRN_ZL, DELAY(4NS,5.4NS,9.5NS),
+        TRN_HZ, DELAY(2NS,4.2NS,7.5NS),
+        TRN_LZ, DELAY(2NS,3.7NS,6NS),
+        DATAB & TRN_LH, DELAY(2.5NS,4.2NS,7.5NS),
+        DATAB & TRN_HL, DELAY(3NS,4NS,7.5NS),
+        DELAY(5NS,6.4NS,10.5NS))}
+ TRISTATE:
+   ENABLE HI = ENABAB
+   B1 B2 B3 B4 B5 B6 B7 B8 = {
+     CASE(
+        TRN_ZH, DELAY(3NS,5.3NS,8NS),
+        TRN_ZL, DELAY(4NS,5.4NS,9.5NS),
+        TRN_HZ, DELAY(2NS,4.2NS,7.5NS),
+        TRN_LZ, DELAY(2NS,3.7NS,6NS),
+        DATAA & TRN_LH, DELAY(2.5NS,4.2NS,7.5NS),
+        DATAA & TRN_HL, DELAY(3NS,4NS,7.5NS),
+        DELAY(5NS,6.4NS,10.5NS))}
+ TRISTATE:
+    ENABLE HI = ENABAB
+    PARITY = {
+       CASE(
+        TRN_ZH, DELAY(3NS,5.3NS,8NS),
+        TRN_ZL, DELAY(4NS,5.4NS,9.5NS),
+        TRN_HZ, DELAY(2NS,4.2NS,7.5NS),
+        TRN_LZ, DELAY(2NS,3.7NS,6NS),
+        ODDEVEN & TRN_LH, DELAY(4NS,6.4NS,11NS),
+        ODDEVEN & TRN_HL, DELAY(4.5NS,6.9NS,11.5NS),
+        DATAA & TRN_LH, DELAY(6NS,8.4NS,14NS),
+        DATAA & TRN_HL, DELAY(6.8NS,8.5NS,15NS),
+        DELAY(7.8NS,9.5NS,16NS))}
+ TRISTATE:
+ ENABLE HI = ENABBA
+   ERRBAR = {
+    CASE(
+        TRN_ZH, DELAY(3NS,5.3NS,8NS),
+        TRN_ZL, DELAY(4NS,5.4NS,9.5NS),
+        TRN_HZ, DELAY(2NS,4.2NS,7.5NS),
+        TRN_LZ, DELAY(2NS,3.7NS,6NS),
+        ODDEVEN & TRN_LH, DELAY(4NS,6.4NS,11NS),
+        ODDEVEN & TRN_HL, DELAY(4.5NS,6.9NS,11.5NS),
+        PAR & TRN_LH, DELAY(6NS,8.1NS,15.5NS),
+        PAR & TRN_HL, DELAY(7.5NS,8.8NS,15.5NS),
+        DATAB & TRN_LH, DELAY(8NS,12.7NS,20.5NS),
+        DATAB & TRN_HL, DELAY(8NS,13.4NS,20.5NS),
+        DELAY(9NS,14.4NS,21.5NS))}

.ENDS 74F657

*-------------------------------------------------------------74F657A------

* Octal Bidirectional Transceiver with 8 Bit Parity Generator Checker and 3-State Outputs
* Motorola FAST and LS TTL Data, 1992, pages 4-254 to 4-258
* jat 7/18/96

.SUBCKT 74F657A T/RBAR OEBAR A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7
+ EVENBAR/ODD PARITY ERRBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(13,11) DPWR DGND
+ T/RBAR OEBAR A0 A1 A2 A3 A4 A5 A6 A7 EVENBAR/ODD PARITY ERRBAR
+ ENABAB ENABBA PARITYO ERRBARO OUT1 OUT2 OUT3 OUT4 NOR1 NOR2 NOR3
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+    ENABAB = {T/RBAR & (~OEBAR)}
+    ENABBA = {(~T/RBAR) & (~OEBAR)}
+    AND1 = {A7 & (~A6) & (~A5)}
+    AND2 = {A6 & (~A7) & (~A5)}
+    AND3 = {A5 & (~A6) & (~A7)}
+    AND4 = {A5 & A6 & A7}
+    AND5 = {A4 & (~A3) & (~A2)}
+    AND6 = {A2 & (~A3) & (~A4)}
+    AND7 = {A3 & (~A2) & (~A4)}
+    AND8 = {A2 & A3 & A4}
+    ANDPAR = {PARITY & ENABBA}
+    AND9 = {ANDPAR & (~A0) & (~A1)}
+    AND10 = {A0 & (~ANDPAR) & (~A1)}
+    AND11 = {A1 & (~A0) & (~ANDPAR)}
+    AND12 = {A0 & A1 & ANDPAR}
+    NOR1 = {~(AND1 | AND2 | AND3 | AND4)}
+    NOR2 = {~(AND5 | AND6 | AND7 | AND8)}
+    NOR3 = {~(AND9 | AND10 | AND11 | AND12)}
+    OUT1 = {NOR2 & NOR3 & (~NOR1)}
+    OUT2 = {NOR1 & NOR3 & (~NOR2)}
+    OUT3 = {NOR1 & NOR2 & (~NOR3)}
+    OUT4 = {(~NOR1) & (~NOR2) & (~NOR3)}
+    NOROUT = {~(OUT1 | OUT2 | OUT3 | OUT4)}
+    PARITYO = {~(NOROUT ^ EVENBAR/ODD)}
+    ERRBARO = {~PARITYO}

U2 PINDLY(18,2,18) DPWR DGND
+ A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 PARITYO ERRBARO
+ ENABAB ENABBA
+ A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 EVENBAR/ODD PARITY
+ B0 B1 B2 B3 B4 B5 B6 B7 A0 A1 A2 A3 A4 A5 A6 A7 PARITY ERRBAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+            CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A0,0)}
+   DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+            CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B0,0)}
+   ODDEVEN = {CHANGED(EVENBAR/ODD,0)}
+   PAR = {CHANGED(PARITY,0)}
+ TRISTATE:
+   ENABLE HI = ENABBA
+   A0 A1 A2 A3 A4 A5 A6 A7 = {
+     CASE(
+        TRN_ZH, DELAY(3NS,-1,8NS),
+        TRN_ZL, DELAY(4NS,-1,9NS),
+        TRN_HZ, DELAY(2NS,-1,7.5NS),
+        TRN_LZ, DELAY(2NS,-1,6NS),
+        DATAB & TRN_LH, DELAY(2NS,-1,7NS),
+        DATAB & TRN_HL, DELAY(2NS,-1,7NS),
+        DELAY(5NS,-1,10NS))}
+ TRISTATE:
+   ENABLE HI = ENABAB
+   B0 B1 B2 B3 B4 B5 B6 B7 = {
+     CASE(
+        TRN_ZH, DELAY(3NS,-1,8NS),
+        TRN_ZL, DELAY(4NS,-1,9NS),
+        TRN_HZ, DELAY(2NS,-1,7.5NS),
+        TRN_LZ, DELAY(2NS,-1,6NS),
+        DATAA & TRN_LH, DELAY(2NS,-1,7NS),
+        DATAA & TRN_HL, DELAY(2NS,-1,7NS),
+        DELAY(5NS,-1,10NS))}
+ TRISTATE:
+    ENABLE HI = ENABAB
+    PARITY = {
+       CASE(
+        TRN_ZH, DELAY(3NS,-1,8NS),
+        TRN_ZL, DELAY(4NS,-1,9NS),
+        TRN_HZ, DELAY(2NS,-1,7.5NS),
+        TRN_LZ, DELAY(2NS,-1,6NS),
+        ODDEVEN & TRN_LH, DELAY(4.5NS,-1,10.5NS),
+        ODDEVEN & TRN_HL, DELAY(4.5NS,-1,10.5NS),
+        DATAA & TRN_LH, DELAY(6NS,-1,13NS),
+        DATAA & TRN_HL, DELAY(6.5NS,-1,13NS),
+        DELAY(7.5NS,-1,14NS))}
+ TRISTATE:
+ ENABLE HI = ENABBA
+   ERRBAR = {
+    CASE(
+        TRN_ZH, DELAY(3NS,-1,8NS),
+        TRN_ZL, DELAY(4NS,-1,9NS),
+        TRN_HZ, DELAY(2NS,-1,7.5NS),
+        TRN_LZ, DELAY(2NS,-1,6NS),
+        ODDEVEN & TRN_LH, DELAY(4.5NS,-1,10.5NS),
+        ODDEVEN & TRN_HL, DELAY(4.5NS,-1,10.5NS),
+        PAR & TRN_LH, DELAY(8NS,-1,14NS),
+        PAR & TRN_HL, DELAY(7NS,-1,14NS),
+        DATAB & TRN_LH, DELAY(7NS,-1,18NS),
+        DATAB & TRN_HL, DELAY(7NS,-1,18NS),
+        DELAY(9NS,-1,19NS))}

.ENDS 74F657A

*-------------------------------------------------------------74F657B------

* Octal Bidirectional Transceiver with 8 Bit Parity Generator Checker and 3-State Outputs
* Motorola FAST and LS TTL Data, 1992, pages 4-254 to 4-258
* jat 7/18/96

.SUBCKT 74F657B T/RBAR OEBAR A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7
+ EVENBAR/ODD PARITY ERRBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(13,11) DPWR DGND
+ T/RBAR OEBAR A0 A1 A2 A3 A4 A5 A6 A7 EVENBAR/ODD PARITY ERRBAR
+ ENABAB ENABBA PARITYO ERRBARO OUT1 OUT2 OUT3 OUT4 NOR1 NOR2 NOR3
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+    ENABAB = {T/RBAR & (~OEBAR)}
+    ENABBA = {(~T/RBAR) & (~OEBAR)}
+    AND1 = {A7 & (~A6) & (~A5)}
+    AND2 = {A6 & (~A7) & (~A5)}
+    AND3 = {A5 & (~A6) & (~A7)}
+    AND4 = {A5 & A6 & A7}
+    AND5 = {A4 & (~A3) & (~A2)}
+    AND6 = {A2 & (~A3) & (~A4)}
+    AND7 = {A3 & (~A2) & (~A4)}
+    AND8 = {A2 & A3 & A4}
+    ANDPAR = {PARITY & ENABBA}
+    AND9 = {ANDPAR & (~A0) & (~A1)}
+    AND10 = {A0 & (~ANDPAR) & (~A1)}
+    AND11 = {A1 & (~A0) & (~ANDPAR)}
+    AND12 = {A0 & A1 & ANDPAR}
+    NOR1 = {~(AND1 | AND2 | AND3 | AND4)}
+    NOR2 = {~(AND5 | AND6 | AND7 | AND8)}
+    NOR3 = {~(AND9 | AND10 | AND11 | AND12)}
+    OUT1 = {NOR2 & NOR3 & (~NOR1)}
+    OUT2 = {NOR1 & NOR3 & (~NOR2)}
+    OUT3 = {NOR1 & NOR2 & (~NOR3)}
+    OUT4 = {(~NOR1) & (~NOR2) & (~NOR3)}
+    NOROUT = {~(OUT1 | OUT2 | OUT3 | OUT4)}
+    PARITYO = {~(NOROUT ^ EVENBAR/ODD)}
+    ERRBARO = {~PARITYO}

U2 PINDLY(18,2,18) DPWR DGND
+ A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 PARITYO ERRBARO
+ ENABAB ENABBA
+ A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 EVENBAR/ODD PARITY
+ B0 B1 B2 B3 B4 B5 B6 B7 A0 A1 A2 A3 A4 A5 A6 A7 PARITY ERRBAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+            CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A0,0)}
+   DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+            CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B0,0)}
+   ODDEVEN = {CHANGED(EVENBAR/ODD,0)}
+   PAR = {CHANGED(PARITY,0)}
+ TRISTATE:
+   ENABLE HI = ENABBA
+   A0 A1 A2 A3 A4 A5 A6 A7 = {
+     CASE(
+        TRN_ZH, DELAY(2NS,-1,7NS),
+        TRN_ZL, DELAY(2NS,-1,7NS),
+        TRN_HZ, DELAY(2NS,-1,6NS),
+        TRN_LZ, DELAY(2NS,-1,6NS),
+        DATAB & TRN_LH, DELAY(2NS,-1,6NS),
+        DATAB & TRN_HL, DELAY(2NS,-1,6NS),
+        DELAY(3NS,-1,8NS))}
+ TRISTATE:
+   ENABLE HI = ENABAB
+   B0 B1 B2 B3 B4 B5 B6 B7 = {
+     CASE(
+        TRN_ZH, DELAY(2NS,-1,7NS),
+        TRN_ZL, DELAY(2NS,-1,7NS),
+        TRN_HZ, DELAY(2NS,-1,6NS),
+        TRN_LZ, DELAY(2NS,-1,6NS),
+        DATAA & TRN_LH, DELAY(2NS,-1,6NS),
+        DATAA & TRN_HL, DELAY(2NS,-1,6NS),
+        DELAY(3NS,-1,8NS))}
+ TRISTATE:
+    ENABLE HI = ENABAB
+    PARITY = {
+       CASE(
+        TRN_ZH, DELAY(2NS,-1,7NS),
+        TRN_ZL, DELAY(2NS,-1,7NS),
+        TRN_HZ, DELAY(2NS,-1,6NS),
+        TRN_LZ, DELAY(2NS,-1,6NS),
+        ODDEVEN & TRN_LH, DELAY(2NS,-1,7.5NS),
+        ODDEVEN & TRN_HL, DELAY(2NS,-1,7.5NS),
+        DATAA & TRN_LH, DELAY(4.5NS,-1,11.5NS),
+        DATAA & TRN_HL, DELAY(4.5NS,-1,11.5NS),
+        DELAY(5.5NS,-1,12.5NS))}
+ TRISTATE:
+ ENABLE HI = ENABBA
+   ERRBAR = {
+    CASE(
+        TRN_ZH, DELAY(2NS,-1,7NS),
+        TRN_ZL, DELAY(2NS,-1,7NS),
+        TRN_HZ, DELAY(2NS,-1,6NS),
+        TRN_LZ, DELAY(2NS,-1,6NS),
+        ODDEVEN & TRN_LH, DELAY(2NS,-1,7.5NS),
+        ODDEVEN & TRN_HL, DELAY(2NS,-1,7.5NS),
+        PAR & TRN_LH, DELAY(5NS,-1,11NS),
+        PAR & TRN_HL, DELAY(5NS,-1,11NS),
+        DATAB & TRN_LH, DELAY(4NS,-1,15NS),
+        DATAB & TRN_HL, DELAY(4NS,-1,15NS),
+        DELAY(6NS,-1,16NS))}

.ENDS 74F657B

* ----------------------------------------------------------- 74ALS666 ------
*  Octal Bus Transceivers And Registers
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-559 to 2-565
*  bss    5/23/94
*
.SUBCKT 74ALS666 OE1BAR OE2BAR OERBBAR PREBAR CLRBAR C 
+     1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     PREBAR CLRBAR C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nor(2) DPWR DGND
+     OE1BAR OE2BAR OEEN
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(16,2,11) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     OEEN OERBBAR
+     1D 2D 3D 4D 5D 6D 7D 8D C CLRBAR PREBAR
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     PRESET = {CHANGED_HL(PREBAR,0)}
+     GATE = {CHANGED_LH(C,0)}
+     DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) | CHANGED(4D,0) |
+           CHANGED(5D,0) | CHANGED(6D,0) | CHANGED(7D,0) | CHANGED(8D,0)}
+
+  TRISTATE:
+     ENABLE HI=OEEN
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,17ns,22ns),
+         PRESET & TRN_LH, DELAY(-1,13ns,18ns),
+         GATE & TRN_LH, DELAY(-1,12ns,16ns),
+         GATE & TRN_HL, DELAY(-1,16ns,21ns),
+         DATA & TRN_LH, DELAY(-1,7ns,10ns),
+         DATA & TRN_HL, DELAY(-1,11ns,15ns),
+         TRN_Z$, DELAY(-1,11ns,17ns),
+         TRN_$Z, DELAY(-1,6ns,11ns),
+         DELAY(-1,18ns,23ns))}
+
+  TRISTATE:
+     ENABLE LO=OERBBAR
+     1D 2D 3D 4D 5D 6D 7D 8D = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,17ns,24ns),
+         PRESET & TRN_LH, DELAY(-1,17ns,22ns),
+         TRN_Z$, DELAY(-1,11ns,17ns),
+         TRN_$Z, DELAY(-1,6ns,11ns),
+         DELAY(-1,18ns,25ns))}

U4CON CONSTRAINT(12) DPWR DGND
+     C CLRBAR PREBAR 1D 2D 3D 4D 5D 6D 7D 8D OERBBAR
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=C
+     MIN_HI=10ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=10ns
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=10ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=10ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK HL=OERBBAR
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=10ns

.ENDS 74ALS666
*
*
* ----------------------------------------------------------- 74ALS667 ------
*  Octal Bus Transceivers And Registers
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-559 to 2-565
*  bss    5/23/94
*
.SUBCKT 74ALS667 OE1BAR OE2BAR OERBBAR PREBAR CLRBAR C 
+     1D 2D 3D 4D 5D 6D 7D 8D 1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     PREBAR CLRBAR C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     D0_GFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nor(2) DPWR DGND
+     OE1BAR OE2BAR OEEN
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(16,2,11) DPWR DGND
+     1QBAR_O 2QBAR_O 3QBAR_O 4QBAR_O 5QBAR_O 6QBAR_O 7QBAR_O 8QBAR_O
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     OEEN OERBBAR
+     1D 2D 3D 4D 5D 6D 7D 8D C CLRBAR PREBAR
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR 1D 2D 3D 4D 5D 6D 7D 8D
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     PRESET = {CHANGED_HL(PREBAR,0)}
+     GATE = {CHANGED_LH(C,0)}
+     DATA = {CHANGED(1D,0) | CHANGED(2D,0) | CHANGED(3D,0) | CHANGED(4D,0) |
+           CHANGED(5D,0) | CHANGED(6D,0) | CHANGED(7D,0) | CHANGED(8D,0)}
+
+  TRISTATE:
+     ENABLE HI=OEEN
+     1QBAR 2QBAR 3QBAR 4QBAR 5QBAR 6QBAR 7QBAR 8QBAR = {
+       CASE(
+         CLEAR & TRN_LH, DELAY(-1,14ns,19ns),
+         PRESET & TRN_HL, DELAY(-1,17ns,23ns),
+         GATE & TRN_LH, DELAY(-1,18ns,23ns),
+         GATE & TRN_HL, DELAY(-1,14ns,19ns),
+         DATA & TRN_LH, DELAY(-1,13ns,17ns),
+         DATA & TRN_HL, DELAY(-1,9ns,13ns),
+         TRN_Z$, DELAY(-1,11ns,17ns),
+         TRN_$Z, DELAY(-1,6ns,11ns),
+         DELAY(-1,19ns,24ns))}
+
+  TRISTATE:
+     ENABLE LO=OERBBAR
+     1D 2D 3D 4D 5D 6D 7D 8D = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,17ns,23ns),
+         PRESET & TRN_LH, DELAY(-1,18ns,25ns),
+         TRN_Z$, DELAY(-1,11ns,17ns),
+         TRN_$Z, DELAY(-1,6ns,11ns),
+         DELAY(-1,19ns,26ns))}

U4CON CONSTRAINT(12) DPWR DGND
+     C CLRBAR PREBAR 1D 2D 3D 4D 5D 6D 7D 8D OERBBAR
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=C
+     MIN_HI=10ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=10ns
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=10ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=10ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK HL=OERBBAR
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=10ns

.ENDS 74ALS667
*
*
* ----------------------------------------------------------- 74LS668 ------
*  Synchronous 4-Bit Up/Down Counter
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1093 to 2-1101
*  bss    5/23/94
*
.SUBCKT 74LS668 LOADBAR U/DB ENTBAR ENPBAR CLK A B C D 
+     RCOBAR QA QB QC QD 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI $D_HI CLK
+     D1 D2 D3 D4
+     QA_O QB_O QC_O QD_O
+     QABAR QBBAR QCBAR QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(16,5) DPWR DGND
+     U/DB LOADBAR ENPBAR ENTBAR A B C D 
+     QA_O QB_O QC_O QD_O QABAR QBBAR QCBAR QDBAR
+     D1 D2 D3 D4 RCOBAR_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     ub/d = {~U/DB}
+     load = {~LOADBAR}
+     enp = {~ENPBAR}
+     ent = {~ENTBAR}
+     ina = {A & load}
+     inb = {B & load}
+     inc = {C & load}
+     ind = {D & load}
+     enab = {(LOADBAR & enp & ent)}
+     fba = {~((ub/d & QA_O) | (U/DB & QABAR))}
+     fbb = {~((ub/d & QB_O) | (U/DB & QBBAR))}
+     fbc = {~((ub/d & QC_O) | (U/DB & QCBAR))}
+     fbd = {~((ub/d & QD_O) | (U/DB & QDBAR))}
+     RCOBAR_O = {~((ent & ub/d & fba & fbb & fbc & fbd) | (ent & U/DB & fba & fbd))}
+     selup = {~(U/DB & fbd)}
+     seldown = {~(fbd & fbc & fbb & fba & ub/d)}
+     D1 = {(QA_O & (~enab) & LOADBAR) | (enab & QABAR) | ina}
+     d2in = {~(enab & fba)}
+     D2 = {(QB_O & LOADBAR & d2in) | (fba & enab & selup & seldown & QBBAR) | inb}
+     d3in = {~(enab & fba & fbb)}
+     D3 = {(QC_O & LOADBAR & d3in) | (enab & seldown & fba & fbb & QCBAR) | inc}
+     d4in = {~(enab & fba)}
+     D4 = {(QD_O & LOADBAR & d4in) | (enab & fba & fbb & fbc & QDBAR) | ind}

U3DLY PINDLY(5,0,3) DPWR DGND
+     QA_O QB_O QC_O QD_O RCOBAR_O
+     CLK ENTBAR U/DB
+     QA QB QC QD RCOBAR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CLK,0)}
+     UPDOWN = {CHANGED(U/DB,0)}
+     ENABT = {CHANGED(ENTBAR,0)}
+
+  PINDLY:
+     QA QB QC QD = {
+       CASE(
+         TRN_LH, DELAY(-1,18ns,27ns),
+         TRN_HL, DELAY(-1,18ns,27ns),
+         DELAY(-1,19ns,28ns))}
+
+     RCOBAR = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(-1,26ns,40ns),
+         CLOCK & TRN_HL, DELAY(-1,40ns,60ns),
+         UPDOWN & TRN_LH, DELAY(-1,22ns,35ns),
+         UPDOWN & TRN_HL, DELAY(-1,26ns,40ns),
+         ENABT & TRN_LH, DELAY(-1,11ns,17ns),
+         ENABT & TRN_HL, DELAY(-1,29ns,45ns),
+         DELAY(-1,41ns,61ns))}

U4CON CONSTRAINT(9) DPWR DGND
+     CLK A B C D ENPBAR ENTBAR LOADBAR U/DB
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(4)=A B C D
+     SETUPTIME=25ns
+     WHEN = {LOADBAR=='0}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=ENPBAR ENTBAR
+     SETUPTIME=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=LOADBAR
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=U/DB
+     SETUPTIME=45ns

.ENDS 74LS668
*
*
* ----------------------------------------------------------- 74LS669 ------
*  Synchronous 4-Bit Up/Down Counter
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1093 to 2-1101
*  bss    5/23/94
*
.SUBCKT 74LS669 LOADBAR U/DB ENTBAR ENPBAR CLK A B C D 
+     RCOBAR QA QB QC QD 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI $D_HI CLK
+     D1 D2 D3 D4
+     QA_O QB_O QC_O QD_O
+     QABAR QBBAR QCBAR QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(16,5) DPWR DGND
+     U/DB LOADBAR ENPBAR ENTBAR A B C D 
+     QA_O QB_O QC_O QD_O QABAR QBBAR QCBAR QDBAR
+     D1 D2 D3 D4 RCOBAR_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     ub/d = {~U/DB}
+     load = {~LOADBAR}
+     enp = {~ENPBAR}
+     ent = {~ENTBAR}
+     ina = {A & load}
+     inb = {B & load}
+     inc = {C & load}
+     ind = {D & load}
+     enab = {(LOADBAR & enp & ent)}
+     fba = {~((ub/d & QA_O) | (U/DB & QABAR))}
+     fbb = {~((ub/d & QB_O) | (U/DB & QBBAR))}
+     fbc = {~((ub/d & QC_O) | (U/DB & QCBAR))}
+     fbd = {~((ub/d & QD_O) | (U/DB & QDBAR))}
+     RCOBAR_O = {~((ent & fba & fbb & fbc & fbd))}
+     D1 = {(QA_O & (~enab) & LOADBAR) | (enab & QABAR) | ina}
+     d2in = {~(enab & fba)}
+     D2 = {(QB_O & LOADBAR & d2in) | (fba & enab & QBBAR) | inb}
+     d3in = {~(enab & fba & fbb)}
+     D3 = {(QC_O & LOADBAR & d3in) | (enab & fba & fbb & QCBAR) | inc}
+     d4in = {~(enab & fba & fbb & fbc)}
+     D4 = {(QD_O & LOADBAR & d4in) | (enab & fba & fbb & fbc & QDBAR) | ind}

U3DLY PINDLY(5,0,3) DPWR DGND
+     QA_O QB_O QC_O QD_O RCOBAR_O
+     CLK ENTBAR U/DB
+     QA QB QC QD RCOBAR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CLK,0)}
+     UPDOWN = {CHANGED(U/DB,0)}
+     ENABT = {CHANGED(ENTBAR,0)}
+
+  PINDLY:
+     QA QB QC QD = {
+       CASE(
+         TRN_LH, DELAY(-1,18ns,27ns),
+         TRN_HL, DELAY(-1,18ns,27ns),
+         DELAY(-1,19ns,28ns))}
+
+     RCOBAR = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(-1,26ns,40ns),
+         CLOCK & TRN_HL, DELAY(-1,40ns,60ns),
+         UPDOWN & TRN_LH, DELAY(-1,22ns,35ns),
+         UPDOWN & TRN_HL, DELAY(-1,26ns,40ns),
+         ENABT & TRN_LH, DELAY(-1,11ns,17ns),
+         ENABT & TRN_HL, DELAY(-1,29ns,45ns),
+         DELAY(-1,41ns,61ns))}

U4CON CONSTRAINT(9) DPWR DGND
+     CLK A B C D ENPBAR ENTBAR LOADBAR U/DB
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(4)=A B C D
+     SETUPTIME=25ns
+     WHEN = {LOADBAR=='0}
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=ENPBAR ENTBAR
+     SETUPTIME=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=LOADBAR
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=U/DB
+     SETUPTIME=45ns

.ENDS 74LS669
*
*
* ----------------------------------------------------------- 74F670 ------
*  4-By-4 Register Files With 3-State Outputs
*
*  The FAST TTL Logic Data Book, 1992, Philips Pages 682 to 687
*  bss    5/24/94
*
.SUBCKT 74F670 WA WB RA RB WEBAR REBAR D0 D1 D2 D3 Q0 Q1 Q2 Q3 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(4) DPWR DGND
+     $D_HI $D_HI CLK0
+     D0 D1 D2 D3
+     Q0A Q1A Q2A Q3A
+     $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(4) DPWR DGND
+     $D_HI $D_HI CLK1
+     D0 D1 D2 D3
+     Q0B Q1B Q2B Q3B
+     $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 dltch(4) DPWR DGND
+     $D_HI $D_HI CLK2
+     D0 D1 D2 D3
+     Q0C Q1C Q2C Q3C
+     $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 dltch(4) DPWR DGND
+     $D_HI $D_HI CLK3
+     D0 D1 D2 D3
+     Q0D Q1D Q2D Q3D
+     $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(22,8) DPWR DGND
+     REBAR RA RB WEBAR WA WB Q0A Q1A Q2A Q3A Q0B Q1B Q2B Q3B
+     Q0C Q1C Q2C Q3C Q0D Q1D Q2D Q3D
+     CLK0 CLK1 CLK2 CLK3 Q0_O Q1_O Q2_O Q3_O
+     D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     wabar = {~WA}
+     w1nor = {~(WEBAR | WB)}
+     w2nor = {~(w1nor | WEBAR)}
+     CLK0 = {(w1nor & wabar)}
+     CLK1 = {(w1nor & WA)}
+     CLK2 = {(w2nor & wabar)}
+     CLK3 = {(w2nor & WA)}
+     rbbar = {~RB}
+     r1nor = {~(REBAR | RA)}
+     r2nor = {~(REBAR | r1nor)}
+     Q0_O = {(Q0A & rbbar & r1nor) | (Q0B & rbbar & r2nor) | (Q0C & RB & r1nor) | 
+              (Q0D & RB & r2nor)}
+     Q1_O = {(Q1A & rbbar & r1nor) | (Q1B & rbbar & r2nor) | (Q1C & RB & r1nor) | 
+              (Q1D & RB & r2nor)}
+     Q2_O = {(Q2A & rbbar & r1nor) | (Q2B & rbbar & r2nor) | (Q2C & RB & r1nor) | 
+              (Q2D & RB & r2nor)}
+     Q3_O = {(Q3A & rbbar & r1nor) | (Q3B & rbbar & r2nor) | (Q3C & RB & r1nor) | 
+              (Q3D & RB & r2nor)}

U6DLY PINDLY(4,1,7) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O
+     REBAR
+     RA RB WEBAR D0 D1 D2 D3
+     Q0 Q1 Q2 Q3
+     IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     READ = {CHANGED(RA,0) | CHANGED(RB,0)}
+     WRITE = {CHANGED_HL(WEBAR,0)}
+     DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0)}
+
+  TRISTATE:
+     ENABLE LO=REBAR
+     Q0 Q1 Q2 Q3 = {
+       CASE(
+         WRITE & TRN_LH, DELAY(5ns,7ns,10ns),
+         WRITE & TRN_HL, DELAY(6.5ns,8.5ns,11.5ns),
+         READ & TRN_LH, DELAY(3.5ns,5.5ns,9ns),
+         READ & TRN_HL, DELAY(4ns,5.5ns,8.5ns),
+         DATA & TRN_LH, DELAY(3.5ns,6ns,8.5ns),
+         DATA & TRN_HL, DELAY(6ns,8ns,11ns),
+         TRN_ZH, DELAY(3ns,7ns,12ns),
+         TRN_ZL, DELAY(4.5ns,6.5ns,9ns),
+         TRN_HZ, DELAY(2ns,3ns,6.5ns),
+         TRN_LZ, DELAY(3ns,5ns,8.5ns),
+         DELAY(7.5ns,9.5ns,13ns))}

U7CON CONSTRAINT(5) DPWR DGND
+     WEBAR D0 D1 D2 D3
+     IO_F IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=WEBAR
+     MIN_LO=8.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=WEBAR
+     DATA(4)=D0 D1 D2 D3
+     SETUPTIME_HI=1.5ns
+     SETUPTIME_LO=7ns
+     HOLDTIME_LO=1ns

.ENDS 74F670
*
*
* ----------------------------------------------------------- 74HC670 ------
*  4-By-4 Register Files With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1994, Philips Pages 777 to 782
*  bss    5/31/94
*
.SUBCKT 74HC670 WA WB RA RB WEBAR REBAR D0 D1 D2 D3 Q0 Q1 Q2 Q3 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(4) DPWR DGND
+     $D_HI $D_HI CLK0
+     D0 D1 D2 D3
+     Q0A Q1A Q2A Q3A
+     $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(4) DPWR DGND
+     $D_HI $D_HI CLK1
+     D0 D1 D2 D3
+     Q0B Q1B Q2B Q3B
+     $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 dltch(4) DPWR DGND
+     $D_HI $D_HI CLK2
+     D0 D1 D2 D3
+     Q0C Q1C Q2C Q3C
+     $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 dltch(4) DPWR DGND
+     $D_HI $D_HI CLK3
+     D0 D1 D2 D3
+     Q0D Q1D Q2D Q3D
+     $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(22,8) DPWR DGND
+     REBAR RA RB WEBAR WA WB Q0A Q1A Q2A Q3A Q0B Q1B Q2B Q3B
+     Q0C Q1C Q2C Q3C Q0D Q1D Q2D Q3D
+     CLK0 CLK1 CLK2 CLK3 Q0_O Q1_O Q2_O Q3_O
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     wabar = {~WA}
+     w1nor = {~(WEBAR | WB)}
+     w2nor = {~(w1nor | WEBAR)}
+     CLK0 = {(w1nor & wabar)}
+     CLK1 = {(w1nor & WA)}
+     CLK2 = {(w2nor & wabar)}
+     CLK3 = {(w2nor & WA)}
+     rbbar = {~RB}
+     r1nor = {~(REBAR | RA)}
+     r2nor = {~(REBAR | r1nor)}
+     Q0_O = {(Q0A & rbbar & r1nor) | (Q0B & rbbar & r2nor) | (Q0C & RB & r1nor) | 
+              (Q0D & RB & r2nor)}
+     Q1_O = {(Q1A & rbbar & r1nor) | (Q1B & rbbar & r2nor) | (Q1C & RB & r1nor) | 
+              (Q1D & RB & r2nor)}
+     Q2_O = {(Q2A & rbbar & r1nor) | (Q2B & rbbar & r2nor) | (Q2C & RB & r1nor) | 
+              (Q2D & RB & r2nor)}
+     Q3_O = {(Q3A & rbbar & r1nor) | (Q3B & rbbar & r2nor) | (Q3C & RB & r1nor) | 
+              (Q3D & RB & r2nor)}

U6DLY PINDLY(4,1,7) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O
+     REBAR
+     RA RB WEBAR D0 D1 D2 D3
+     Q0 Q1 Q2 Q3
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     READ = {CHANGED(RA,0) | CHANGED(RB,0)}
+     WRITE = {CHANGED_HL(WEBAR,0)}
+     DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0)}
+
+  TRISTATE:
+     ENABLE LO=REBAR
+     Q0 Q1 Q2 Q3 = {
+       CASE(
+         WRITE, DELAY(-1,28ns,50ns),
+         READ, DELAY(-1,21ns,39ns),
+         DATA, DELAY(-1,27ns,50ns),
+         TRN_Z$, DELAY(-1,14ns,30ns),
+         TRN_$Z, DELAY(-1,17ns,30ns),
+         DELAY(-1,29ns,51ns))}

U7CON CONSTRAINT(7) DPWR DGND
+     WEBAR D0 D1 D2 D3 WA WB
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=WEBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=WEBAR
+     DATA(4)=D0 D1 D2 D3
+     SETUPTIME=15ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK HL=WEBAR
+     DATA(2)=WA WB
+     SETUPTIME=15ns
+     HOLDTIME=5ns

.ENDS 74HC670
*
*
* ----------------------------------------------------------- 74HCT670 ------
*  4-By-4 Register Files With 3-State Outputs
*
*  The High Speed CMOS Logic Data Book, 1994, Philips Pages 777 to 782
*  bss    5/31/94
*
.SUBCKT 74HCT670 WA WB RA RB WEBAR REBAR D0 D1 D2 D3 Q0 Q1 Q2 Q3 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(4) DPWR DGND
+     $D_HI $D_HI CLK0
+     D0 D1 D2 D3
+     Q0A Q1A Q2A Q3A
+     $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(4) DPWR DGND
+     $D_HI $D_HI CLK1
+     D0 D1 D2 D3
+     Q0B Q1B Q2B Q3B
+     $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 dltch(4) DPWR DGND
+     $D_HI $D_HI CLK2
+     D0 D1 D2 D3
+     Q0C Q1C Q2C Q3C
+     $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 dltch(4) DPWR DGND
+     $D_HI $D_HI CLK3
+     D0 D1 D2 D3
+     Q0D Q1D Q2D Q3D
+     $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(22,8) DPWR DGND
+     REBAR RA RB WEBAR WA WB Q0A Q1A Q2A Q3A Q0B Q1B Q2B Q3B
+     Q0C Q1C Q2C Q3C Q0D Q1D Q2D Q3D
+     CLK0 CLK1 CLK2 CLK3 Q0_O Q1_O Q2_O Q3_O
+     D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     wabar = {~WA}
+     w1nor = {~(WEBAR | WB)}
+     w2nor = {~(w1nor | WEBAR)}
+     CLK0 = {(w1nor & wabar)}
+     CLK1 = {(w1nor & WA)}
+     CLK2 = {(w2nor & wabar)}
+     CLK3 = {(w2nor & WA)}
+     rbbar = {~RB}
+     r1nor = {~(REBAR | RA)}
+     r2nor = {~(REBAR | r1nor)}
+     Q0_O = {(Q0A & rbbar & r1nor) | (Q0B & rbbar & r2nor) | (Q0C & RB & r1nor) | 
+              (Q0D & RB & r2nor)}
+     Q1_O = {(Q1A & rbbar & r1nor) | (Q1B & rbbar & r2nor) | (Q1C & RB & r1nor) | 
+              (Q1D & RB & r2nor)}
+     Q2_O = {(Q2A & rbbar & r1nor) | (Q2B & rbbar & r2nor) | (Q2C & RB & r1nor) | 
+              (Q2D & RB & r2nor)}
+     Q3_O = {(Q3A & rbbar & r1nor) | (Q3B & rbbar & r2nor) | (Q3C & RB & r1nor) | 
+              (Q3D & RB & r2nor)}

U6DLY PINDLY(4,1,7) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O
+     REBAR
+     RA RB WEBAR D0 D1 D2 D3
+     Q0 Q1 Q2 Q3
+     IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     READ = {CHANGED(RA,0) | CHANGED(RB,0)}
+     WRITE = {CHANGED_HL(WEBAR,0)}
+     DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0)}
+
+  TRISTATE:
+     ENABLE LO=REBAR
+     Q0 Q1 Q2 Q3 = {
+       CASE(
+         WRITE, DELAY(-1,28ns,50ns),
+         READ, DELAY(-1,21ns,40ns),
+         DATA, DELAY(-1,27ns,50ns),
+         TRN_Z$, DELAY(-1,18ns,35ns),
+         TRN_$Z, DELAY(-1,19ns,35ns),
+         DELAY(-1,29ns,51ns))}

U7CON CONSTRAINT(7) DPWR DGND
+     WEBAR D0 D1 D2 D3 WA WB
+     IO_HCT IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=WEBAR
+     MIN_LO=23ns
+
+  SETUP_HOLD:
+     CLOCK LH=WEBAR
+     DATA(4)=D0 D1 D2 D3
+     SETUPTIME=15ns
+     HOLDTIME=5ns
+
+  SETUP_HOLD:
+     CLOCK HL=WEBAR
+     DATA(2)=WA WB
+     SETUPTIME=15ns
+     HOLDTIME=5ns

.ENDS 74HCT670
*
*
* ----------------------------------------------------------- 74LS670 ------
*  4-By-4 Register Files With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1103 to 2-1109
*  bss    5/31/94
*
.SUBCKT 74LS670 WA WB RA RB GWBAR GRBAR D1 D2 D3 D4 Q1 Q2 Q3 Q4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(4) DPWR DGND
+     $D_HI $D_HI CLK0
+     D1 D2 D3 D4
+     Q0A Q1A Q2A Q3A
+     $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dltch(4) DPWR DGND
+     $D_HI $D_HI CLK1
+     D1 D2 D3 D4
+     Q0B Q1B Q2B Q3B
+     $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 dltch(4) DPWR DGND
+     $D_HI $D_HI CLK2
+     D1 D2 D3 D4
+     Q0C Q1C Q2C Q3C
+     $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 dltch(4) DPWR DGND
+     $D_HI $D_HI CLK3
+     D1 D2 D3 D4
+     Q0D Q1D Q2D Q3D
+     $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(22,8) DPWR DGND
+     GRBAR RA RB GWBAR WA WB Q0A Q1A Q2A Q3A Q0B Q1B Q2B Q3B
+     Q0C Q1C Q2C Q3C Q0D Q1D Q2D Q3D
+     CLK0 CLK1 CLK2 CLK3 Q0_O Q1_O Q2_O Q3_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     wabar = {~WA}
+     w1nor = {~(GWBAR | WB)}
+     w2nor = {~(w1nor | GWBAR)}
+     CLK0 = {(w1nor & wabar)}
+     CLK1 = {(w1nor & WA)}
+     CLK2 = {(w2nor & wabar)}
+     CLK3 = {(w2nor & WA)}
+     rbbar = {~RB}
+     r1nor = {~(GRBAR | RA)}
+     r2nor = {~(GRBAR | r1nor)}
+     Q0_O = {(Q0A & rbbar & r1nor) | (Q0B & rbbar & r2nor) | (Q0C & RB & r1nor) | 
+              (Q0D & RB & r2nor)}
+     Q1_O = {(Q1A & rbbar & r1nor) | (Q1B & rbbar & r2nor) | (Q1C & RB & r1nor) | 
+              (Q1D & RB & r2nor)}
+     Q2_O = {(Q2A & rbbar & r1nor) | (Q2B & rbbar & r2nor) | (Q2C & RB & r1nor) | 
+              (Q2D & RB & r2nor)}
+     Q3_O = {(Q3A & rbbar & r1nor) | (Q3B & rbbar & r2nor) | (Q3C & RB & r1nor) | 
+              (Q3D & RB & r2nor)}

U6DLY PINDLY(4,1,7) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O
+     GRBAR
+     RA RB GWBAR D1 D2 D3 D4
+     Q1 Q2 Q3 Q4
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     READ = {CHANGED(RA,0) | CHANGED(RB,0)}
+     WRITE = {CHANGED_HL(GWBAR,0)}
+     DATA = {CHANGED(D4,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0)}
+
+  TRISTATE:
+     ENABLE LO=GRBAR
+     Q1 Q2 Q3 Q4 = {
+       CASE(
+         WRITE & TRN_LH, DELAY(-1,26ns,45ns),
+         WRITE & TRN_HL, DELAY(-1,28ns,50ns),
+         READ & TRN_LH, DELAY(-1,23ns,40ns),
+         READ & TRN_HL, DELAY(-1,25ns,45ns),
+         DATA & TRN_LH, DELAY(-1,25ns,45ns),
+         DATA & TRN_HL, DELAY(-1,23ns,40ns),
+         TRN_ZH, DELAY(-1,15ns,35ns),
+         TRN_ZL, DELAY(-1,22ns,40ns),
+         TRN_HZ, DELAY(-1,30ns,50ns),
+         TRN_LZ, DELAY(-1,16ns,35ns),
+         DELAY(-1,31ns,51ns))}

U7CON CONSTRAINT(8) DPWR DGND
+     GWBAR D1 D2 D3 D4 WA WB GRBAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=GWBAR
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=GRBAR
+     MIN_LO=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=GWBAR
+     DATA(4)=D1 D2 D3 D4
+     SETUPTIME=10ns
+     HOLDTIME=15ns
+
+  SETUP_HOLD:
+     CLOCK HL=GWBAR
+     DATA(2)=WA WB
+     SETUPTIME=15ns
+     HOLDTIME=5ns

.ENDS 74LS670
*
*
* ----------------------------------------------------------- 74LS671 ------
*  4-Bit Universal Shift Registers/Latches With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1111 to 2-1116
*  bss    6/1/94
*
.SUBCKT 74LS671 GBAR R/SBAR RCK SRCLRBAR S0 S1 SRCK SERR SERL A B C D 
+     CASC QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI SRCLRBAR SRCK
+     DA DB DC DD
+     Q1 Q2 Q3 Q4 Q1BAR Q2BAR Q3BAR Q4BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(4) DPWR DGND
+     $D_HI $D_HI RCK
+     Q1 Q2 Q3 Q4
+     $D_NC $D_NC $D_NC $D_NC QABAR QBBAR QCBAR QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(21,9) DPWR DGND
+     R/SBAR S0 S1 SERR SERL A B C D Q1 Q2 Q3 Q4 Q1BAR Q2BAR Q3BAR Q4BAR
+     QABAR QBBAR QCBAR QDBAR
+     DA DB DC DD QA_O QB_O QC_O QD_O CASC_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     rbar/s = {~R/SBAR}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     DA = {(A & S0 & S1) | (s0bar & S1 & Q2) | (SERR & S0 & s1bar) | (s0bar & s1bar & Q1)}
+     DB = {(B & S0 & S1) | (s0bar & S1 & Q3) | (Q1 & S0 & s1bar) | (s0bar & s1bar & Q2)}
+     DC = {(C & S0 & S1) | (s0bar & S1 & Q4) | (Q2 & S0 & s1bar) | (s0bar & s1bar & Q3)}
+     DD = {(D & S0 & S1) | (s0bar & S1 & SERL) | (Q3 & S0 & s1bar) | (s0bar & s1bar & Q4)}
+     QA_O = {~((R/SBAR & QABAR) | (rbar/s & Q1BAR))}
+     QB_O = {~((R/SBAR & QBBAR) | (rbar/s & Q2BAR))}
+     QC_O = {~((R/SBAR & QCBAR) | (rbar/s & Q3BAR))}
+     QD_O = {~((R/SBAR & QDBAR) | (rbar/s & Q4BAR))}
+     CASC_O = {~((Q4BAR & S0 & s1bar) | (Q1BAR & s0bar & S1))}

U4DLY PINDLY(5,1,6) DPWR DGND
+     QA_O QB_O QC_O QD_O CASC_O
+     GBAR
+     SRCK S0 S1 SRCLRBAR RCK R/SBAR
+     QA QB QC QD CASC
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKS = {CHANGED_LH(SRCK,0)}
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0)}
+     CLEAR = {CHANGED_HL(SRCLRBAR,0)}
+     REG = {CHANGED_LH(R/SBAR,0)}
+     SHIFT = {CHANGED_HL(R/SBAR,0)}
+     LOAD = {S0=='1 & S1=='1}
+     LEFT = {S0=='0 & S1=='1}
+     RIGHT = {S0=='1 & S1=='0}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,21ns,30ns),
+         REG & TRN_LH, DELAY(-1,12ns,25ns),
+         REG & TRN_HL, DELAY(-1,15ns,25ns),
+         SHIFT & TRN_LH, DELAY(-1,17ns,25ns),
+         SHIFT & TRN_HL, DELAY(-1,16ns,25ns),
+         CLOCKS & TRN_LH, DELAY(-1,10ns,20ns),
+         CLOCKS & (LEFT | RIGHT) & TRN_HL, DELAY(-1,16ns,25ns),
+         CLOCKS & LOAD & TRN_HL, DELAY(-1,15ns,25ns),
+         CLOCKR & TRN_LH, DELAY(-1,10ns,20ns),
+         CLOCKR & TRN_HL, DELAY(-1,15ns,25ns),
+         TRN_ZH, DELAY(-1,16ns,25ns),
+         TRN_ZL, DELAY(-1,19ns,30ns),
+         TRN_$Z, DELAY(-1,16ns,25ns),
+         DELAY(-1,22ns,31ns))}
+
+  PINDLY:
+     CASC = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,19ns,30ns),
+         CLOCKS & TRN_LH, DELAY(-1,31ns,45ns),
+         CLOCKS & TRN_HL, DELAY(-1,14ns,25ns),
+         SELECT, DELAY(-1,11ns,20ns),
+         DELAY(-1,32ns,46ns))}

U5CON CONSTRAINT(11) DPWR DGND
+     SRCK RCK SRCLRBAR S0 S1 A B C D SERR SERL
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=SRCK
+     MIN_HI=30ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=30ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=SRCLRBAR
+     MIN_LO=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(2)=S0 S1
+     SETUPTIME=45ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(4)=A B C D
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=SRCK
+     SETUPTIME_HI=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SERR
+     SETUPTIME=35ns
+     WHEN={S0=='1 & S1=='0}
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SERL
+     SETUPTIME=35ns
+     WHEN={S0=='0 & S1=='1}
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SRCLRBAR
+     SETUPTIME_HI=30ns

.ENDS 74LS671
*
*
* ----------------------------------------------------------- 74LS672 ------
*  4-Bit Universal Shift Registers/Latches With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1111 to 2-1116
*  bss    6/1/94
*
.SUBCKT 74LS672 GBAR R/SBAR RCK SRCLRBAR S0 S1 SRCK SERR SERL A B C D 
+     CASC QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI $D_HI SRCK
+     DA DB DC DD
+     Q1 Q2 Q3 Q4 Q1BAR Q2BAR Q3BAR Q4BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(4) DPWR DGND
+     $D_HI $D_HI RCK
+     Q1 Q2 Q3 Q4
+     $D_NC $D_NC $D_NC $D_NC QABAR QBBAR QCBAR QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(22,9) DPWR DGND
+     R/SBAR S0 S1 SERR SERL A B C D Q1 Q2 Q3 Q4 Q1BAR Q2BAR Q3BAR Q4BAR
+     QABAR QBBAR QCBAR QDBAR SRCLRBAR
+     DA DB DC DD QA_O QB_O QC_O QD_O CASC_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     rbar/s = {~R/SBAR}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     DA = {(A & S0 & S1 & SRCLRBAR) | (s0bar & S1 & Q2 & SRCLRBAR) | 
+         (SERR & S0 & s1bar & SRCLRBAR) | (s0bar & s1bar & Q1 & SRCLRBAR)}
+     DB = {(B & S0 & S1 & SRCLRBAR) | (s0bar & S1 & Q3 & SRCLRBAR) | 
+         (Q1 & S0 & s1bar & SRCLRBAR) | (s0bar & s1bar & Q2 & SRCLRBAR)}
+     DC = {(C & S0 & S1 & SRCLRBAR) | (s0bar & S1 & Q4 & SRCLRBAR) | 
+         (Q2 & S0 & s1bar & SRCLRBAR) | (s0bar & s1bar & Q3 & SRCLRBAR)}
+     DD = {(D & S0 & S1 & SRCLRBAR) | (s0bar & S1 & SERL & SRCLRBAR) | 
+         (Q3 & S0 & s1bar & SRCLRBAR) | (s0bar & s1bar & Q4 & SRCLRBAR)}
+     QA_O = {~((R/SBAR & QABAR) | (rbar/s & Q1BAR))}
+     QB_O = {~((R/SBAR & QBBAR) | (rbar/s & Q2BAR))}
+     QC_O = {~((R/SBAR & QCBAR) | (rbar/s & Q3BAR))}
+     QD_O = {~((R/SBAR & QDBAR) | (rbar/s & Q4BAR))}
+     CASC_O = {~((Q4BAR & S0 & s1bar) | (Q1BAR & s0bar & S1))}

U4DLY PINDLY(5,1,6) DPWR DGND
+     QA_O QB_O QC_O QD_O CASC_O
+     GBAR
+     SRCK S0 S1 SRCLRBAR RCK R/SBAR
+     QA QB QC QD CASC
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKS = {CHANGED_LH(SRCK,0)}
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     SELECT = {CHANGED(S0,0) | CHANGED(S1,0)}
+     CLEAR = {SRCLRBAR=='0}
+     REG = {CHANGED_LH(R/SBAR,0)}
+     SHIFT = {CHANGED_HL(R/SBAR,0)}
+     LOAD = {S0=='1 & S1=='1}
+     LEFT = {S0=='0 & S1=='1}
+     RIGHT = {S0=='1 & S1=='0}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD = {
+       CASE(
+         CLOCKS & CLEAR & TRN_HL, DELAY(-1,17ns,30ns),
+         REG & TRN_LH, DELAY(-1,13ns,25ns),
+         REG & TRN_HL, DELAY(-1,15ns,25ns),
+         SHIFT & TRN_LH, DELAY(-1,17ns,25ns),
+         SHIFT & TRN_HL, DELAY(-1,16ns,25ns),
+         CLOCKS & TRN_LH, DELAY(-1,10ns,20ns),
+         CLOCKS & (LEFT | RIGHT) & TRN_HL, DELAY(-1,16ns,25ns),
+         CLOCKS & LOAD & TRN_HL, DELAY(-1,15ns,25ns),
+         CLOCKR & TRN_LH, DELAY(-1,10ns,20ns),
+         CLOCKR & TRN_HL, DELAY(-1,15ns,25ns),
+         TRN_ZH, DELAY(-1,16ns,25ns),
+         TRN_ZL, DELAY(-1,19ns,30ns),
+         TRN_$Z, DELAY(-1,16ns,25ns),
+         DELAY(-1,22ns,31ns))}
+
+  PINDLY:
+     CASC = {
+       CASE(
+         CLOCKS & CLEAR & TRN_HL, DELAY(-1,19ns,30ns),
+         CLOCKS & TRN_LH, DELAY(-1,31ns,45ns),
+         CLOCKS & TRN_HL, DELAY(-1,14ns,25ns),
+         SELECT, DELAY(-1,12ns,20ns),
+         DELAY(-1,32ns,46ns))}

U5CON CONSTRAINT(11) DPWR DGND
+     SRCK RCK SRCLRBAR S0 S1 A B C D SERR SERL
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=SRCK
+     MIN_HI=30ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=30ns
+     MIN_LO=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(2)=S0 S1
+     SETUPTIME=45ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(4)=A B C D
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=SRCK
+     SETUPTIME_HI=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SERR
+     SETUPTIME=35ns
+     WHEN={S0=='1 & S1=='0}
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SERL
+     SETUPTIME=35ns
+     WHEN={S0=='0 & S1=='1}
+
+  SETUP_HOLD:
+     CLOCK LH=SRCK
+     DATA(1)=SRCLRBAR
+     SETUPTIME_LO=25ns

.ENDS 74LS672

*------------------------------------------------------------74F673A-----

* 16 Bit Serial-In, Serial/Parallel-Out Shift Register
* National Advanced Bipolar Logic Databook, 1995, pages 7-471 to 7-475
* jat 7/23/96

.SUBCKT 74F673A Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 Q10 Q11 Q12 Q13 Q14 Q15
+ CSBAR SHCPBAR R/WBAR STCP STMRBAR SI/O
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(37,19) DPWR DGND
+ SHCPBAR STCP R/WBAR CSBAR SI/O
+ Q0ST Q1ST Q2ST Q3ST Q4ST Q5ST Q6ST Q7ST Q8ST Q9ST Q10ST Q11ST Q12ST Q13ST
+ Q14ST Q15ST
+ Q0SH Q1SH Q2SH Q3SH Q4SH Q5SH Q6SH Q7SH Q8SH Q9SH Q10SH Q11SH Q12SH Q13SH
+ Q14SH Q15SH
+ SHCLOCK STCLOCK ZER 1 2 3 4 5 6 7 8 9 TEN 11 12 13 14 15 OUTPUT
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+    SHCLOCK = {~SHCPBAR & ~CSBAR}
+    STCLOCK = {STCP & ~R/WBAR & ~CSBAR}
+    OUTPUT = {~CSBAR & R/WBAR}
+    PAR = {~CSBAR & R/WBAR & STCP}
+    ZER = {(SI/O & (~CSBAR & ~R/WBAR)) | (Q15SH & (~CSBAR & R/WBAR)) | (Q0ST & PAR)}
+    1 = {(Q0SH & ~PAR) | (Q1ST & PAR)}
+    2 = {(Q1SH & ~PAR) | (Q2ST & PAR)}
+    3 = {(Q2SH & ~PAR) | (Q3ST & PAR)}
+    4 = {(Q3SH & ~PAR) | (Q4ST & PAR)}
+    5 = {(Q4SH & ~PAR) | (Q5ST & PAR)}
+    6 = {(Q5SH & ~PAR) | (Q6ST & PAR)}
+    7 = {(Q6SH & ~PAR) | (Q7ST & PAR)}
+    8 = {(Q7SH & ~PAR) | (Q8ST & PAR)}
+    9 = {(Q8SH & ~PAR) | (Q9ST & PAR)}
+    TEN = {(Q9SH & ~PAR) | (Q10ST & PAR)}
+    11 = {(Q10SH & ~PAR) | (Q11ST & PAR)}
+    12 = {(Q11SH & ~PAR) | (Q12ST & PAR)}
+    13 = {(Q12SH & ~PAR) | (Q13ST & PAR)}
+    14 = {(Q13SH & ~PAR) | (Q14ST & PAR)}
+    15 = {(Q14SH & ~PAR) | (Q15ST & PAR)}

U2 DFF(16) DPWR DGND
+ $D_HI $D_HI SHCLOCK
+ ZER 1 2 3 4 5 6 7 8 9 TEN 11 12 13 14 15
+ Q0SH Q1SH Q2SH Q3SH Q4SH Q5SH Q6SH Q7SH Q8SH Q9SH Q10SH Q11SH Q12SH
+ Q13SH Q14SH Q15SH
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(16) DPWR DGND
+ $D_HI STMRBAR STCLOCK
+ Q0SH Q1SH Q2SH Q3SH Q4SH Q5SH Q6SH Q7SH Q8SH Q9SH Q10SH Q11SH Q12SH
+ Q13SH Q14SH Q15SH
+ Q0ST Q1ST Q2ST Q3ST Q4ST Q5ST Q6ST Q7ST Q8ST Q9ST Q10ST Q11ST Q12ST
+ Q13ST Q14ST Q15ST
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(17,1,4) DPWR DGND
+ Q15SH Q0ST Q1ST Q2ST Q3ST Q4ST Q5ST Q6ST Q7ST Q8ST Q9ST Q10ST Q11ST Q12ST
+ Q13ST Q14ST Q15ST
+ OUTPUT
+ STCP STMRBAR CSBAR R/WBAR
+ SI/O Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 Q10 Q11 Q12 Q13 Q14 Q15
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    CHIP = {CHANGED(CSBAR,0)}
+    READ = {CHANGED(R/WBAR,0)}
+    CLEAR = {CHANGED(STMRBAR,0)}
+    EDGE = {CHANGED(STCP,0)}
+ TRISTATE:
+   ENABLE HI = OUTPUT
+   SI/O = {
+     CASE(
+         CHIP & TRN_ZH, DELAY(5NS,8.5NS,11NS),
+         CHIP & TRN_ZL, DELAY(5.5NS,9NS,11.5NS),
+         CHIP & TRN_HZ, DELAY(3.5NS,5.5NS,7.5NS),
+         CHIP & TRN_LZ, DELAY(3NS,4.5NS,6.5NS),
+         READ & TRN_ZH, DELAY(4.5NS,7.5NS,9.5NS),
+         READ & TRN_ZL, DELAY(4.5NS,8NS,10NS),
+         READ & TRN_HZ, DELAY(3NS,5.5NS,7NS),
+         READ & TRN_LZ, DELAY(2.5NS,4NS,5.5NS),
+         TRN_LH, DELAY(4NS,6.5NS,8.5NS),
+         TRN_HL, DELAY(4.5NS,8NS,10.5NS),
+         DELAY(6.5NS,10NS,12.5NS))}
+ PINDLY:
+  Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 Q10 Q11 Q12 Q13 Q14 Q15 = {
+     CASE(
+         CLEAR & TRN_HL, DELAY(6NS,16.5NS,20.5NS),
+         EDGE & TRN_LH, DELAY(3NS,8NS,10.5NS),
+         EDGE & TRN_HL, DELAY(3NS,10.5NS,13.5NS),
+         DELAY(7NS,17.5NS,21.5NS))}

U5 CONSTRAINT(5) DPWR DGND
+ SHCPBAR STCP CSBAR R/WBAR SI/O
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = SHCPBAR
+   MAXFREQ = 130MEG
+ FREQ:
+   NODE = STCP
+   MAXFREQ = 130MEG
+ SETUP_HOLD:
+   CLOCK HL = SHCPBAR
+   DATA(1) = SI/O
+   SETUPTIME = 3NS
+   HOLDTIME = 3NS
+ SETUP_HOLD:
+   CLOCK LH = STCP
+   DATA(2) = R/WBAR CSBAR
+   SETUPTIME_HI = 3.5NS
+   SETUPTIME_LO = 6NS

.ENDS 74F673A

*------------------------------------------------------------74LS673-----

* 16 Bit Shift Register
* TI TTL Logic Data Book, 1988, pages 2-1117 to 2-1122
* jat 8/14/96

.SUBCKT 74LS673 Y0 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 Y9 Y10 Y11 Y12 Y13 Y14 Y15
+ CSBAR SHCLK R/WBAR STRCLK STRCLRBAR SER/Q15
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(37,19) DPWR DGND
+ SHCLK STRCLK R/WBAR CSBAR SER/Q15
+ Q0ST Q1ST Q2ST Q3ST Q4ST Q5ST Q6ST Q7ST Q8ST Q9ST Q10ST Q11ST Q12ST Q13ST
+ Q14ST Q15ST
+ Q0SH Q1SH Q2SH Q3SH Q4SH Q5SH Q6SH Q7SH Q8SH Q9SH Q10SH Q11SH Q12SH Q13SH
+ Q14SH Q15SH
+ SHCLOCK STCLOCK ZER 1 2 3 4 5 6 7 8 9 TEN 11 12 13 14 15 OUTPUT
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+    SHCLOCK = {~SHCLK & ~CSBAR}
+    STCLOCK = {STRCLK & ~R/WBAR & ~CSBAR}
+    OUTPUT = {~CSBAR & R/WBAR}
+    PAR = {~CSBAR & R/WBAR & STRCLK}
+    ZER = {(SER/Q15 & (~CSBAR & ~R/WBAR)) | (Q15SH & (~CSBAR & R/WBAR)) | (Q0ST & PAR)}
+    1 = {(Q0SH & ~PAR) | (Q1ST & PAR)}
+    2 = {(Q1SH & ~PAR) | (Q2ST & PAR)}
+    3 = {(Q2SH & ~PAR) | (Q3ST & PAR)}
+    4 = {(Q3SH & ~PAR) | (Q4ST & PAR)}
+    5 = {(Q4SH & ~PAR) | (Q5ST & PAR)}
+    6 = {(Q5SH & ~PAR) | (Q6ST & PAR)}
+    7 = {(Q6SH & ~PAR) | (Q7ST & PAR)}
+    8 = {(Q7SH & ~PAR) | (Q8ST & PAR)}
+    9 = {(Q8SH & ~PAR) | (Q9ST & PAR)}
+    TEN = {(Q9SH & ~PAR) | (Q10ST & PAR)}
+    11 = {(Q10SH & ~PAR) | (Q11ST & PAR)}
+    12 = {(Q11SH & ~PAR) | (Q12ST & PAR)}
+    13 = {(Q12SH & ~PAR) | (Q13ST & PAR)}
+    14 = {(Q13SH & ~PAR) | (Q14ST & PAR)}
+    15 = {(Q14SH & ~PAR) | (Q15ST & PAR)}

U2 DFF(16) DPWR DGND
+ $D_HI $D_HI SHCLOCK
+ ZER 1 2 3 4 5 6 7 8 9 TEN 11 12 13 14 15
+ Q0SH Q1SH Q2SH Q3SH Q4SH Q5SH Q6SH Q7SH Q8SH Q9SH Q10SH Q11SH Q12SH
+ Q13SH Q14SH Q15SH
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(16) DPWR DGND
+ $D_HI STRCLRBAR STCLOCK
+ Q0SH Q1SH Q2SH Q3SH Q4SH Q5SH Q6SH Q7SH Q8SH Q9SH Q10SH Q11SH Q12SH
+ Q13SH Q14SH Q15SH
+ Q0ST Q1ST Q2ST Q3ST Q4ST Q5ST Q6ST Q7ST Q8ST Q9ST Q10ST Q11ST Q12ST
+ Q13ST Q14ST Q15ST
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(17,1,2) DPWR DGND
+ Q15SH Q0ST Q1ST Q2ST Q3ST Q4ST Q5ST Q6ST Q7ST Q8ST Q9ST Q10ST Q11ST Q12ST
+ Q13ST Q14ST Q15ST
+ OUTPUT
+ STRCLK STRCLRBAR
+ SER/Q15 Y0 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 Y9 Y10 Y11 Y12 Y13 Y14 Y15
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    CLEAR = {CHANGED(STRCLRBAR,0)}
+    EDGE = {CHANGED_LH(STRCLK,0)}
+ TRISTATE:
+   ENABLE HI = OUTPUT
+   SER/Q15 = {
+     CASE(
+         TRN_Z$, DELAY(-1,30NS,45NS),
+         TRN_$Z, DELAY(-1,25NS,40NS),
+         TRN_LH, DELAY(-1,21NS,33NS),
+         TRN_HL, DELAY(-1,26NS,40NS),
+         DELAY(-1,31NS,46NS))}
+ PINDLY:
+  Y0 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 Y9 Y10 Y11 Y12 Y13 Y14 Y15 = {
+     CASE(
+         CLEAR & TRN_HL, DELAY(-1,25NS,40NS),
+         EDGE & TRN_LH, DELAY(-1,28NS,45NS),
+         EDGE & TRN_HL, DELAY(-1,30NS,45NS),
+         DELAY(-1,31NS,46NS))}

U5 CONSTRAINT(6) DPWR DGND
+ SHCLK STRCLK CSBAR R/WBAR SER/Q15 STRCLRBAR
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = SHCLK
+   MAXFREQ = 28MEG
+ FREQ:
+   NODE = STRCLK
+   MAXFREQ = 28MEG
+ SETUP_HOLD:
+   CLOCK HL = SHCLK
+   DATA(1) = SER/Q15
+   SETUPTIME = 20NS
+ SETUP_HOLD:
+   CLOCK LH = STRCLK
+   DATA(2) = R/WBAR CSBAR
+   SETUPTIME = 35NS
+ WIDTH:
+   NODE = STRCLRBAR
+   MIN_LO = 20NS

.ENDS 74LS673

*------------------------------------------------------------74F674-----

* 16 Bit Serial/Parallel-In, Serial-Out Shift Register (3-State)
* Philips FAST TTL Logic Data Handbook, 1992, pages 688 to 692
* jat 7/23/96

.SUBCKT 74F674 D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 D11 D12 D13 D14 D15
+ CSBAR CPBAR M R/WBAR SI/O
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(37,18) DPWR DGND
+ CPBAR CSBAR M SI/O R/WBAR D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 D11 D12 D13 D14 D15
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 Q10 Q11 Q12 Q13 Q14 Q15
+ CLOCK ZER 1 2 3 4 5 6 7 8 9 TEN 11 12 13 14 15 OUTPUT
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+    CLOCK = {~CPBAR & ~CSBAR}
+    PAR = {~CSBAR & M & R/WBAR}
+    ZER = {(SI/O & (~CSBAR & ~R/WBAR)) | (Q15 & (~CSBAR & R/WBAR & ~M)) | (D0 & PAR)}
+    1 = {(Q0 & ~PAR) | (D1 & PAR)}
+    2 = {(Q1 & ~PAR) | (D2 & PAR)}
+    3 = {(Q2 & ~PAR) | (D3 & PAR)}
+    4 = {(Q3 & ~PAR) | (D4 & PAR)}
+    5 = {(Q4 & ~PAR) | (D5 & PAR)}
+    6 = {(Q5 & ~PAR) | (D6 & PAR)}
+    7 = {(Q6 & ~PAR) | (D7 & PAR)}
+    8 = {(Q7 & ~PAR) | (D8 & PAR)}
+    9 = {(Q8 & ~PAR) | (D9 & PAR)}
+    TEN = {(Q9 & ~PAR) | (D10 & PAR)}
+    11 = {(Q10 & ~PAR) | (D11 & PAR)}
+    12 = {(Q11 & ~PAR) | (D12 & PAR)}
+    13 = {(Q12 & ~PAR) | (D13 & PAR)}
+    14 = {(Q13 & ~PAR) | (D14 & PAR)}
+    15 = {(Q14 & ~PAR) | (D15 & PAR)}
+    OUTPUT = {~CSBAR & R/WBAR}

U2 DFF(16) DPWR DGND
+ $D_HI $D_HI CLOCK
+ ZER 1 2 3 4 5 6 7 8 9 TEN 11 12 13 14 15
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 Q10 Q11 Q12 Q13 Q14 Q15
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(1,1,2) DPWR DGND
+ Q15
+ OUTPUT
+ CSBAR R/WBAR
+ SI/O
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    CHIP = {CHANGED(CSBAR,0)}
+    READ = {CHANGED(R/WBAR,0)}
+ TRISTATE:
+   ENABLE HI = OUTPUT
+   SI/O = {
+     CASE(
+         CHIP & TRN_ZH, DELAY(5.5NS,8.5NS,11NS),
+         CHIP & TRN_ZL, DELAY(7NS,9.5NS,12.5NS),
+         CHIP & TRN_HZ, DELAY(3NS,6NS,8.5NS),
+         CHIP & TRN_LZ, DELAY(4.5NS,7.5NS,10NS),
+         READ & TRN_ZH, DELAY(6NS,8.5NS,11.5NS),
+         READ & TRN_ZL, DELAY(7.5NS,10NS,13NS),
+         READ & TRN_HZ, DELAY(5NS,7.5NS,10.5NS),
+         READ & TRN_LZ, DELAY(5.5NS,8NS,11NS),
+         TRN_LH, DELAY(7NS,9.5NS,12.5NS),
+         TRN_HL, DELAY(6NS,8.5NS,11.5NS),
+         DELAY(8.5NS,11NS,14NS))}

U4 CONSTRAINT(20) DPWR DGND
+ SI/O M CSBAR CPBAR D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 D11 D12 D13 D14 D15
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CPBAR
+   MAXFREQ = 95MEG
+ WIDTH:
+   NODE = CPBAR
+   MIN_HI = 3.5NS
+   MIN_LO = 4.5NS
+ SETUP_HOLD:
+   CLOCK HL = CPBAR
+   DATA(1) = SI/O
+   SETUPTIME = 2NS
+   HOLDTIME = 1.5NS
+ SETUP_HOLD:
+   CLOCK HL = CPBAR
+   DATA(16) = D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 D11 D12 D13 D14 D15
+   SETUPTIME_HI = 1.5NS
+   SETUPTIME_LO = 1NS
+   HOLDTIME_HI = 3NS
+   HOLDTIME_LO = 4NS
+ SETUP_HOLD:
+   CLOCK HL = CPBAR
+   DATA(1) = M
+   SETUPTIME_HI = 2NS
+   SETUPTIME_LO = 5.5NS
+ SETUP_HOLD:
+   CLOCK HL = CPBAR
+   DATA(1) = CSBAR
+   SETUPTIME_LO = 8NS

.ENDS 74F674

*------------------------------------------------------------74LS674-----

* 16 Bit Shift Register
* TI TTL Logic Data Book, 1988, pages 2-1117 to 2-1122
* jat 8/14/96

.SUBCKT 74LS674 P0 P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15
+ CSBAR CLK MODE R/WBAR SER/Q15
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(37,18) DPWR DGND
+ CLK CSBAR MODE SER/Q15 R/WBAR P0 P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 Q10 Q11 Q12 Q13 Q14 Q15
+ CLOCK ZER 1 2 3 4 5 6 7 8 9 TEN 11 12 13 14 15 OUTPUT
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+    CLOCK = {~CLK & ~CSBAR}
+    PAR = {~CSBAR & MODE & R/WBAR}
+    ZER = {(SER/Q15 & (~CSBAR & ~R/WBAR)) | (Q15 & (~CSBAR & R/WBAR & ~MODE)) | (P0 & PAR)}
+    1 = {(Q0 & ~PAR) | (P1 & PAR)}
+    2 = {(Q1 & ~PAR) | (P2 & PAR)}
+    3 = {(Q2 & ~PAR) | (P3 & PAR)}
+    4 = {(Q3 & ~PAR) | (P4 & PAR)}
+    5 = {(Q4 & ~PAR) | (P5 & PAR)}
+    6 = {(Q5 & ~PAR) | (P6 & PAR)}
+    7 = {(Q6 & ~PAR) | (P7 & PAR)}
+    8 = {(Q7 & ~PAR) | (P8 & PAR)}
+    9 = {(Q8 & ~PAR) | (P9 & PAR)}
+    TEN = {(Q9 & ~PAR) | (P10 & PAR)}
+    11 = {(Q10 & ~PAR) | (P11 & PAR)}
+    12 = {(Q11 & ~PAR) | (P12 & PAR)}
+    13 = {(Q12 & ~PAR) | (P13 & PAR)}
+    14 = {(Q13 & ~PAR) | (P14 & PAR)}
+    15 = {(Q14 & ~PAR) | (P15 & PAR)}
+    OUTPUT = {~CSBAR & R/WBAR}

U2 DFF(16) DPWR DGND
+ $D_HI $D_HI CLOCK
+ ZER 1 2 3 4 5 6 7 8 9 TEN 11 12 13 14 15
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 Q10 Q11 Q12 Q13 Q14 Q15
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(1,1,0) DPWR DGND
+ Q15
+ OUTPUT
+ SER/Q15
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = OUTPUT
+   SER/Q15 = {
+     CASE(
+         TRN_Z$, DELAY(-1,30NS,45NS),
+         TRN_$Z, DELAY(-1,25NS,40NS),
+         TRN_LH, DELAY(-1,21NS,33NS),
+         TRN_HL, DELAY(-1,26NS,40NS),
+         DELAY(-1,31NS,46NS))}

U4 CONSTRAINT(21) DPWR DGND
+ SER/Q15 MODE R/WBAR CSBAR CLK P0 P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLK
+   MAXFREQ = 20MEG
+ WIDTH:
+   NODE = CLK
+   MIN_HI = 20NS
+   MIN_LO = 20NS
+ SETUP_HOLD:
+   CLOCK HL = CLK
+   DATA(1) = SER/Q15
+   SETUPTIME = 20NS
+ SETUP_HOLD:
+   CLOCK HL = CLK
+   DATA(3) = R/WBAR CSBAR MODE
+   SETUPTIME = 35NS
+ SETUP_HOLD:
+   CLOCK HL = CLK
+   DATA(16) = P0 P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12 P13 P14 P15
+   SETUPTIME = 35NS

.ENDS 74LS674

*------------------------------------------------------------74F675A-----

* 16 Bit Serial-In, Serial/Parallel-Out Shift Register
* National Advanced Bipolar Logic Databook, 1995, pages 7-476 to 7-480
* jat 7/23/96

.SUBCKT 74F675A Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 Q10 Q11 Q12 Q13 Q14 Q15
+ CSBAR SHCPBAR R/WBAR STCP SI SO
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(36,18) DPWR DGND
+ SHCPBAR STCP R/WBAR CSBAR SI
+ Q0ST Q1ST Q2ST Q3ST Q4ST Q5ST Q6ST Q7ST Q8ST Q9ST Q10ST Q11ST Q12ST Q13ST
+ Q14ST Q15ST
+ Q0SH Q1SH Q2SH Q3SH Q4SH Q5SH Q6SH Q7SH Q8SH Q9SH Q10SH Q11SH Q12SH Q13SH
+ Q14SH
+ SHCLOCK STCLOCK ZER 1 2 3 4 5 6 7 8 9 TEN 11 12 13 14 15
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+    SHCLOCK = {~SHCPBAR & ~CSBAR}
+    STCLOCK = {STCP & ~R/WBAR & ~CSBAR}
+    PAR = {~CSBAR & R/WBAR & STCP}
+    ZER = {(SI & ~PAR) | (Q0ST & PAR)}
+    1 = {(Q0SH & ~PAR) | (Q1ST & PAR)}
+    2 = {(Q1SH & ~PAR) | (Q2ST & PAR)}
+    3 = {(Q2SH & ~PAR) | (Q3ST & PAR)}
+    4 = {(Q3SH & ~PAR) | (Q4ST & PAR)}
+    5 = {(Q4SH & ~PAR) | (Q5ST & PAR)}
+    6 = {(Q5SH & ~PAR) | (Q6ST & PAR)}
+    7 = {(Q6SH & ~PAR) | (Q7ST & PAR)}
+    8 = {(Q7SH & ~PAR) | (Q8ST & PAR)}
+    9 = {(Q8SH & ~PAR) | (Q9ST & PAR)}
+    TEN = {(Q9SH & ~PAR) | (Q10ST & PAR)}
+    11 = {(Q10SH & ~PAR) | (Q11ST & PAR)}
+    12 = {(Q11SH & ~PAR) | (Q12ST & PAR)}
+    13 = {(Q12SH & ~PAR) | (Q13ST & PAR)}
+    14 = {(Q13SH & ~PAR) | (Q14ST & PAR)}
+    15 = {(Q14SH & ~PAR) | (Q15ST & PAR)}

U2 DFF(16) DPWR DGND
+ $D_HI $D_HI SHCLOCK
+ ZER 1 2 3 4 5 6 7 8 9 TEN 11 12 13 14 15
+ Q0SH Q1SH Q2SH Q3SH Q4SH Q5SH Q6SH Q7SH Q8SH Q9SH Q10SH Q11SH Q12SH
+ Q13SH Q14SH Q15SH
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(16) DPWR DGND
+ $D_HI $D_HI STCLOCK
+ Q0SH Q1SH Q2SH Q3SH Q4SH Q5SH Q6SH Q7SH Q8SH Q9SH Q10SH Q11SH Q12SH
+ Q13SH Q14SH Q15SH
+ Q0ST Q1ST Q2ST Q3ST Q4ST Q5ST Q6ST Q7ST Q8ST Q9ST Q10ST Q11ST Q12ST
+ Q13ST Q14ST Q15ST
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(17,0,0) DPWR DGND
+ Q15SH Q0ST Q1ST Q2ST Q3ST Q4ST Q5ST Q6ST Q7ST Q8ST Q9ST Q10ST Q11ST Q12ST
+ Q13ST Q14ST Q15ST
+ SO Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 Q10 Q11 Q12 Q13 Q14 Q15
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ PINDLY:
+   SO = {
+     CASE(
+         TRN_LH, DELAY(4NS,7NS,9.5NS),
+         TRN_HL, DELAY(4.5NS,8NS,10.5NS),
+         DELAY(5.5NS,9NS,11.5NS))}
+ PINDLY:
+  Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 Q10 Q11 Q12 Q13 Q14 Q15 = {
+     CASE(
+         TRN_LH, DELAY(3NS,8NS,10.5NS),
+         TRN_HL, DELAY(3NS,10.5NS,13.5NS),
+         DELAY(4NS,11.5NS,14.5NS))}

U5 CONSTRAINT(5) DPWR DGND
+ SHCPBAR STCP CSBAR R/WBAR SI
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = SHCPBAR
+   MAXFREQ = 130MEG
+ FREQ:
+   NODE = STCP
+   MAXFREQ = 130MEG
+ WIDTH:
+   NODE = SHCPBAR
+   MIN_HI = 5NS
+   MIN_LO = 5NS
+ WIDTH:
+   NODE = SHCPBAR
+   MIN_HI = 6NS
+   MIN_LO = 5NS
+ SETUP_HOLD:
+   CLOCK HL = SHCPBAR
+   DATA(1) = SI
+   SETUPTIME = 3NS
+   HOLDTIME = 3NS
+ SETUP_HOLD:
+   CLOCK HL = SHCPBAR
+   DATA(1) = R/WBAR
+   SETUPTIME_HI = 6.5NS
+   SETUPTIME_LO = 9NS
+ SETUP_HOLD:
+   CLOCK HL = SHCPBAR
+   DATA(1) = CSBAR
+   SETUPTIME_LO = 3NS
+   HOLDTIME_HI = 3NS
+ SETUP_HOLD:
+   CLOCK LH = STCP
+   DATA(2) = R/WBAR CSBAR
+   SETUPTIME_HI = 3.5NS
+   SETUPTIME_LO = 5.5NS
+ SETUP_HOLD:
+   CLOCK HL = SHCPBAR
+   DATA(1) = STCP
+   SETUPTIME = 7NS
+ SETUP_HOLD:
+   CLOCK LH = STCP
+   DATA(1) = SHCPBAR
+   SETUPTIME_LO = 8NS

.ENDS 74F675A

*------------------------------------------------------------74F676-----

* 16 Bit Serial/Parallel-In, Serial-Out Shift Register
* Philips FAST TTL Logic Data Handbook, 1992, pages 693 to 697
* jat 7/18/96

.SUBCKT 74F676 D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 D11 D12 D13 D14 D15
+ CSBAR CPBAR M SI SO
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(36,17) DPWR DGND
+ CPBAR CSBAR M SI D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 D11 D12 D13 D14 D15
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 Q10 Q11 Q12 Q13 Q14 Q15
+ CLOCK ZER 1 2 3 4 5 6 7 8 9 TEN 11 12 13 14 15
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+    CLOCK = {~CPBAR & ~CSBAR}
+    PAR = {~CSBAR & M}
+    ZER = {(SI & ~PAR) | (D0 & PAR)}
+    1 = {(Q0 & ~PAR) | (D1 & PAR)}
+    2 = {(Q1 & ~PAR) | (D2 & PAR)}
+    3 = {(Q2 & ~PAR) | (D3 & PAR)}
+    4 = {(Q3 & ~PAR) | (D4 & PAR)}
+    5 = {(Q4 & ~PAR) | (D5 & PAR)}
+    6 = {(Q5 & ~PAR) | (D6 & PAR)}
+    7 = {(Q6 & ~PAR) | (D7 & PAR)}
+    8 = {(Q7 & ~PAR) | (D8 & PAR)}
+    9 = {(Q8 & ~PAR) | (D9 & PAR)}
+    TEN = {(Q9 & ~PAR) | (D10 & PAR)}
+    11 = {(Q10 & ~PAR) | (D11 & PAR)}
+    12 = {(Q11 & ~PAR) | (D12 & PAR)}
+    13 = {(Q12 & ~PAR) | (D13 & PAR)}
+    14 = {(Q13 & ~PAR) | (D14 & PAR)}
+    15 = {(Q14 & ~PAR) | (D15 & PAR)}

U2 DFF(16) DPWR DGND
+ $D_HI $D_HI CLOCK
+ ZER 1 2 3 4 5 6 7 8 9 TEN 11 12 13 14 15
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 Q10 Q11 Q12 Q13 Q14 Q15
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(1,0,0) DPWR DGND
+ Q15 SO
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ PINDLY:
+   SO = {
+     CASE(
+         TRN_LH, DELAY(4.5NS,8NS,11NS),
+         TRN_HL, DELAY(5NS,7NS,12.5NS),
+         DELAY(6NS,9NS,13.5NS))}

U4 CONSTRAINT(20) DPWR DGND
+ SI M CSBAR CPBAR D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 D11 D12 D13 D14 D15
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CPBAR
+   MAXFREQ = 110MEG
+ WIDTH:
+   NODE = CPBAR
+   MIN_HI = 4NS
+   MIN_LO = 6NS
+ SETUP_HOLD:
+   CLOCK HL = CPBAR
+   DATA(1) = SI
+   SETUPTIME = 4NS
+   HOLDTIME = 4NS
+ SETUP_HOLD:
+   CLOCK HL = CPBAR
+   DATA(16) = D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 D11 D12 D13 D14 D15
+   SETUPTIME = 3NS
+   HOLDTIME = 4NS
+ SETUP_HOLD:
+   CLOCK HL = CPBAR
+   DATA(1) = M
+   SETUPTIME = 8NS
+   HOLDTIME = 2NS
+ SETUP_HOLD:
+   CLOCK HL = CPBAR
+   DATA(1) = CSBAR
+   SETUPTIME_LO = 10NS
+   HOLDTIME_HI = 10NS

.ENDS 74F676

*------------------------------------------------------------ 74ALS677A ------
*  16-Bit Address Comparators
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-567 to 2-573
*  bss    6/1/94
*
.SUBCKT 74ALS677A GBAR P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10
+     A11 A12 A13 A14 A15 A16 Y 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(21,1) DPWR DGND
+     GBAR P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 A13 A14 A15 A16
+     Y_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     p0bar = {~P0}
+     p1bar = {~P1}
+     p2bar = {~P2}
+     p3bar = {~P3}
+     gen = {~GBAR}
+     in1 = {(A1 ^ (~(p0bar & p1bar & p2bar & p3bar)))}
+     in2 = {(A2 ^ (~(p1bar & p2bar & p3bar)))}
+     in3 = {(A3 ^ (~((p0bar & p2bar & p3bar) | (p1bar & p2bar & p3bar))))}
+     in4 = {(A4 ^ (~(p2bar & p3bar)))}
+     in5 = {(A5 ^ (~((p0bar & p1bar & p3bar) | (p2bar & p3bar))))}
+     in6 = {(A6 ^ (~((p2bar & p3bar) | (p1bar & p3bar))))}
+     in7 = {(A7 ^ (~((p1bar & p3bar) | (p2bar & p3bar) | (p0bar & p3bar))))}
+     in8 = {(A8 ^ P3)}
+     in9 = {(A9 ^ (~((p0bar & p1bar & p2bar) | p3bar)))}
+     in10 = {(A10 ^ (~((p1bar & p2bar) | p3bar)))}
+     in11 = {(A11 ^ (~((p1bar & p2bar) | (p0bar & p2bar) | p3bar)))}
+     in12 = {(A12 ^ (~(p2bar | p3bar)))}
+     in13 = {(A13 ^ (~((p0bar & p1bar) | p2bar | p3bar)))}
+     in14 = {(A14 ^ (~(p1bar | p2bar | p3bar)))}
+     in15 = {(A15 ^ (~(p0bar | p1bar | p2bar | p3bar)))}
+     Y_O = {~(in1 & in2 & in3 & in4 & in5 & in6 & in7 & in8 & in9 & in10 & 
+         in11 & in12 & in13 & in14 & in15 & A16 & gen)}

U2DLY PINDLY(1,0,21) DPWR DGND
+     Y_O
+     GBAR P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 A13 A14 A15 A16
+     Y
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENAB = {CHANGED(GBAR,0)}
+     SELECT = {CHANGED(P0,0) | CHANGED(P1,0) | CHANGED(P2,0) | CHANGED(P3,0)}
+     DATA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+         CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0) |
+         CHANGED(A9,0) | CHANGED(A10,0) | CHANGED(A11,0) | CHANGED(A12,0) |
+         CHANGED(A13,0) | CHANGED(A14,0) | CHANGED(A15,0) | CHANGED(A16,0)}
+
+  PINDLY:
+     Y = {
+       CASE(
+         ENAB & TRN_LH, DELAY(3ns,-1,13ns),
+         SELECT & TRN_HL, DELAY(8ns,-1,38ns),
+         ENAB & TRN_HL, DELAY(5ns,-1,35ns),
+         SELECT & TRN_LH, DELAY(4ns,-1,25ns),
+         DATA & TRN_LH, DELAY(5ns,-1,22ns),
+         DATA & TRN_HL, DELAY(5ns,-1,30ns),
+         DELAY(9ns,-1,39ns))}

.ENDS 74ALS677A
*
*
* ----------------------------------------------------------- 74ALS678 ------
*  16-Bit Address Comparators
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-567 to 2-573
*  bss    6/1/94
*
.SUBCKT 74ALS678 C P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10
+     A11 A12 A13 A14 A15 A16 Y 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(1) DPWR DGND
+     $D_HI $D_HI C DIN Y_O $D_NC
+     D0_GFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(20,1) DPWR DGND
+     P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 A13 A14 A15 A16
+     DIN
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     p0bar = {~P0}
+     p1bar = {~P1}
+     p2bar = {~P2}
+     p3bar = {~P3}
+     in1 = {(A1 ^ (~(p0bar & p1bar & p2bar & p3bar)))}
+     in2 = {(A2 ^ (~(p1bar & p2bar & p3bar)))}
+     in3 = {(A3 ^ (~((p0bar & p2bar & p3bar) | (p1bar & p2bar & p3bar))))}
+     in4 = {(A4 ^ (~(p2bar & p3bar)))}
+     in5 = {(A5 ^ (~((p0bar & p1bar & p3bar) | (p2bar & p3bar))))}
+     in6 = {(A6 ^ (~((p2bar & p3bar) | (p1bar & p3bar))))}
+     in7 = {(A7 ^ (~((p1bar & p3bar) | (p2bar & p3bar) | (p0bar & p3bar))))}
+     in8 = {(A8 ^ P3)}
+     in9 = {(A9 ^ (~((p0bar & p1bar & p2bar) | p3bar)))}
+     in10 = {(A10 ^ (~((p1bar & p2bar) | p3bar)))}
+     in11 = {(A11 ^ (~((p1bar & p2bar) | (p0bar & p2bar) | p3bar)))}
+     in12 = {(A12 ^ (~(p2bar | p3bar)))}
+     in13 = {(A13 ^ (~((p0bar & p1bar) | p2bar | p3bar)))}
+     in14 = {(A14 ^ (~(p1bar | p2bar | p3bar)))}
+     in15 = {(A15 ^ (~(p0bar | p1bar | p2bar | p3bar)))}
+     DIN = {~(in1 & in2 & in3 & in4 & in5 & in6 & in7 & in8 & in9 & in10 & 
+         in11 & in12 & in13 & in14 & in15 & A16)}

U3DLY PINDLY(1,0,21) DPWR DGND
+     Y_O
+     C P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 A13 A14 A15 A16
+     Y
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENAB = {CHANGED(C,0)}
+     SELECT = {CHANGED(P0,0) | CHANGED(P1,0) | CHANGED(P2,0) | CHANGED(P3,0)}
+     DATA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+         CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0) |
+         CHANGED(A9,0) | CHANGED(A10,0) | CHANGED(A11,0) | CHANGED(A12,0) |
+         CHANGED(A13,0) | CHANGED(A14,0) | CHANGED(A15,0) | CHANGED(A16,0)}
+
+  PINDLY:
+     Y = {
+       CASE(
+         ENAB & TRN_HL, DELAY(15ns,-1,48ns),
+         SELECT & TRN_LH, DELAY(6ns,-1,22ns),
+         SELECT & TRN_HL, DELAY(10ns,-1,43ns),
+         DATA & TRN_LH, DELAY(5ns,-1,21ns),
+         DATA & TRN_HL, DELAY(5ns,-1,35ns),
+         ENAB & TRN_LH, DELAY(3ns,-1,20ns),
+         DELAY(16ns,-1,49ns))}

U4CON CONSTRAINT(21) DPWR DGND
+     C P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 A13 A14 A15 A16
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=C
+     MIN_HI=40ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(20)=A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 A13 A14 A15 A16 P0 P1 P2 P3
+     SETUPTIME=45ns
+     HOLDTIME=5ns

.ENDS 74ALS678
*
*
* ----------------------------------------------------------- 74ALS679 ------
*  12-Bit Address Comparators
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-575 to 2-580
*  bss    6/2/94
*
.SUBCKT 74ALS679 GBAR P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 Y 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(17,1) DPWR DGND
+     GBAR P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12
+     Y_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     p0bar = {~P0}
+     p1bar = {~P1}
+     p2bar = {~P2}
+     p3bar = {~P3}
+     gen = {~GBAR}
+     in1 = {(A1 ^ (~(p0bar & p1bar & p2bar & p3bar)))}
+     in2 = {(A2 ^ (~(p1bar & p2bar & p3bar)))}
+     in3 = {(A3 ^ (~((p0bar & p2bar & p3bar) | (p1bar & p2bar & p3bar))))}
+     in4 = {(A4 ^ (~(p2bar & p3bar)))}
+     in5 = {(A5 ^ (~((p0bar & p1bar & p3bar) | (p2bar & p3bar))))}
+     in6 = {(A6 ^ (~((p2bar & p3bar) | (p1bar & p3bar))))}
+     in7 = {(A7 ^ (~((p1bar & p3bar) | (p2bar & p3bar) | (p0bar & p3bar))))}
+     in8 = {(A8 ^ P3)}
+     in9 = {(A9 ^ (~((p0bar & p1bar) | p3bar)))}
+     in10 = {(A10 ^ (~(p1bar | p3bar)))}
+     in11 = {(A11 ^ (~(p1bar | p0bar | p3bar)))}
+     in12 = {(A12 ^ (~(p2bar | p3bar)))}
+     Y_O = {~(in1 & in2 & in3 & in4 & in5 & in6 & in7 & in8 & in9 & in10 & in11 & in12 & gen)}

U2DLY PINDLY(1,0,17) DPWR DGND
+     Y_O
+     GBAR P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12
+     Y
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENAB = {CHANGED(GBAR,0)}
+     SELECT = {CHANGED(P0,0) | CHANGED(P1,0) | CHANGED(P2,0) | CHANGED(P3,0)}
+     DATA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+         CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0) |
+         CHANGED(A9,0) | CHANGED(A10,0) | CHANGED(A11,0) | CHANGED(A12,0)}
+
+  PINDLY:
+     Y = {
+       CASE(
+         ENAB & TRN_LH, DELAY(3ns,-1,13ns),
+         SELECT & TRN_HL, DELAY(8ns,-1,35ns),
+         DATA & TRN_HL, DELAY(5ns,-1,30ns),
+         ENAB & TRN_HL, DELAY(5ns,-1,25ns),
+         SELECT & TRN_LH, DELAY(4ns,-1,25ns),
+         DATA & TRN_LH, DELAY(5ns,-1,22ns),
+         DELAY(9ns,-1,36ns))}

.ENDS 74ALS679
*
*
* ----------------------------------------------------------- 74HC679 ------
*  12-Bit Address Comparators
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-587 to 2-592
*  bss    6/2/94
*
.SUBCKT 74HC679 GBAR P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 Y 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(17,1) DPWR DGND
+     GBAR P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12
+     Y_O
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     p0bar = {~P0}
+     p1bar = {~P1}
+     p2bar = {~P2}
+     p3bar = {~P3}
+     gen = {~GBAR}
+     sel1 = {~(p0bar & p1bar & p2bar & p3bar)}
+     sel2 = {~(P0 & p1bar & p2bar & p3bar)}
+     sel3 = {~(p0bar & P1 & p2bar & p3bar)}
+     sel4 = {~(P0 & P1 & p2bar & p3bar)}
+     sel5 = {~(p0bar & p1bar & P2 & p3bar)}
+     sel6 = {~(P0 & p1bar & P2 & p3bar)}
+     sel7 = {~(p0bar & P1 & P2 & p3bar)}
+     sel8 = {~(P0 & P1 & P2 & p3bar)}
+     sel9 = {~(p0bar & p1bar & p2bar & P3)}
+     sel10 = {~(P0 & p1bar & p2bar & P3)}
+     sel11 = {~(p0bar & P1 & p2bar & P3)}
+     sel12 = {~(P0 & P1 & p2bar & P3)}
+     sel13 = {~(p0bar & p1bar & P2 & P3)}
+     sel14 = {~(P0 & p1bar & P2 & P3)}
+     sel15 = {~(p0bar & P1 & P2 & P3)}
+     sel16 = {~(P0 & P1 & P2 & P3)}
+     tran2 = {sel2 & sel1}
+     tran3 = {sel3 & tran2}
+     tran4 = {sel4 & tran3}
+     tran5 = {sel5 & tran4}
+     tran6 = {sel6 & tran5}
+     tran7 = {sel7 & tran6}
+     tran8 = {sel8 & tran7}
+     tran9 = {sel9 & tran8}
+     tran10 = {sel10 & tran9}
+     tran11 = {sel11 & tran10}
+     tran12 = {sel12 & tran11}
+     tran13 = {sel13 & tran12}
+     tran14 = {sel14 & tran13}
+     tran15 = {sel15 & tran14}
+     in1 = {(A1 ^ sel1)}
+     in2 = {(A2 ^ tran2)}
+     in3 = {(A3 ^ tran3)}
+     in4 = {(A4 ^ tran4)}
+     in5 = {(A5 ^ tran5)}
+     in6 = {(A6 ^ tran6)}
+     in7 = {(A7 ^ tran7)}
+     in8 = {(A8 ^ tran8)}
+     in9 = {(A9 ^ tran9)}
+     in10 = {(A10 ^ tran10)}
+     in11 = {(A11 ^ tran11)}
+     in12 = {(A12 ^ tran12)}
+     in13 = {(tran13 ^ sel16)}
+     in14 = {(tran14 ^ sel16)}
+     in15 = {(tran15 ^ sel16)}
+     nand1 = {~((gen & in1 & in2) & (in3 & in4 & in5) & (in6 & in7 & in8))}
+     nand2 = {~((in9 & in10 & in11) & (in12 & in13 & in14) & in15)}
+     Y_O = {nand1 | nand2}

U2DLY PINDLY(1,0,17) DPWR DGND
+     Y_O
+     GBAR P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12
+     Y
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENAB = {CHANGED(GBAR,0)}
+     SELECT = {CHANGED(P0,0) | CHANGED(P1,0) | CHANGED(P2,0) | CHANGED(P3,0)}
+     DATA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+         CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0) |
+         CHANGED(A9,0) | CHANGED(A10,0) | CHANGED(A11,0) | CHANGED(A12,0)}
+
+  PINDLY:
+     Y = {
+       CASE(
+         ENAB, DELAY(-1,15ns,25ns),
+         SELECT, DELAY(-1,37ns,60ns),
+         DATA, DELAY(-1,21ns,32ns),
+         DELAY(-1,38ns,61ns))}

.ENDS 74HC679
*
*
* ----------------------------------------------------------- 74ALS680 ------
*  12-Bit Address Comparators
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-575 to 2-580
*  bss    6/2/94
*
.SUBCKT 74ALS680 C P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 Y 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(1) DPWR DGND
+     $D_HI $D_HI C DIN Y_O $D_NC
+     D0_GFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(16,1) DPWR DGND
+     P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12
+     DIN
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     p0bar = {~P0}
+     p1bar = {~P1}
+     p2bar = {~P2}
+     p3bar = {~P3}
+     in1 = {(A1 ^ (~(p0bar & p1bar & p2bar & p3bar)))}
+     in2 = {(A2 ^ (~(p1bar & p2bar & p3bar)))}
+     in3 = {(A3 ^ (~((p0bar & p2bar & p3bar) | (p1bar & p2bar & p3bar))))}
+     in4 = {(A4 ^ (~(p2bar & p3bar)))}
+     in5 = {(A5 ^ (~((p0bar & p1bar & p3bar) | (p2bar & p3bar))))}
+     in6 = {(A6 ^ (~((p2bar & p3bar) | (p1bar & p3bar))))}
+     in7 = {(A7 ^ (~((p1bar & p3bar) | (p2bar & p3bar) | (p0bar & p3bar))))}
+     in8 = {(A8 ^ P3)}
+     in9 = {(A9 ^ (~((p0bar & p1bar) | p3bar)))}
+     in10 = {(A10 ^ (~(p1bar | p3bar)))}
+     in11 = {(A11 ^ (~(p1bar | p0bar | p3bar)))}
+     in12 = {(A12 ^ (~(p2bar | p3bar)))}
+     DIN = {~(in1 & in2 & in3 & in4 & in5 & in6 & in7 & in8 & in9 & in10 & in11 & in12)}

U3DLY PINDLY(1,0,17) DPWR DGND
+     Y_O
+     C P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12
+     Y
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENAB = {CHANGED(C,0)}
+     SELECT = {CHANGED(P0,0) | CHANGED(P1,0) | CHANGED(P2,0) | CHANGED(P3,0)}
+     DATA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+         CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0) |
+         CHANGED(A9,0) | CHANGED(A10,0) | CHANGED(A11,0) | CHANGED(A12,0)}
+
+  PINDLY:
+     Y = {
+       CASE(
+         ENAB & TRN_HL, DELAY(15ns,-1,42ns),
+         SELECT & TRN_LH, DELAY(6ns,-1,22ns),
+         SELECT & TRN_HL, DELAY(10ns,-1,38ns),
+         DATA & TRN_LH, DELAY(5ns,-1,21ns),
+         DATA & TRN_HL, DELAY(5ns,-1,25ns),
+         ENAB & TRN_LH, DELAY(3ns,-1,20ns),
+         DELAY(16ns,-1,43ns))}

U4CON CONSTRAINT(17) DPWR DGND
+     C P0 P1 P2 P3 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=C
+     MIN_HI=40ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(16)=A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 P0 P1 P2 P3
+     SETUPTIME=45ns
+     HOLDTIME=5ns

.ENDS 74ALS680
*
*
*-------------------------------------------------------------74HC682-----

* 8-Bit Magnitude Comparators
* TI High-Speed CMOS Logic Data Book, 1989, pages 2-593 to 2-596
* jat 12/28/95

.SUBCKT 74HC682 P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 PEQQBAR
+ PGRTQBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(16,2) DPWR DGND
+ P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ PEQQBAR PGRTQBAR
+ DLY IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   XNOR0 = {~(P0 ^ Q0)}
+   XNOR1 = {~(P1 ^ Q1)}
+   XNOR2 = {~(P2 ^ Q2)}
+   XNOR3 = {~(P3 ^ Q3)}
+   XNOR4 = {~(P4 ^ Q4)}
+   XNOR5 = {~(P5 ^ Q5)}
+   XNOR6 = {~(P6 ^ Q6)}
+   XNOR7 = {~(P7 ^ Q7)}
+   PEQQBAR = {~(XNOR0 & XNOR1 & XNOR2 & XNOR3 & XNOR4 & XNOR5 & XNOR6 & XNOR7)}
+   AND1 = {XNOR1 & XNOR2 & XNOR3 & XNOR4 & XNOR5 & XNOR6 & XNOR7 & P0 & (~Q0)}
+   AND2 = {XNOR2 & XNOR3 & XNOR4 & XNOR5 & XNOR6 & XNOR7 & P1 & (~Q1)}
+   AND3 = {XNOR3 & XNOR4 & XNOR5 & XNOR6 & XNOR7 & P2 & (~Q2)}
+   AND4 = {XNOR4 & XNOR5 & XNOR6 & XNOR7 & P3 & (~Q3)}
+   AND5 = {XNOR5 & XNOR6 & XNOR7 & P4 & (~Q4)}
+   AND6 = {XNOR6 & XNOR7 & P5 & (~Q5)}
+   AND7 = {XNOR7 & P6 & (~Q6)}
+   AND8 = {P7 & (~Q7)}
+   PGRTQBAR = {~(AND1 | AND2 | AND3 | AND4 | AND5 | AND6 | AND7 | AND8)}

.MODEL DLY UGATE(TPLHTY=26NS TPLHMX=55NS TPHLTY=26NS TPHLMX=55NS)

.ENDS 74HC682

*-------------------------------------------------------------74LS682-----

* 8-Bit Magnitude/Identity Comparators
* TI TTL Logic Data Book, 1988, pages 2-1129 to 2-1138
* jat 8/15/96

.SUBCKT 74LS682 P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 PEQQBAR
+ PGRTQBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 PULLUP(8) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_PULLUP IO_LEVEL={IO_LEVEL}

.MODEL IO_PULLUP UIO(DRVH=20K DRVL=1MEG
+ DTOA1=PULLUP_DTOA DTOA2=PULLUP_DTOA
+ DTOA3=PULLUP_DTOA DTOA4=PULLUP_DTOA
+ ATOD1=PULLUP_ATOD ATOD2=PULLUP_ATOD
+ ATOD3=PULLUP_ATOD ATOD4=PULLUP_ATOD)

U2 LOGICEXP(16,2) DPWR DGND
+ P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ PEQQBARO PGRTQBARO
+ D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   XNOR0 = {~(P0 ^ Q0)}
+   XNOR1 = {~(P1 ^ Q1)}
+   XNOR2 = {~(P2 ^ Q2)}
+   XNOR3 = {~(P3 ^ Q3)}
+   XNOR4 = {~(P4 ^ Q4)}
+   XNOR5 = {~(P5 ^ Q5)}
+   XNOR6 = {~(P6 ^ Q6)}
+   XNOR7 = {~(P7 ^ Q7)}
+   PEQQBARO = {~(XNOR0 & XNOR1 & XNOR2 & XNOR3 & XNOR4 & XNOR5 & XNOR6 & XNOR7)}
+   AND1 = {XNOR1 & XNOR2 & XNOR3 & XNOR4 & XNOR5 & XNOR6 & XNOR7 & P0 & (~Q0)}
+   AND2 = {XNOR2 & XNOR3 & XNOR4 & XNOR5 & XNOR6 & XNOR7 & P1 & (~Q1)}
+   AND3 = {XNOR3 & XNOR4 & XNOR5 & XNOR6 & XNOR7 & P2 & (~Q2)}
+   AND4 = {XNOR4 & XNOR5 & XNOR6 & XNOR7 & P3 & (~Q3)}
+   AND5 = {XNOR5 & XNOR6 & XNOR7 & P4 & (~Q4)}
+   AND6 = {XNOR6 & XNOR7 & P5 & (~Q5)}
+   AND7 = {XNOR7 & P6 & (~Q6)}
+   AND8 = {P7 & (~Q7)}
+   PGRTQBARO = {~(AND1 | AND2 | AND3 | AND4 | AND5 | AND6 | AND7 | AND8)}

U3 PINDLY(2,0,16) DPWR DGND
+ PEQQBARO PGRTQBARO
+ P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ PEQQBAR PGRTQBAR
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+  PDATA = {CHANGED(P0,0) | CHANGED(P1,0) | CHANGED(P2,0) | CHANGED(P3,0) |
+           CHANGED(P4,0) | CHANGED(P5,0) | CHANGED(P6,0) | CHANGED(P7,0)}
+  QDATA = {CHANGED(Q0,0) | CHANGED(Q1,0) | CHANGED(Q2,0) | CHANGED(Q3,0) |
+           CHANGED(Q4,0) | CHANGED(Q5,0) | CHANGED(Q6,0) | CHANGED(Q7,0)}
+ PINDLY:
+   PEQQBAR = {
+     CASE(
+       PDATA & TRN_LH, DELAY(-1,13NS,25NS),
+       PDATA & TRN_HL, DELAY(-1,15NS,25NS),
+       QDATA & TRN_LH, DELAY(-1,14NS,25NS),
+       QDATA & TRN_HL, DELAY(-1,15NS,25NS),
+       DELAY(-1,16NS,26NS))}
+   PGRTQBAR = {
+     CASE(
+       PDATA & TRN_LH, DELAY(-1,20NS,30NS),
+       PDATA & TRN_HL, DELAY(-1,15NS,30NS),
+       QDATA & TRN_LH, DELAY(-1,21NS,30NS),
+       QDATA & TRN_HL, DELAY(-1,19NS,30NS),
+       DELAY(-1,22NS,31NS))}

.ENDS 74LS682

* ----------------------------------------------------------- 74LS684 ------
*  8-Bit Magnitude/Identity Comparators
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1129 to 2-1138
*  bss    6/2/94
*
.SUBCKT 74LS684 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     PEQQBAR PGTQBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(16) DPWR DGND
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR
+     D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(16,2) DPWR DGND
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR
+     PEQQBAR_O PGTQBAR_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     xor0 = {~(P0BAR ^ Q0BAR)}
+     xor1 = {~(P1BAR ^ Q1BAR)}
+     xor2 = {~(P2BAR ^ Q2BAR)}
+     xor3 = {~(P3BAR ^ Q3BAR)}
+     xor4 = {~(P4BAR ^ Q4BAR)}
+     xor5 = {~(P5BAR ^ Q5BAR)}
+     xor6 = {~(P6BAR ^ Q6BAR)}
+     xor7 = {~(P7BAR ^ Q7BAR)}
+     and0 = {(~P0BAR) & Q0BAR & xor1 & xor2 & xor3 & xor4 & xor5 & xor6 & xor7}
+     and1 = {(~P1BAR) & Q1BAR & xor2 & xor3 & xor4 & xor5 & xor6 & xor7}
+     and2 = {(~P2BAR) & Q2BAR & xor3 & xor4 & xor5 & xor6 & xor7}
+     and3 = {(~P3BAR) & Q3BAR & xor4 & xor5 & xor6 & xor7}
+     and4 = {(~P4BAR) & Q4BAR & xor5 & xor6 & xor7}
+     and5 = {(~P5BAR) & Q5BAR & xor6 & xor7}
+     and6 = {(~P6BAR) & Q6BAR & xor7}
+     and7 = {(~P7BAR) & Q7BAR}
+     PEQQBAR_O = {~(xor0 & xor1 & xor2 & xor3 & xor4 & xor5 & xor6 & xor7)}
+     PGTQBAR_O = {~(and0 | and1 | and2 | and3 | and4 | and5 | and6 | and7)}

U3DLY PINDLY(2,0,16) DPWR DGND
+     PEQQBAR_O PGTQBAR_O
+     P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     PEQQBAR PGTQBAR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     PDATA = {CHANGED(P0,0) | CHANGED(P1,0) | CHANGED(P2,0) | CHANGED(P3,0) |
+          CHANGED(P4,0) | CHANGED(P5,0) | CHANGED(P6,0) | CHANGED(P7,0)}
+     QDATA = {CHANGED(Q0,0) | CHANGED(Q1,0) | CHANGED(Q2,0) | CHANGED(Q3,0) |
+          CHANGED(Q4,0) | CHANGED(Q5,0) | CHANGED(Q6,0) | CHANGED(Q7,0)}
+
+  PINDLY:
+     PEQQBAR = {
+       CASE(
+         QDATA & TRN_LH, DELAY(-1,16ns,25ns),
+         PDATA & TRN_LH, DELAY(-1,15ns,25ns),
+         PDATA & TRN_HL, DELAY(-1,17ns,25ns),
+         QDATA & TRN_HL, DELAY(-1,15ns,25ns),
+         DELAY(-1,18ns,26ns))}
+
+     PGTQBAR = {
+       CASE(
+         QDATA & TRN_LH, DELAY(-1,24ns,30ns),
+         QDATA & TRN_HL, DELAY(-1,20ns,30ns),
+         PDATA & TRN_LH, DELAY(-1,22ns,30ns),
+         PDATA & TRN_HL, DELAY(-1,17ns,30ns),
+         DELAY(-1,25ns,31ns))}

.ENDS 74LS684
*
*
* ----------------------------------------------------------- 74LS685 ------
*  8-Bit Magnitude/Identity Comparators
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1129 to 2-1138
*  bss    6/2/94
*
.SUBCKT 74LS685 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     PEQQBAR PGTQBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(16) DPWR DGND
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR
+     D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(16,2) DPWR DGND
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR
+     PEQQBAR_O PGTQBAR_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     xor0 = {~(P0BAR ^ Q0BAR)}
+     xor1 = {~(P1BAR ^ Q1BAR)}
+     xor2 = {~(P2BAR ^ Q2BAR)}
+     xor3 = {~(P3BAR ^ Q3BAR)}
+     xor4 = {~(P4BAR ^ Q4BAR)}
+     xor5 = {~(P5BAR ^ Q5BAR)}
+     xor6 = {~(P6BAR ^ Q6BAR)}
+     xor7 = {~(P7BAR ^ Q7BAR)}
+     and0 = {(~P0BAR) & Q0BAR & xor1 & xor2 & xor3 & xor4 & xor5 & xor6 & xor7}
+     and1 = {(~P1BAR) & Q1BAR & xor2 & xor3 & xor4 & xor5 & xor6 & xor7}
+     and2 = {(~P2BAR) & Q2BAR & xor3 & xor4 & xor5 & xor6 & xor7}
+     and3 = {(~P3BAR) & Q3BAR & xor4 & xor5 & xor6 & xor7}
+     and4 = {(~P4BAR) & Q4BAR & xor5 & xor6 & xor7}
+     and5 = {(~P5BAR) & Q5BAR & xor6 & xor7}
+     and6 = {(~P6BAR) & Q6BAR & xor7}
+     and7 = {(~P7BAR) & Q7BAR}
+     PEQQBAR_O = {~(xor0 & xor1 & xor2 & xor3 & xor4 & xor5 & xor6 & xor7)}
+     PGTQBAR_O = {~(and0 | and1 | and2 | and3 | and4 | and5 | and6 | and7)}

U3DLY PINDLY(2,0,16) DPWR DGND
+     PEQQBAR_O PGTQBAR_O
+     P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+     PEQQBAR PGTQBAR
+     IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     PDATA = {CHANGED(P0,0) | CHANGED(P1,0) | CHANGED(P2,0) | CHANGED(P3,0) |
+          CHANGED(P4,0) | CHANGED(P5,0) | CHANGED(P6,0) | CHANGED(P7,0)}
+     QDATA = {CHANGED(Q0,0) | CHANGED(Q1,0) | CHANGED(Q2,0) | CHANGED(Q3,0) |
+          CHANGED(Q4,0) | CHANGED(Q5,0) | CHANGED(Q6,0) | CHANGED(Q7,0)}
+
+  PINDLY:
+     PEQQBAR = {
+       CASE(
+         PDATA & TRN_LH, DELAY(-1,30ns,45ns),
+         QDATA & TRN_LH, DELAY(-1,24ns,45ns),
+         QDATA & TRN_HL, DELAY(-1,23ns,35ns),
+         PDATA & TRN_HL, DELAY(-1,19ns,35ns),
+         DELAY(-1,31ns,46ns))}
+
+     PGTQBAR = {
+       CASE(
+         PDATA & TRN_LH, DELAY(-1,32ns,45ns),
+         QDATA & TRN_LH, DELAY(-1,30ns,45ns),
+         QDATA & TRN_HL, DELAY(-1,20ns,35ns),
+         PDATA & TRN_HL, DELAY(-1,16ns,35ns),
+         DELAY(-1,33ns,46ns))}

.ENDS 74LS685
*
*
* ----------------------------------------------------------- 74LS686 ------
*  8-Bit Magnitude/Identity Comparators
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1129 to 2-1138
*  bss    6/3/94
*
.SUBCKT 74LS686 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     G1BAR G2BAR PEQQBAR PGTQBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(16) DPWR DGND
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR
+     D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(18,2) DPWR DGND
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR G1BAR G2BAR
+     PEQQBAR_O PGTQBAR_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     g1 = {~G1BAR}
+     g2 = {~G2BAR}
+     xor0 = {~(P0BAR ^ Q0BAR)}
+     xor1 = {~(P1BAR ^ Q1BAR)}
+     xor2 = {~(P2BAR ^ Q2BAR)}
+     xor3 = {~(P3BAR ^ Q3BAR)}
+     xor4 = {~(P4BAR ^ Q4BAR)}
+     xor5 = {~(P5BAR ^ Q5BAR)}
+     xor6 = {~(P6BAR ^ Q6BAR)}
+     xor7 = {~(P7BAR ^ Q7BAR)}
+     and0 = {(~P0BAR) & Q0BAR & xor1 & xor2 & xor3 & xor4 & xor5 & xor6 & xor7 & g2}
+     and1 = {(~P1BAR) & Q1BAR & xor2 & xor3 & xor4 & xor5 & xor6 & xor7 & g2}
+     and2 = {(~P2BAR) & Q2BAR & xor3 & xor4 & xor5 & xor6 & xor7 & g2}
+     and3 = {(~P3BAR) & Q3BAR & xor4 & xor5 & xor6 & xor7 & g2}
+     and4 = {(~P4BAR) & Q4BAR & xor5 & xor6 & xor7 & g2}
+     and5 = {(~P5BAR) & Q5BAR & xor6 & xor7 & g2}
+     and6 = {(~P6BAR) & Q6BAR & xor7 & g2}
+     and7 = {(~P7BAR) & Q7BAR & g2}
+     PEQQBAR_O = {~(xor0 & xor1 & xor2 & xor3 & xor4 & xor5 & xor6 & xor7 & g1)}
+     PGTQBAR_O = {~(and0 | and1 | and2 | and3 | and4 | and5 | and6 | and7)}

U3DLY PINDLY(2,0,18) DPWR DGND
+     PEQQBAR_O PGTQBAR_O
+     P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 G1BAR G2BAR
+     PEQQBAR PGTQBAR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     PDATA = {CHANGED(P0,0) | CHANGED(P1,0) | CHANGED(P2,0) | CHANGED(P3,0) |
+          CHANGED(P4,0) | CHANGED(P5,0) | CHANGED(P6,0) | CHANGED(P7,0)}
+     QDATA = {CHANGED(Q0,0) | CHANGED(Q1,0) | CHANGED(Q2,0) | CHANGED(Q3,0) |
+          CHANGED(Q4,0) | CHANGED(Q5,0) | CHANGED(Q6,0) | CHANGED(Q7,0)}
+     ENG1 = {CHANGED(G1BAR,0)}
+     ENG2 = {CHANGED(G2BAR,0)}
+
+  PINDLY:
+     PEQQBAR = {
+       CASE(
+         ENG1 & TRN_LH, DELAY(-1,11ns,20ns),
+         QDATA & TRN_LH, DELAY(-1,13ns,25ns),
+         QDATA & TRN_HL, DELAY(-1,21ns,30ns),
+         PDATA & TRN_LH, DELAY(-1,13ns,25ns),
+         PDATA & TRN_HL, DELAY(-1,20ns,30ns),
+         ENG1 & TRN_HL, DELAY(-1,19ns,30ns),
+         DELAY(-1,22ns,31ns))}
+
+     PGTQBAR = {
+       CASE(
+         ENG2 & TRN_LH, DELAY(-1,21ns,30ns),
+         PDATA & TRN_LH, DELAY(-1,19ns,30ns),
+         QDATA & TRN_LH, DELAY(-1,18ns,30ns),
+         QDATA & TRN_HL, DELAY(-1,19ns,30ns),
+         PDATA & TRN_HL, DELAY(-1,15ns,30ns),
+         ENG2 & TRN_HL, DELAY(-1,16ns,25ns),
+         DELAY(-1,22ns,31ns))}

.ENDS 74LS686
*
*
* ----------------------------------------------------------- 74LS687 ------
*  8-Bit Magnitude/Identity Comparators
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1129 to 2-1138
*  bss    6/3/94
*
.SUBCKT 74LS687 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     G1BAR G2BAR PEQQBAR PGTQBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(16) DPWR DGND
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR
+     D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(18,2) DPWR DGND
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR G1BAR G2BAR
+     PEQQBAR_O PGTQBAR_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     g1 = {~G1BAR}
+     g2 = {~G2BAR}
+     xor0 = {~(P0BAR ^ Q0BAR)}
+     xor1 = {~(P1BAR ^ Q1BAR)}
+     xor2 = {~(P2BAR ^ Q2BAR)}
+     xor3 = {~(P3BAR ^ Q3BAR)}
+     xor4 = {~(P4BAR ^ Q4BAR)}
+     xor5 = {~(P5BAR ^ Q5BAR)}
+     xor6 = {~(P6BAR ^ Q6BAR)}
+     xor7 = {~(P7BAR ^ Q7BAR)}
+     and0 = {(~P0BAR) & Q0BAR & xor1 & xor2 & xor3 & xor4 & xor5 & xor6 & xor7 & g2}
+     and1 = {(~P1BAR) & Q1BAR & xor2 & xor3 & xor4 & xor5 & xor6 & xor7 & g2}
+     and2 = {(~P2BAR) & Q2BAR & xor3 & xor4 & xor5 & xor6 & xor7 & g2}
+     and3 = {(~P3BAR) & Q3BAR & xor4 & xor5 & xor6 & xor7 & g2}
+     and4 = {(~P4BAR) & Q4BAR & xor5 & xor6 & xor7 & g2}
+     and5 = {(~P5BAR) & Q5BAR & xor6 & xor7 & g2}
+     and6 = {(~P6BAR) & Q6BAR & xor7 & g2}
+     and7 = {(~P7BAR) & Q7BAR & g2}
+     PEQQBAR_O = {~(xor0 & xor1 & xor2 & xor3 & xor4 & xor5 & xor6 & xor7 & g1)}
+     PGTQBAR_O = {~(and0 | and1 | and2 | and3 | and4 | and5 | and6 | and7)}

U3DLY PINDLY(2,0,2) DPWR DGND
+     PEQQBAR_O PGTQBAR_O
+     G1BAR G2BAR
+     PEQQBAR PGTQBAR
+     IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENG1 = {CHANGED(G1BAR,0)}
+     ENG2 = {CHANGED(G2BAR,0)}
+
+  PINDLY:
+     PEQQBAR = {
+       CASE(
+         ENG1 & TRN_LH, DELAY(-1,21ns,35ns),
+         ENG1 & TRN_HL, DELAY(-1,18ns,30ns),
+         TRN_LH, DELAY(-1,24ns,35ns),
+         TRN_HL, DELAY(-1,20ns,30ns),
+         DELAY(-1,25ns,36ns))}
+
+     PGTQBAR = {
+       CASE(
+         ENG2 & TRN_HL, DELAY(-1,15ns,30ns),
+         TRN_LH, DELAY(-1,24ns,35ns),
+         TRN_HL, DELAY(-1,16ns,30ns),
+         DELAY(-1,25ns,36ns))}

.ENDS 74LS687
*
*
* ----------------------------------------------------------- 74ALS688 ------
*  8-Bit Identity Comparators
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-581 to 2-584
*  bss    6/3/94
*
.SUBCKT 74ALS688 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     GBAR PEQQBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(16) DPWR DGND
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(17,1) DPWR DGND
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR GBAR
+     PEQQBAR_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     gen = {~GBAR}
+     xor0 = {~(P0BAR ^ Q0BAR)}
+     xor1 = {~(P1BAR ^ Q1BAR)}
+     xor2 = {~(P2BAR ^ Q2BAR)}
+     xor3 = {~(P3BAR ^ Q3BAR)}
+     xor4 = {~(P4BAR ^ Q4BAR)}
+     xor5 = {~(P5BAR ^ Q5BAR)}
+     xor6 = {~(P6BAR ^ Q6BAR)}
+     xor7 = {~(P7BAR ^ Q7BAR)}
+     PEQQBAR_O = {~(xor0 & xor1 & xor2 & xor3 & xor4 & xor5 & xor6 & xor7 & gen)}

U3DLY PINDLY(1,0,1) DPWR DGND
+     PEQQBAR_O
+     GBAR
+     PEQQBAR
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENG1 = {CHANGED(GBAR,0)}
+
+  PINDLY:
+     PEQQBAR = {
+       CASE(
+         ENG1 & TRN_HL, DELAY(5ns,-1,22ns),
+         TRN_HL, DELAY(5ns,-1,20ns),
+         TRN_LH, DELAY(3ns,-1,12ns),
+         DELAY(6ns,-1,23ns))}

.ENDS 74ALS688
*
*
* ----------------------------------------------------------- 74HC688 ------
*  8-Bit Identity Comparators
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-597 to 2-599
*  bss    6/3/94
*
.SUBCKT 74HC688 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     GBAR PEQQBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(16) DPWR DGND
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(17,1) DPWR DGND
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR GBAR
+     PEQQBAR_O
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     gen = {~GBAR}
+     xor0 = {~(P0BAR ^ Q0BAR)}
+     xor1 = {~(P1BAR ^ Q1BAR)}
+     xor2 = {~(P2BAR ^ Q2BAR)}
+     xor3 = {~(P3BAR ^ Q3BAR)}
+     xor4 = {~(P4BAR ^ Q4BAR)}
+     xor5 = {~(P5BAR ^ Q5BAR)}
+     xor6 = {~(P6BAR ^ Q6BAR)}
+     xor7 = {~(P7BAR ^ Q7BAR)}
+     PEQQBAR_O = {~(xor0 & xor1 & xor2 & xor3 & xor4 & xor5 & xor6 & xor7 & gen)}

U3DLY PINDLY(1,0,17) DPWR DGND
+     PEQQBAR_O
+     P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 GBAR
+     PEQQBAR
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     PDATA = {CHANGED(P0,0) | CHANGED(P1,0) | CHANGED(P2,0) | CHANGED(P3,0) |
+          CHANGED(P4,0) | CHANGED(P5,0) | CHANGED(P6,0) | CHANGED(P7,0)}
+     QDATA = {CHANGED(Q0,0) | CHANGED(Q1,0) | CHANGED(Q2,0) | CHANGED(Q3,0) |
+          CHANGED(Q4,0) | CHANGED(Q5,0) | CHANGED(Q6,0) | CHANGED(Q7,0)}
+     ENG1 = {CHANGED(GBAR,0)}
+
+  PINDLY:
+     PEQQBAR = {
+       CASE(
+         ENG1, DELAY(-1,16ns,24ns),
+         QDATA | PDATA, DELAY(-1,30ns,42ns),
+         DELAY(-1,31ns,43ns))}

.ENDS 74HC688

*-------------------------------------------------------------74HCT688-----

* 8-Bit Magnitude Comparator
* Philips High-speed CMOS Family Logic Data Handbook, 1994, pages 783 to 787
* jat 9/12/96

.SUBCKT 74HCT688 EBAR P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 PEQQBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(17,1) DPWR DGND
+ P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 EBAR
+ PEQQBARO
+ D0_GATE IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   XNOR0 = {~(P0 ^ Q0)}
+   XNOR1 = {~(P1 ^ Q1)}
+   XNOR2 = {~(P2 ^ Q2)}
+   XNOR3 = {~(P3 ^ Q3)}
+   XNOR4 = {~(P4 ^ Q4)}
+   XNOR5 = {~(P5 ^ Q5)}
+   XNOR6 = {~(P6 ^ Q6)}
+   XNOR7 = {~(P7 ^ Q7)}
+   PEQQBARO = {~(~EBAR & XNOR0 & XNOR1 & XNOR2 & XNOR3 & XNOR4 & XNOR5 & XNOR6 & XNOR7)}

U2 PINDLY(1,0,17) DPWR DGND
+ PEQQBARO
+ P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 EBAR
+ PEQQBAR
+ IO_HCT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(P0,0) | CHANGED(P1,0) | CHANGED(P2,0) | CHANGED(P3,0) |
+           CHANGED(P4,0) | CHANGED(P5,0) | CHANGED(P6,0) | CHANGED(P7,0) |
+           CHANGED(Q0,0) | CHANGED(Q1,0) | CHANGED(Q2,0) | CHANGED(Q3,0) |
+           CHANGED(Q4,0) | CHANGED(Q5,0) | CHANGED(Q6,0) | CHANGED(Q7,0)}
+   ENAB = {CHANGED(EBAR,0)}
+ PINDLY:
+   PEQQBAR = {
+     CASE(
+       ENAB & (TRN_LH | TRN_HL), DELAY(-1,10NS,24NS),
+       DATA & (TRN_LH | TRN_HL), DELAY(-1,20NS,34NS),
+       DELAY(-1,21NS,35NS))}

.ENDS 74HCT688

* ----------------------------------------------------------- 74LS688 ------
*  8-Bit Identity Comparators
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1129 to 2-1138
*  bss    6/3/94
*
.SUBCKT 74LS688 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     GBAR PEQQBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(16) DPWR DGND
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR
+     D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(17,1) DPWR DGND
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR GBAR
+     PEQQBAR_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     gen = {~GBAR}
+     xor0 = {~(P0BAR ^ Q0BAR)}
+     xor1 = {~(P1BAR ^ Q1BAR)}
+     xor2 = {~(P2BAR ^ Q2BAR)}
+     xor3 = {~(P3BAR ^ Q3BAR)}
+     xor4 = {~(P4BAR ^ Q4BAR)}
+     xor5 = {~(P5BAR ^ Q5BAR)}
+     xor6 = {~(P6BAR ^ Q6BAR)}
+     xor7 = {~(P7BAR ^ Q7BAR)}
+     PEQQBAR_O = {~(xor0 & xor1 & xor2 & xor3 & xor4 & xor5 & xor6 & xor7 & gen)}

U3DLY PINDLY(1,0,17) DPWR DGND
+     PEQQBAR_O
+     P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 GBAR
+     PEQQBAR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     PDATA = {CHANGED(P0,0) | CHANGED(P1,0) | CHANGED(P2,0) | CHANGED(P3,0) |
+          CHANGED(P4,0) | CHANGED(P5,0) | CHANGED(P6,0) | CHANGED(P7,0)}
+     QDATA = {CHANGED(Q0,0) | CHANGED(Q1,0) | CHANGED(Q2,0) | CHANGED(Q3,0) |
+          CHANGED(Q4,0) | CHANGED(Q5,0) | CHANGED(Q6,0) | CHANGED(Q7,0)}
+     ENG1 = {CHANGED(GBAR,0)}
+
+  PINDLY:
+     PEQQBAR = {
+       CASE(
+         TRN_LH, DELAY(-1,12ns,18ns),
+         QDATA & TRN_HL, DELAY(-1,17ns,23ns),
+         PDATA & TRN_HL, DELAY(-1,17ns,23ns),
+         ENG1 & TRN_HL, DELAY(-1,13ns,20ns),
+         DELAY(-1,18ns,24ns))}

.ENDS 74LS688
*
*
* ----------------------------------------------------------- 74ALS689 ------
*  8-Bit Identity Comparators
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-581 to 2-584
*  bss    6/3/94
*
.SUBCKT 74ALS689 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     GBAR PEQQBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(16) DPWR DGND
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(17,1) DPWR DGND
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR GBAR
+     PEQQBAR_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     gen = {~GBAR}
+     xor0 = {~(P0BAR ^ Q0BAR)}
+     xor1 = {~(P1BAR ^ Q1BAR)}
+     xor2 = {~(P2BAR ^ Q2BAR)}
+     xor3 = {~(P3BAR ^ Q3BAR)}
+     xor4 = {~(P4BAR ^ Q4BAR)}
+     xor5 = {~(P5BAR ^ Q5BAR)}
+     xor6 = {~(P6BAR ^ Q6BAR)}
+     xor7 = {~(P7BAR ^ Q7BAR)}
+     PEQQBAR_O = {~(xor0 & xor1 & xor2 & xor3 & xor4 & xor5 & xor6 & xor7 & gen)}

U3DLY PINDLY(1,0,1) DPWR DGND
+     PEQQBAR_O
+     GBAR
+     PEQQBAR
+     IO_ALS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENG1 = {CHANGED(GBAR,0)}
+
+  PINDLY:
+     PEQQBAR = {
+       CASE(
+         ENG1, DELAY(8ns,-1,25ns),
+         TRN_LH, DELAY(10ns,-1,25ns),
+         TRN_HL, DELAY(5ns,-1,23ns),
+         DELAY(11ns,-1,26ns))}

.ENDS 74ALS689
*
*
* ----------------------------------------------------------- 74LS689 ------
*  8-Bit Identity Comparators
*
*  The TTL Logic Data Book, Vol. 2, 1985, TI Pages 2-1295 to 2-1302
*  bss    6/3/94
*
.SUBCKT 74LS689 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     GBAR PEQQBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(16) DPWR DGND
+     Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 P0 P1 P2 P3 P4 P5 P6 P7 
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR
+     D0_GATE IO_LS_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(17,1) DPWR DGND
+     Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+     P0BAR P1BAR P2BAR P3BAR P4BAR P5BAR P6BAR P7BAR GBAR
+     PEQQBAR_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     gen = {~GBAR}
+     xor0 = {~(P0BAR ^ Q0BAR)}
+     xor1 = {~(P1BAR ^ Q1BAR)}
+     xor2 = {~(P2BAR ^ Q2BAR)}
+     xor3 = {~(P3BAR ^ Q3BAR)}
+     xor4 = {~(P4BAR ^ Q4BAR)}
+     xor5 = {~(P5BAR ^ Q5BAR)}
+     xor6 = {~(P6BAR ^ Q6BAR)}
+     xor7 = {~(P7BAR ^ Q7BAR)}
+     PEQQBAR_O = {~(xor0 & xor1 & xor2 & xor3 & xor4 & xor5 & xor6 & xor7 & gen)}

U3DLY PINDLY(1,0,1) DPWR DGND
+     PEQQBAR_O
+     GBAR
+     PEQQBAR
+     IO_LS_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENG1 = {CHANGED(GBAR,0)}
+
+  PINDLY:
+     PEQQBAR = {
+       CASE(
+         ENG1 & TRN_LH, DELAY(-1,22ns,35ns),
+         ENG1 & TRN_HL, DELAY(-1,19ns,30ns),
+         TRN_HL, DELAY(-1,22ns,35ns),
+         TRN_LH, DELAY(-1,24ns,40ns),
+         DELAY(-1,25ns,41ns))}

.ENDS 74LS689
*
*
* ----------------------------------------------------------- 74LS690 ------
*  Synchronous Counters With Output Registers And Multiplexed 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1139 to 2-1148
*  bss    6/6/94
*
.SUBCKT 74LS690 GBAR R/CBAR RCLRBAR RCK CCLRBAR LOADBAR ENP ENT 
+     CCK A B C D QA QB QC QD RCO 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI CCLRBAR CCK
+     DA DB DC DD
+     Q1 Q2 Q3 Q4 Q1BAR Q2BAR Q3BAR Q4BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(4) DPWR DGND
+     $D_HI RCLRBAR RCK
+     Q1 Q2 Q3 Q4
+     $D_NC $D_NC $D_NC $D_NC QABAR QBBAR QCBAR QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(20,9) DPWR DGND
+     R/CBAR LOADBAR ENT ENP A B C D Q1 Q2 Q3 Q4 Q1BAR Q2BAR Q3BAR Q4BAR
+     QABAR QBBAR QCBAR QDBAR
+     DA DB DC DD QA_O QB_O QC_O QD_O RCO_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     rbar/c = {~R/CBAR}
+     entbar = {~ENT}
+     load = {~LOADBAR}
+     enpbar = {~ENP}
+     inload = {~(load | enpbar | entbar)}
+     nora = {~(LOADBAR | A)}
+     norb = {~(LOADBAR | B)}
+     norc = {~(LOADBAR | C)}
+     nord = {~(LOADBAR | D)}
+     ina = {~inload}
+     inb = {~(inload & Q1)}
+     inc = {~(inload & Q1 & Q2)}
+     ind = {~(inload & Q1 & Q2 & Q3)}
+     RCO_O = {~((~(Q1 & Q4)) | entbar)}
+     DA = {~((Q1 & inload) | (ina & LOADBAR & Q1BAR) | nora)}
+     DB = {~((Q2 & inload & Q1) | (inload & Q1 & Q3BAR & Q4) | (inb & LOADBAR & Q2BAR) | 
+         norb)}
+     DC = {~((Q3 & inload & Q1 & Q2) | (inload & Q1 & Q2 & Q4) | (inc & LOADBAR & Q3BAR) |
+         norc)}
+     DD = {~((Q4 & inload & Q1) | (ind & LOADBAR & Q4BAR) | nord)}
+     QA_O = {~((R/CBAR & QABAR) | (rbar/c & Q1BAR))}
+     QB_O = {~((R/CBAR & QBBAR) | (rbar/c & Q2BAR))}
+     QC_O = {~((R/CBAR & QCBAR) | (rbar/c & Q3BAR))}
+     QD_O = {~((R/CBAR & QDBAR) | (rbar/c & Q4BAR))}

U4DLY PINDLY(5,1,6) DPWR DGND
+     QA_O QB_O QC_O QD_O RCO_O
+     GBAR
+     CCK ENT RCK CCLRBAR RCLRBAR R/CBAR
+     QA QB QC QD RCO
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKC = {CHANGED_LH(CCK,0)}
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     CLEARC = {CHANGED_HL(CCLRBAR,0)}
+     CLEARR = {CHANGED_HL(RCLRBAR,0)}
+     SELECT = {CHANGED(R/CBAR,0)}
+     ENTCH = {CHANGED(ENT,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD = {
+       CASE(
+         CLEARC & TRN_HL, DELAY(-1,23ns,40ns),
+         CLEARR & TRN_HL, DELAY(-1,20ns,30ns),
+         (CLOCKC | CLOCKR) & TRN_LH, DELAY(-1,12ns,20ns),
+         (CLOCKC | CLOCKR) & TRN_HL, DELAY(-1,17ns,25ns),
+         SELECT, DELAY(-1,16ns,25ns),
+         TRN_Z$, DELAY(-1,19ns,30ns),
+         TRN_$Z, DELAY(-1,17ns,30ns),
+         DELAY(-1,24ns,41ns))}
+
+  PINDLY:
+     RCO = {
+       CASE(
+         CLOCKC, DELAY(-1,23ns,40ns),
+         ENTCH, DELAY(-1,13ns,20ns),
+         DELAY(-1,24ns,41ns))}

U5CON CONSTRAINT(11) DPWR DGND
+     CCK RCK RCLRBAR CCLRBAR A B C D ENP ENT LOADBAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CCK
+     MIN_LO=25ns
+     MIN_HI=25ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_LO=25ns
+     MIN_HI=25ns
+
+  WIDTH:
+     NODE=RCLRBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=CCLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(4)=A B C D
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(2)=ENP ENT
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=LOADBAR
+     SETUPTIME_LO=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=CCLRBAR
+     SETUPTIME_HI=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=CCK
+     SETUPTIME_HI=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=RCLRBAR
+     SETUPTIME_HI=25ns

.ENDS 74LS690
*
*
* ----------------------------------------------------------- 74LS691 ------
*  Synchronous Counters With Output Registers And Multiplexed 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1139 to 2-1148
*  bss    6/6/94
*
.SUBCKT 74LS691 GBAR R/CBAR RCLRBAR RCK CCLRBAR LOADBAR ENP ENT 
+     CCK A B C D QA QB QC QD RCO 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI CCLRBAR CCK
+     DA DB DC DD
+     Q1 Q2 Q3 Q4 Q1BAR Q2BAR Q3BAR Q4BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(4) DPWR DGND
+     $D_HI RCLRBAR RCK
+     Q1 Q2 Q3 Q4
+     $D_NC $D_NC $D_NC $D_NC QABAR QBBAR QCBAR QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(20,9) DPWR DGND
+     R/CBAR LOADBAR ENT ENP A B C D Q1 Q2 Q3 Q4 Q1BAR Q2BAR Q3BAR Q4BAR
+     QABAR QBBAR QCBAR QDBAR
+     DA DB DC DD QA_O QB_O QC_O QD_O RCO_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     rbar/c = {~R/CBAR}
+     entbar = {~ENT}
+     load = {~LOADBAR}
+     enpbar = {~ENP}
+     inload = {~(load | enpbar | entbar)}
+     nora = {~(LOADBAR | A)}
+     norb = {~(LOADBAR | B)}
+     norc = {~(LOADBAR | C)}
+     nord = {~(LOADBAR | D)}
+     ina = {~inload}
+     inb = {~(inload & Q1)}
+     inc = {~(inload & Q1 & Q2)}
+     ind = {~(inload & Q1 & Q2 & Q3)}
+     RCO_O = {~((~(Q1 & Q2 & Q3 & Q4)) | entbar)}
+     DA = {~((Q1 & inload) | (ina & LOADBAR & Q1BAR) | nora)}
+     DB = {~((Q2 & inload & Q1) | (inb & LOADBAR & Q2BAR) | norb)}
+     DC = {~((Q3 & inload & Q1 & Q2) | (inc & LOADBAR & Q3BAR) | norc)}
+     DD = {~((Q4 & inload & Q1 & Q2 & Q3) | (ind & LOADBAR & Q4BAR) | nord)}
+     QA_O = {~((R/CBAR & QABAR) | (rbar/c & Q1BAR))}
+     QB_O = {~((R/CBAR & QBBAR) | (rbar/c & Q2BAR))}
+     QC_O = {~((R/CBAR & QCBAR) | (rbar/c & Q3BAR))}
+     QD_O = {~((R/CBAR & QDBAR) | (rbar/c & Q4BAR))}

U4DLY PINDLY(5,1,6) DPWR DGND
+     QA_O QB_O QC_O QD_O RCO_O
+     GBAR
+     CCK ENT RCK CCLRBAR RCLRBAR R/CBAR
+     QA QB QC QD RCO
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKC = {CHANGED_LH(CCK,0)}
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     CLEARC = {CHANGED_HL(CCLRBAR,0)}
+     CLEARR = {CHANGED_HL(RCLRBAR,0)}
+     SELECT = {CHANGED(R/CBAR,0)}
+     ENTCH = {CHANGED(ENT,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD = {
+       CASE(
+         CLEARC & TRN_HL, DELAY(-1,23ns,40ns),
+         CLEARR & TRN_HL, DELAY(-1,20ns,30ns),
+         (CLOCKC | CLOCKR) & TRN_LH, DELAY(-1,12ns,20ns),
+         (CLOCKC | CLOCKR) & TRN_HL, DELAY(-1,17ns,25ns),
+         SELECT, DELAY(-1,16ns,25ns),
+         TRN_Z$, DELAY(-1,19ns,30ns),
+         TRN_$Z, DELAY(-1,17ns,30ns),
+         DELAY(-1,24ns,41ns))}
+
+  PINDLY:
+     RCO = {
+       CASE(
+         CLOCKC, DELAY(-1,23ns,40ns),
+         ENTCH, DELAY(-1,13ns,20ns),
+         DELAY(-1,24ns,41ns))}

U5CON CONSTRAINT(11) DPWR DGND
+     CCK RCK RCLRBAR CCLRBAR A B C D ENP ENT LOADBAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CCK
+     MIN_LO=25ns
+     MIN_HI=25ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_LO=25ns
+     MIN_HI=25ns
+
+  WIDTH:
+     NODE=RCLRBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=CCLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(4)=A B C D
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(2)=ENP ENT
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=LOADBAR
+     SETUPTIME_LO=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=CCLRBAR
+     SETUPTIME_HI=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=CCK
+     SETUPTIME_HI=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=RCLRBAR
+     SETUPTIME_HI=25ns

.ENDS 74LS691
*
*
* ----------------------------------------------------------- 74LS692 ------
*  Synchronous Counters With Output Registers And Multiplexed 3-State Outputs
*
*  The TTL Logic Data Book, Vol. 2, 1985, TI Pages 3-1303 to 3-1313
*  bss    6/6/94
*
.SUBCKT 74LS692 GBAR R/CBAR RCLRBAR RCK CCLRBAR LOADBAR ENP ENT 
+     CCK A B C D QA QB QC QD RCO 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI $D_HI CCK
+     DA DB DC DD
+     Q1 Q2 Q3 Q4 Q1BAR Q2BAR Q3BAR Q4BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(4) DPWR DGND
+     $D_HI $D_HI RCK
+     D1 D2 D3 D4
+     $D_NC $D_NC $D_NC $D_NC QABAR QBBAR QCBAR QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(22,13) DPWR DGND
+     R/CBAR LOADBAR ENT ENP A B C D Q1 Q2 Q3 Q4 Q1BAR Q2BAR Q3BAR Q4BAR
+     QABAR QBBAR QCBAR QDBAR CCLRBAR RCLRBAR
+     DA DB DC DD QA_O QB_O QC_O QD_O RCO_O D1 D2 D3 D4
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     rbar/c = {~R/CBAR}
+     entbar = {~ENT}
+     load = {~LOADBAR}
+     enpbar = {~ENP}
+     inload = {~(load | enpbar | entbar)}
+     nora = {(~(LOADBAR | A)) | (~CCLRBAR)}
+     norb = {(~(LOADBAR | B)) | (~CCLRBAR)}
+     norc = {(~(LOADBAR | C)) | (~CCLRBAR)}
+     nord = {(~(LOADBAR | D)) | (~CCLRBAR)}
+     ina = {~inload}
+     inb = {~(inload & Q1)}
+     inc = {~(inload & Q1 & Q2)}
+     ind = {~(inload & Q1 & Q2 & Q3)}
+     RCO_O = {~((~(Q1 & Q4)) | entbar)}
+     DA = {~((Q1 & inload) | (ina & LOADBAR & Q1BAR) | nora)}
+     DB = {~((Q2 & inload & Q1) | (inload & Q1 & Q3BAR & Q4) | (inb & LOADBAR & Q2BAR) | 
+         norb)}
+     DC = {~((Q3 & inload & Q1 & Q2) | (inload & Q1 & Q2 & Q4) | (inc & LOADBAR & Q3BAR) |
+         norc)}
+     DD = {~((Q4 & inload & Q1) | (ind & LOADBAR & Q4BAR) | nord)}
+     D1 = {RCLRBAR & Q1}
+     D2 = {RCLRBAR & Q2}
+     D3 = {RCLRBAR & Q3}
+     D4 = {RCLRBAR & Q4}
+     QA_O = {~((R/CBAR & QABAR) | (rbar/c & Q1BAR))}
+     QB_O = {~((R/CBAR & QBBAR) | (rbar/c & Q2BAR))}
+     QC_O = {~((R/CBAR & QCBAR) | (rbar/c & Q3BAR))}
+     QD_O = {~((R/CBAR & QDBAR) | (rbar/c & Q4BAR))}

U4DLY PINDLY(5,1,6) DPWR DGND
+     QA_O QB_O QC_O QD_O RCO_O
+     GBAR
+     CCK ENT RCK CCLRBAR RCLRBAR R/CBAR
+     QA QB QC QD RCO
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKC = {CHANGED_LH(CCK,0)}
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     CLEARC = {CHANGED_HL(CCLRBAR,0)}
+     CLEARR = {CHANGED_HL(RCLRBAR,0)}
+     SELECT = {CHANGED(R/CBAR,0)}
+     ENTCH = {CHANGED(ENT,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD = {
+       CASE(
+         (CLOCKC | CLOCKR) & TRN_LH, DELAY(-1,12ns,20ns),
+         (CLOCKC | CLOCKR) & TRN_HL, DELAY(-1,17ns,25ns),
+         SELECT, DELAY(-1,16ns,25ns),
+         TRN_Z$, DELAY(-1,19ns,30ns),
+         TRN_$Z, DELAY(-1,17ns,30ns),
+         DELAY(-1,20ns,31ns))}
+
+  PINDLY:
+     RCO = {
+       CASE(
+         CLOCKC, DELAY(-1,23ns,40ns),
+         ENTCH, DELAY(-1,13ns,20ns),
+         DELAY(-1,24ns,41ns))}

U5CON CONSTRAINT(11) DPWR DGND
+     CCK RCK RCLRBAR CCLRBAR A B C D ENP ENT LOADBAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CCK
+     MIN_LO=25ns
+     MIN_HI=25ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_LO=25ns
+     MIN_HI=25ns
+
+  WIDTH:
+     NODE=RCLRBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=CCLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(4)=A B C D
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(2)=ENP ENT
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=LOADBAR
+     SETUPTIME_LO=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=CCLRBAR
+     SETUPTIME_LO=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=CCK
+     SETUPTIME_HI=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=RCLRBAR
+     SETUPTIME_LO=20ns

.ENDS 74LS692
*
*
* ----------------------------------------------------------- 74LS693 ------
*  Synchronous Counters With Output Registers And Multiplexed 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1139 to 2-1148
*  bss    6/6/94
*
.SUBCKT 74LS693 GBAR R/CBAR RCLRBAR RCK CCLRBAR LOADBAR ENP ENT 
+     CCK A B C D QA QB QC QD RCO 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI $D_HI CCK
+     DA DB DC DD
+     Q1 Q2 Q3 Q4 Q1BAR Q2BAR Q3BAR Q4BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(4) DPWR DGND
+     $D_HI $D_HI RCK
+     D1 D2 D3 D4
+     $D_NC $D_NC $D_NC $D_NC QABAR QBBAR QCBAR QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(22,13) DPWR DGND
+     R/CBAR LOADBAR ENT ENP A B C D Q1 Q2 Q3 Q4 Q1BAR Q2BAR Q3BAR Q4BAR
+     QABAR QBBAR QCBAR QDBAR CCLRBAR RCLRBAR
+     DA DB DC DD QA_O QB_O QC_O QD_O RCO_O D1 D2 D3 D4
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     rbar/c = {~R/CBAR}
+     entbar = {~ENT}
+     load = {~LOADBAR}
+     enpbar = {~ENP}
+     inload = {~(load | enpbar | entbar)}
+     nora = {(~(LOADBAR | A)) | (~CCLRBAR)}
+     norb = {(~(LOADBAR | B)) | (~CCLRBAR)}
+     norc = {(~(LOADBAR | C)) | (~CCLRBAR)}
+     nord = {(~(LOADBAR | D)) | (~CCLRBAR)}
+     ina = {~inload}
+     inb = {~(inload & Q1)}
+     inc = {~(inload & Q1 & Q2)}
+     ind = {~(inload & Q1 & Q2 & Q3)}
+     RCO_O = {~((~(Q1 & Q2 & Q3 & Q4)) | entbar)}
+     DA = {~((Q1 & inload) | (ina & LOADBAR & Q1BAR) | nora)}
+     DB = {~((Q2 & inload & Q1) | (inb & LOADBAR & Q2BAR) | norb)}
+     DC = {~((Q3 & inload & Q1 & Q2) | (inc & LOADBAR & Q3BAR) | norc)}
+     DD = {~((Q4 & inload & Q1 & Q2 & Q3) | (ind & LOADBAR & Q4BAR) | nord)}
+     D1 = {RCLRBAR & Q1}
+     D2 = {RCLRBAR & Q2}
+     D3 = {RCLRBAR & Q3}
+     D4 = {RCLRBAR & Q4}
+     QA_O = {~((R/CBAR & QABAR) | (rbar/c & Q1BAR))}
+     QB_O = {~((R/CBAR & QBBAR) | (rbar/c & Q2BAR))}
+     QC_O = {~((R/CBAR & QCBAR) | (rbar/c & Q3BAR))}
+     QD_O = {~((R/CBAR & QDBAR) | (rbar/c & Q4BAR))}

U4DLY PINDLY(5,1,6) DPWR DGND
+     QA_O QB_O QC_O QD_O RCO_O
+     GBAR
+     CCK ENT RCK CCLRBAR RCLRBAR R/CBAR
+     QA QB QC QD RCO
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKC = {CHANGED_LH(CCK,0)}
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     CLEARC = {CHANGED_HL(CCLRBAR,0)}
+     CLEARR = {CHANGED_HL(RCLRBAR,0)}
+     SELECT = {CHANGED(R/CBAR,0)}
+     ENTCH = {CHANGED(ENT,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD = {
+       CASE(
+         (CLOCKC | CLOCKR) & TRN_LH, DELAY(-1,12ns,20ns),
+         (CLOCKC | CLOCKR) & TRN_HL, DELAY(-1,17ns,25ns),
+         SELECT, DELAY(-1,16ns,25ns),
+         TRN_Z$, DELAY(-1,19ns,30ns),
+         TRN_$Z, DELAY(-1,17ns,30ns),
+         DELAY(-1,20ns,31ns))}
+
+  PINDLY:
+     RCO = {
+       CASE(
+         CLOCKC, DELAY(-1,23ns,40ns),
+         ENTCH, DELAY(-1,13ns,20ns),
+         DELAY(-1,24ns,41ns))}

U5CON CONSTRAINT(11) DPWR DGND
+     CCK RCK RCLRBAR CCLRBAR A B C D ENP ENT LOADBAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CCK
+     MIN_LO=25ns
+     MIN_HI=25ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_LO=25ns
+     MIN_HI=25ns
+
+  WIDTH:
+     NODE=RCLRBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=CCLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(4)=A B C D
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(2)=ENP ENT
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=LOADBAR
+     SETUPTIME_LO=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=CCLRBAR
+     SETUPTIME_LO=40ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=CCK
+     SETUPTIME_HI=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=RCLRBAR
+     SETUPTIME_LO=20ns

.ENDS 74LS693
*
*
* ----------------------------------------------------------- 74LS696 ------
*  Synchronous Up/Down Counters With Output Registers And Multiplexed 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1149 to 2-1158
*  bss    6/7/94
*
.SUBCKT 74LS696 GBAR R/CBAR RCK CCLRBAR U/DBAR LOADBAR ENPBAR ENTBAR 
+     CCK A B C D QA QB QC QD RCOBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI CCLRBAR CCK
+     DA DB DC DD
+     Q1 Q2 Q3 Q4 Q1BAR Q2BAR Q3BAR Q4BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(4) DPWR DGND
+     $D_HI $D_HI RCK
+     Q1 Q2 Q3 Q4
+     $D_NC $D_NC $D_NC $D_NC QABAR QBBAR QCBAR QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(21,9) DPWR DGND
+     R/CBAR U/DBAR LOADBAR ENPBAR ENTBAR A B C D Q1 Q2 Q3 Q4
+     Q1BAR Q2BAR Q3BAR Q4BAR QABAR QBBAR QCBAR QDBAR
+     DA DB DC DD QA_O QB_O QC_O QD_O RCOBAR_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     rbar/c = {~R/CBAR}
+     ubar/d = {~U/DBAR}
+     load = {~LOADBAR}
+     nora = {~(LOADBAR | A)}
+     norb = {~(LOADBAR | B)}
+     norc = {~(LOADBAR | C)}
+     nord = {~(LOADBAR | D)}
+     ent = {~ENTBAR}
+     inload = {~(load | ENPBAR | ENTBAR)}
+     aoi1 = {~((Q1 & ubar/d) | (Q1BAR & U/DBAR))}
+     aoi2 = {~((Q2 & ubar/d) | (Q2BAR & U/DBAR))}
+     aoi3 = {~((Q3 & ubar/d) | (Q3BAR & U/DBAR))}
+     aoi4 = {~((Q4 & ubar/d) | (Q4BAR & U/DBAR))}
+     RCOBAR_O = {~((U/DBAR & aoi1 & aoi4 & ent) | 
+          (ent & aoi1 & aoi2 & aoi3 & aoi4 & ubar/d))}
+     ina = {~inload}
+     inb = {~(inload & aoi1)}
+     inc = {~(inload & aoi1 & aoi2)}
+     ind = {~(inload & aoi1 & aoi2 & aoi3)}
+     DA = {~((Q1 & inload) | (ina & LOADBAR & Q1BAR) | nora)}
+     DB = {~((Q2 & inload & aoi1) | (Q3BAR & inload & aoi1 & aoi4) | 
+            (inb & LOADBAR & Q2BAR) | norb)}
+     DC = {~((Q3 & inload & aoi1 & aoi2) | (inload & aoi1 & aoi2 & aoi4) | 
+            (inc & LOADBAR & Q3BAR) | norc)}
+     DD = {~((Q4 & inload & aoi1) | (ind & LOADBAR & Q4BAR) | nord)}
+     QA_O = {~((R/CBAR & QABAR) | (rbar/c & Q1BAR))}
+     QB_O = {~((R/CBAR & QBBAR) | (rbar/c & Q2BAR))}
+     QC_O = {~((R/CBAR & QCBAR) | (rbar/c & Q3BAR))}
+     QD_O = {~((R/CBAR & QDBAR) | (rbar/c & Q4BAR))}

U4DLY PINDLY(5,1,5) DPWR DGND
+     QA_O QB_O QC_O QD_O RCOBAR_O
+     GBAR
+     CCK RCK ENTBAR CCLRBAR R/CBAR
+     QA QB QC QD RCOBAR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKC = {CHANGED_LH(CCK,0)}
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     CLEAR = {CHANGED_HL(CCLRBAR,0)}
+     ENTCH = {CHANGED(ENTBAR,0)}
+     SELECT = {CHANGED(R/CBAR,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,23ns,40ns),
+         (CLOCKC | CLOCKR) & TRN_HL, DELAY(-1,17ns,25ns),
+         SELECT, DELAY(-1,16ns,25ns),
+         (CLOCKC | CLOCKR) & TRN_LH, DELAY(-1,12ns,20ns),
+         TRN_Z$, DELAY(-1,19ns,30ns),
+         TRN_$Z, DELAY(-1,17ns,30ns),
+         DELAY(-1,24ns,41ns))}
+
+  PINDLY:
+     RCOBAR = {
+       CASE(
+         CLOCKC, DELAY(-1,23ns,40ns),
+         ENTCH, DELAY(-1,13ns,20ns),
+         DELAY(-1,24ns,41ns))}

U5CON CONSTRAINT(11) DPWR DGND
+     CCK RCK CCLRBAR A B C D ENPBAR ENTBAR LOADBAR U/DBAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CCK
+     MAXFREQ=20MEG
+
+  FREQ:
+     NODE=RCK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=CCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=CCLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(4)=A B C D
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(3)=ENTBAR ENPBAR LOADBAR
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=U/DBAR
+     SETUPTIME=35ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=CCLRBAR
+     SETUPTIME_HI=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=CCK
+     SETUPTIME=30ns

.ENDS 74LS696
*
*
* ----------------------------------------------------------- 74LS697 ------
*  Synchronous Up/Down Counters With Output Registers And Multiplexed 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1149 to 2-1158
*  bss    6/7/94
*
.SUBCKT 74LS697 GBAR R/CBAR RCK CCLRBAR U/DBAR LOADBAR ENPBAR ENTBAR 
+     CCK A B C D QA QB QC QD RCOBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI CCLRBAR CCK
+     DA DB DC DD
+     Q1 Q2 Q3 Q4 Q1BAR Q2BAR Q3BAR Q4BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(4) DPWR DGND
+     $D_HI $D_HI RCK
+     Q1 Q2 Q3 Q4
+     $D_NC $D_NC $D_NC $D_NC QABAR QBBAR QCBAR QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(21,9) DPWR DGND
+     R/CBAR U/DBAR LOADBAR ENPBAR ENTBAR A B C D Q1 Q2 Q3 Q4
+     Q1BAR Q2BAR Q3BAR Q4BAR QABAR QBBAR QCBAR QDBAR
+     DA DB DC DD QA_O QB_O QC_O QD_O RCOBAR_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     rbar/c = {~R/CBAR}
+     ubar/d = {~U/DBAR}
+     load = {~LOADBAR}
+     nora = {~(LOADBAR | A)}
+     norb = {~(LOADBAR | B)}
+     norc = {~(LOADBAR | C)}
+     nord = {~(LOADBAR | D)}
+     ent = {~ENTBAR}
+     inload = {~(load | ENPBAR | ENTBAR)}
+     aoi1 = {~((Q1 & ubar/d) | (Q1BAR & U/DBAR))}
+     aoi2 = {~((Q2 & ubar/d) | (Q2BAR & U/DBAR))}
+     aoi3 = {~((Q3 & ubar/d) | (Q3BAR & U/DBAR))}
+     aoi4 = {~((Q4 & ubar/d) | (Q4BAR & U/DBAR))}
+     RCOBAR_O = {~(ent & aoi1 & aoi2 & aoi3 & aoi4)}
+     ina = {~inload}
+     inb = {~(inload & aoi1)}
+     inc = {~(inload & aoi1 & aoi2)}
+     ind = {~(inload & aoi1 & aoi2 & aoi3)}
+     DA = {~((Q1 & inload) | (ina & LOADBAR & Q1BAR) | nora)}
+     DB = {~((Q2 & inload & aoi1) | (inb & LOADBAR & Q2BAR) | norb)}
+     DC = {~((Q3 & inload & aoi1 & aoi2) | (inc & LOADBAR & Q3BAR) | norc)}
+     DD = {~((Q4 & inload & aoi1 & aoi2 & aoi3) | (ind & LOADBAR & Q4BAR) | nord)}
+     QA_O = {~((R/CBAR & QABAR) | (rbar/c & Q1BAR))}
+     QB_O = {~((R/CBAR & QBBAR) | (rbar/c & Q2BAR))}
+     QC_O = {~((R/CBAR & QCBAR) | (rbar/c & Q3BAR))}
+     QD_O = {~((R/CBAR & QDBAR) | (rbar/c & Q4BAR))}

U4DLY PINDLY(5,1,5) DPWR DGND
+     QA_O QB_O QC_O QD_O RCOBAR_O
+     GBAR
+     CCK RCK ENTBAR CCLRBAR R/CBAR
+     QA QB QC QD RCOBAR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKC = {CHANGED_LH(CCK,0)}
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     CLEAR = {CHANGED_HL(CCLRBAR,0)}
+     ENTCH = {CHANGED(ENTBAR,0)}
+     SELECT = {CHANGED(R/CBAR,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(-1,23ns,40ns),
+         (CLOCKC | CLOCKR) & TRN_HL, DELAY(-1,17ns,25ns),
+         SELECT, DELAY(-1,16ns,25ns),
+         (CLOCKC | CLOCKR) & TRN_LH, DELAY(-1,12ns,20ns),
+         TRN_Z$, DELAY(-1,19ns,30ns),
+         TRN_$Z, DELAY(-1,17ns,30ns),
+         DELAY(-1,24ns,41ns))}
+
+  PINDLY:
+     RCOBAR = {
+       CASE(
+         CLOCKC, DELAY(-1,23ns,40ns),
+         ENTCH, DELAY(-1,13ns,20ns),
+         DELAY(-1,24ns,41ns))}

U5CON CONSTRAINT(11) DPWR DGND
+     CCK RCK CCLRBAR A B C D ENPBAR ENTBAR LOADBAR U/DBAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CCK
+     MAXFREQ=20MEG
+
+  FREQ:
+     NODE=RCK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=CCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=CCLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(4)=A B C D
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(3)=ENTBAR ENPBAR LOADBAR
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=U/DBAR
+     SETUPTIME=35ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=CCLRBAR
+     SETUPTIME_HI=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=CCK
+     SETUPTIME=30ns

.ENDS 74LS697
*
*
* ----------------------------------------------------------- 74LS698 ------
*  Synchronous Up/Down Counters With Output Registers And Multiplexed 3-State Outputs
*
*  The TTL Logic Data Book, Vol. 2, 1985, TI Pages 3-1315 to 3-1324
*  bss    6/7/94
*
.SUBCKT 74LS698 GBAR R/CBAR RCK CCLRBAR U/DBAR LOADBAR ENPBAR ENTBAR 
+     CCK A B C D QA QB QC QD RCOBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI $D_HI CCK
+     DA DB DC DD
+     Q1 Q2 Q3 Q4 Q1BAR Q2BAR Q3BAR Q4BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(4) DPWR DGND
+     $D_HI $D_HI RCK
+     Q1 Q2 Q3 Q4
+     $D_NC $D_NC $D_NC $D_NC QABAR QBBAR QCBAR QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(22,9) DPWR DGND
+     R/CBAR U/DBAR LOADBAR ENPBAR ENTBAR A B C D Q1 Q2 Q3 Q4
+     Q1BAR Q2BAR Q3BAR Q4BAR QABAR QBBAR QCBAR QDBAR CCLRBAR
+     DA DB DC DD QA_O QB_O QC_O QD_O RCOBAR_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     rbar/c = {~R/CBAR}
+     ubar/d = {~U/DBAR}
+     load = {~LOADBAR}
+     cclr = {~CCLRBAR}
+     nora = {(~(LOADBAR | A)) | cclr}
+     norb = {(~(LOADBAR | B)) | cclr}
+     norc = {(~(LOADBAR | C)) | cclr}
+     nord = {(~(LOADBAR | D)) | cclr}
+     ent = {~ENTBAR}
+     inload = {~(load | ENPBAR | ENTBAR)}
+     aoi1 = {~((Q1 & ubar/d) | (Q1BAR & U/DBAR))}
+     aoi2 = {~((Q2 & ubar/d) | (Q2BAR & U/DBAR))}
+     aoi3 = {~((Q3 & ubar/d) | (Q3BAR & U/DBAR))}
+     aoi4 = {~((Q4 & ubar/d) | (Q4BAR & U/DBAR))}
+     RCOBAR_O = {~((U/DBAR & aoi1 & aoi4 & ent) | 
+          (ent & aoi1 & aoi2 & aoi3 & aoi4 & ubar/d))}
+     ina = {~inload}
+     inb = {~(inload & aoi1)}
+     inc = {~(inload & aoi1 & aoi2)}
+     ind = {~(inload & aoi1 & aoi2 & aoi3)}
+     DA = {~((Q1 & inload) | (ina & LOADBAR & Q1BAR) | nora)}
+     DB = {~((Q2 & inload & aoi1) | (Q3BAR & inload & aoi1 & aoi4) | 
+            (inb & LOADBAR & Q2BAR) | norb)}
+     DC = {~((Q3 & inload & aoi1 & aoi2) | (inload & aoi1 & aoi2 & aoi4) | 
+            (inc & LOADBAR & Q3BAR) | norc)}
+     DD = {~((Q4 & inload & aoi1) | (ind & LOADBAR & Q4BAR) | nord)}
+     QA_O = {~((R/CBAR & QABAR) | (rbar/c & Q1BAR))}
+     QB_O = {~((R/CBAR & QBBAR) | (rbar/c & Q2BAR))}
+     QC_O = {~((R/CBAR & QCBAR) | (rbar/c & Q3BAR))}
+     QD_O = {~((R/CBAR & QDBAR) | (rbar/c & Q4BAR))}

U4DLY PINDLY(5,1,4) DPWR DGND
+     QA_O QB_O QC_O QD_O RCOBAR_O
+     GBAR
+     CCK RCK ENTBAR R/CBAR
+     QA QB QC QD RCOBAR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKC = {CHANGED_LH(CCK,0)}
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     ENTCH = {CHANGED(ENTBAR,0)}
+     SELECT = {CHANGED(R/CBAR,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD = {
+       CASE(
+         (CLOCKC | CLOCKR) & TRN_HL, DELAY(-1,17ns,25ns),
+         SELECT, DELAY(-1,16ns,25ns),
+         (CLOCKC | CLOCKR) & TRN_LH, DELAY(-1,12ns,20ns),
+         TRN_Z$, DELAY(-1,19ns,30ns),
+         TRN_$Z, DELAY(-1,17ns,30ns),
+         DELAY(-1,24ns,41ns))}
+
+  PINDLY:
+     RCOBAR = {
+       CASE(
+         CLOCKC, DELAY(-1,23ns,40ns),
+         ENTCH, DELAY(-1,13ns,20ns),
+         DELAY(-1,24ns,41ns))}

U5CON CONSTRAINT(11) DPWR DGND
+     CCK RCK CCLRBAR A B C D ENPBAR ENTBAR LOADBAR U/DBAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CCK
+     MAXFREQ=20MEG
+
+  FREQ:
+     NODE=RCK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=CCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(4)=A B C D
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(3)=ENTBAR ENPBAR LOADBAR
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=U/DBAR
+     SETUPTIME=35ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=CCLRBAR
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=CCK
+     SETUPTIME=30ns

.ENDS 74LS698
*
*
* ----------------------------------------------------------- 74LS699 ------
*  Synchronous Up/Down Counters With Output Registers And Multiplexed 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-1149 to 2-1158
*  bss    6/7/94
*
.SUBCKT 74LS699 GBAR R/CBAR RCK CCLRBAR U/DBAR LOADBAR ENPBAR ENTBAR 
+     CCK A B C D QA QB QC QD RCOBAR 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(4) DPWR DGND
+     $D_HI $D_HI CCK
+     DA DB DC DD
+     Q1 Q2 Q3 Q4 Q1BAR Q2BAR Q3BAR Q4BAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(4) DPWR DGND
+     $D_HI $D_HI RCK
+     Q1 Q2 Q3 Q4
+     $D_NC $D_NC $D_NC $D_NC QABAR QBBAR QCBAR QDBAR
+     D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(22,9) DPWR DGND
+     R/CBAR U/DBAR LOADBAR ENPBAR ENTBAR A B C D Q1 Q2 Q3 Q4
+     Q1BAR Q2BAR Q3BAR Q4BAR QABAR QBBAR QCBAR QDBAR CCLRBAR
+     DA DB DC DD QA_O QB_O QC_O QD_O RCOBAR_O
+     D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     rbar/c = {~R/CBAR}
+     ubar/d = {~U/DBAR}
+     load = {~LOADBAR}
+     cclr = {~CCLRBAR}
+     nora = {(~(LOADBAR | A)) | cclr}
+     norb = {(~(LOADBAR | B)) | cclr}
+     norc = {(~(LOADBAR | C)) | cclr}
+     nord = {(~(LOADBAR | D)) | cclr}
+     ent = {~ENTBAR}
+     inload = {~(load | ENPBAR | ENTBAR)}
+     aoi1 = {~((Q1 & ubar/d) | (Q1BAR & U/DBAR))}
+     aoi2 = {~((Q2 & ubar/d) | (Q2BAR & U/DBAR))}
+     aoi3 = {~((Q3 & ubar/d) | (Q3BAR & U/DBAR))}
+     aoi4 = {~((Q4 & ubar/d) | (Q4BAR & U/DBAR))}
+     RCOBAR_O = {~(ent & aoi1 & aoi2 & aoi3 & aoi4)}
+     ina = {~inload}
+     inb = {~(inload & aoi1)}
+     inc = {~(inload & aoi1 & aoi2)}
+     ind = {~(inload & aoi1 & aoi2 & aoi3)}
+     DA = {~((Q1 & inload) | (ina & LOADBAR & Q1BAR) | nora)}
+     DB = {~((Q2 & inload & aoi1) | (inb & LOADBAR & Q2BAR) | norb)}
+     DC = {~((Q3 & inload & aoi1 & aoi2) | (inc & LOADBAR & Q3BAR) | norc)}
+     DD = {~((Q4 & inload & aoi1 & aoi2 & aoi3) | (ind & LOADBAR & Q4BAR) | nord)}
+     QA_O = {~((R/CBAR & QABAR) | (rbar/c & Q1BAR))}
+     QB_O = {~((R/CBAR & QBBAR) | (rbar/c & Q2BAR))}
+     QC_O = {~((R/CBAR & QCBAR) | (rbar/c & Q3BAR))}
+     QD_O = {~((R/CBAR & QDBAR) | (rbar/c & Q4BAR))}

U4DLY PINDLY(5,1,4) DPWR DGND
+     QA_O QB_O QC_O QD_O RCOBAR_O
+     GBAR
+     CCK RCK ENTBAR R/CBAR
+     QA QB QC QD RCOBAR
+     IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCKC = {CHANGED_LH(CCK,0)}
+     CLOCKR = {CHANGED_LH(RCK,0)}
+     ENTCH = {CHANGED(ENTBAR,0)}
+     SELECT = {CHANGED(R/CBAR,0)}
+
+  TRISTATE:
+     ENABLE LO=GBAR
+     QA QB QC QD = {
+       CASE(
+         (CLOCKC | CLOCKR) & TRN_HL, DELAY(-1,17ns,25ns),
+         SELECT, DELAY(-1,16ns,25ns),
+         (CLOCKC | CLOCKR) & TRN_LH, DELAY(-1,12ns,20ns),
+         TRN_Z$, DELAY(-1,19ns,30ns),
+         TRN_$Z, DELAY(-1,17ns,30ns),
+         DELAY(-1,24ns,41ns))}
+
+  PINDLY:
+     RCOBAR = {
+       CASE(
+         CLOCKC, DELAY(-1,23ns,40ns),
+         ENTCH, DELAY(-1,13ns,20ns),
+         DELAY(-1,24ns,41ns))}

U5CON CONSTRAINT(11) DPWR DGND
+     CCK RCK CCLRBAR A B C D ENPBAR ENTBAR LOADBAR U/DBAR
+     IO_LS IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CCK
+     MAXFREQ=20MEG
+
+  FREQ:
+     NODE=RCK
+     MAXFREQ=20MEG
+
+  WIDTH:
+     NODE=CCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=RCK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(4)=A B C D
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(3)=ENTBAR ENPBAR LOADBAR
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=U/DBAR
+     SETUPTIME=35ns
+
+  SETUP_HOLD:
+     CLOCK LH=CCK
+     DATA(1)=CCLRBAR
+     SETUPTIME=30ns
+
+  SETUP_HOLD:
+     CLOCK LH=RCK
+     DATA(1)=CCK
+     SETUPTIME=30ns

.ENDS 74LS699

*------------------------------------------------------------74F711A----

* Quint 2 to 1 Data Selector Multiplexer (Tri-State)
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 698 to 704
* jat 7/23/96

.SUBCKT 74F711A D0A D0B D1A D1B D2A D2B D3A D3B D4A D4B S OEBAR INVBAR
+ Q0 Q1 Q2 Q3 Q4
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(12,5) DPWR DGND
+ D0A D0B D1A D1B D2A D2B D3A D3B D4A D4B S INVBAR
+ Q0O Q1O Q2O Q3O Q4O
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   Q0O = {~INVBAR ^ ((D0A & ~S) | (D0B & S))}
+   Q1O = {~INVBAR ^ ((D1A & ~S) | (D1B & S))}
+   Q2O = {~INVBAR ^ ((D2A & ~S) | (D2B & S))}
+   Q3O = {~INVBAR ^ ((D3A & ~S) | (D3B & S))}
+   Q4O = {~INVBAR ^ ((D4A & ~S) | (D4B & S))}

U2 PINDLY(5,1,12) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O
+ OEBAR
+ D0A D0B D1A D1B D2A D2B D3A D3B D4A D4B S INVBAR
+ Q0 Q1 Q2 Q3 Q4
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(D0A,0) | CHANGED(D0B,0) | CHANGED(D1A,0) | CHANGED(D1B,0) |
+           CHANGED(D2A,0) | CHANGED(D2B,0) | CHANGED(D3A,0) | CHANGED(D3B,0) |
+           CHANGED(D4A,0) | CHANGED(D4B,0)}
+   SEL = {CHANGED(S,0)}
+   INV = {CHANGED(INVBAR,0)}
+ TRISTATE:
+ ENABLE LO = OEBAR
+    Q0 Q1 Q2 Q3 Q4 = {
+       CASE(
+          TRN_ZH, DELAY(2.5NS,4NS,6.5NS),
+          TRN_ZL, DELAY(2.5NS,4.5NS,7NS),
+          TRN_HZ, DELAY(2.5NS,4.5NS,7NS),
+          TRN_LZ, DELAY(3NS,5NS,8NS),
+          SEL & TRN_LH, DELAY(7NS,9NS,12NS),
+          SEL & TRN_HL, DELAY(5NS,8NS,11NS),
+          INV & TRN_LH, DELAY(6NS,9NS,12.5NS),
+          INV & TRN_HL, DELAY(4NS,8NS,11NS),
+          DATA & TRN_LH, DELAY(2.5NS,5NS,7.5NS),
+          DATA & TRN_HL, DELAY(2.5NS,4NS,7NS),
+          DELAY(8NS,10NS,13.5NS))}

.ENDS 74F711A

*------------------------------------------------------------74F711-1----

* Quint 2 to 1 Data Selector Multiplexer with 30-Ohm Equivalent
* Output Termination Impedance (Tri-State)
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 698 to 704
* jat 7/23/96

.SUBCKT 74F711-1 D0A D0B D1A D1B D2A D2B D3A D3B D4A D4B S OEBAR INVBAR
+ Q0 Q1 Q2 Q3 Q4
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(12,5) DPWR DGND
+ D0A D0B D1A D1B D2A D2B D3A D3B D4A D4B S INVBAR
+ Q0O Q1O Q2O Q3O Q4O
+ D0_GATE IO_F_30 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   Q0O = {~INVBAR ^ ((D0A & ~S) | (D0B & S))}
+   Q1O = {~INVBAR ^ ((D1A & ~S) | (D1B & S))}
+   Q2O = {~INVBAR ^ ((D2A & ~S) | (D2B & S))}
+   Q3O = {~INVBAR ^ ((D3A & ~S) | (D3B & S))}
+   Q4O = {~INVBAR ^ ((D4A & ~S) | (D4B & S))}

U2 PINDLY(5,1,12) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O
+ OEBAR
+ D0A D0B D1A D1B D2A D2B D3A D3B D4A D4B S INVBAR
+ Q0 Q1 Q2 Q3 Q4
+ IO_F_30 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(D0A,0) | CHANGED(D0B,0) | CHANGED(D1A,0) | CHANGED(D1B,0) |
+           CHANGED(D2A,0) | CHANGED(D2B,0) | CHANGED(D3A,0) | CHANGED(D3B,0) |
+           CHANGED(D4A,0) | CHANGED(D4B,0)}
+   SEL = {CHANGED(S,0)}
+   INV = {CHANGED(INVBAR,0)}
+ TRISTATE:
+ ENABLE LO = OEBAR
+    Q0 Q1 Q2 Q3 Q4 = {
+       CASE(
+          TRN_ZH, DELAY(2.5NS,4.5NS,7.5NS),
+          TRN_ZL, DELAY(3NS,5NS,7.5NS),
+          TRN_HZ, DELAY(2NS,4.5NS,7NS),
+          TRN_LZ, DELAY(3.5NS,5.5NS,8.5NS),
+          (SEL | INV) & TRN_LH, DELAY(6.5NS,10NS,13.5NS),
+          (SEL | INV) & TRN_HL, DELAY(4.5NS,8.5NS,11.5NS),
+          DATA & TRN_LH, DELAY(3NS,4.5NS,7.5NS),
+          DATA & TRN_HL, DELAY(2NS,4.5NS,7.5NS),
+          DELAY(6.5NS,11NS,14.5NS))}

.ENDS 74F711-1

*------------------------------------------------------------74F712A----

* Quint 3 to 1 Data Selector Multiplexer
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 698 to 704
* jat 7/23/96

.SUBCKT 74F712A D0A D0B D0C D1A D1B D1C D2A D2B D2C D3A D3B D3C D4A D4B D4C
+ S0 S1 Q0 Q1 Q2 Q3 Q4
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(17,5) DPWR DGND
+ D0A D0B D0C D1A D1B D1C D2A D2B D2C D3A D3B D3C D4A D4B D4C S0 S1
+ Q0O Q1O Q2O Q3O Q4O
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   Q0O = {(D0A & ~S0 & ~S1) | (D0B & S0 & ~S1) | (D0C & S1)}
+   Q1O = {(D1A & ~S0 & ~S1) | (D1B & S0 & ~S1) | (D1C & S1)}
+   Q2O = {(D2A & ~S0 & ~S1) | (D2B & S0 & ~S1) | (D2C & S1)}
+   Q3O = {(D3A & ~S0 & ~S1) | (D3B & S0 & ~S1) | (D3C & S1)}
+   Q4O = {(D4A & ~S0 & ~S1) | (D4B & S0 & ~S1) | (D4C & S1)}

U2 PINDLY(5,0,2) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O
+ S0 S1
+ Q0 Q1 Q2 Q3 Q4
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SEL = {CHANGED(S0,0) |  CHANGED(S1,0)}
+ PINDLY:
+    Q0 Q1 Q2 Q3 Q4 = {
+       CASE(
+          SEL & TRN_LH, DELAY(6.5NS,8NS,11.5NS),
+          SEL & TRN_HL, DELAY(5NS,7.5NS,10NS),
+          DELAY(2NS,3.5NS,6.5NS))}

.ENDS 74F712A

*------------------------------------------------------------74F712-1----

* Quint 3 to 1 Data Selector Multiplexer with 30-Ohm Equivalent
* Output Termination Impedance
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 698 to 704
* jat 7/23/96

.SUBCKT 74F712-1 D0A D0B D0C D1A D1B D1C D2A D2B D2C D3A D3B D3C D4A D4B D4C
+ S0 S1 Q0 Q1 Q2 Q3 Q4
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(17,5) DPWR DGND
+ D0A D0B D0C D1A D1B D1C D2A D2B D2C D3A D3B D3C D4A D4B D4C S0 S1
+ Q0O Q1O Q2O Q3O Q4O
+ D0_GATE IO_F_30 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   Q0O = {(D0A & ~S0 & ~S1) | (D0B & S0 & ~S1) | (D0C & S1)}
+   Q1O = {(D1A & ~S0 & ~S1) | (D1B & S0 & ~S1) | (D1C & S1)}
+   Q2O = {(D2A & ~S0 & ~S1) | (D2B & S0 & ~S1) | (D2C & S1)}
+   Q3O = {(D3A & ~S0 & ~S1) | (D3B & S0 & ~S1) | (D3C & S1)}
+   Q4O = {(D4A & ~S0 & ~S1) | (D4B & S0 & ~S1) | (D4C & S1)}

U2 PINDLY(5,0,2) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O
+ S0 S1
+ Q0 Q1 Q2 Q3 Q4
+ IO_F_30 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SEL = {CHANGED(S0,0) |  CHANGED(S1,0)}
+ PINDLY:
+    Q0 Q1 Q2 Q3 Q4 = {
+       CASE(
+          SEL & TRN_LH, DELAY(7NS,9NS,12NS),
+          SEL & TRN_HL, DELAY(5.5NS,7.5NS,10.5NS),
+          DELAY(2NS,4NS,7NS))}

.ENDS 74F712-1

*------------------------------------------------------------74LS716----

* Programmable Modulo-N Counters
* Motorola FAST and LS TTL Logic Data Book, 1992, pages 4-358 to 4-368
* jat 8/15/96

.SUBCKT 74LS716 CLOCK MRBAR GATE PEBAR D0 D1 D2 D3 Q0 Q1 Q2 Q3 BUS
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(12,13) DPWR DGND
+ Q0BARO Q1BARO Q2BARO Q3BARO GATE PEBAR MRBAR D0 D1 D2 D3 BUS
+ DATA0 DATA1 DATA2 DATA3 SET0 SET1 SET2 SET3 RESET0 RESET1 RESET2 RESET3 BUSO
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   BUSO = {Q0BARO & Q1BARO & Q2BARO & Q3BARO}
+   AOI = {~((GATE & PEBAR) | (PEBAR & ~BUS))}
+   SET0 = {~(MRBAR & D0 & AOI)}
+   RESET0 = {~(SET0 & AOI)}
+   SET1 = {~(MRBAR & D1 & AOI)}
+   RESET1 = {~(SET1 & AOI)}
+   SET2 = {~(MRBAR & D2 & AOI)}
+   RESET2 = {~(SET2 & AOI)}
+   SET3 = {~(MRBAR & D3 & AOI)}
+   RESET3 = {~(SET3 & AOI)}
+   DATA0 = {Q0BARO}
+   DATA3 = {Q3BARO & Q2BARO & Q1BARO}
+   DATA1 = {Q1BARO & ~DATA3}
+   DATA2 = {Q2BARO}

U2 DFF(1) DPWR DGND
+ SET0 RESET0 CLOCK
+ DATA0 Q0O Q0BARO
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(1) DPWR DGND
+ SET1 RESET1 Q0O
+ DATA1 Q1O Q1BARO
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(1) DPWR DGND
+ SET2 RESET2 Q1O
+ DATA2 Q2O Q2BARO
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 DFF(1) DPWR DGND
+ SET3 RESET3 Q0O
+ DATA3 Q3O Q3BARO
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 PINDLY(5,0,2) DPWR DGND
+ Q0O Q1O Q2O Q3O BUSO
+ CLOCK GATE
+ Q0 Q1 Q2 Q3 BUS
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   EDGE = {CHANGED_LH(CLOCK,0)}
+   G = {CHANGED(GATE,0)}
+ PINDLY:
+    Q0 Q1 Q2 Q3 = {
+       CASE(
+          G & (TRN_LH | TRN_HL), DELAY(-1,-1,35NS),
+          EDGE & (TRN_LH | TRN_HL), DELAY(-1,-1,45NS),
+          DELAY(-1,-1,46NS))}
+    BUS = {
+       CASE(
+          EDGE & (TRN_LH | TRN_HL), DELAY(-1,-1,65NS),
+          DELAY(-1,-1,66NS))}

U7 CONSTRAINT(1) DPWR DGND
+ CLOCK
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CLOCK
+  MAXFREQ = 8MEG

.ENDS 74LS716

*------------------------------------------------------------74LS718----

* Programmable Modulo-N Counters
* Motorola FAST and LS TTL Logic Data Book, 1992, pages 4-358 to 4-368
* jat 8/15/96

.SUBCKT 74LS718 CLOCK MRBAR GATE PEBAR D0 D1 D2 D3 Q0 Q1 Q2 Q3 BUS
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(12,13) DPWR DGND
+ Q0BARO Q1BARO Q2BARO Q3BARO GATE PEBAR MRBAR D0 D1 D2 D3 BUS
+ DATA0 DATA1 DATA2 DATA3 SET0 SET1 SET2 SET3 RESET0 RESET1 RESET2 RESET3 BUSO
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   BUSO = {Q0BARO & Q1BARO & Q2BARO & Q3BARO}
+   AOI = {~((GATE & PEBAR) | (PEBAR & ~BUS))}
+   SET0 = {~(MRBAR & D0 & AOI)}
+   RESET0 = {~(SET0 & AOI)}
+   SET1 = {~(MRBAR & D1 & AOI)}
+   RESET1 = {~(SET1 & AOI)}
+   SET2 = {~(MRBAR & D2 & AOI)}
+   RESET2 = {~(SET2 & AOI)}
+   SET3 = {~(MRBAR & D3 & AOI)}
+   RESET3 = {~(SET3 & AOI)}
+   DATA0 = {Q0BARO}
+   DATA3 = {Q3BARO}
+   DATA1 = {Q1BARO}
+   DATA2 = {Q2BARO}

U2 DFF(1) DPWR DGND
+ SET0 RESET0 CLOCK
+ DATA0 Q0O Q0BARO
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(1) DPWR DGND
+ SET1 RESET1 Q0O
+ DATA1 Q1O Q1BARO
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(1) DPWR DGND
+ SET2 RESET2 Q1O
+ DATA2 Q2O Q2BARO
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 DFF(1) DPWR DGND
+ SET3 RESET3 Q2O
+ DATA3 Q3O Q3BARO
+ D0_EFF IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 PINDLY(5,0,2) DPWR DGND
+ Q0O Q1O Q2O Q3O BUSO
+ CLOCK GATE
+ Q0 Q1 Q2 Q3 BUS
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   EDGE = {CHANGED_LH(CLOCK,0)}
+   G = {CHANGED(GATE,0)}
+ PINDLY:
+    Q0 Q1 Q2 Q3 = {
+       CASE(
+          G & (TRN_LH | TRN_HL), DELAY(-1,-1,35NS),
+          EDGE & (TRN_LH | TRN_HL), DELAY(-1,-1,78NS),
+          DELAY(-1,-1,79NS))}
+    BUS = {
+       CASE(
+          EDGE & (TRN_LH | TRN_HL), DELAY(-1,-1,65NS),
+          DELAY(-1,-1,66NS))}

U7 CONSTRAINT(1) DPWR DGND
+ CLOCK
+ IO_LS IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CLOCK
+  MAXFREQ = 8MEG

.ENDS 74LS718

*------------------------------------------------------------74F723A----

* Quad 3 to 1 Data Selector Multiplexer (Tri-State)
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 705 to 712
* jat 7/23/96

.SUBCKT 74F723A D0A D0B D0C D1A D1B D1C D2A D2B D2C D3A D3B D3C
+ S0 S1 INVBAR OEBAR Q0 Q1 Q2 Q3
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(15,4) DPWR DGND
+ D0A D0B D0C D1A D1B D1C D2A D2B D2C D3A D3B D3C INVBAR S0 S1
+ Q0O Q1O Q2O Q3O
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   Q0O = {~INVBAR ^ ((D0A & ~S0 & ~S1) | (D0B & S0 & ~S1) | (D0C & S1))}
+   Q1O = {~INVBAR ^ ((D1A & ~S0 & ~S1) | (D1B & S0 & ~S1) | (D1C & S1))}
+   Q2O = {~INVBAR ^ ((D2A & ~S0 & ~S1) | (D2B & S0 & ~S1) | (D2C & S1))}
+   Q3O = {~INVBAR ^ ((D3A & ~S0 & ~S1) | (D3B & S0 & ~S1) | (D3C & S1))}

U2 PINDLY(4,1,3) DPWR DGND
+ Q0O Q1O Q2O Q3O
+ OEBAR
+ S0 S1 INVBAR
+ Q0 Q1 Q2 Q3
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SEL = {CHANGED(S0,0) |  CHANGED(S1,0)}
+   INV = {CHANGED(INVBAR,0)}
+ TRISTATE:
+ ENABLE LO = OEBAR
+    Q0 Q1 Q2 Q3 = {
+       CASE(
+          TRN_ZH, DELAY(2NS,4NS,6.5NS),
+          TRN_ZL, DELAY(2.5NS,4.5NS,7NS),
+          TRN_HZ, DELAY(2.5NS,4.5NS,7NS),
+          TRN_LZ, DELAY(3NS,5NS,7.5NS),
+          (SEL | INV) & TRN_LH, DELAY(6.5NS,9NS,12.5NS),
+          (SEL | INV) & TRN_HL, DELAY(4NS,7.5NS,11NS),
+          TRN_LH, DELAY(2.5NS,5NS,8NS),
+          TRN_HL, DELAY(2NS,4.5NS,7NS),
+          DELAY(7.5NS,10NS,13.5NS))}

.ENDS 74F723A

*------------------------------------------------------------74F723-1----

* Quad 3 to 1 Data Selector Multiplexer with 30-Ohm Equivalent
* Output Termination Impedance (Tri-State)
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 705 to 712
* jat 7/23/96

.SUBCKT 74F723-1 D0A D0B D0C D1A D1B D1C D2A D2B D2C D3A D3B D3C
+ S0 S1 INVBAR OEBAR Q0 Q1 Q2 Q3
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(15,4) DPWR DGND
+ D0A D0B D0C D1A D1B D1C D2A D2B D2C D3A D3B D3C INVBAR S0 S1
+ Q0O Q1O Q2O Q3O
+ D0_GATE IO_F_30 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   Q0O = {~INVBAR ^ ((D0A & ~S0 & ~S1) | (D0B & S0 & ~S1) | (D0C & S1))}
+   Q1O = {~INVBAR ^ ((D1A & ~S0 & ~S1) | (D1B & S0 & ~S1) | (D1C & S1))}
+   Q2O = {~INVBAR ^ ((D2A & ~S0 & ~S1) | (D2B & S0 & ~S1) | (D2C & S1))}
+   Q3O = {~INVBAR ^ ((D3A & ~S0 & ~S1) | (D3B & S0 & ~S1) | (D3C & S1))}

U2 PINDLY(4,1,3) DPWR DGND
+ Q0O Q1O Q2O Q3O
+ OEBAR
+ S0 S1 INVBAR
+ Q0 Q1 Q2 Q3
+ IO_F_30 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SEL = {CHANGED(S0,0) |  CHANGED(S1,0)}
+   INV = {CHANGED(INVBAR,0)}
+ TRISTATE:
+ ENABLE LO = OEBAR
+    Q0 Q1 Q2 Q3 = {
+       CASE(
+          TRN_ZH, DELAY(3NS,4.5NS,7.5NS),
+          TRN_ZL, DELAY(3NS,5NS,7.5NS),
+          TRN_HZ, DELAY(2.5NS,4.5NS,7NS),
+          TRN_LZ, DELAY(4NS,6NS,8.5NS),
+          (SEL | INV) & TRN_LH, DELAY(7NS,10NS,14NS),
+          (SEL | INV) & TRN_HL, DELAY(5NS,9NS,12.5NS),
+          TRN_LH, DELAY(2.5NS,6NS,8.5NS),
+          TRN_HL, DELAY(2.5NS,5NS,8NS),
+          DELAY(8NS,11NS,15NS))}

.ENDS 74F723-1

*------------------------------------------------------------74F725A----

* Quad 4 to 1 Data Selector Multiplexer
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 705 to 712
* jat 7/23/96

.SUBCKT 74F725A D0A D0B D0C D0D D1A D1B D1C D1D D2A D2B D2C D2D D3A D3B D3C
+ D3D S0 S1 Q0 Q1 Q2 Q3
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(18,4) DPWR DGND
+ D0A D0B D0C D0D D1A D1B D1C D1D D2A D2B D2C D2D D3A D3B D3C D3D S0 S1
+ Q0O Q1O Q2O Q3O
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   Q0O = {(D0A & ~S0 & ~S1) | (D0B & S0 & ~S1) | (D0C & ~S0 & S1) | (D0D & S0 & S1)}
+   Q1O = {(D1A & ~S0 & ~S1) | (D1B & S0 & ~S1) | (D1C & ~S0 & S1) | (D1D & S0 & S1)}
+   Q2O = {(D2A & ~S0 & ~S1) | (D2B & S0 & ~S1) | (D2C & ~S0 & S1) | (D2D & S0 & S1)}
+   Q3O = {(D3A & ~S0 & ~S1) | (D3B & S0 & ~S1) | (D3C & ~S0 & S1) | (D3D & S0 & S1)}

U2 PINDLY(4,0,2) DPWR DGND
+ Q0O Q1O Q2O Q3O
+ S0 S1
+ Q0 Q1 Q2 Q3
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SEL = {CHANGED(S0,0) |  CHANGED(S1,0)}
+ PINDLY:
+    Q0 Q1 Q2 Q3 = {
+       CASE(
+          SEL & TRN_LH, DELAY(6NS,8.5NS,11.5NS),
+          SEL & TRN_HL, DELAY(5NS,7NS,10NS),
+          DELAY(2NS,3.5NS,6.5NS))}

.ENDS 74F725A

*------------------------------------------------------------74F725-1----

* Quad 4 to 1 Data Selector Multiplexer with 30-Ohm Equivalent
* Output Termination Impedance
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 705 to 712
* jat 7/23/96

.SUBCKT 74F725-1 D0A D0B D0C D0D D1A D1B D1C D1D D2A D2B D2C D2D D3A D3B D3C
+ D3D S0 S1 Q0 Q1 Q2 Q3
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(18,4) DPWR DGND
+ D0A D0B D0C D0D D1A D1B D1C D1D D2A D2B D2C D2D D3A D3B D3C D3D S0 S1
+ Q0O Q1O Q2O Q3O
+ D0_GATE IO_F_30 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   Q0O = {(D0A & ~S0 & ~S1) | (D0B & S0 & ~S1) | (D0C & ~S0 & S1) | (D0D & S0 & S1)}
+   Q1O = {(D1A & ~S0 & ~S1) | (D1B & S0 & ~S1) | (D1C & ~S0 & S1) | (D1D & S0 & S1)}
+   Q2O = {(D2A & ~S0 & ~S1) | (D2B & S0 & ~S1) | (D2C & ~S0 & S1) | (D2D & S0 & S1)}
+   Q3O = {(D3A & ~S0 & ~S1) | (D3B & S0 & ~S1) | (D3C & ~S0 & S1) | (D3D & S0 & S1)}

U2 PINDLY(4,0,2) DPWR DGND
+ Q0O Q1O Q2O Q3O
+ S0 S1
+ Q0 Q1 Q2 Q3
+ IO_F_30 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   SEL = {CHANGED(S0,0) |  CHANGED(S1,0)}
+ PINDLY:
+    Q0 Q1 Q2 Q3 = {
+       CASE(
+          SEL & TRN_LH, DELAY(6NS,9NS,12NS),
+          SEL & TRN_HL, DELAY(5NS,8.5NS,10.5NS),
+          TRN_LH, DELAY(2NS,4NS,7NS),
+          TRN_HL, DELAY(2NS,4NS,6.5NS),
+          DELAY(7NS,10NS,13NS))}

.ENDS 74F725-1

*------------------------------------------------------------74F732-----

* Quad Data Multiplexer, Inverting (Tri-State)
* Philips FAST TTL Data Handbook, 1992, pages 713 to 719
* jat 7/23/96

.SUBCKT 74F732 DIR S0 S1 OEABAR OEBBAR OECBAR A0 A1 A2 A3 B0 B1 B2 B3 C0 C1
+ C2 C3
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(18,15) DPWR DGND
+ DIR S0 S1 OEABAR OEBBAR OECBAR A0 A1 A2 A3 B0 B1 B2 B3 C0 C1 C2 C3 
+ ENABA ENABB ENABC A0O A1O A2O A3O B0O B1O B2O B3O C0O C1O C2O C3O
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENABA = {~(OEABAR | (S0 & S1) | (~S1 & ~DIR))}
+   ENABB = {~(OEBBAR | (~S0 & S1 & ~DIR) | (S0 & ~S1 & DIR))}
+   ENABC = {~(OECBAR | (~S0 & DIR))}
+   A0O = {~((C0 & ~S0 & ~S1 & DIR) | (S0 & ~S1 & DIR & B0))}
+   B0O = {~((C0 & ~S0 & S1 & DIR) | (S0 & ~S1 & ~DIR & A0) | (A0 & S0 & S1))}
+   C0O = {~((A0 & ~S0 & ~S1 & ~DIR) | (~S0 & S1 & ~DIR & B0) | (A0 & S0 & S1))}
+   A1O = {~((C1 & ~S0 & ~S1 & DIR) | (S0 & ~S1 & DIR & B1))}
+   B1O = {~((C1 & ~S0 & S1 & DIR) | (S0 & ~S1 & ~DIR & A1) | (A1 & S0 & S1))}
+   C1O = {~((A1 & ~S0 & ~S1 & ~DIR) | (~S0 & S1 & ~DIR & B1) | (A1 & S0 & S1))}
+   A2O = {~((C2 & ~S0 & ~S1 & DIR) | (S0 & ~S1 & DIR & B2))}
+   B2O = {~((C2 & ~S0 & S1 & DIR) | (S0 & ~S1 & ~DIR & A2) | (A2 & S0 & S1))}
+   C2O = {~((A2 & ~S0 & ~S1 & ~DIR) | (~S0 & S1 & ~DIR & B2) | (A2 & S0 & S1))}
+   A3O = {~((C3 & ~S0 & ~S1 & DIR) | (S0 & ~S1 & DIR & B3))}
+   B3O = {~((C3 & ~S0 & S1 & DIR) | (S0 & ~S1 & ~DIR & A3) | (A3 & S0 & S1))}
+   C3O = {~((A3 & ~S0 & ~S1 & ~DIR) | (~S0 & S1 & ~DIR & B3) | (A3 & S0 & S1))}

U2 PINDLY(12,3,18) DPWR DGND
+ A0O A1O A2O A3O B0O B1O B2O B3O C0O C1O C2O C3O
+ ENABA ENABB ENABC
+ A0 A1 A2 A3 B0 B1 B2 B3 C0 C1 C2 C3 DIR S0 S1 OEABAR OEBBAR OECBAR
+ A0 A1 A2 A3 B0 B1 B2 B3 C0 C1 C2 C3
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   OE = {CHANGED(OEABAR,0) | CHANGED(OEBBAR,0) | CHANGED(OECBAR,0)}
+   DIRECT = {CHANGED(DIR,0)}
+   SEL = {CHANGED(S0,0) | CHANGED(S1,0)}
+   DATAA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0)}
+   DATAB = {CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0)}
+   DATAC = {CHANGED(C0,0) | CHANGED(C1,0) | CHANGED(C2,0) | CHANGED(C3,0)}
+ TRISTATE:
+   ENABLE HI = ENABA
+   A0 A1 A2 A3 = {
+     CASE(
+        OE & TRN_ZH, DELAY(2NS,4.5NS,7.5NS),
+        OE & TRN_ZL, DELAY(4NS,6.5NS,9.5NS),
+        OE & TRN_$Z, DELAY(2NS,4NS,7NS),
+        DIRECT & SEL & TRN_ZH, DELAY(4NS,7.5NS,11NS),
+        DIRECT & SEL & TRN_ZL, DELAY(5.5NS,8.5NS,11.5NS),
+        DIRECT & SEL & TRN_HZ, DELAY(1NS,6NS,9NS),
+        DIRECT & SEL & TRN_LZ, DELAY(1NS,4.5NS,7.5NS),
+        SEL & TRN_LH, DELAY(5NS,7NS,10NS),
+        SEL & TRN_HL, DELAY(2.5NS,4.5NS,7.5NS),
+        (DATAB | DATAC) & TRN_LH, DELAY(2NS,4.5NS,8NS),
+        (DATAB | DATAC) & TRN_HL, DELAY(1NS,3NS,6NS),
+        DELAY(6.5NS,9.5NS,12.5NS))}
+ TRISTATE:
+   ENABLE HI = ENABB
+   B0 B1 B2 B3 = {
+     CASE(
+        OE & TRN_ZH, DELAY(2NS,4.5NS,7.5NS),
+        OE & TRN_ZL, DELAY(4NS,6.5NS,9.5NS),
+        OE & TRN_$Z, DELAY(2NS,4NS,7NS),
+        DIRECT & SEL & TRN_ZH, DELAY(4NS,7.5NS,11NS),
+        DIRECT & SEL & TRN_ZL, DELAY(5.5NS,8.5NS,11.5NS),
+        DIRECT & SEL & TRN_HZ, DELAY(1NS,6NS,9NS),
+        DIRECT & SEL & TRN_LZ, DELAY(1NS,4.5NS,7.5NS),
+        SEL & TRN_LH, DELAY(5NS,7NS,10NS),
+        SEL & TRN_HL, DELAY(2.5NS,4.5NS,7.5NS),
+        (DATAA | DATAC) & TRN_LH, DELAY(2NS,4.5NS,8NS),
+        (DATAA | DATAC) & TRN_HL, DELAY(1NS,3NS,6NS),
+        DELAY(6.5NS,9.5NS,12.5NS))}
+ TRISTATE:
+   ENABLE HI = ENABC
+   C0 C1 C2 C3 = {
+     CASE(
+        OE & TRN_ZH, DELAY(2NS,4.5NS,7.5NS),
+        OE & TRN_ZL, DELAY(4NS,6.5NS,9.5NS),
+        OE & TRN_$Z, DELAY(2NS,4NS,7NS),
+        DIRECT & SEL & TRN_ZH, DELAY(4NS,7.5NS,11NS),
+        DIRECT & SEL & TRN_ZL, DELAY(5.5NS,8.5NS,11.5NS),
+        DIRECT & SEL & TRN_HZ, DELAY(1NS,6NS,9NS),
+        DIRECT & SEL & TRN_LZ, DELAY(1NS,4.5NS,7.5NS),
+        SEL & TRN_LH, DELAY(5NS,7NS,10NS),
+        SEL & TRN_HL, DELAY(2.5NS,4.5NS,7.5NS),
+        (DATAB | DATAA) & TRN_LH, DELAY(2NS,4.5NS,8NS),
+        (DATAB | DATAA) & TRN_HL, DELAY(1NS,3NS,6NS),
+        DELAY(6.5NS,9.5NS,12.5NS))}

.ENDS 74F32

*------------------------------------------------------------74F733-----

* Quad Data Multiplexer, Non-Inverting (Tri-State)
* Philips FAST TTL Data Handbook, 1992, pages 713 to 719
* jat 7/24/96

.SUBCKT 74F733 DIR S0 S1 OEABAR OEBBAR OECBAR A0 A1 A2 A3 B0 B1 B2 B3 C0 C1
+ C2 C3
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(18,15) DPWR DGND
+ DIR S0 S1 OEABAR OEBBAR OECBAR A0 A1 A2 A3 B0 B1 B2 B3 C0 C1 C2 C3 
+ ENABA ENABB ENABC A0O A1O A2O A3O B0O B1O B2O B3O C0O C1O C2O C3O
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENABA = {~(OEABAR | (S0 & S1) | (~S1 & ~DIR))}
+   ENABB = {~(OEBBAR | (~S0 & S1 & ~DIR) | (S0 & ~S1 & DIR))}
+   ENABC = {~(OECBAR | (~S0 & DIR))}
+   A0O = {((C0 & ~S0 & ~S1 & DIR) | (S0 & ~S1 & DIR & B0))}
+   B0O = {((C0 & ~S0 & S1 & DIR) | (S0 & ~S1 & ~DIR & A0) | (A0 & S0 & S1))}
+   C0O = {((A0 & ~S0 & ~S1 & ~DIR) | (~S0 & S1 & ~DIR & B0) | (A0 & S0 & S1))}
+   A1O = {((C1 & ~S0 & ~S1 & DIR) | (S0 & ~S1 & DIR & B1))}
+   B1O = {((C1 & ~S0 & S1 & DIR) | (S0 & ~S1 & ~DIR & A1) | (A1 & S0 & S1))}
+   C1O = {((A1 & ~S0 & ~S1 & ~DIR) | (~S0 & S1 & ~DIR & B1) | (A1 & S0 & S1))}
+   A2O = {((C2 & ~S0 & ~S1 & DIR) | (S0 & ~S1 & DIR & B2))}
+   B2O = {((C2 & ~S0 & S1 & DIR) | (S0 & ~S1 & ~DIR & A2) | (A2 & S0 & S1))}
+   C2O = {((A2 & ~S0 & ~S1 & ~DIR) | (~S0 & S1 & ~DIR & B2) | (A2 & S0 & S1))}
+   A3O = {((C3 & ~S0 & ~S1 & DIR) | (S0 & ~S1 & DIR & B3))}
+   B3O = {((C3 & ~S0 & S1 & DIR) | (S0 & ~S1 & ~DIR & A3) | (A3 & S0 & S1))}
+   C3O = {((A3 & ~S0 & ~S1 & ~DIR) | (~S0 & S1 & ~DIR & B3) | (A3 & S0 & S1))}

U2 PINDLY(12,3,18) DPWR DGND
+ A0O A1O A2O A3O B0O B1O B2O B3O C0O C1O C2O C3O
+ ENABA ENABB ENABC
+ A0 A1 A2 A3 B0 B1 B2 B3 C0 C1 C2 C3 DIR S0 S1 OEABAR OEBBAR OECBAR
+ A0 A1 A2 A3 B0 B1 B2 B3 C0 C1 C2 C3
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   OE = {CHANGED(OEABAR,0) | CHANGED(OEBBAR,0) | CHANGED(OECBAR,0)}
+   DIRECT = {CHANGED(DIR,0)}
+   SEL = {CHANGED(S0,0) | CHANGED(S1,0)}
+   DATAA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0)}
+   DATAB = {CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0)}
+   DATAC = {CHANGED(C0,0) | CHANGED(C1,0) | CHANGED(C2,0) | CHANGED(C3,0)}
+ TRISTATE:
+   ENABLE HI = ENABA
+   A0 A1 A2 A3 = {
+     CASE(
+        OE & TRN_ZH, DELAY(2.5NS,5NS,7.5NS),
+        OE & TRN_ZL, DELAY(3.5NS,5.5NS,8.5NS),
+        OE & TRN_HZ, DELAY(2NS,4NS,7NS),
+        OE & TRN_LZ, DELAY(2NS,4.5NS,7NS),
+        DIRECT & SEL & TRN_ZH, DELAY(4.5NS,7.5NS,11NS),
+        DIRECT & SEL & TRN_ZL, DELAY(5.5NS,8.5NS,12NS),
+        DIRECT & SEL & TRN_HZ, DELAY(1.5NS,4.5NS,7.5NS),
+        DIRECT & SEL & TRN_LZ, DELAY(7NS,11.5NS,14.5NS),
+        SEL & TRN_LH, DELAY(3NS,5NS,7.5NS),
+        SEL & TRN_HL, DELAY(4NS,6NS,9NS),
+        (DATAB | DATAC) & (TRN_LH | TRN_HL), DELAY(1.5NS,4NS,7NS),
+        DELAY(8NS,12.5NS,15.5NS))}
+ TRISTATE:
+   ENABLE HI = ENABB
+   B0 B1 B2 B3 = {
+     CASE(
+        OE & TRN_ZH, DELAY(2.5NS,5NS,7.5NS),
+        OE & TRN_ZL, DELAY(3.5NS,5.5NS,8.5NS),
+        OE & TRN_HZ, DELAY(2NS,4NS,7NS),
+        OE & TRN_LZ, DELAY(2NS,4.5NS,7NS),
+        DIRECT & SEL & TRN_ZH, DELAY(4.5NS,7.5NS,11NS),
+        DIRECT & SEL & TRN_ZL, DELAY(5.5NS,8.5NS,12NS),
+        DIRECT & SEL & TRN_HZ, DELAY(1.5NS,4.5NS,7.5NS),
+        DIRECT & SEL & TRN_LZ, DELAY(7NS,11.5NS,14.5NS),
+        SEL & TRN_LH, DELAY(3NS,5NS,7.5NS),
+        SEL & TRN_HL, DELAY(4NS,6NS,9NS),
+        (DATAA | DATAC) & (TRN_LH | TRN_HL), DELAY(1.5NS,4NS,7NS),
+        DELAY(8NS,12.5NS,15.5NS))}
+ TRISTATE:
+   ENABLE HI = ENABC
+   C0 C1 C2 C3 = {
+     CASE(
+        OE & TRN_ZH, DELAY(2.5NS,5NS,7.5NS),
+        OE & TRN_ZL, DELAY(3.5NS,5.5NS,8.5NS),
+        OE & TRN_HZ, DELAY(2NS,4NS,7NS),
+        OE & TRN_LZ, DELAY(2NS,4.5NS,7NS),
+        DIRECT & SEL & TRN_ZH, DELAY(4.5NS,7.5NS,11NS),
+        DIRECT & SEL & TRN_ZL, DELAY(5.5NS,8.5NS,12NS),
+        DIRECT & SEL & TRN_HZ, DELAY(1.5NS,4.5NS,7.5NS),
+        DIRECT & SEL & TRN_LZ, DELAY(7NS,11.5NS,14.5NS),
+        SEL & TRN_LH, DELAY(3NS,5NS,7.5NS),
+        SEL & TRN_HL, DELAY(4NS,6NS,9NS),
+        (DATAB | DATAA) & (TRN_LH | TRN_HL), DELAY(1.5NS,4NS,7NS),
+        DELAY(8NS,12.5NS,15.5NS))}

.ENDS 74F33

*------------------------------------------------------------74ALS746-----

* The 74ALS746 Octal Buffers and Line Drivers with Input Pull-Up Resistors
* TI ALS/AS Logic Data Book, 1986, pages 2-585 to 2-588        (Inverting)
* jat 8/16/95

.SUBCKT 74ALS746
+ G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 NOR(2) DPWR DGND
+ G1BAR G2BAR ENAB
+ D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PULLUP(8) DPWR DGND
+ A1 A2 A3 A4 A5 A6 A7 A8
+ IO_PULLUP IO_LEVEL={IO_LEVEL}

.MODEL IO_PULLUP UIO(DRVH=20K DRVL=1MEG
+ DTOA1=PULLUP_DTOA DTOA2=PULLUP_DTOA
+ DTOA3=PULLUP_DTOA DTOA4=PULLUP_DTOA
+ ATOD1=PULLUP_ATOD ATOD2=PULLUP_ATOD
+ ATOD3=PULLUP_ATOD ATOD4=PULLUP_ATOD)

U3 INVA(8) DPWR DGND
+ A1 A2 A3 A4 A5 A6 A7 A8
+ Y_1 Y_2 Y_3 Y_4 Y_5 Y_6 Y_7 Y_8
+ D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(8,1,8) DPWR DGND
+ Y_1 Y_2 Y_3 Y_4 Y_5 Y_6 Y_7 Y_8
+ ENAB
+ A1 A2 A3 A4 A5 A6 A7 A8
+ Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+ IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+           CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0)}
+ TRISTATE:
+   ENABLE HI = ENAB
+   Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 = {
+      CASE(
+         TRN_ZH, DELAY(-1,9NS,-1),
+         TRN_ZL, DELAY(-1,12.5NS,-1),
+         TRN_HZ, DELAY(-1,4NS,-1),
+         TRN_LZ, DELAY(-1,7NS,-1),
+         DATA & TRN_LH, DELAY(-1,7.5NS,-1),
+         DATA & TRN_HL, DELAY(-1,5.6NS,-1),
+         DELAY(-1,13.5NS,-1))}

.ENDS 74ALS746

*------------------------------------------------------------74ALS747-----

* The 74ALS747 Octal Buffers and Line Drivers with Input Pull-Up Resistors
* TI ALS/AS Logic Data Book, 1986, pages 2-585 to 2-588     (Non-Inverting)
* jat 8/16/95

.SUBCKT 74ALS747
+ G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 NOR(2) DPWR DGND
+ G1BAR G2BAR ENAB
+ D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PULLUP(8) DPWR DGND
+ A1 A2 A3 A4 A5 A6 A7 A8
+ IO_PULLUP IO_LEVEL={IO_LEVEL}

.MODEL IO_PULLUP UIO(DRVH=20K DRVL=1MEG
+ DTOA1=PULLUP_DTOA DTOA2=PULLUP_DTOA
+ DTOA3=PULLUP_DTOA DTOA4=PULLUP_DTOA)

U3 PINDLY(8,1,8) DPWR DGND
+ A1 A2 A3 A4 A5 A6 A7 A8
+ ENAB
+ A1 A2 A3 A4 A5 A6 A7 A8
+ Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+ IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+           CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0)}
+ TRISTATE:
+   ENABLE HI = ENAB
+   Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 = {
+      CASE(
+         TRN_ZH, DELAY(-1,9NS,-1),
+         TRN_ZL, DELAY(-1,12.5NS,-1),
+         TRN_HZ, DELAY(-1,4NS,-1),
+         TRN_LZ, DELAY(-1,7NS,-1),
+         DATA & TRN_LH, DELAY(-1,8.7NS,-1),
+         DATA & TRN_HL, DELAY(-1,7.4NS,-1),
+         DELAY(-1,13.5NS,-1))}

.ENDS 74ALS747

*-----------------------------------------------------------74LS748------

* 8 Line to 3 Line Priority Encoder
* Motorola FAST and LS TTL Logic Data Book, 1992, pages 5-139 to 5-143
* jat 8/15/96

.SUBCKT 74LS748 D0 D1 D2 D3 D4 D5 D6 D7 EI A0 A1 A2 GS EO
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,5) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 EI
+ A0O A1O A2O GSO EOO
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   A0O = {~((~D1 & D2 & D4 & D6 & ~EI) | (~D3 & D4 & D6 & ~EI) |
+           (~D5 & D6 & ~EI) | (~D7 & ~EI))}
+   A1O = {~((~D2 & D4 & D5 & ~EI) | (~D3 & D4 & D5 & ~EI) | (~D6 & ~EI) | (~D7 & ~EI))}
+   A2O = {~((~D4 & ~EI) | (~D5 & ~EI) | (~D6 & ~EI) | (~D7 & ~EI))}
+   EOO = {~(D0 & D1 & D2 & D3 & D4 & D5 & D6 & D7 & ~EI)}
+   GSO = {~(EOO & ~EI)}

U2 PINDLY(5,0,9) DPWR DGND
+ A0O A1O A2O EOO GSO
+ D0 D1 D2 D3 D4 D5 D6 D7 EI
+ A0 A1 A2 EO GS
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+  DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+          CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+  E = {CHANGED(EI,0)}
+ PINDLY:
+   A0 A1 A2 = {
+     CASE(
+       E & TRN_LH, DELAY(-1,16NS,25NS),
+       E & TRN_HL, DELAY(-1,12NS,25NS),
+       DATA & TRN_LH, DELAY(-1,14NS,18NS),
+       DATA & TRN_HL, DELAY(-1,15NS,25NS),
+       DELAY(-1,17NS,26NS))}
+   EO = {
+     CASE(
+       E & TRN_LH, DELAY(-1,12NS,21NS),
+       E & TRN_HL, DELAY(-1,30NS,45NS),
+       DATA & TRN_LH, DELAY(-1,7NS,18NS),
+       DATA & TRN_HL, DELAY(-1,25NS,40NS),
+       DELAY(-1,31NS,46NS))}
+   GS = {
+     CASE(
+       E & TRN_LH, DELAY(-1,12NS,17NS),
+       E & TRN_HL, DELAY(-1,14NS,36NS),
+       DATA & TRN_LH, DELAY(-1,35NS,55NS),
+       DATA & TRN_HL, DELAY(-1,9NS,21NS),
+       DELAY(-1,36NS,56NS))}

.ENDS 74LS748

* ----------------------------------------------------------- 74ALS756 ------
*  Octal Buffers And Line Drivers With Open-Collector Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-589 to 2-593
*  bss    6/7/94
*
.SUBCKT 74ALS756 1GBAR 1A1 1A2 1A3 1A4 1Y1 1Y2 1Y3 1Y4 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1GBAR 1GEN
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nanda(2,4) DPWR DGND
+     1GEN 1A1 1GEN 1A2 1GEN 1A3 1GEN 1A4
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(4,0,5) DPWR DGND
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O
+     1A1 1A2 1A3 1A4 1GBAR
+     1Y1 1Y2 1Y3 1Y4
+     IO_ALS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1A1,0) | CHANGED(1A2,0) | CHANGED(1A3,0) | CHANGED(1A4,0)}
+     ENAB = {CHANGED(1GBAR,0)}
+
+  PINDLY:
+     1Y1 1Y2 1Y3 1Y4 = {
+       CASE(
+         ENAB & TRN_LH, DELAY(8ns,16ns,24ns),
+         ENAB & TRN_HL, DELAY(6ns,12ns,20ns),
+         DATA & TRN_LH, DELAY(8ns,14ns,24ns),
+         DATA & TRN_HL, DELAY(2ns,5ns,10ns),
+         DELAY(9ns,17ns,25ns))}

.ENDS 74ALS756
*
*
* ----------------------------------------------------------- 74AS756 ------
*  Octal Buffers And Line Drivers With Open-Collector Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-589 to 2-593
*  bss    6/7/94
*
.SUBCKT 74AS756 1GBAR 1A1 1A2 1A3 1A4 1Y1 1Y2 1Y3 1Y4 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1GBAR 1GEN
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nanda(2,4) DPWR DGND
+     1GEN 1A1 1GEN 1A2 1GEN 1A3 1GEN 1A4
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(4,0,5) DPWR DGND
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O
+     1A1 1A2 1A3 1A4 1GBAR
+     1Y1 1Y2 1Y3 1Y4
+     IO_AS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1A1,0) | CHANGED(1A2,0) | CHANGED(1A3,0) | CHANGED(1A4,0)}
+     ENAB = {CHANGED(1GBAR,0)}
+
+  PINDLY:
+     1Y1 1Y2 1Y3 1Y4 = {
+       CASE(
+         ENAB & TRN_LH, DELAY(3ns,-1,19.5ns),
+         ENAB & TRN_HL, DELAY(1ns,-1,7.5ns),
+         DATA & TRN_LH, DELAY(3ns,-1,19ns),
+         DATA & TRN_HL, DELAY(1ns,-1,6ns),
+         DELAY(4ns,-1,20.5ns))}

.ENDS 74AS756

*------------------------------------------------------------74F756----

* Octal Inverter Buffer (Open Collector)
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 720 to 725
* jat 7/24/96

.SUBCKT 74F756 IA0 IA1 IA2 IA3 YA0BAR YA1BAR YA2BAR YA3BAR OEABAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(5,4) DPWR DGND
+ IA0 IA1 IA2 IA3 OEABAR
+ ZER 1 2 3
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ZER = {(~IA0 & ~OEABAR) | OEABAR}
+   1 = {(~IA1 & ~OEABAR) | OEABAR}
+   2 = {(~IA2 & ~OEABAR) | OEABAR}
+   3 = {(~IA3 & ~OEABAR) | OEABAR}

U2 PINDLY(4,0,5) DPWR DGND
+ ZER 1 2 3
+ OEABAR IA0 IA1 IA2 IA3
+ YA0BAR YA1BAR YA2BAR YA3BAR
+ IO_F_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+  OE = {CHANGED(OEABAR,0)}
+  DATA = {CHANGED(IA0,0) | CHANGED(IA1,0) | CHANGED(IA2,0) | CHANGED(IA3,0)}
+ PINDLY:
+   YA0BAR YA1BAR YA2BAR YA3BAR = {
+    CASE(
+      OE & TRN_LH, DELAY(9NS,11.5NS,14.5NS),
+      OE & TRN_HL, DELAY(5NS,7NS,10NS),
+      DATA & TRN_LH, DELAY(8.5NS,11NS,14NS),
+      DATA & TRN_HL, DELAY(1NS,3NS,6NS),
+      DELAY(10NS,12.5NS,15.5NS))}

.ENDS 74F756

* ----------------------------------------------------------- 74AS757 ------
*  Octal Buffers And Line Drivers With Open-Collector Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-589 to 2-593
*  bss    6/7/94
*
.SUBCKT 74AS757 1GBAR 1A1 1A2 1A3 1A4 2G 2A1 2A2 2A3 2A4 
+     1Y1 1Y2 1Y3 1Y4 2Y1 2Y2 2Y3 2Y4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 ora(2,4) DPWR DGND
+     1GBAR 1A1 1GBAR 1A2 1GBAR 1A3 1GBAR 1A4
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     2G 2GBAR
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 ora(2,4) DPWR DGND
+     2GBAR 2A1 2GBAR 2A2 2GBAR 2A3 2GBAR 2A4
+     2Y1_O 2Y2_O 2Y3_O 2Y4_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4DLY PINDLY(8,0,10) DPWR DGND
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O 2Y1_O 2Y2_O 2Y3_O 2Y4_O
+     1GBAR 1A1 1A2 1A3 1A4 2G 2A1 2A2 2A3 2A4
+     1Y1 1Y2 1Y3 1Y4 2Y1 2Y2 2Y3 2Y4
+     IO_AS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA1 = {CHANGED(1A1,0) | CHANGED(1A2,0) | CHANGED(1A3,0) | CHANGED(1A4,0)}
+     DATA2 = {CHANGED(2A1,0) | CHANGED(2A2,0) | CHANGED(2A3,0) | CHANGED(2A4,0)}
+     ENAB1 = {CHANGED(1GBAR,0)}
+     ENAB2 = {CHANGED(2G,0)}
+
+  PINDLY:
+     1Y1 1Y2 1Y3 1Y4 = {
+       CASE(
+         ENAB1 & TRN_LH, DELAY(3ns,-1,20ns),
+         ENAB1 & TRN_HL, DELAY(1ns,-1,7ns),
+         DATA1 & TRN_LH, DELAY(3ns,-1,18.5ns),
+         DATA1 & TRN_HL, DELAY(1ns,-1,6ns),
+         DELAY(4ns,-1,21ns))}
+
+     2Y1 2Y2 2Y3 2Y4 = {
+       CASE(
+         ENAB2 & TRN_LH, DELAY(3ns,-1,21ns),
+         ENAB2 & TRN_HL, DELAY(1ns,-1,7.5ns),
+         DATA2 & TRN_LH, DELAY(3ns,-1,18.5ns),
+         DATA2 & TRN_HL, DELAY(1ns,-1,6ns),
+         DELAY(4ns,-1,22ns))}

.ENDS 74AS757

*------------------------------------------------------------74F757----

* Octal Buffer (Open Collector)
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 720 to 725
* jat 7/24/96

.SUBCKT 74F757 IA0 IA1 IA2 IA3 IB0 IB1 IB2 IB3 YA0 YA1 YA2 YA3 YB0 YB1
+ YB2 YB3 OEABAR OEB
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(10,8) DPWR DGND
+ IA0 IA1 IA2 IA3 IB0 IB1 IB2 IB3 OEABAR OEB
+ ZER 1 2 3 4 5 6 7
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ZER = {(IA0 & ~OEABAR) | OEABAR}
+   1 = {(IA1 & ~OEABAR) | OEABAR}
+   2 = {(IA2 & ~OEABAR) | OEABAR}
+   3 = {(IA3 & ~OEABAR) | OEABAR}
+   4 = {(IB0 & OEB) | ~OEB}
+   5 = {(IB1 & OEB) | ~OEB}
+   6 = {(IB2 & OEB) | ~OEB}
+   7 = {(IB3 & OEB) | ~OEB}

U2 PINDLY(8,0,10) DPWR DGND
+ ZER 1 2 3 4 5 6 7
+ OEABAR IA0 IA1 IA2 IA3 OEB IB0 IB1 IB2 IB3
+ YA0 YA1 YA2 YA3 YB0 YB1 YB2 YB3
+ IO_F_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+  OEA = {CHANGED(OEABAR,0)}
+  DATAA = {CHANGED(IA0,0) | CHANGED(IA1,0) | CHANGED(IA2,0) | CHANGED(IA3,0)}
+  OB = {CHANGED(OEB,0)}
+  DATAB = {CHANGED(IB0,0) | CHANGED(IB1,0) | CHANGED(IB2,0) | CHANGED(IB3,0)}
+ PINDLY:
+   YA0 YA1 YA2 YA3 = {
+    CASE(
+      OEA & TRN_LH, DELAY(9NS,10.5NS,15NS),
+      OEA & TRN_HL, DELAY(4.5NS,7NS,10NS),
+      DATAA & TRN_LH, DELAY(7.5NS,10.5NS,13.5NS),
+      DATAA & TRN_HL, DELAY(3NS,5.5NS,8.5NS),
+      DELAY(10NS,11.5NS,16NS))}
+   YB0 YB1 YB2 YB3 = {
+    CASE(
+      OB & TRN_LH, DELAY(9NS,10.5NS,15NS),
+      OB & TRN_HL, DELAY(4.5NS,7NS,10NS),
+      DATAB & TRN_LH, DELAY(7.5NS,10.5NS,13.5NS),
+      DATAB & TRN_HL, DELAY(3NS,5.5NS,8.5NS),
+      DELAY(10NS,11.5NS,16NS))}

.ENDS 74F757

* ----------------------------------------------------------- 74ALS758 ------
*  Quad Bus Transceivers With Open-Collector Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-595 to 2-599
*  bss    6/7/94
*
.SUBCKT 74ALS758 GBA GABBAR A1 A2 A3 A4 B1 B2 B3 B4 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     GABBAR GAB
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nanda(2,4) DPWR DGND
+     GAB A1 GAB A2 GAB A3 GAB A4
+     B1_O B2_O B3_O B4_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nanda(2,4) DPWR DGND
+     GBA B1 GBA B2 GBA B3 GBA B4
+     A1_O A2_O A3_O A4_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4DLY PINDLY(8,0,2) DPWR DGND
+     A1_O A2_O A3_O A4_O B1_O B2_O B3_O B4_O
+     GABBAR GBA
+     A1 A2 A3 A4 B1 B2 B3 B4
+     IO_ALS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENBA = {CHANGED(GBA,0)}
+     ENAB = {CHANGED(GABBAR,0)}
+
+  PINDLY:
+     A1 A2 A3 A4 = {
+       CASE(
+         ENBA & TRN_LH, DELAY(10ns,18ns,28ns),
+         ENBA & TRN_HL, DELAY(6ns,13ns,21ns),
+         TRN_LH, DELAY(10ns,20ns,28ns),
+         TRN_HL, DELAY(2ns,5ns,12ns),
+         DELAY(11ns,21ns,29ns))}
+
+     B1 B2 B3 B4 = {
+       CASE(
+         ENAB & TRN_LH, DELAY(10ns,18ns,28ns),
+         ENAB & TRN_HL, DELAY(6ns,13ns,21ns),
+         TRN_LH, DELAY(10ns,20ns,28ns),
+         TRN_HL, DELAY(2ns,5ns,12ns),
+         DELAY(11ns,21ns,29ns))}

.ENDS 74ALS758
*
*
* ----------------------------------------------------------- 74AS758 ------
*  Quad Bus Transceivers With Open-Collector Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-595 to 2-599
*  bss    6/7/94
*
.SUBCKT 74AS758 GBA GABBAR A1 A2 A3 A4 B1 B2 B3 B4 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     GABBAR GAB
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nanda(2,4) DPWR DGND
+     GAB A1 GAB A2 GAB A3 GAB A4
+     B1_O B2_O B3_O B4_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nanda(2,4) DPWR DGND
+     GBA B1 GBA B2 GBA B3 GBA B4
+     A1_O A2_O A3_O A4_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4DLY PINDLY(8,0,2) DPWR DGND
+     A1_O A2_O A3_O A4_O B1_O B2_O B3_O B4_O
+     GABBAR GBA
+     A1 A2 A3 A4 B1 B2 B3 B4
+     IO_AS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENBA = {CHANGED(GBA,0)}
+     ENAB = {CHANGED(GABBAR,0)}
+
+  PINDLY:
+     A1 A2 A3 A4 = {
+       CASE(
+         ENBA & TRN_LH, DELAY(3ns,-1,19.5ns),
+         ENBA & TRN_HL, DELAY(1ns,-1,7.5ns),
+         TRN_LH, DELAY(3ns,-1,19.5ns),
+         TRN_HL, DELAY(1ns,-1,6ns),
+         DELAY(4ns,-1,20.5ns))}
+
+     B1 B2 B3 B4 = {
+       CASE(
+         ENAB & TRN_LH, DELAY(3ns,-1,21ns),
+         ENAB & TRN_HL, DELAY(1ns,-1,8ns),
+         TRN_LH, DELAY(3ns,-1,19.5ns),
+         TRN_HL, DELAY(1ns,-1,6ns),
+         DELAY(4ns,-1,22ns))}

.ENDS 74AS758
*
*
* ----------------------------------------------------------- 74AS759 ------
*  Quad Bus Transceivers With Open-Collector Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-595 to 2-599
*  bss    6/7/94
*
.SUBCKT 74AS759 GBA GABBAR A1 A2 A3 A4 B1 B2 B3 B4 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     GBA GBABAR
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 ora(2,4) DPWR DGND
+     GABBAR A1 GABBAR A2 GABBAR A3 GABBAR A4
+     B1_O B2_O B3_O B4_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 ora(2,4) DPWR DGND
+     GBABAR B1 GBABAR B2 GBABAR B3 GBABAR B4
+     A1_O A2_O A3_O A4_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4DLY PINDLY(8,0,2) DPWR DGND
+     A1_O A2_O A3_O A4_O B1_O B2_O B3_O B4_O
+     GABBAR GBA
+     A1 A2 A3 A4 B1 B2 B3 B4
+     IO_AS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENBA = {CHANGED(GBA,0)}
+     ENAB = {CHANGED(GABBAR,0)}
+
+  PINDLY:
+     A1 A2 A3 A4 = {
+       CASE(
+         ENBA & TRN_LH, DELAY(3ns,-1,20ns),
+         ENBA & TRN_HL, DELAY(1ns,-1,7ns),
+         TRN_LH, DELAY(3ns,-1,20ns),
+         TRN_HL, DELAY(1ns,-1,6ns),
+         DELAY(4ns,-1,21ns))}
+
+     B1 B2 B3 B4 = {
+       CASE(
+         ENAB & TRN_LH, DELAY(3ns,-1,21ns),
+         ENAB & TRN_HL, DELAY(1ns,-1,7.5ns),
+         TRN_LH, DELAY(3ns,-1,20ns),
+         TRN_HL, DELAY(1ns,-1,6ns),
+         DELAY(4ns,-1,22ns))}

.ENDS 74AS759
*
*
* ----------------------------------------------------------- 74ALS760 ------
*  Octal Buffers And Line Drivers With Open-Collector Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-601 to 2-603
*  bss    6/7/94
*
.SUBCKT 74ALS760 1GBAR 1A1 1A2 1A3 1A4 1Y1 1Y2 1Y3 1Y4 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 ora(2,4) DPWR DGND
+     1GBAR 1A1 1GBAR 1A2 1GBAR 1A3 1GBAR 1A4
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(4,0,5) DPWR DGND
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O
+     1GBAR 1A1 1A2 1A3 1A4
+     1Y1 1Y2 1Y3 1Y4
+     IO_ALS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1A1,0) | CHANGED(1A2,0) | CHANGED(1A3,0) | CHANGED(1A4,0)}
+     ENAB = {CHANGED(1GBAR,0)}
+
+  PINDLY:
+     1Y1 1Y2 1Y3 1Y4 = {
+       CASE(
+         ENAB & TRN_LH, DELAY(-1,25ns,-1),
+         ENAB & TRN_HL, DELAY(-1,24ns,-1),
+         DATA & TRN_LH, DELAY(-1,22ns,-1),
+         DATA & TRN_HL, DELAY(-1,13ns,-1),
+         DELAY(-1,26ns,-1))}

.ENDS 74ALS760
*
*
* ----------------------------------------------------------- 74AS760 ------
*  Octal Buffers And Line Drivers With Open-Collector Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-601 to 2-603
*  bss    6/7/94
*
.SUBCKT 74AS760 1GBAR 1A1 1A2 1A3 1A4 1Y1 1Y2 1Y3 1Y4 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 ora(2,4) DPWR DGND
+     1GBAR 1A1 1GBAR 1A2 1GBAR 1A3 1GBAR 1A4
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(4,0,5) DPWR DGND
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O
+     1GBAR 1A1 1A2 1A3 1A4
+     1Y1 1Y2 1Y3 1Y4
+     IO_AS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1A1,0) | CHANGED(1A2,0) | CHANGED(1A3,0) | CHANGED(1A4,0)}
+     ENAB = {CHANGED(1GBAR,0)}
+
+  PINDLY:
+     1Y1 1Y2 1Y3 1Y4 = {
+       CASE(
+         ENAB & TRN_LH, DELAY(3ns,-1,18.5ns),
+         ENAB & TRN_HL, DELAY(1ns,-1,7ns),
+         DATA & TRN_LH, DELAY(3ns,-1,18.5ns),
+         DATA & TRN_HL, DELAY(1ns,-1,6ns),
+         DELAY(4ns,-1,19.5ns))}

.ENDS 74AS760

*------------------------------------------------------------74F760----

* Octal Buffer (Open Collector)
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 720 to 725
* jat 7/24/96

.SUBCKT 74F760 IA0 IA1 IA2 IA3 YA0 YA1 YA2 YA3 OEABAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(5,4) DPWR DGND
+ IA0 IA1 IA2 IA3 OEABAR
+ ZER 1 2 3
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ZER = {(IA0 & ~OEABAR) | OEABAR}
+   1 = {(IA1 & ~OEABAR) | OEABAR}
+   2 = {(IA2 & ~OEABAR) | OEABAR}
+   3 = {(IA3 & ~OEABAR) | OEABAR}

U2 PINDLY(4,0,5) DPWR DGND
+ ZER 1 2 3
+ OEABAR IA0 IA1 IA2 IA3
+ YA0 YA1 YA2 YA3
+ IO_F_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+  OE = {CHANGED(OEABAR,0)}
+  DATA = {CHANGED(IA0,0) | CHANGED(IA1,0) | CHANGED(IA2,0) | CHANGED(IA3,0)}
+ PINDLY:
+   YA0 YA1 YA2 YA3 = {
+    CASE(
+      OE & TRN_LH, DELAY(9.5NS,11.5NS,14.5NS),
+      OE & TRN_HL, DELAY(5NS,7NS,10NS),
+      DATA & TRN_LH, DELAY(7.5NS,10NS,13.5NS),
+      DATA & TRN_HL, DELAY(3.5NS,5.5NS,8.5NS),
+      DELAY(10.5NS,12.5NS,15.5NS))}

.ENDS 74F760

* ----------------------------------------------------------- 74ALS762 ------
*  Octal Buffers And Line Drivers With Open-Collector Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-605 to 2-610
*  bss    6/7/94
*
.SUBCKT 74ALS762 1GBAR 1A1 1A2 1A3 1A4 2GBAR 2A1 2A2 2A3 2A4
+     1Y1 1Y2 1Y3 1Y4 2Y1 2Y2 2Y3 2Y4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1GBAR 1G
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nanda(2,4) DPWR DGND
+     1G 1A1 1G 1A2 1G 1A3 1G 1A4
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 ora(2,4) DPWR DGND
+     2GBAR 2A1 2GBAR 2A2 2GBAR 2A3 2GBAR 2A4
+     2Y1_O 2Y2_O 2Y3_O 2Y4_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4DLY PINDLY(8,0,10) DPWR DGND
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O 2Y1_O 2Y2_O 2Y3_O 2Y4_O
+     1GBAR 2GBAR 1A1 1A2 1A3 1A4 2A1 2A2 2A3 2A4
+     1Y1 1Y2 1Y3 1Y4 2Y1 2Y2 2Y3 2Y4
+     IO_ALS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA1 = {CHANGED(1A1,0) | CHANGED(1A2,0) | CHANGED(1A3,0) | CHANGED(1A4,0)}
+     DATA2 = {CHANGED(2A1,0) | CHANGED(2A2,0) | CHANGED(2A3,0) | CHANGED(2A4,0)}
+     ENAB1 = {CHANGED(1GBAR,0)}
+     ENAB2 = {CHANGED(2GBAR,0)}
+
+  PINDLY:
+     1Y1 1Y2 1Y3 1Y4 = {
+       CASE(
+         ENAB1 & TRN_LH, DELAY(-1,14ns,-1),
+         ENAB1 & TRN_HL, DELAY(-1,18ns,-1),
+         DATA1 & TRN_LH, DELAY(-1,17ns,-1),
+         DATA1 & TRN_HL, DELAY(-1,6ns,-1),
+         DELAY(-1,19ns,-1))}
+
+     2Y1 2Y2 2Y3 2Y4 = {
+       CASE(
+         ENAB2 & TRN_LH, DELAY(-1,14ns,-1),
+         ENAB2 & TRN_HL, DELAY(-1,18ns,-1),
+         DATA2 & TRN_LH, DELAY(-1,17ns,-1),
+         DATA2 & TRN_HL, DELAY(-1,6ns,-1),
+         DELAY(-1,19ns,-1))}

.ENDS 74ALS762
*
*
* ----------------------------------------------------------- 74AS762 ------
*  Octal Buffers And Line Drivers With Open-Collector Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-605 to 2-610
*  bss    6/7/94
*
.SUBCKT 74AS762 1GBAR 1A1 1A2 1A3 1A4 2GBAR 2A1 2A2 2A3 2A4
+     1Y1 1Y2 1Y3 1Y4 2Y1 2Y2 2Y3 2Y4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1GBAR 1G
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nanda(2,4) DPWR DGND
+     1G 1A1 1G 1A2 1G 1A3 1G 1A4
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 ora(2,4) DPWR DGND
+     2GBAR 2A1 2GBAR 2A2 2GBAR 2A3 2GBAR 2A4
+     2Y1_O 2Y2_O 2Y3_O 2Y4_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4DLY PINDLY(8,0,10) DPWR DGND
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O 2Y1_O 2Y2_O 2Y3_O 2Y4_O
+     1GBAR 2GBAR 1A1 1A2 1A3 1A4 2A1 2A2 2A3 2A4
+     1Y1 1Y2 1Y3 1Y4 2Y1 2Y2 2Y3 2Y4
+     IO_AS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA1 = {CHANGED(1A1,0) | CHANGED(1A2,0) | CHANGED(1A3,0) | CHANGED(1A4,0)}
+     DATA2 = {CHANGED(2A1,0) | CHANGED(2A2,0) | CHANGED(2A3,0) | CHANGED(2A4,0)}
+     ENAB1 = {CHANGED(1GBAR,0)}
+     ENAB2 = {CHANGED(2GBAR,0)}
+
+  PINDLY:
+     1Y1 1Y2 1Y3 1Y4 = {
+       CASE(
+         ENAB1 & TRN_LH, DELAY(3ns,-1,19.5ns),
+         ENAB1 & TRN_HL, DELAY(1ns,-1,7.5ns),
+         DATA1 & TRN_LH, DELAY(3ns,-1,19ns),
+         DATA1 & TRN_HL, DELAY(1ns,-1,6ns),
+         DELAY(4ns,-1,20.5ns))}
+
+     2Y1 2Y2 2Y3 2Y4 = {
+       CASE(
+         ENAB2 & TRN_LH, DELAY(3ns,-1,19ns),
+         ENAB2 & TRN_HL, DELAY(1ns,-1,7ns),
+         DATA2 & TRN_LH, DELAY(3ns,-1,18.5ns),
+         DATA2 & TRN_HL, DELAY(1ns,-1,6ns),
+         DELAY(4ns,-1,20ns))}

.ENDS 74AS762
*
*
* ----------------------------------------------------------- 74ALS763 ------
*  Octal Buffers And Line Drivers With Open-Collector Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-605 to 2-610
*  bss    6/7/94
*
.SUBCKT 74ALS763 1GBAR 1A1 1A2 1A3 1A4 2G 2A1 2A2 2A3 2A4
+     1Y1 1Y2 1Y3 1Y4 2Y1 2Y2 2Y3 2Y4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1GBAR 1G
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nanda(2,4) DPWR DGND
+     1G 1A1 1G 1A2 1G 1A3 1G 1A4
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nanda(2,4) DPWR DGND
+     2G 2A1 2G 2A2 2G 2A3 2G 2A4
+     2Y1_O 2Y2_O 2Y3_O 2Y4_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4DLY PINDLY(8,0,10) DPWR DGND
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O 2Y1_O 2Y2_O 2Y3_O 2Y4_O
+     1GBAR 2G 1A1 1A2 1A3 1A4 2A1 2A2 2A3 2A4
+     1Y1 1Y2 1Y3 1Y4 2Y1 2Y2 2Y3 2Y4
+     IO_ALS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA1 = {CHANGED(1A1,0) | CHANGED(1A2,0) | CHANGED(1A3,0) | CHANGED(1A4,0)}
+     DATA2 = {CHANGED(2A1,0) | CHANGED(2A2,0) | CHANGED(2A3,0) | CHANGED(2A4,0)}
+     ENAB1 = {CHANGED(1GBAR,0)}
+     ENAB2 = {CHANGED(2G,0)}
+
+  PINDLY:
+     1Y1 1Y2 1Y3 1Y4 = {
+       CASE(
+         ENAB1 & TRN_LH, DELAY(9ns,18ns,25ns),
+         ENAB1 & TRN_HL, DELAY(5ns,13ns,21ns),
+         DATA1 & TRN_LH, DELAY(7ns,16ns,25ns),
+         DATA1 & TRN_HL, DELAY(2ns,5ns,9ns),
+         DELAY(10ns,19ns,26ns))}
+
+     2Y1 2Y2 2Y3 2Y4 = {
+       CASE(
+         ENAB2 & TRN_LH, DELAY(9ns,18ns,25ns),
+         ENAB2 & TRN_HL, DELAY(5ns,13ns,21ns),
+         DATA2 & TRN_LH, DELAY(7ns,16ns,25ns),
+         DATA2 & TRN_HL, DELAY(2ns,5ns,9ns),
+         DELAY(10ns,19ns,26ns))}

.ENDS 74ALS763
*
*
* ----------------------------------------------------------- 74AS763 ------
*  Octal Buffers And Line Drivers With Open-Collector Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-605 to 2-610
*  bss    6/7/94
*
.SUBCKT 74AS763 1GBAR 1A1 1A2 1A3 1A4 2G 2A1 2A2 2A3 2A4
+     1Y1 1Y2 1Y3 1Y4 2Y1 2Y2 2Y3 2Y4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1GBAR 1G
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nanda(2,4) DPWR DGND
+     1G 1A1 1G 1A2 1G 1A3 1G 1A4
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nanda(2,4) DPWR DGND
+     2G 2A1 2G 2A2 2G 2A3 2G 2A4
+     2Y1_O 2Y2_O 2Y3_O 2Y4_O
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4DLY PINDLY(8,0,10) DPWR DGND
+     1Y1_O 1Y2_O 1Y3_O 1Y4_O 2Y1_O 2Y2_O 2Y3_O 2Y4_O
+     1GBAR 2G 1A1 1A2 1A3 1A4 2A1 2A2 2A3 2A4
+     1Y1 1Y2 1Y3 1Y4 2Y1 2Y2 2Y3 2Y4
+     IO_AS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA1 = {CHANGED(1A1,0) | CHANGED(1A2,0) | CHANGED(1A3,0) | CHANGED(1A4,0)}
+     DATA2 = {CHANGED(2A1,0) | CHANGED(2A2,0) | CHANGED(2A3,0) | CHANGED(2A4,0)}
+     ENAB1 = {CHANGED(1GBAR,0)}
+     ENAB2 = {CHANGED(2G,0)}
+
+  PINDLY:
+     1Y1 1Y2 1Y3 1Y4 = {
+       CASE(
+         ENAB1 & TRN_LH, DELAY(3ns,-1,19.5ns),
+         ENAB1 & TRN_HL, DELAY(1ns,-1,7.5ns),
+         DATA1 & TRN_LH, DELAY(3ns,-1,19ns),
+         DATA1 & TRN_HL, DELAY(1ns,-1,6ns),
+         DELAY(4ns,-1,20.5ns))}
+
+     2Y1 2Y2 2Y3 2Y4 = {
+       CASE(
+         ENAB2 & TRN_LH, DELAY(3ns,-1,20ns),
+         ENAB2 & TRN_HL, DELAY(1ns,-1,8ns),
+         DATA2 & TRN_LH, DELAY(3ns,-1,19ns),
+         DATA2 & TRN_HL, DELAY(1ns,-1,6ns),
+         DELAY(4ns,-1,21ns))}

.ENDS 74AS763

*------------------------------------------------------------74F776-----

* THIS PART IS NOT YET OPERATIONAL, UNTIL A BTL(FUTUREBUS) IO MODEL IS CREATED
* Pi-Bus Transceiver
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 745 to 752
* jat 7/24/96

.SUBCKT 74F776 A0 A1 A2 A3 A4 A5 A6 A7 B0 B1 B2 B3 B4 B5 B6 B7 OEB0BAR OEB1BAR
+ OEA LEBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(11,9) DPWR DGND
+ LEBAR OEB0BAR OEB1BAR Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ B0O B1O B2O B3O B4O B5O B6O B7O LE
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   LE = {~LEBAR}
+   B0O = {~(~Q0 & ~OEB0BAR & ~OEB1BAR)}
+   B1O = {~(~Q1 & ~OEB0BAR & ~OEB1BAR)}
+   B2O = {~(~Q2 & ~OEB0BAR & ~OEB1BAR)}
+   B3O = {~(~Q3 & ~OEB0BAR & ~OEB1BAR)}
+   B4O = {~(~Q4 & ~OEB0BAR & ~OEB1BAR)}
+   B5O = {~(~Q5 & ~OEB0BAR & ~OEB1BAR)}
+   B6O = {~(~Q6 & ~OEB0BAR & ~OEB1BAR)}
+   B7O = {~(~Q7 & ~OEB0BAR & ~OEB1BAR)}

U2 DLTCH(8) DPWR DGND
+ $D_HI $D_HI LE
+ A0 A1 A2 A3 A4 A5 A6 A7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(8,0,11) DPWR DGND
+ B0O B1O B2O B3O B4O B5O B6O B7O
+ A0 A1 A2 A3 A4 A5 A6 A7 LEBAR OEB0BAR OEB1BAR
+ B0 B1 B2 B3 B4 B5 B6 B7
+ IO_F_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   ADATA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) |
+            CHANGED(A4,0) | CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0)}
+   LATCH = {CHANGED(LEBAR,0)}
+   ENAB = {CHANGED(OEB0BAR,0) | CHANGED(OEB1BAR,0)}
+ PINDLY:
+   B0 B1 B2 B3 B4 B5 B6 B7 = {
+     CASE(
+       ENAB & TRN_LH, DELAY(3NS,4.5NS,7NS),
+       ENAB & TRN_HL, DELAY(3.5NS,5.5NS,9NS),
+       LATCH & (TRN_LH | TRN_HL), DELAY(3.5NS,5NS,8NS),
+       ADATA & TRN_LH, DELAY(3NS,5NS,7NS),
+       ADATA & TRN_HL, DELAY(3NS,4.5NS,7.5NS),
+       DELAY(4.5NS,6.5NS,10NS))}

U4 PINDLY(8,1,0) DPWR DGND
+ B0 B1 B2 B3 B4 B5 B6 B7
+ OEA
+ A0 A1 A2 A3 A4 A5 A6 A7
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+ ENABLE HI = OEA
+   A0 A1 A2 A3 A4 A5 A6 A7 = {
+     CASE(
+       TRN_ZH, DELAY(8NS,10.5NS,13.5NS),
+       TRN_ZL, DELAY(8.5NS,11NS,13.5NS),
+       TRN_HZ, DELAY(2NS,3.5NS,6NS),
+       TRN_LZ, DELAY(2NS,4.5NS,7NS),
+       TRN_LH, DELAY(5.5NS,8NS,12NS),
+       TRN_HL, DELAY(4.5NS,6NS,9NS),
+       DELAY(9.5NS,12NS,14.5NS))}

U5 CONSTRAINT(9) DPWR DGND
+ A0 A1 A2 A3 A4 A5 A6 A7 LEBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ SETUP_HOLD:
+    CLOCK LH = LEBAR
+    DATA(8) = A0 A1 A2 A3 A4 A5 A6 A7
+    SETUPTIME_HI = 3.5NS
+    SETUPTIME_LO = 4NS
+ WIDTH:
+    NODE = LEBAR
+    MIN_LO = 4NS

.ENDS 74F776

* -----------------------------------------------------------74F777-----

* THIS PART IS NOT YET OPERATIONAL, UNTIL A BTL(FUTUREBUS) IO MODEL IS CREATED
* Triple bidirectional latched bus transceiver(Tri-state and open collector)
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 753 to 758
* jat 7/24/96

.SUBCKT 74F777 OEBBAR LEBAR A OEA B
+ OPTIONAL: DPWR=$D_DPWR DGND=$D_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(3,2) DPWR DGND
+ LEBAR OEBBAR Q
+ LE BO
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   LE = {~LEBAR}
+   BO = {OEBBAR | Q}

U2 DLTCH(1) DPWR DGND
+ $D_HI $D_HI LE
+ A Q $D_NC
+ D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(1,0,3) DPWR DGND
+ BO
+ A LEBAR OEBBAR
+ B
+ IO_F_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   DATA = {CHANGED(A,0)}
+   LATCH = {CHANGED(LEBAR,0)}
+   ENAB = {CHANGED(OEBBAR,0)}
+ PINDLY:
+   B = {
+     CASE(
+       ENAB & TRN_LH, DELAY(3NS,5NS,7.5NS),
+       ENAB & TRN_HL, DELAY(6NS,8NS,10.5NS),
+       LATCH & TRN_LH, DELAY(3.5NS,5.5NS,8NS),
+       LATCH & TRN_HL, DELAY(5.5NS,7.5NS,10.5NS),
+       DATA & TRN_LH, DELAY(3NS,4.5NS,7NS),
+       DATA & TRN_HL, DELAY(5NS,6.5NS,9NS),
+       DELAY(7NS,9NS,11.5NS))}

U4 PINDLY(1,1,0) DPWR DGND
+ B
+ OEA
+ A
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+ ENABLE HI = OEA
+   A = {
+     CASE(
+       TRN_ZH, DELAY(8NS,10NS,13NS),
+       TRN_ZL, DELAY(9NS,11NS,14NS),
+       TRN_$Z, DELAY(1.5NS,3NS,6NS),
+       TRN_LH, DELAY(8.5NS,10.5NS,13NS),
+       TRN_HL, DELAY(7.5NS,9.5NS,12NS),
+       DELAY(10NS,12NS,15NS))}

U5 CONSTRAINT(2) DPWR DGND
+ A LEBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ SETUP_HOLD:
+   CLOCK LH = LEBAR
+   DATA(1) = A
+   SETUPTIME_HI = 4NS
+   SETUPTIME_LO = 4.5NS
+ WIDTH:
+   NODE = LEBAR
+   MIN_LO = 5.5NS

.ENDS 74F777

*---------------------------------------------------------74F779------

* 8 Bit Bidirectional Binary Counter with Tri-State Outputs
* National Advanced Bipolar TTL Logic Databook, 1995, pages 7-485 to 7-489
* jat 7/24/96

.SUBCKT 74F779 I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 CP CETBAR OEBAR S0 S1
+ TCBAR
+ OPTIONAL: DPWR=$D_DPWR DGND=$D_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(27,9) DPWR DGND
+ S0 S1 I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 CETBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ D0 D1 D2 D3 D4 D5 D6 D7 TCBARO
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   LOAD = {~S0 & ~S1}
+   UP = {~S0 & S1}
+   DOWN = {S0 & ~S1}
+   TOG0 = {CETBAR}
+   ANDUP1 = {~CETBAR & UP & Q0}
+   ANDDOWN1 = {~CETBAR & DOWN & Q0BAR}
+   TOG1 = {~(ANDUP1 | ANDDOWN1)}
+   ANDUP2 = {ANDUP1 & Q1}
+   ANDDOWN2 = {ANDDOWN1 & Q1BAR}
+   TOG2 = {~(ANDUP2 | ANDDOWN2)}
+   ANDUP3 = {ANDUP2 & Q2}
+   ANDDOWN3 = {ANDDOWN2 & Q2BAR}
+   TOG3 = {~(ANDUP3 | ANDDOWN3)}
+   ANDUP4 = {ANDUP3 & Q3}
+   ANDDOWN4 = {ANDDOWN3 & Q3BAR}
+   TOG4 = {~(ANDUP4 | ANDDOWN4)}
+   ANDUP5 = {ANDUP4 & Q4}
+   ANDDOWN5 = {ANDDOWN4 & Q4BAR}
+   TOG5 = {~(ANDUP5 | ANDDOWN5)}
+   ANDUP6 = {ANDUP5 & Q5}
+   ANDDOWN6 = {ANDDOWN5 & Q5BAR}
+   TOG6 = {~(ANDUP6 | ANDDOWN6)}
+   ANDUP7 = {ANDUP6 & Q6}
+   ANDDOWN7 = {ANDDOWN6 & Q6BAR}
+   TOG7 = {~(ANDUP7 | ANDDOWN7)}
+   TCBARO = {~((~CETBAR & DOWN & Q0BAR & Q1BAR & Q2BAR & Q3BAR & Q4BAR & Q5BAR & Q6BAR & Q7BAR) | 
+               (~CETBAR &  UP & Q0 & Q1 & Q2 & Q3 & Q4 & Q5 & Q6 & Q7))}
+   D0 = {(S0 & S1 & Q0) | ((~(S0 & S1)) & ((I/O0 & LOAD) | (TOG0 & ~LOAD & Q0) | (~LOAD & ~TOG0 & Q0BAR)))}
+   D1 = {(I/O1 & LOAD) | (TOG1 & ~LOAD & Q1) | (~LOAD & ~TOG1 & Q1BAR)}
+   D2 = {(I/O2 & LOAD) | (TOG2 & ~LOAD & Q2) | (~LOAD & ~TOG2 & Q2BAR)}
+   D3 = {(I/O3 & LOAD) | (TOG3 & ~LOAD & Q3) | (~LOAD & ~TOG3 & Q3BAR)}
+   D4 = {(I/O4 & LOAD) | (TOG4 & ~LOAD & Q4) | (~LOAD & ~TOG4 & Q4BAR)}
+   D5 = {(I/O5 & LOAD) | (TOG5 & ~LOAD & Q5) | (~LOAD & ~TOG5 & Q5BAR)}
+   D6 = {(I/O6 & LOAD) | (TOG6 & ~LOAD & Q6) | (~LOAD & ~TOG6 & Q6BAR)}
+   D7 = {(I/O7 & LOAD) | (TOG7 & ~LOAD & Q7) | (~LOAD & ~TOG7 & Q7BAR)}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ D0_EFF IO_F MNTYMXDLY={MNYTMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(9,1,12) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 TCBARO
+ OEBAR
+ CP I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 S0 S1 CETBAR
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 TCBAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CET = {CHANGED(CETBAR,0)}
+   UPDOWN = {CHANGED(S0,0)| CHANGED(S1,0)}
+   EDGE = {CHANGED_LH(CP,0)}
+ TRISTATE:
+   ENABLE LO = OEBAR
+   I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 = {
+     CASE(
+       TRN_ZH, DELAY(3NS,5NS,7NS),
+       TRN_ZL, DELAY(5NS,8NS,10NS),
+       TRN_HZ, DELAY(1NS,4NS,6.5NS),
+       TRN_LZ, DELAY(1NS,3.7NS,6.5NS),
+       EDGE & TRN_LH, DELAY(3NS,5NS,8NS),
+       EDGE & TRN_HL, DELAY(5NS,7.5NS,11NS),
+       DELAY(6NS,9NS,12NS))}
+ PINDLY:
+  TCBAR = {
+     CASE(
+       CET & TRN_LH, DELAY(2.5NS,3.8NS,5.5NS),
+       CET & TRN_HL, DELAY(4.5NS,6.1NS,8NS),
+       UPDOWN & TRN_LH, DELAY(3.5NS,6.5NS,12NS),
+       UPDOWN & TRN_HL, DELAY(3.5NS,7.5NS,12NS),
+       EDGE & TRN_LH, DELAY(5NS,7.5NS,9NS),
+       EDGE & TRN_HL, DELAY(5NS,9.3NS,10.5NS),
+       DELAY(6NS,10.3NS,13NS))}

U4 CONSTRAINT(12) DPWR DGND
+ I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7 CP S0 S1 CETBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CP
+   MAXFREQ = 105MEG
+ WIDTH:
+   NODE = CP
+   MIN_HI = 4NS
+   MIN_LO = 4NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(8) = I/O0 I/O1 I/O2 I/O3 I/O4 I/O5 I/O6 I/O7
+   SETUPTIME_HI = 5NS
+   SETUPTIME_HI = 5NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(1) = CETBAR
+   SETUPTIME_HI = 7NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(2) = S0 S1
+   SETUPTIME = 9.5NS

.ENDS 74F779

*------------------------------------------------------------74F786----

* 4 Bit Asynchronous Bus Arbiter
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 765 to 769
* jat 7/24/96

.SUBCKT 74F786 A B C D BR0BAR BR1BAR BR2BAR BR3BAR ENBAR YOUT BG0BAR 
+ BG1BAR BG2BAR BG3BAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(21,5) DPWR DGND
+ A B C D BR0BAR BR1BAR BR2BAR BR3BAR ENBAR Q0 Q1 Q2 Q3 Q4 Q5 Q0BAR Q1BAR Q2BAR
+ Q3BAR Q4BAR Q5BAR
+ YOUTO BG0BARO BG1BARO BG2BARO BG3BARO
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   YOUTO = {A & B & C & D}
+   Q0O = {Q0 & ~(BR0BAR & BR1BAR)}
+   Q0BARO = {Q0BAR & ~(BR0BAR & BR1BAR)}
+   Q1O = {Q1 & ~(BR0BAR & BR2BAR)}
+   Q1BARO = {Q1BAR & ~(BR0BAR & BR2BAR)}
+   Q2O = {Q2 & ~(BR0BAR & BR3BAR)}
+   Q2BARO = {Q2BAR & ~(BR0BAR & BR3BAR)}
+   Q3O = {Q3 & ~(BR1BAR & BR2BAR)}
+   Q3BARO = {Q3BAR & ~(BR1BAR & BR2BAR)}
+   Q4O = {Q4 & ~(BR1BAR & BR3BAR)}
+   Q4BARO = {Q4BAR & ~(BR1BAR & BR3BAR)}
+   Q5O = {Q5 & ~(BR2BAR & BR3BAR)}
+   Q5BARO = {Q5BAR & ~(BR2BAR & BR3BAR)}
+   AND0 = {Q0BARO & (Q0O ^ Q0BARO)}
+   AND1 = {Q0O & (Q0O ^ Q0BARO)}
+   AND2 = {Q1BARO & (Q1O ^ Q1BARO)}
+   AND3 = {Q1O & (Q1O ^ Q1BARO)}
+   AND4 = {Q2BARO & (Q2O ^ Q2BARO)}
+   AND5 = {Q2O & (Q2O ^ Q2BARO)}
+   AND6 = {Q3BARO & (Q3O ^ Q3BARO)}
+   AND7 = {Q3O & (Q3O ^ Q3BARO)}
+   AND8 = {Q4BARO & (Q4O ^ Q4BARO)}
+   AND9 = {Q4O & (Q4O ^ Q4BARO)}
+   AND10 = {Q5BARO & (Q5O ^ Q5BARO)}
+   AND11 = {Q5O & (Q5O ^ Q5BARO)}
+   OR0 = {(AND0 & AND2 & AND4) | (AND0 & AND2 & AND10) | (AND0 & AND4 & AND11)}
+   OR1 = {(AND0 & AND1 & AND6) | (AND1 & AND6 & AND8) | (AND1 & AND8 & AND11)}
+   OR2 = {(AND0 & AND3 & AND10) | (AND3 & AND7 & AND10) | (AND1 & AND7 & AND10)}
+   OR3 = {(AND0 & AND5 & AND11) | (AND5 & AND9 & AND11) | (AND1 & AND9 & AND11)}
+   BG0BARO = {~(OR0 & ~ENBAR)}
+   BG1BARO = {~(OR1 & ~ENBAR)}
+   BG2BARO = {~(OR2 & ~ENBAR)}
+   BG3BARO = {~(OR3 & ~ENBAR)}

U2 SRFF(6) DPWR DGND
+ $D_HI $D_HI $D_HI
+ BR0BAR BR0BAR BR0BAR BR1BAR BR1BAR BR2BAR
+ BR1BAR BR2BAR BR3BAR BR2BAR BR3BAR BR3BAR
+ Q0 Q1 Q2 Q3 Q4 Q5
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR
+ D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(5,0,5) DPWR DGND
+ YOUTO BG0BARO BG1BARO BG2BARO BG3BARO
+ BR0BAR BR1BAR BR2BAR BR3BAR ENBAR
+ YOUT BG0BAR BG1BAR BG2BAR BG3BAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   REQ = {CHANGED(BR0BAR,0) | CHANGED(BR1BAR,0) | CHANGED(BR2BAR,0) |
+          CHANGED(BR3BAR,0)}
+   ENAB = {CHANGED(ENBAR,0)}
+ PINDLY:
+   YOUT = {
+     CASE(
+       (TRN_LH | TRN_HL), DELAY(2.5NS,4.5NS,7.5NS),
+       DELAY(3.5NS,5.5NS,8.5NS))}
+   BG0BAR BG1BAR BG2BAR BG3BAR = {
+     CASE(
+       ENAB & TRN_LH, DELAY(3NS,5NS,8NS),
+       ENAB & TRN_HL, DELAY(2.5NS,4.5NS,7.5NS),
+       REQ & TRN_LH, DELAY(5NS,7NS,10NS),
+       REQ & TRN_HL, DELAY(4.5NS,6.5NS,9.5NS),
+       DELAY(6NS,8NS,11NS))}

.ENDS 74F786

*------------------------------------------------------------74F794-----

* 8 Bit Register with Readback
* National Advanced Bipolar Logic Databook, 1995, pages 7-490 to 7-493
* jat 7/25/96

.SUBCKT 74F794 OEBAR D0 D1 D2 D3 D4 D5 D6 D7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 CP
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI $D_HI CP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(16,1,0) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ OEBAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 D0 D1 D2 D3 D4 D5 D6 D7
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE LO = OEBAR
+   D0 D1 D2 D3 D4 D5 D6 D7 = {
+      CASE(
+        TRN_ZH, DELAY(2.3NS,-1,8.5NS),
+        TRN_ZL, DELAY(2NS,-1,10NS),
+        TRN_$Z, DELAY(1NS,-1,7NS),
+        TRN_LH, DELAY(2.5NS,-1,7NS),
+        TRN_HL, DELAY(2.5NS,-1,8NS),
+        DELAY(3.5NS,-1,11NS))}
+ PINDLY:
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+     CASE(
+        TRN_LH, DELAY(2.5NS,-1,7NS),
+        TRN_HL, DELAY(2.5NS,-1,8NS),
+        DELAY(3.5NS,-1,9NS))}

U3 CONSTRAINT(9) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 CP
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+    NODE = CP
+    MAXFREQ = 90MEG
+ WIDTH:
+    NODE = CP
+    MIN_LO = 5.8NS
+    MIN_HI = 5.8NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+   SETUPTIME = 4NS
+   HOLDTIME = 1.5NS

.ENDS 74F794

*------------------------------------------------------------74LS795-----

* Tri-State Octal Buffers
* Motorola FAST and LS TTL Logic Databook, 1992, pages 5-382 to 5--384
* jat 8/15/96

.SUBCKT 74LS795 G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(10,9) DPWR DGND
+ G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8
+ Y1O Y2O Y3O Y4O Y5O Y6O Y7O Y8O OUTPUT
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   Y1O = {A1 & (~(G1BAR | G2BAR))}
+   Y2O = {A2 & (~(G1BAR | G2BAR))}
+   Y3O = {A3 & (~(G1BAR | G2BAR))}
+   Y4O = {A4 & (~(G1BAR | G2BAR))}
+   Y5O = {A5 & (~(G1BAR | G2BAR))}
+   Y6O = {A6 & (~(G1BAR | G2BAR))}
+   Y7O = {A7 & (~(G1BAR | G2BAR))}
+   Y8O = {A8 & (~(G1BAR | G2BAR))}
+   OUTPUT = {~(G1BAR | G2BAR)}

U2 PINDLY(8,1,0) DPWR DGND
+ Y1O Y2O Y3O Y4O Y5O Y6O Y7O Y8O
+ OUTPUT
+ Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = OUTPUT
+   Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 = {
+      CASE(
+        TRN_ZH, DELAY(-1,16NS,25NS),
+        TRN_ZL, DELAY(-1,13NS,20NS),
+        TRN_HZ, DELAY(-1,13NS,20NS),
+        TRN_LZ, DELAY(-1,19NS,27NS),
+        TRN_LH, DELAY(-1,11NS,16NS),
+        TRN_HL, DELAY(-1,15NS,22NS),
+        DELAY(-1,20NS,28NS))}

.ENDS 74LS795

*------------------------------------------------------------74LS796-----

* Tri-State Octal Buffers
* Motorola FAST and LS TTL Logic Databook, 1992, pages 5-382 to 5--384
* jat 8/15/96

.SUBCKT 74LS796 G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(10,9) DPWR DGND
+ G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8
+ Y1O Y2O Y3O Y4O Y5O Y6O Y7O Y8O OUTPUT
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   Y1O = {~A1 & (~(G1BAR | G2BAR))}
+   Y2O = {~A2 & (~(G1BAR | G2BAR))}
+   Y3O = {~A3 & (~(G1BAR | G2BAR))}
+   Y4O = {~A4 & (~(G1BAR | G2BAR))}
+   Y5O = {~A5 & (~(G1BAR | G2BAR))}
+   Y6O = {~A6 & (~(G1BAR | G2BAR))}
+   Y7O = {~A7 & (~(G1BAR | G2BAR))}
+   Y8O = {~A8 & (~(G1BAR | G2BAR))}
+   OUTPUT = {~(G1BAR | G2BAR)}

U2 PINDLY(8,1,0) DPWR DGND
+ Y1O Y2O Y3O Y4O Y5O Y6O Y7O Y8O
+ OUTPUT
+ Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = OUTPUT
+   Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 = {
+      CASE(
+        TRN_ZH, DELAY(-1,17NS,27NS),
+        TRN_ZL, DELAY(-1,16NS,25NS),
+        TRN_HZ, DELAY(-1,13NS,20NS),
+        TRN_LZ, DELAY(-1,18NS,27NS),
+        TRN_LH, DELAY(-1,6NS,10NS),
+        TRN_HL, DELAY(-1,13NS,17NS),
+        DELAY(-1,19NS,28NS))}

.ENDS 74LS796

*------------------------------------------------------------74LS797-----

* Tri-State Octal Buffers
* Motorola FAST and LS TTL Logic Databook, 1992, pages 5-382 to 5--384
* jat 8/15/96

.SUBCKT 74LS797 G1BAR A1 A2 A3 A4 Y1 Y2 Y3 Y4
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(5,4) DPWR DGND
+ G1BAR A1 A2 A3 A4
+ Y1O Y2O Y3O Y4O
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   Y1O = {A1 & ~G1BAR}
+   Y2O = {A2 & ~G1BAR}
+   Y3O = {A3 & ~G1BAR}
+   Y4O = {A4 & ~G1BAR}

U2 PINDLY(4,1,0) DPWR DGND
+ Y1O Y2O Y3O Y4O
+ G1BAR
+ Y1 Y2 Y3 Y4
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE LO = G1BAR
+   Y1 Y2 Y3 Y4 = {
+      CASE(
+        TRN_ZH, DELAY(-1,16NS,25NS),
+        TRN_ZL, DELAY(-1,13NS,20NS),
+        TRN_HZ, DELAY(-1,13NS,20NS),
+        TRN_LZ, DELAY(-1,19NS,27NS),
+        TRN_LH, DELAY(-1,11NS,16NS),
+        TRN_HL, DELAY(-1,15NS,22NS),
+        DELAY(-1,20NS,28NS))}

.ENDS 74LS797

*------------------------------------------------------------74LS798-----

* Tri-State Octal Buffers
* Motorola FAST and LS TTL Logic Databook, 1992, pages 5-382 to 5--384
* jat 8/15/96

.SUBCKT 74LS798 G1BAR A1 A2 A3 A4 Y1 Y2 Y3 Y4
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(5,4) DPWR DGND
+ G1BAR A1 A2 A3 A4
+ Y1O Y2O Y3O Y4O
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   Y1O = {~A1 & ~G1BAR}
+   Y2O = {~A2 & ~G1BAR}
+   Y3O = {~A3 & ~G1BAR}
+   Y4O = {~A4 & ~G1BAR}

U2 PINDLY(4,1,0) DPWR DGND
+ Y1O Y2O Y3O Y4O
+ G1BAR
+ Y1 Y2 Y3 Y4
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE LO = G1BAR
+   Y1 Y2 Y3 Y4 = {
+      CASE(
+        TRN_ZH, DELAY(-1,17NS,27NS),
+        TRN_ZL, DELAY(-1,16NS,25NS),
+        TRN_HZ, DELAY(-1,13NS,20NS),
+        TRN_LZ, DELAY(-1,18NS,27NS),
+        TRN_LH, DELAY(-1,6NS,10NS),
+        TRN_HL, DELAY(-1,13NS,17NS),
+        DELAY(-1,19NS,28NS))}

.ENDS 74LS798

*-------------------------------------------------------------74AC800------

* Triple 4 Input AND/NAND Gates
* TI Advanced CMOS Logic Databook, 1993, pages 2-563 to 2-566
* jat 12/20/95

.SUBCKT 74AC800
+ A B C D Y Z
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(4,2) DPWR DGND
+ A B C D Y Z
+ DLY IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  Y = {A & B & C & D}
+  Z = {~Y}

.MODEL DLY UGATE(TPLHMN=2.2NS TPLHTY=4.6NS TPLHMX=7.2NS
+                TPHLMN=2.3NS TPHLTY=4.8NS TPHLMX=7.7NS)

.ENDS 74AC800

*-------------------------------------------------------------74ACT802-----

* Triple 4 Input OR/NOR Gate
* TI Advanced CMOS Logic Databook, 1993, pages 2-563 to 2-566
* jat 12/20/95

.SUBCKT 74ACt802
+ A B C D Y Z
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(4,2) DPWR DGND
+ A B C D
+ YO ZO
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  YO = {A | B | C | D}
+  ZO = {~YO}

U2 PINDLY(2,0,4) DPWR DGND
+ YO ZO
+ A B C D
+ Y Z
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ PINDLY:
+   Y = {
+     CASE(
+       TRN_LH, DELAY(1.3NS,6.1NS,8.4NS),
+       TRN_HL, DELAY(1.3NS,4.8NS,7.4NS),
+       DELAY(2.3NS,7.1NS,9.4NS))}
+   Z = {
+     CASE(
+       TRN_LH, DELAY(1.3NS,4.6NS,7.5NS),
+       TRN_HL, DELAY(1NS,4.6NS,7.3NS),
+       DELAY(2.3NS,5.6NS,8.5NS))}

.ENDS 74ACT802

*------------------------------------------------------------74F803-----

* Clock Driver Quad D-Type Flip-Flop with Matched Propagation Delays
* Motorola FAST and LS TTL Data, 1992, pages 4-263 to 4-265
* jat 7/25/96

.SUBCKT 74F803 CP D0 D1 D2 D3 O0BAR O1BAR O2BAR O3BAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(4) DPWR DGND
+ $D_HI $D_HI CP
+ D0 D1 D2 D3 
+ $D_NC $D_NC $D_NC $D_NC
+ Q0BAR Q1BAR Q2BAR Q3BAR
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(4,0,0) DPWR DGND
+ Q0BAR Q1BAR Q2BAR Q3BAR
+ O0BAR O1BAR O2BAR O3BAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ PINDLY:
+   O0BAR O1BAR O2BAR O3BAR = {
+    CASE(
+      (TRN_LH | TRN_HL), DELAY(3NS,-1,7.5NS),
+      DELAY(4NS,-1,8.5NS))}

U3 CONSTRAINT(5) DPWR DGND
+ D0 D1 D2 D3 CP
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CP
+  MAXFREQ = 70MEG
+ WIDTH:
+  NODE = CP
+  MIN_LO = 6NS
+  MIN_HI = 7NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(4) = D0 D1 D2 D3
+  SETUPTIME = 3NS
+  HOLDTIME = 2NS

.ENDS 74F803

* ----------------------------------------------------------- 74ALS804A ------
*  Hex 2-Input Nand Drivers
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-611 to 2-613
*  bss    6/8/94
*
.SUBCKT 74ALS804A 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     1A 1B 1Y
+     DLY_ALS804 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS804 ugate (tplhMN=2ns tplhTY=4ns tplhMX=7ns
+                             tphlMN=2ns tphlTY=4ns tphlMX=8ns)

.ENDS 74ALS804A
*
*
* ----------------------------------------------------------- 74AS804B ------
*  Hex 2-Input Nand Drivers
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-611 to 2-613
*  bss    6/8/94
*
.SUBCKT 74AS804B 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     1A 1B 1Y
+     DLY_AS804 IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AS804 ugate (tplhMN=1ns tplhMX=4ns tphlMN=1ns tphlMX=4ns)

.ENDS 74AS804B

*------------------------------------------------------------74F804----

* Hex 2-Input NAND Drivers
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 770 to 773
* jat 7/25/96

.SUBCKT 74F804 D0A D0B Q0BAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$D_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 NAND(2) DPWR DGND
+ D0A D0B Q0BAR
+ DLY_F804 IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.MODEL DLY_F804 UGATE (TPLHMN=1NS TPLHTY=2NS TPLHMX=4NS
+                      TPHLMN=1NS TPHLTY=3NS TPHLMX=4.5NS)

.ENDS 74F804

* ----------------------------------------------------------- 74ALS805A ------
*  Hex 2-Input Nor Drivers
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-615 to 2-617
*  bss    6/8/94
*
.SUBCKT 74ALS805A 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     1A 1B 1Y
+     DLY_ALS805 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS805 ugate (tplhMN=2ns tplhTY=4ns tplhMX=7ns
+                             tphlMN=2ns tphlTY=4ns tphlMX=8ns)

.ENDS 74ALS805A
*
*
* ----------------------------------------------------------- 74AS805B ------
*  Hex 2-Input Nor Drivers
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-615 to 2-617
*  bss    6/8/94
*
.SUBCKT 74AS805B 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     1A 1B 1Y
+     DLY_AS805 IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AS805 ugate (tplhMN=1ns tplhMX=4.3ns tphlMN=1ns tphlMX=4.3ns)

.ENDS 74AS805B

*------------------------------------------------------------74F805----

* Hex 2-Input NOR Drivers
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 774 to 777
* jat 7/25/96

.SUBCKT 74F805 D0A D0B Q0BAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$D_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 NOR(2) DPWR DGND
+ D0A D0B Q0BAR
+ DLY_F805 IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.MODEL DLY_F805 UGATE (TPLHMN=1NS TPLHTY=2NS TPLHMX=4NS
+                      TPHLMN=1NS TPHLTY=2.5NS TPHLMX=4.5NS)

.ENDS 74F805

* ----------------------------------------------------------- 74HC805 ------
*  Hex 2-Input Nor Drivers
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-601 to 2-603
*  bss    6/8/94
*
.SUBCKT 74HC805 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     1A 1B 1Y
+     DLY_HC805 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC805 ugate (tplhTY=10ns tplhMX=19ns tphlTY=10ns tphlMX=19ns)

.ENDS 74HC805
*
*
* ----------------------------------------------------------- 74ALS808A ------
*  Hex 2-Input And Drivers
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-619 to 2-621
*  bss    6/13/94
*
.SUBCKT 74ALS808A 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 and(2) DPWR DGND
+     1A 1B 1Y
+     DLY_ALS808 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS808 ugate (tplhMN=2ns tplhTY=6ns tplhMX=9ns
+                             tphlMN=1ns tphlTY=4ns tphlMX=8ns)

.ENDS 74ALS808A
*
*
* ----------------------------------------------------------- 74AS808B ------
*  Hex 2-Input And Drivers
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-619 to 2-621
*  bss    6/13/94
*
.SUBCKT 74AS808B 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 and(2) DPWR DGND
+     1A 1B 1Y
+     DLY_AS808 IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AS808 ugate (tplhMN=1ns tplhMX=6ns tphlMN=1ns tphlMX=6ns)

.ENDS 74AS808B

*-------------------------------------------------------------74F808----

* Hex 2-Input AND Drivers
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 786 to 789
* jat 7/25/96

.SUBCKT 74F808
+ D0A D0B Q0
+ OPTIONAL: DPWR = $G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(2,1) DPWR DGND
+ D0A D0B Q0O
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   Q0O = {D0A & D0B}

U2 PINDLY(1,0,0) DPWR DGND
+ Q0O
+ Q0
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ PINDLY:
+    Q0 = {
+      CASE(
+       TRN_LH, DELAY(2NS,4.5NS,6.3NS),
+       TRN_HL, DELAY(2NS,3.5NS,6NS),
+       DELAY(3NS,5.5NS,7.3NS))}

.ENDS 74F808

* ----------------------------------------------------------- 74HC808 ------
*  Hex 2-Input And Drivers
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-605 to 2-607
*  bss    6/13/94
*
.SUBCKT 74HC808 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 and(2) DPWR DGND
+     1A 1B 1Y
+     DLY_HC808 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC808 ugate (tplhTY=10ns tplhMX=20ns tphlTY=10ns tphlMX=20ns)

.ENDS 74HC808

*------------------------------------------------------------74AC810----

* Quad 2 Input XNOR Gate
* Motorola FACT Data, 1993, pages 5-380 to 5-383
* jat 8/29/96

.SUBCKT 74AC810 A B Y
+ OPTIONAL: DPWR=$G_DPWR DGND=$D_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 NXOR DPWR DGND
+ A B Y
+ DLY_AC810 IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.MODEL DLY_AC810 UGATE (TPLHMN=1NS TPLHTY=7.5NS TPLHMX=9NS
+                      TPHLMN=1NS TPHLTY=6.5NS TPHLMX=9NS)

.ENDS 74AC810

*------------------------------------------------------------74ACT810----

* Quad 2 Input XNOR Gate
* Motorola FACT Data, 1993, pages 5-380 to 5-383
* jat 8/29/96

.SUBCKT 74ACT810 A B Y
+ OPTIONAL: DPWR=$G_DPWR DGND=$D_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 NXOR DPWR DGND
+ A B Y
+ DLY_ACT810 IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.MODEL DLY_ACT810 UGATE (TPLHMN=1NS TPLHTY=8.5NS TPLHMX=10NS
+                      TPHLMN=1NS TPHLTY=7NS TPHLMX=10NS)

.ENDS 74ACT810

* ----------------------------------------------------------- 74ALS810 ------
*  Quad 2-Input Exclusive-Nor Gates
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-623 to 2-625
*  bss    6/13/94
*
.SUBCKT 74ALS810 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nxor DPWR DGND
+     1A 1B 1Y_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(1,0,2) DPWR DGND
+     1Y_O
+     1A 1B
+     1Y
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CHA = {CHANGED(1A,0)}
+     CHB = {CHANGED(1B,0)}
+
+  PINDLY:
+     1Y = {
+       CASE(
+         CHA & 1B=='0 & TRN_LH, DELAY(5ns,-1,20ns),
+         CHB & 1A=='0 & TRN_LH, DELAY(5ns,-1,20ns),
+         CHA & 1B=='0 & TRN_HL, DELAY(3ns,-1,14ns),
+         CHB & 1A=='0 & TRN_HL, DELAY(3ns,-1,14ns),
+         CHA & 1B!='0 & TRN_LH, DELAY(5ns,-1,18ns),
+         CHB & 1A!='0 & TRN_LH, DELAY(5ns,-1,18ns),
+         CHA & 1B!='0 & TRN_HL, DELAY(3ns,-1,14ns),
+         CHB & 1A!='0 & TRN_HL, DELAY(3ns,-1,14ns),
+         DELAY(6ns,-1,21ns))}

.ENDS 74ALS810
*
*
* ----------------------------------------------------------- 74AS810 ------
*  Quad 2-Input Exclusive-Nor Gates
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-623 to 2-625
*  bss    6/13/94
*
.SUBCKT 74AS810 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nxor DPWR DGND
+     1A 1B 1Y
+     DLY_AS810 IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AS810 ugate(tplhTY=3.4ns tphlTY=5.3ns)

.ENDS 74AS810
*
*
* ----------------------------------------------------------- 74ALS811 ------
*  Quad 2-Input Exclusive-Nor Gates With Open-Collector Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-627 to 2-629
*  bss    6/13/94
*
.SUBCKT 74ALS811 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nxor DPWR DGND
+     1A 1B 1Y_O
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(1,0,2) DPWR DGND
+     1Y_O
+     1A 1B
+     1Y
+     IO_ALS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CHA = {CHANGED(1A,0)}
+     CHB = {CHANGED(1B,0)}
+
+  PINDLY:
+     1Y = {
+       CASE(
+         CHA & 1B=='0 & TRN_LH, DELAY(25ns,-1,55ns),
+         CHB & 1A=='0 & TRN_LH, DELAY(25ns,-1,55ns),
+         CHA & 1B=='0 & TRN_HL, DELAY(5ns,-1,28ns),
+         CHB & 1A=='0 & TRN_HL, DELAY(5ns,-1,28ns),
+         CHA & 1B!='0 & TRN_LH, DELAY(20ns,-1,50ns),
+         CHB & 1A!='0 & TRN_LH, DELAY(20ns,-1,50ns),
+         CHA & 1B!='0 & TRN_HL, DELAY(5ns,-1,23ns),
+         CHB & 1A!='0 & TRN_HL, DELAY(5ns,-1,23ns),
+         DELAY(26ns,-1,56ns))}

.ENDS 74ALS811
*
*
* ----------------------------------------------------------- 74AS811 ------
*  Quad 2-Input Exclusive-Nor Gates With Open-Collector Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-627 to 2-629
*  bss    6/13/94
*
.SUBCKT 74AS811 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nxor DPWR DGND
+     1A 1B 1Y
+     DLY_AS811 IO_AS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AS811 ugate(tplhTY=10ns tphlTY=5.7ns)

.ENDS 74AS811

*-----------------------------------------------------------74AC821-----

* 10 Bit D-Type Flip-Flop with Tri-State Ouputs
* National FACT Advanced CMOS Logic Databook, 1993, pages 4-279 to 4-284
* jat 8/29/96

.SUBCKT 74AC821 OEBAR CP D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(10) DPWR DGND
+ $D_HI $D_HI CP
+ D0 D1 D2 D3 D4 D5 D6 D7 D8 D9
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(10,1,0) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9
+ OEBAR
+ O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+ IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+ ENABLE LO = OEBAR
+   O0 O1 O2 O3 O4 O5 O6 O7 O8 O9 = {
+    CASE(
+       TRN_ZH, DELAY(1.5NS,4.5NS,8NS),
+       TRN_ZL, DELAY(1.5NS,5NS,8NS),
+       TRN_HZ, DELAY(1.5NS,5NS,8NS),
+       TRN_LZ, DELAY(1.5NS,4.5NS,8NS),
+       TRN_LH, DELAY(2NS,6NS,9.5NS),
+       TRN_HL, DELAY(2NS,5.5NS,9.5NS),
+       DELAY(3NS,7NS,10.5NS))}

U3 CONSTRAINT(11) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 CP
+ IO_AC IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CP
+   MAXFREQ = 160MEG
+ WIDTH:
+   NODE = CP
+   MIN_HI = 2.5NS
+   MIN_LO = 2.5NS

.ENDS 74AC821

* ----------------------------------------------------------- 74ACT821 ------
*  10-Bit Bus-Interface Flip-Flops With 3-State Outputs
*
*  The Advanced CMOS Logic Data Book, 1993, TI Pages 2-571 to 2-575
*  bss    6/13/94
*  This part is shown in the data book as a 74ACT11821
*
.SUBCKT 74ACT821 OEBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 9D 10D 
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(10) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 10Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(10,1,1) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 10Q_O
+     OEBAR
+     CLK
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CLK,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(4.7ns,7.6ns,10.4ns),
+         CLOCK & TRN_HL, DELAY(5ns,8.1ns,11ns),
+         TRN_ZH, DELAY(3.1ns,6.1ns,9.1ns),
+         TRN_ZL, DELAY(4.1ns,7.6ns,11ns),
+         TRN_HZ, DELAY(4.8ns,7.2ns,9.2ns),
+         TRN_LZ, DELAY(4.8ns,6.8ns,8.6ns),
+         DELAY(6ns,9.1ns,12ns))}

U3CON CONSTRAINT(11) DPWR DGND
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     IO_ACT IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=125MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=4ns
+     MIN_LO=4ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(10)=1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     SETUPTIME=2.5ns
+     HOLDTIME=1.5ns

.ENDS 74ACT821
*
*
* ----------------------------------------------------------- 74AS821 ------
*  10-Bit Bus-Interface Flip-Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-631 to 2-635
*  bss    6/13/94
*
.SUBCKT 74AS821 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 9D 10D 
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(10) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 10Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(10,1,1) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 10Q_O
+     OCBAR
+     CLK
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CLK,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(3.5ns,-1,7.5ns),
+         CLOCK & TRN_HL, DELAY(3.5ns,-1,10.5ns),
+         TRN_ZH, DELAY(4ns,-1,11ns),
+         TRN_ZL, DELAY(4ns,-1,12ns),
+         TRN_$Z, DELAY(2ns,-1,8ns),
+         DELAY(5ns,-1,13ns))}

U3CON CONSTRAINT(11) DPWR DGND
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=8ns
+     MIN_LO=8ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(10)=1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     SETUPTIME=6ns

.ENDS 74AS821

*-----------------------------------------------------------74F821-----

* 10 Bit D-Type Flip-Flop
* National Advanced Bipolar Logic Databook, 1995, pages 7-494 to 7-497
* jat 7/25/96

.SUBCKT 74F821 OEBAR CP D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(10) DPWR DGND
+ $D_HI $D_HI CP
+ D0 D1 D2 D3 D4 D5 D6 D7 D8 D9
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(10,1,0) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9
+ OEBAR
+ O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+ ENABLE LO = OEBAR
+   O0 O1 O2 O3 O4 O5 O6 O7 O8 O9 = {
+    CASE(
+       TRN_ZH, DELAY(2NS,5.8NS,10.5NS),
+       TRN_ZL, DELAY(2NS,6.3NS,10.5NS),
+       TRN_HZ, DELAY(1.5NS,3.4NS,7NS),
+       TRN_LZ, DELAY(1.5NS,3.5NS,7NS),
+       TRN_LH, DELAY(2NS,6.4NS,9.5NS),
+       TRN_HL, DELAY(2NS,6.2NS,9.5NS),
+       DELAY(4NS,7.4NS,11.5NS))}

U3 CONSTRAINT(11) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 CP
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CP
+   MAXFREQ = 150MEG
+ WIDTH:
+   NODE = CP
+   MIN_HI = 5NS
+   MIN_LO = 5NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(10) = D0 D1 D2 D3 D4 D5 D6 D7 D8 D9
+   SETUPTIME = 2.5NS
+   HOLDTIME = 2.5NS

.ENDS 74F821

* ----------------------------------------------------------- 74AS822 ------
*  10-Bit Bus-Interface Flip-Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-631 to 2-635
*  bss    6/13/94
*
.SUBCKT 74AS822 OCBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 9D 10D 
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dff(10) DPWR DGND
+     $D_HI $D_HI CLK
+     1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 10Q_O
+     D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(10,1,1) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 10Q_O
+     OCBAR
+     CLK
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLOCK = {CHANGED_LH(CLK,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q = {
+       CASE(
+         CLOCK & TRN_LH, DELAY(3.5ns,-1,7.5ns),
+         CLOCK & TRN_HL, DELAY(3.5ns,-1,10.5ns),
+         TRN_ZH, DELAY(4ns,-1,11ns),
+         TRN_ZL, DELAY(4ns,-1,12ns),
+         TRN_$Z, DELAY(2ns,-1,8ns),
+         DELAY(5ns,-1,13ns))}

U3CON CONSTRAINT(11) DPWR DGND
+     CLK 1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=8ns
+     MIN_LO=8ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(10)=1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     SETUPTIME=6ns

.ENDS 74AS822

*-----------------------------------------------------------74F822-----

* 10 Bit D-Type Flip-Flop
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 790 to 801
* jat 7/25/96

.SUBCKT 74F822 OEBAR CP D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 Q0BAR Q1BAR Q2BAR
+ Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR Q9BAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(10) DPWR DGND
+ $D_HI $D_HI CP
+ D0BAR D1BAR D2BAR D3BAR D4BAR D5BAR D6BAR D7BAR D8BAR D9BAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U1A LOGICEXP(10,10) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 D8 D9
+ D0BAR D1BAR D2BAR D3BAR D4BAR D5BAR D6BAR D7BAR D8BAR D9BAR
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+     D0BAR = {~D0}
+     D1BAR = {~D1}
+     D2BAR = {~D2}
+     D3BAR = {~D3}
+     D4BAR = {~D4}
+     D5BAR = {~D5}
+     D6BAR = {~D6}
+     D7BAR = {~D7}
+     D8BAR = {~D8}
+     D9BAR = {~D9}

U2 PINDLY(10,1,0) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9
+ OEBAR
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR Q9BAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+ ENABLE LO = OEBAR
+   Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR Q9BAR = {
+    CASE(
+       TRN_ZH, DELAY(2NS,4.5NS,8NS),
+       TRN_ZL, DELAY(3NS,5NS,8NS),
+       TRN_HZ, DELAY(1.5NS,3.5NS,6.5NS),
+       TRN_LZ, DELAY(1.5NS,3.5NS,6.5NS),
+       TRN_LH, DELAY(4.5NS,6.5NS,9NS),
+       TRN_HL, DELAY(4.5NS,6.5NS,9NS),
+       DELAY(5.5NS,7.5NS,10NS))}

U3 CONSTRAINT(11) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 CP
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CP
+   MAXFREQ = 180MEG
+ WIDTH:
+   NODE = CP
+   MIN_HI = 3.5NS
+   MIN_LO = 3.5NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(10) = D0 D1 D2 D3 D4 D5 D6 D7 D8 D9
+   SETUPTIME = 1NS
+   HOLDTIME = 2NS

.ENDS 74F822

* ----------------------------------------------------------- 74ACT823 ------
*  9-Bit D Flip-Flop With TRI-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1993, National Pages 5-161 to 5-165
*  bss    6/13/94
*  This part is shown in the data book as a 74ACTQ823
*
.SUBCKT 74ACT823 OEBAR CLRBAR ENBAR CP D0 D1 D2 D3 D4 D5 D6 D7 D8 
+     O0 O1 O2 O3 O4 O5 O6 O7 O8
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     ENBAR AND1 NOR1
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(9) DPWR DGND
+     $D_HI CLRBAR CLKIN
+     D0 D1 D2 D3 D4 D5 D6 D7 D8
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(2,2) DPWR DGND
+     NOR1 CP
+     AND1 CLKIN
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     nor1bar = {~NOR1}
+     AND1 = {(CP & nor1bar)}
+     CLKIN = {(CP & NOR1)}

U4DLY PINDLY(9,1,2) DPWR DGND
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O
+     OEBAR
+     CLRBAR CP
+     O0 O1 O2 O3 O4 O5 O6 O7 O8
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     CLOCK = {CHANGED_LH(CP,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     O0 O1 O2 O3 O4 O5 O6 O7 O8 = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(2ns,7ns,9ns),
+         CLOCK & TRN_LH, DELAY(2ns,7ns,9ns),
+         CLOCK & TRN_HL, DELAY(2ns,7ns,9ns),
+         TRN_Z$, DELAY(2.5ns,8ns,10ns),
+         TRN_$Z, DELAY(1ns,6ns,8ns),
+         DELAY(3.5ns,9ns,11ns))}

U5CON CONSTRAINT(12) DPWR DGND
+     CLRBAR CP ENBAR D0 D1 D2 D3 D4 D5 D6 D7 D8
+     IO_ACT IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CP
+     MIN_HI=4ns
+     MIN_LO=4ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=4ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(1)=ENBAR
+     SETUPTIME=3ns
+     HOLDTIME=1.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(9)=D0 D1 D2 D3 D4 D5 D6 D7 D8
+     SETUPTIME=3ns
+     HOLDTIME=1.5ns
+
+  SETUP_HOLD:
+     CLOCK LH=CP
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=4ns

.ENDS 74ACT823
*
*
* ----------------------------------------------------------- 74AS823 ------
*  9-Bit Bus Interface Flip-Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-637 to 2-641
*  bss    6/14/94
*
.SUBCKT 74AS823 OCBAR CLRBAR CLKENBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 9D 
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     CLKENBAR AND1 NOR1
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(9) DPWR DGND
+     $D_HI CLRBAR CLKIN
+     1D 2D 3D 4D 5D 6D 7D 8D 9D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(2,2) DPWR DGND
+     NOR1 CLK
+     AND1 CLKIN
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     nor1bar = {~NOR1}
+     AND1 = {(CLK & nor1bar)}
+     CLKIN = {(CLK & NOR1)}

U4DLY PINDLY(9,1,2) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O
+     OCBAR
+     CLRBAR CLK
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     CLOCK = {CHANGED_LH(CLK,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(3.5ns,-1,13ns),
+         CLOCK & TRN_LH, DELAY(3.5ns,-1,7.5ns),
+         CLOCK & TRN_HL, DELAY(3.5ns,-1,11ns),
+         TRN_ZH, DELAY(4ns,-1,11ns),
+         TRN_ZL, DELAY(4ns,-1,12ns),
+         TRN_$Z, DELAY(2ns,-1,8ns),
+         DELAY(5ns,-1,14ns))}

U5CON CONSTRAINT(12) DPWR DGND
+     CLRBAR CLK CLKENBAR 1D 2D 3D 4D 5D 6D 7D 8D 9D
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=8ns
+     MIN_LO=8ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=4ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLKENBAR
+     SETUPTIME=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(9)=1D 2D 3D 4D 5D 6D 7D 8D 9D
+     SETUPTIME=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=8ns

.ENDS 74AS823

*-----------------------------------------------------------74F823-----

* 9 Bit D-Type Flip-Flop
* National Advanced Bipolar Logic Databook, 1995, pages 7-498 to 7-502
* jat 7/25/96

.SUBCKT 74F823 OEBAR CP D0 D1 D2 D3 D4 D5 D6 D7 D8 O0 O1 O2 O3 O4 O5 O6 O7 O8
+ ENBAR CLRBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(9) DPWR DGND
+ $D_HI CLRBAR CLOCK
+ D0 D1 D2 D3 D4 D5 D6 D7 D8
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U1A LOGICEXP(2,1) DPWR DGND
+ ENBAR CP
+ CLOCK
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+     CLOCK = {~ENBAR & CP}

U2 PINDLY(9,1,2) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+ OEBAR
+ CLRBAR CP
+ O0 O1 O2 O3 O4 O5 O6 O7 O8
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLEAR = {CHANGED_HL(CLRBAR,0)}
+   EDGE = {CHANGED_LH(CP,0)}
+ TRISTATE:
+ ENABLE LO = OEBAR
+   O0 O1 O2 O3 O4 O5 O6 O7 O8 = {
+    CASE(
+       TRN_ZH, DELAY(2NS,5.8NS,10.5NS),
+       TRN_ZL, DELAY(2NS,5.5NS,10.5NS),
+       TRN_HZ, DELAY(1.5NS,2.9NS,7NS),
+       TRN_LZ, DELAY(1.5NS,2.7NS,7NS),
+       CLEAR & TRN_HL, DELAY(4NS,7.1NS,12NS),
+       EDGE & TRN_LH, DELAY(2NS,5.6NS,9.5NS),
+       EDGE & TRN_HL, DELAY(2NS,5.2NS,9.5NS),
+       DELAY(5NS,8.1NS,11.5NS))}

U3 CONSTRAINT(12) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 D8 CP ENBAR CLRBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CP
+   MAXFREQ = 160MEG
+ WIDTH:
+   NODE = CP
+   MIN_HI = 5NS
+   MIN_LO = 5NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(9) = D0 D1 D2 D3 D4 D5 D6 D7 D8
+   SETUPTIME = 2.5NS
+   HOLDTIME = 2.5NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(1) = ENBAR
+   SETUPTIME_HI = 4.5NS
+   SETUPTIME_LO = 2.5NS
+   HOLDTIME_HI = 2NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(1) = CLRBAR
+   SETUPTIME_HI = 5NS
+ WIDTH:
+   NODE = CLRBAR
+   MIN_LO = 5NS

.ENDS 74F823

* ----------------------------------------------------------- 74AS824 ------
*  9-Bit Bus Interface Flip-Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-637 to 2-641
*  bss    6/14/94
*
.SUBCKT 74AS824 OCBAR CLRBAR CLKENBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 9D 
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     CLKENBAR AND1 NOR1
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(9) DPWR DGND
+     CLRBAR $D_HI CLKIN
+     1D 2D 3D 4D 5D 6D 7D 8D 9D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O
+     D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(2,2) DPWR DGND
+     NOR1 CLK
+     AND1 CLKIN
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     nor1bar = {~NOR1}
+     AND1 = {(CLK & nor1bar)}
+     CLKIN = {(CLK & NOR1)}

U4DLY PINDLY(9,1,2) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O
+     OCBAR
+     CLRBAR CLK
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     CLOCK = {CHANGED_LH(CLK,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(3.5ns,-1,13ns),
+         CLOCK & TRN_LH, DELAY(3.5ns,-1,7.5ns),
+         CLOCK & TRN_HL, DELAY(3.5ns,-1,11ns),
+         TRN_ZH, DELAY(4ns,-1,11ns),
+         TRN_ZL, DELAY(4ns,-1,12ns),
+         TRN_$Z, DELAY(2ns,-1,8ns),
+         DELAY(5ns,-1,14ns))}

U5CON CONSTRAINT(12) DPWR DGND
+     CLRBAR CLK CLKENBAR 1D 2D 3D 4D 5D 6D 7D 8D 9D
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=8ns
+     MIN_LO=8ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=4ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLKENBAR
+     SETUPTIME=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(9)=1D 2D 3D 4D 5D 6D 7D 8D 9D
+     SETUPTIME=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=8ns

.ENDS 74AS824

*-----------------------------------------------------------74F824-----

* 9 Bit D-Type Flip-Flop
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 790 to 801
* jat 7/25/96

.SUBCKT 74F824 OEBAR CP D0 D1 D2 D3 D4 D5 D6 D7 D8 Q0BAR Q1BAR Q2BAR
+ Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR CEBAR MRBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(9) DPWR DGND
+ $D_HI MRBAR CLOCK
+ D0BAR D1BAR D2BAR D3BAR D4BAR D5BAR D6BAR D7BAR D8BAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U1A LOGICEXP(11,10) DPWR DGND
+ CEBAR CP D0 D1 D2 D3 D4 D5 D6 D7 D8
+ CLOCK D0BAR D1BAR D2BAR D3BAR D4BAR D5BAR D6BAR D7BAR D8BAR
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+     CLOCK = {~CEBAR & CP}
+     D0BAR = {~D0}
+     D1BAR = {~D1}
+     D2BAR = {~D2}
+     D3BAR = {~D3}
+     D4BAR = {~D4}
+     D5BAR = {~D5}
+     D6BAR = {~D6}
+     D7BAR = {~D7}
+     D8BAR = {~D8}

U2 PINDLY(9,1,2) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+ OEBAR
+ MRBAR CP
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR 
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLEAR = {CHANGED_HL(MRBAR,0)}
+   EDGE = {CHANGED_LH(CP,0)}
+ TRISTATE:
+ ENABLE LO = OEBAR
+   Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BAR = {
+    CASE(
+       TRN_ZH, DELAY(2NS,4.5NS,8NS),
+       TRN_ZL, DELAY(3NS,5NS,8NS),
+       TRN_HZ, DELAY(1.5NS,3.5NS,6.5NS),
+       TRN_LZ, DELAY(1.5NS,3.5NS,6.5NS),
+       CLEAR & TRN_HL, DELAY(3NS,5NS,8NS),
+       EDGE & TRN_LH, DELAY(4.5NS,6.5NS,9NS),
+       EDGE & TRN_HL, DELAY(4.5NS,6.5NS,9NS),
+       DELAY(5.5NS,7.5NS,10NS))}

U3 CONSTRAINT(12) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 D8 CP CEBAR MRBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CP
+   MAXFREQ = 180MEG
+ WIDTH:
+   NODE = CP
+   MIN_HI = 3.5NS
+   MIN_LO = 3.5NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(9) = D0 D1 D2 D3 D4 D5 D6 D7 D8
+   SETUPTIME = 1NS
+   HOLDTIME = 2NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(1) = CEBAR
+   SETUPTIME_LO = 2NS
+   HOLDTIME_LO = 3NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(1) = MRBAR
+   SETUPTIME_HI = 2.5NS
+ WIDTH:
+   NODE = MRBAR
+   MIN_LO = 4.5NS

.ENDS 74F824

*------------------------------------------------------------74ACT825-----

* 8 Bit Bus Interface Flip Flop wit Tristated Outputs
* TI Advanced CMOS Logic Databook, 1993, pages 2-577 to 2-581
* jat 12/20/95

.SUBCKT 74ACT825
+ OE1BAR OE2BAR OE3BAR CLRBAR CLKENBAR CLK 1D 2D 3D 4D 5D 6D 7D 8D 1Q 2Q 3Q
+ 4Q 5Q 6Q 7Q 8Q
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(5,2) DPWR DGND
+ OE1BAR OE2BAR OE3BAR CLK CLKENBAR
+ ENAB CLOCK
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(OE1BAR | OE2BAR | OE3BAR)}
+   CLOCK = {CLK & (~CLKENBAR)}

U2 DFF(8) DPWR DGND
+ $D_HI CLRBAR CLOCK
+ 1D 2D 3D 4D 5D 6D 7D 8D 1QO 2QO 3QO 4QO 5QO 6QO 7QO 8QO $D_NC $D_NC $D_NC $D_NC 
+ $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(8,1,2) DPWR DGND
+ 1QO 2QO 3QO 4QO 5QO 6QO 7QO 8QO
+ ENAB
+ CLK CLRBAR
+ 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLEAR = {CHANGED_HL(CLRBAR,0)}
+   CLOK = {CHANGED(CLK,0)}
+ TRISTATE:
+   ENABLE HI = ENAB
+   1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q = {
+     CASE(
+       TRN_ZH, DELAY(3.3NS,6.4NS,9.2NS),
+       TRN_ZL, DELAY(4.2NS,7.9NS,11.5NS),
+       TRN_HZ, DELAY(6.1NS,8.5NS,10.7NS),
+       TRN_LZ, DELAY(5.5NS,7.9NS,10NS),
+       CLEAR & TRN_HL, DELAY(4.5NS,8.5NS,11.9NS),
+       CLOK & TRN_LH, DELAY(4.6NS,7.7NS,10.2NS),
+       CLOK & TRN_HL, DELAY(5.1NS,8.4NS,10.9NS),
+       DELAY(7.1NS,9.5NS,12.9NS))}

U4 CONSTRAINT(11) DPWR DGND
+ CLK CLRBAR CLKENBAR 1D 2D 3D 4D 5D 6D 7D 8D
+ IO_ACT IO_LEVEL={IO_LEVEL}
+ FREQ:
+  NODE = CLK
+  MAXFREQ = 122MEG
+ WIDTH:
+  NODE = CLK
+  MIN_LO = 4.5NS
+  MIN_HI = 4.5NS
+ WIDTH:
+  NODE = CLRBAR
+  MIN_LO = 4NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(1) = CLRBAR
+   SETUPTIME_HI = 3NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(8) = 1D 2D 3D 4D 5D 6D 7D 8D
+   SETUPTIME = 3NS
+   HOLDTIME = 1.5NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(1) = CLKENBAR
+   SETUPTIME = 3NS
+   HOLDTIME = 2NS

.ENDS 74ACT825
     
* ----------------------------------------------------------- 74AS825 ------
*  8-Bit Bus Interface Flip-Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-643 to 2-647
*  bss    6/14/94
*
.SUBCKT 74AS825 OC1BAR OC2BAR OC3BAR CLRBAR CLKENBAR CLK 1D 2D 3D 4D 5D 
+     6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     CLKENBAR AND1 NOR1
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     $D_HI CLRBAR CLKIN
+     1D 2D 3D 4D 5D 6D 7D 8D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(5,3) DPWR DGND
+     NOR1 CLK OC1BAR OC2BAR OC3BAR
+     AND1 CLKIN ENAB
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     nor1bar = {~NOR1}
+     AND1 = {(CLK & nor1bar)}
+     CLKIN = {(CLK & NOR1)}
+     ENAB = {~(OC1BAR | OC2BAR | OC3BAR)}

U4DLY PINDLY(8,1,2) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     ENAB
+     CLRBAR CLK
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     CLOCK = {CHANGED_LH(CLK,0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(3.5ns,-1,13ns),
+         CLOCK & TRN_LH, DELAY(3.5ns,-1,7.5ns),
+         CLOCK & TRN_HL, DELAY(3.5ns,-1,11ns),
+         TRN_ZH, DELAY(4ns,-1,11ns),
+         TRN_ZL, DELAY(4ns,-1,12ns),
+         TRN_$Z, DELAY(2ns,-1,8ns),
+         DELAY(5ns,-1,14ns))}

U5CON CONSTRAINT(12) DPWR DGND
+     CLRBAR CLK CLKENBAR 1D 2D 3D 4D 5D 6D 7D 8D 9D
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=8ns
+     MIN_LO=8ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=4ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLKENBAR
+     SETUPTIME=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(9)=1D 2D 3D 4D 5D 6D 7D 8D 9D
+     SETUPTIME=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=8ns

.ENDS 74AS825

*-----------------------------------------------------------74F825-----

* 8 Bit D-Type Flip-Flop
* National Advanced Bipolar Logic Databook, 1995, pages 7-503 to 7-507
* jat 7/25/96

.SUBCKT 74F825 OE1BAR CP D0 D1 D2 D3 D4 D5 D6 D7 O0 O1 O2 O3 O4 O5 O6 O7
+ ENBAR CLRBAR OE2BAR OE3BAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI CLRBAR CLOCK
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U1A LOGICEXP(5,2) DPWR DGND
+ ENBAR CP OE1BAR OE2BAR OE3BAR
+ CLOCK OUTENAB
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+     CLOCK = {~ENBAR & CP}
+     OUTENAB = {~(OE1BAR | OE2BAR | OE3BAR)}

U2 PINDLY(8,1,2) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OUTENAB
+ CLRBAR CP
+ O0 O1 O2 O3 O4 O5 O6 O7
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLEAR = {CHANGED_HL(CLRBAR,0)}
+   EDGE = {CHANGED_LH(CP,0)}
+ TRISTATE:
+ ENABLE HI = OUTENAB
+   O0 O1 O2 O3 O4 O5 O6 O7 = {
+    CASE(
+       TRN_ZH, DELAY(2NS,6.5NS,10.5NS),
+       TRN_ZL, DELAY(2NS,6.6NS,10.5NS),
+       TRN_HZ, DELAY(1.5NS,3.5NS,7NS),
+       TRN_LZ, DELAY(1.5NS,4.4NS,7NS),
+       CLEAR & TRN_HL, DELAY(4NS,7.4NS,12NS),
+       EDGE & TRN_LH, DELAY(2NS,6.5NS,9.5NS),
+       EDGE & TRN_HL, DELAY(2NS,6.6NS,9.5NS),
+       DELAY(5NS,8.4NS,13NS))}

U3 CONSTRAINT(11) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 CP ENBAR CLRBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CP
+   MAXFREQ = 160MEG
+ WIDTH:
+   NODE = CP
+   MIN_HI = 5NS
+   MIN_LO = 5NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+   SETUPTIME = 2.5NS
+   HOLDTIME = 2.5NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(1) = ENBAR
+   SETUPTIME_HI = 4.5NS
+   SETUPTIME_LO = 2.5NS
+   HOLDTIME_HI = 2NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(1) = CLRBAR
+   SETUPTIME_HI = 5NS
+ WIDTH:
+   NODE = CLRBAR
+   MIN_LO = 5NS

.ENDS 74F825

* ----------------------------------------------------------- 74AS826 ------
*  8-Bit Bus Interface Flip-Flops With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-643 to 2-647
*  bss    6/14/94
*
.SUBCKT 74AS826 OC1BAR OC2BAR OC3BAR CLRBAR CLKENBAR CLK 1D 2D 3D 4D 5D 
+     6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     CLKENBAR AND1 NOR1
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 dff(8) DPWR DGND
+     CLRBAR $D_HI CLKIN
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(5,3) DPWR DGND
+     NOR1 CLK OC1BAR OC2BAR OC3BAR
+     AND1 CLKIN ENAB
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     nor1bar = {~NOR1}
+     AND1 = {(CLK & nor1bar)}
+     CLKIN = {(CLK & NOR1)}
+     ENAB = {~(OC1BAR | OC2BAR | OC3BAR)}

U4DLY PINDLY(8,1,2) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     ENAB
+     CLRBAR CLK
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     CLOCK = {CHANGED_LH(CLK,0)}
+
+  TRISTATE:
+     ENABLE HI=ENAB
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(3.5ns,-1,13ns),
+         CLOCK & TRN_LH, DELAY(3.5ns,-1,7.5ns),
+         CLOCK & TRN_HL, DELAY(3.5ns,-1,11ns),
+         TRN_ZH, DELAY(4ns,-1,11ns),
+         TRN_ZL, DELAY(4ns,-1,12ns),
+         TRN_$Z, DELAY(2ns,-1,8ns),
+         DELAY(5ns,-1,14ns))}

U5CON CONSTRAINT(12) DPWR DGND
+     CLRBAR CLK CLKENBAR 1D 2D 3D 4D 5D 6D 7D 8D 9D
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=8ns
+     MIN_LO=8ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=4ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLKENBAR
+     SETUPTIME=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(9)=1D 2D 3D 4D 5D 6D 7D 8D 9D
+     SETUPTIME=6ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=8ns

.ENDS 74AS826

*-----------------------------------------------------------74F826-----

* 8 Bit D-Type Flip-Flop
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 790 to 801
* jat 7/25/96

.SUBCKT 74F826 OE1BAR CP D0 D1 D2 D3 D4 D5 D6 D7 Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR
+ Q5BAR Q6BAR Q7BAR CEBAR MRBAR OE2BAR OE0BAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(8) DPWR DGND
+ $D_HI MRBAR CLOCK
+ D0BAR D1BAR D2BAR D3BAR D4BAR D5BAR D6BAR D7BAR
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U1A LOGICEXP(13,10) DPWR DGND
+ CEBAR CP OE1BAR OE2BAR OE0BAR D0 D1 D2 D3 D4 D5 D6 D7
+ CLOCK OUTENAB D0BAR D1BAR D2BAR D3BAR D4BAR D5BAR D6BAR D7BAR
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+     CLOCK = {~CEBAR & CP}
+     OUTENAB = {~(OE1BAR | OE2BAR | OE0BAR)}
+     D0BAR = {~D0}
+     D1BAR = {~D1}
+     D2BAR = {~D2}
+     D3BAR = {~D3}
+     D4BAR = {~D4}
+     D5BAR = {~D5}
+     D6BAR = {~D6}
+     D7BAR = {~D7}


U2 PINDLY(8,1,2) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OUTENAB
+ MRBAR CP
+ Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLEAR = {CHANGED_HL(MRBAR,0)}
+   EDGE = {CHANGED_LH(CP,0)}
+ TRISTATE:
+ ENABLE HI = OUTENAB
+   Q0BAR Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR = {
+    CASE(
+       TRN_ZH, DELAY(2NS,4.5NS,8NS),
+       TRN_ZL, DELAY(3NS,5NS,8NS),
+       TRN_HZ, DELAY(1.5NS,3.5NS,6.5NS),
+       TRN_LZ, DELAY(1.5NS,3.5NS,6.5NS),
+       CLEAR & TRN_HL, DELAY(3NS,5NS,8NS),
+       EDGE & TRN_LH, DELAY(4NS,6.5NS,8.5NS),
+       EDGE & TRN_HL, DELAY(4NS,6NS,8.5NS),
+       DELAY(5NS,7.5NS,9.5NS))}

U3 CONSTRAINT(11) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 CP CEBAR MRBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CP
+   MAXFREQ = 180MEG
+ WIDTH:
+   NODE = CP
+   MIN_HI = 3.5NS
+   MIN_LO = 3.5NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+   SETUPTIME = 1NS
+   HOLDTIME = 2NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(1) = CEBAR
+   SETUPTIME_LO = 2NS
+   HOLDTIME_LO = 3NS
+ SETUP_HOLD:
+   CLOCK LH = CP
+   DATA(1) = MRBAR
+   SETUPTIME_HI = 2.5NS
+ WIDTH:
+   NODE = MRBAR
+   MIN_LO = 4.5NS

.ENDS 74F826

*-------------------------------------------------------------74AC827------

* 10 Bit Buffer/Bus Driver with Tri-State Outputs
* TI Advanced CMOS Logic Databook, 1993, pages 2-583 to 2-587
* jat 12/20/95

.SUBCKT 74AC827
+ G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 Y9 Y10
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(2,1) DPWR DGND
+ G1BAR G2BAR ENAB
+ D0_GATE IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(G1BAR | G2BAR)}

U2 PINDLY(10,1,0) DPWR DGND
+ A1 A2 A3 A4 A5 A6 A7 A8 A9 A10
+ ENAB
+ Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 Y9 Y10
+ IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = ENAB
+      Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 Y9 Y10 = {
+        CASE(
+          TRN_ZH, DELAY(3.1NS,5.9NS,8.2NS),
+          TRN_ZL, DELAY(4.1NS,7.7NS,10.6NS),
+          TRN_HZ, DELAY(3.9NS,6.6NS,8.4NS),
+          TRN_LZ, DELAY(4NS,6.3NS,7.9NS),
+          TRN_LH, DELAY(2.1NS,5.3NS,7.5NS),
+          TRN_HL, DELAY(2.9NS,6.2NS,8.4NS),
+          DELAY(5NS,8.7NS,11.6NS))}

.ENDS 74AC827

*-------------------------------------------------------------74ACT827------

* 10 Bit Buffer/Bus Driver with Tri-State Outputs
* TI Advanced CMOS Logic Databook, 1993, pages 2-589 to 2-592
* jat 12/20/95

.SUBCKT 74ACT827
+ G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 Y9 Y10
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(2,1) DPWR DGND
+ G1BAR G2BAR ENAB
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(G1BAR | G2BAR)}

U2 PINDLY(10,1,0) DPWR DGND
+ A1 A2 A3 A4 A5 A6 A7 A8 A9 A10
+ ENAB
+ Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 Y9 Y10
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = ENAB
+      Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 Y9 Y10 = {
+        CASE(
+          TRN_ZH, DELAY(2.6NS,6.4NS,9.2NS),
+          TRN_ZL, DELAY(3.2NS,8NS,11.2NS),
+          TRN_HZ, DELAY(6.1NS,8.8NS,11.1NS),
+          TRN_LZ, DELAY(5.8NS,8.3NS,10.6NS),
+          TRN_LH, DELAY(3.8NS,6.3NS,8NS),
+          TRN_HL, DELAY(2.7NS,6.9NS,9.5NS),
+          DELAY(7.1NS,8.9NS,12.2NS))}

.ENDS 74ACT827

*-------------------------------------------------------------74F827------

* 10 Bit Buffers/Line Drivers
* National Advanced Bipolar Logic Databook, 1995, pages 7-508 to 7-512
* jat 7/25/96

.SUBCKT 74F827
+ OE1BAR OE2BAR D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(2,1) DPWR DGND
+ OE1BAR OE2BAR ENAB
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(OE1BAR | OE2BAR)}

U2 PINDLY(10,1,0) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 D8 D9
+ ENAB
+ O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = ENAB
+      O0 O1 O2 O3 O4 O5 O6 O7 O8 O9 = {
+        CASE(
+          TRN_ZH, DELAY(3NS,5.7NS,9NS),
+          TRN_ZL, DELAY(3.5NS,6.8NS,11.5NS),
+          TRN_HZ, DELAY(1.5NS,3.3NS,8NS),
+          TRN_LZ, DELAY(1NS,3.5NS,8NS),
+          TRN_LH, DELAY(1NS,3NS,5.5NS),
+          TRN_HL, DELAY(1.5NS,3.3NS,5.5NS),
+          DELAY(4.5NS,7.8NS,12.5NS))}

.ENDS 74F827

*-------------------------------------------------------------74ACT828------

* 10 Bit Buffer/Bus Driver with Tri-State Outputs
* TI Advanced CMOS Logic Databook, 1993, pages 2-583 to 2-596
* jat 12/20/95

.SUBCKT 74ACT828
+ G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 Y9 Y10
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(12,11) DPWR DGND
+ G1BAR G2BAR A1 A2 A3 A4 A5 A6 A7 A8 A9 A10
+ ENAB A1I A2I A3I A4I A5I A6I A7I A8I A9I A10I
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(G1BAR | G2BAR)}
+   A1I = {~A1}
+   A2I = {~A2}
+   A3I = {~A3}
+   A4I = {~A4}
+   A5I = {~A5}
+   A6I = {~A6}
+   A7I = {~A7}
+   A8I = {~A8}
+   A9I = {~A9}
+   A10I = {~A10}

U2 PINDLY(10,1,0) DPWR DGND
+ A1I A2I A3I A4I A5I A6I A7I A8I A9I A10I
+ ENAB
+ Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 Y9 Y10
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = ENAB
+      Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 Y9 Y10 = {
+        CASE(
+          TRN_ZH, DELAY(2.9NS,7NS,9.9NS),
+          TRN_ZL, DELAY(3.4NS,8.3NS,11.4NS),
+          TRN_HZ, DELAY(6NS,9NS,11.3NS),
+          TRN_LZ, DELAY(5.9NS,8.5NS,10.9NS),
+          TRN_LH, DELAY(1.9NS,5.6NS,8.3NS),
+          TRN_HL, DELAY(5.2NS,8NS,10.3NS),
+          DELAY(7NS,10NS,12.4NS))}

.ENDS 74ACT828

*-------------------------------------------------------------74F828------

* 10 Bit Buffers/Line Drivers
* National Advanced Bipolar Logic Databook, 1995, pages 7-508 to 7-512
* jat 7/25/96

.SUBCKT 74F828
+ OE1BAR OE2BAR D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(12,11) DPWR DGND
+ OE1BAR OE2BAR D0 D1 D2 D3 D4 D5 D6 D7 D8 D9
+ ENAB O0O O1O O2O O3O O4O O5O O6O O7O O8O O9O
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(OE1BAR | OE2BAR)}
+   O0O = {~D0}
+   O1O = {~D1}
+   O2O = {~D2}
+   O3O = {~D3}
+   O4O = {~D4}
+   O5O = {~D5}
+   O6O = {~D6}
+   O7O = {~D7}
+   O8O = {~D8}
+   O9O = {~D9}

U2 PINDLY(10,1,0) DPWR DGND
+ O0O O1O O2O O3O O4O O5O O6O O7O O8O O9O
+ ENAB
+ O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = ENAB
+      O0 O1 O2 O3 O4 O5 O6 O7 O8 O9 = {
+        CASE(
+          TRN_ZH, DELAY(3NS,5.7NS,9NS),
+          TRN_ZL, DELAY(3.5NS,6.8NS,11.5NS),
+          TRN_HZ, DELAY(1.5NS,3.3NS,8NS),
+          TRN_LZ, DELAY(1NS,3.5NS,8NS),
+          TRN_LH, DELAY(1NS,3NS,5NS),
+          TRN_HL, DELAY(1NS,2NS,4NS),
+          DELAY(4.5NS,7.8NS,12.5NS))}

.ENDS 74F828

* ----------------------------------------------------------- 74ALS832A ------
*  Hex 2-Input Or Drivers
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-649 to 2-651
*  bss    6/14/94
*
.SUBCKT 74ALS832A 1A 1B 1Y 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 or(2) DPWR DGND
+     1A 1B 1Y
+     DLY_ALS832 IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_ALS832 ugate (tplhMN=2ns tplhMX=9ns tphlMN=1ns tphlMX=8ns)

.ENDS 74ALS832A
*
*
* ----------------------------------------------------------- 74AS832B ------
*  Hex 2-Input Or Drivers
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-649 to 2-651
*  bss    6/14/94
*
.SUBCKT 74AS832B 1A 1B 1Y 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 or(2) DPWR DGND
+     1A 1B 1Y
+     DLY_AS832 IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_AS832 ugate (tplhMN=1ns tplhMX=6.3ns tphlMN=1ns tphlMX=6.3ns)

.ENDS 74AS832B

*------------------------------------------------------------74F832----

* Hex 2-Input NOR Drivers
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 808 to 811
* jat 7/25/96

.SUBCKT 74F832 D0A D0B Q0
+ OPTIONAL: DPWR=$G_DPWR DGND=$D_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 OR(2) DPWR DGND
+ D0A D0B Q0
+ DLY_F832 IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.MODEL DLY_F832 UGATE (TPLHMN=2NS TPLHTY=4NS TPLHMX=6NS
+                      TPHLMN=2NS TPHLTY=3.5NS TPHLMX=6NS)

.ENDS 74F832

* ----------------------------------------------------------- 74HC832 ------
*  Hex 2-Input Or Drivers
*
*  The High Speed CMOS Logic Data Book, 1989, TI Pages 2-609 to 2-611
*  bss    6/14/94
*
.SUBCKT 74HC832 1A 1B 1Y 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 or(2) DPWR DGND
+     1A 1B 1Y
+     DLY_HC832 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC832 ugate (tplhTY=10ns tplhMX=20ns tphlTY=10ns tphlMX=20ns)

.ENDS 74HC832

*------------------------------------------------------------74F835-----

* 8 Bit Shift Register with 2:1 Mux-in, Latched "B" Inputs, and Serial Out
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 812 to 817
* jat 7/25/96

.SUBCKT 74F835 D0A D0B D1A D1B D2A D2B D3A D3B D4A D4B D5A D5B D6A D6B
+ D7A D7B LE SABAR/B PEBAR DS CP Q7
+ OPTIONAL: DPWR=$G_DPWR DGND=$D_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(26,8) DPWR DGND
+ QL0 QL1 QL2 QL3 QL4 QL5 QL6 QL7 SABAR/B D0A D1A D2A D3A D4A D5A D6A D7A
+ PEBAR DS Q0 Q1 Q2 Q3 Q4 Q5 Q6
+ D0 D1 D2 D3 D4 D5 D6 D7
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   OR0 = {(QL0 & SABAR/B) | (D0A & ~SABAR/B)}
+   OR1 = {(QL1 & SABAR/B) | (D1A & ~SABAR/B)}
+   OR2 = {(QL2 & SABAR/B) | (D2A & ~SABAR/B)}
+   OR3 = {(QL3 & SABAR/B) | (D3A & ~SABAR/B)}
+   OR4 = {(QL4 & SABAR/B) | (D4A & ~SABAR/B)}
+   OR5 = {(QL5 & SABAR/B) | (D5A & ~SABAR/B)}
+   OR6 = {(QL6 & SABAR/B) | (D6A & ~SABAR/B)}
+   OR7 = {(QL7 & SABAR/B) | (D7A & ~SABAR/B)}
+   D0 = {(OR0 & ~PEBAR) | (DS & PEBAR)}
+   D1 = {(OR1 & ~PEBAR) | (Q0 & PEBAR)}
+   D2 = {(OR2 & ~PEBAR) | (Q1 & PEBAR)}
+   D3 = {(OR3 & ~PEBAR) | (Q2 & PEBAR)}
+   D4 = {(OR4 & ~PEBAR) | (Q3 & PEBAR)}
+   D5 = {(OR5 & ~PEBAR) | (Q4 & PEBAR)}
+   D6 = {(OR6 & ~PEBAR) | (Q5 & PEBAR)}
+   D7 = {(OR7 & ~PEBAR) | (Q6 & PEBAR)}

U2 DLTCH(8) DPWR DGND
+ $D_HI $D_HI LE
+ D0B D1B D2B D3B D4B D5B D6B D7B
+ QL0 QL1 QL2 QL3 QL4 QL5 QL6 QL7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(8) DPWR DGND
+ $D_HI $D_HI CP
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 PINDLY(1,0,0) DPWR DGND
+ Q7O Q7
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ PINDLY:
+    Q7 = {
+      CASE(
+        (TRN_LH | TRN_HL), DELAY(5NS,7NS,9.5NS),
+        DELAY(6NS,8NS,10/5NS))}

U5 CONSTRAINT(21) DPWR DGND
+ D0B D1B D2B D3B D4B D5B D6B D7B D0A D1A D2A D3A D4A D5A D6A D7A
+ CP DS PEBAR LE SABAR/B
+ IO_F IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CP
+   MAXFREQ = 150MEG
+ WIDTH:
+   NODE = CP
+   MIN_LO = 4.5NS
+   MIN_HI = 4.5NS
+ WIDTH:
+   NODE = LE
+   MIN_HI = 4.5NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(16) = D0B D1B D2B D3B D4B D5B D6B D7B D0A D1A D2A D3A D4A D5A D6A D7A
+  SETUPTIME = 3.5NS
+  HOLDTIME = 1NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(1) = DS
+  SETUPTIME = 1NS
+  HOLDTIME = 2NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(1) = PEBAR
+  SETUPTIME = 3.5NS
+ SETUP_HOLD:
+  CLOCK LH = CP
+  DATA(1) = SABAR/B
+  SETUPTIME = 4.5NS
+ SETUP_HOLD:
+  CLOCK HL = LE
+  DATA(8) = D0B D1B D2B D3B D4B D5B D6B D7B
+  HOLDTIME = 3NS

.ENDS 74F835

* ----------------------------------------------------------- 74ACT841 ------
*  10-Bit Transparent Latch With TRI-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-294 to 4-298
*  bss    6/14/94
*
.SUBCKT 74ACT841 OEBAR LE D0 D1 D2 D3 D4 D5 D6 D7 D8 D9
+     O0 O1 O2 O3 O4 O5 O6 O7 O8 O9 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(10) DPWR DGND
+     $D_HI $D_HI LE
+     D0 D1 D2 D3 D4 D5 D6 D7 D8 D9
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O O9_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(10,1,1) DPWR DGND
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O O9_O
+     OEBAR
+     LE
+     O0 O1 O2 O3 O4 O5 O6 O7 O8 O9 
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     GATE = {CHANGED_LH(LE,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     O0 O1 O2 O3 O4 O5 O6 O7 O8 O9 = {
+       CASE(
+         GATE & TRN_LH, DELAY(2ns,5.5ns,9ns),
+         GATE & TRN_HL, DELAY(2ns,5.5ns,9ns),
+         TRN_LH, DELAY(2ns,5.5ns,9.5ns),
+         TRN_HL, DELAY(2ns,5.5ns,9.5ns),
+         TRN_Z$, DELAY(2ns,5.5ns,9.5ns),
+         TRN_$Z, DELAY(2ns,6ns,10.5ns),
+         DELAY(3ns,7ns,11.5ns))}

U3CON CONSTRAINT(11) DPWR DGND
+     LE D0 D1 D2 D3 D4 D5 D6 D7 D8 D9
+     IO_ACT IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=LE
+     MIN_HI=3.5ns
+
+  SETUP_HOLD:
+     CLOCK HL=LE
+     DATA(10)=D0 D1 D2 D3 D4 D5 D6 D7 D8 D9
+     SETUPTIME=1ns
+     HOLDTIME=2ns

.ENDS 74ACT841
*
*
* ----------------------------------------------------------- 74ALS841 ------
*  10-Bit Bus Interface D-Type Latches With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-653 to 2-661
*  bss    6/15/94
*
.SUBCKT 74ALS841 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(10) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 10Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(10,1,1) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 10Q_O
+     OCBAR
+     C
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q 
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     GATE = {CHANGED_LH(C,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q = {
+       CASE(
+         GATE & TRN_LH, DELAY(7ns,-1,21ns),
+         GATE & TRN_HL, DELAY(8ns,-1,26ns),
+         TRN_LH, DELAY(2ns,-1,13ns),
+         TRN_HL, DELAY(2ns,-1,13ns),
+         TRN_Z$, DELAY(2ns,-1,12ns),
+         TRN_HZ, DELAY(2ns,-1,10ns),
+         TRN_LZ, DELAY(2ns,-1,12ns),
+         DELAY(9ns,-1,27ns))}

U3CON CONSTRAINT(11) DPWR DGND
+     C 1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=C
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(10)=1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     SETUPTIME=10ns
+     HOLDTIME=5ns

.ENDS 74ALS841
*
*
* ----------------------------------------------------------- 74AS841 ------
*  10-Bit Bus Interface D-Type Latches With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-653 to 2-661
*  bss    6/15/94
*
.SUBCKT 74AS841 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(10) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 10Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(10,1,1) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 10Q_O
+     OCBAR
+     C
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q 
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     GATE = {CHANGED_LH(C,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q = {
+       CASE(
+         GATE & TRN_LH, DELAY(2ns,-1,12ns),
+         GATE & TRN_HL, DELAY(2ns,-1,12ns),
+         TRN_LH, DELAY(1ns,-1,6.5ns),
+         TRN_HL, DELAY(1ns,-1,9ns),
+         TRN_ZH, DELAY(2ns,-1,10.5ns),
+         TRN_ZL, DELAY(2ns,-1,13.5ns),
+         TRN_$Z, DELAY(1ns,-1,8ns),
+         DELAY(3ns,-1,14.5ns))}

U3CON CONSTRAINT(11) DPWR DGND
+     C 1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=C
+     MIN_HI=4ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(10)=1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     SETUPTIME=2.5ns
+     HOLDTIME=2.5ns

.ENDS 74AS841

*-----------------------------------------------------------74F841-----

* 10 Bit Transparent Latch
* National Advanced Bipolar Logic Databook, 1995, pages 7-513 to 7-516
* jat 7/30/96

.SUBCKT 74F841 OEBAR LE D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(10) DPWR DGND
+ $D_HI $D_HI LE
+ D0 D1 D2 D3 D4 D5 D6 D7 D8 D9
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(10,1,11) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9
+ OEBAR
+ D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 LE
+ O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   LATCH = {CHANGED(LE,0)}
+   DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+           CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0) |
+           CHANGED(D8,0) | CHANGED(D9,0)}
+ TRISTATE:
+ ENABLE LO = OEBAR
+   O0 O1 O2 O3 O4 O5 O6 O7 O8 O9 = {
+    CASE(
+       TRN_ZH, DELAY(2.5NS,-1,8.5NS),
+       TRN_ZL, DELAY(2.5NS,-1,9NS),
+       TRN_HZ, DELAY(1NS,-1,6.5NS),
+       TRN_LZ, DELAY(1NS,-1,6.5NS),
+       LATCH & TRN_LH, DELAY(5NS,-1,12NS),
+       LATCH & TRN_HL, DELAY(2NS,-1,7.5NS),
+       DATA & TRN_LH, DELAY(2.5NS,-1,8NS),
+       DATA & TRN_HL, DELAY(1.5NS,-1,6.5NS),
+       DELAY(6NS,-1,13NS))}

U3 CONSTRAINT(11) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 LE
+ IO_F IO_LEVEL={IO_LEVEL}
+ WIDTH:
+   NODE = LE
+   MIN_HI = 4NS
+ SETUP_HOLD:
+   CLOCK HL = LE
+   DATA(10) = D0 D1 D2 D3 D4 D5 D6 D7 D8 D9
+   SETUPTIME = 2NS
+   HOLDTIME_HI = 2.5NS
+   HOLDTIME_LO = 3NS

.ENDS 74F841

* ----------------------------------------------------------- 74ALS842 ------
*  10-Bit Bus Interface D-Type Latches With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-653 to 2-661
*  bss    6/15/94
*
.SUBCKT 74ALS842 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(10) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 10Q_O
+     D0_GFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(10,1,1) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 10Q_O
+     OCBAR
+     C
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q 
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     GATE = {CHANGED_LH(C,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q = {
+       CASE(
+         GATE & TRN_LH, DELAY(8ns,-1,27ns),
+         GATE & TRN_HL, DELAY(6ns,-1,20ns),
+         TRN_LH, DELAY(4ns,-1,18ns),
+         TRN_HL, DELAY(3ns,-1,13ns),
+         TRN_Z$, DELAY(2ns,-1,12ns),
+         TRN_HZ, DELAY(1ns,-1,10ns),
+         TRN_LZ, DELAY(2ns,-1,12ns),
+         DELAY(9ns,-1,28ns))}

U3CON CONSTRAINT(11) DPWR DGND
+     C 1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=C
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(10)=1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     SETUPTIME=10ns
+     HOLDTIME=5ns

.ENDS 74ALS842
*
*
* ----------------------------------------------------------- 74AS842 ------
*  10-Bit Bus Interface D-Type Latches With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-653 to 2-661
*  bss    6/15/94
*
.SUBCKT 74AS842 OCBAR C 1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(10) DPWR DGND
+     $D_HI $D_HI C
+     1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 10Q_O
+     D0_GFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(10,1,1) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 10Q_O
+     OCBAR
+     C
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q 
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     GATE = {CHANGED_LH(C,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 10Q = {
+       CASE(
+         GATE & TRN_LH, DELAY(2ns,-1,12ns),
+         GATE & TRN_HL, DELAY(2ns,-1,12ns),
+         TRN_LH, DELAY(1ns,-1,8.5ns),
+         TRN_HL, DELAY(1ns,-1,9ns),
+         TRN_ZH, DELAY(2ns,-1,12ns),
+         TRN_ZL, DELAY(2ns,-1,12.5ns),
+         TRN_$Z, DELAY(1ns,-1,8ns),
+         DELAY(3ns,-1,13.5ns))}

U3CON CONSTRAINT(11) DPWR DGND
+     C 1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=C
+     MIN_HI=4ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(10)=1D 2D 3D 4D 5D 6D 7D 8D 9D 10D
+     SETUPTIME=2.5ns
+     HOLDTIME=2.5ns

.ENDS 74AS842

*-----------------------------------------------------------74F842-----

* 10 Bit Bus Interface Latch
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 818 to 829
* jat 7/30/96

.SUBCKT 74F842 OEBAR LE D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 Q0 Q1 Q2 Q3 Q4 Q5 Q6
+ Q7 Q8 Q9
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(10) DPWR DGND
+ $D_HI $D_HI LE
+ D0BAR D1BAR D2BAR D3BAR D4BAR D5BAR D6BAR D7BAR D8BAR D9BAR
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O Q8O Q9O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U1A LOGICEXP(10,10) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 D8 D9
+ D0BAR D1BAR D2BAR D3BAR D4BAR D5BAR D6BAR D7BAR D8BAR D9BAR
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+     D0BAR = {~D0}
+     D1BAR = {~D1}
+     D2BAR = {~D2}
+     D3BAR = {~D3}
+     D4BAR = {~D4}
+     D5BAR = {~D5}
+     D6BAR = {~D6}
+     D7BAR = {~D7}
+     D8BAR = {~D8}
+     D9BAR = {~D9}

U2 PINDLY(10,1,11) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O Q8O Q9O
+ OEBAR
+ LE D0 D1 D2 D3 D4 D5 D6 D7 D8 D9
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   LATCH = {CHANGED(LE,0)}
+   DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+           CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0) |
+           CHANGED(D8,0) | CHANGED(D9,0)}
+ TRISTATE:
+ ENABLE LO = OEBAR
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 Q9 = {
+    CASE(
+       TRN_ZH, DELAY(2.5NS,4.5NS,8NS),
+       TRN_ZL, DELAY(4NS,6NS,9.5NS),
+       TRN_HZ, DELAY(1NS,4.5NS,8NS),
+       TRN_LZ, DELAY(1NS,5NS,8NS),
+       LATCH & TRN_LH, DELAY(5NS,7NS,10NS),
+       LATCH & TRN_HL, DELAY(4.5NS,6.5NS,9NS),
+       DATA & TRN_LH, DELAY(3.5NS,5.5NS,8.5NS),
+       DATA & TRN_HL, DELAY(3NS,5NS,8NS),
+       DELAY(5NS,8NS,11NS))}

U3 CONSTRAINT(11) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 LE
+ IO_F IO_LEVEL={IO_LEVEL}
+ WIDTH:
+   NODE = LE
+   MIN_HI = 3NS
+ SETUP_HOLD:
+   CLOCK LH = LE
+   DATA(10) = D0 D1 D2 D3 D4 D5 D6 D7 D8 D9
+   HOLDTIME_HI = 3NS
+   HOLDTIME_LO = 3.5NS

.ENDS 74F842

* ----------------------------------------------------------- 74AC843 ------
*  9-Bit Transparent Latch
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-299 to 4-306
*  bss    6/15/94
*
.SUBCKT 74AC843 OEBAR PREBAR CLRBAR LE D0 D1 D2 D3 D4 D5 D6 D7 D8
+     O0 O1 O2 O3 O4 O5 O6 O7 O8 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(9) DPWR DGND
+     PREBAR CLRBAR LE
+     D0 D1 D2 D3 D4 D5 D6 D7 D8
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O 
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(9,1,3) DPWR DGND
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O 
+     OEBAR
+     PREBAR CLRBAR LE
+     O0 O1 O2 O3 O4 O5 O6 O7 O8 
+     IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SET = {CHANGED_HL(PREBAR,0)}
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     GATE = {CHANGED_LH(LE,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     O0 O1 O2 O3 O4 O5 O6 O7 O8 = {
+       CASE(
+         SET & TRN_LH, DELAY(3.5ns,6ns,13ns),
+         CLEAR & TRN_HL, DELAY(5ns,7.5ns,15ns),
+         GATE & TRN_LH, DELAY(2ns,4.5ns,8.5ns),
+         GATE & TRN_HL, DELAY(2.5ns,5ns,8.5ns),
+         TRN_LH, DELAY(2ns,4.5ns,8.5ns),
+         TRN_HL, DELAY(2.5ns,5ns,8.5ns),
+         TRN_ZH, DELAY(2ns,4.5ns,8ns),
+         TRN_ZL, DELAY(2ns,5ns,8ns),
+         TRN_HZ, DELAY(3ns,5ns,8ns),
+         TRN_LZ, DELAY(2ns,4.5ns,8ns),
+         DELAY(6ns,8.5ns,16ns))}

U3CON CONSTRAINT(12) DPWR DGND
+     PREBAR CLRBAR LE D0 D1 D2 D3 D4 D5 D6 D7 D8
+     IO_AC IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=10ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=12ns
+
+  WIDTH:
+     NODE=LE
+     MIN_HI=3ns
+
+  SETUP_HOLD:
+     CLOCK HL=LE
+     DATA(9)=D0 D1 D2 D3 D4 D5 D6 D7 D8
+     SETUPTIME=2ns
+     HOLDTIME=2.5ns
+     WHEN={CLRBAR!='0 | PREBAR!='0}
+
+  SETUP_HOLD:
+     CLOCK HL=LE
+     DATA(1)=PREBAR
+     SETUPTIME_HI=1.5ns
+
+  SETUP_HOLD:
+     CLOCK HL=LE
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=.5ns

.ENDS 74AC843
*
*
* ----------------------------------------------------------- 74ACT843 ------
*  9-Bit Transparent Latch
*
*  The FACT Advanced CMOS Logic Data Book, 1989, National Pages 4-299 to 4-306
*  bss    6/15/94
*
.SUBCKT 74ACT843 OEBAR PREBAR CLRBAR LE D0 D1 D2 D3 D4 D5 D6 D7 D8
+     O0 O1 O2 O3 O4 O5 O6 O7 O8 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(9) DPWR DGND
+     PREBAR CLRBAR LE
+     D0 D1 D2 D3 D4 D5 D6 D7 D8
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O 
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(9,1,3) DPWR DGND
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O 
+     OEBAR
+     PREBAR CLRBAR LE
+     O0 O1 O2 O3 O4 O5 O6 O7 O8 
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SET = {CHANGED_HL(PREBAR,0)}
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     GATE = {CHANGED_LH(LE,0)}
+
+  TRISTATE:
+     ENABLE LO=OEBAR
+     O0 O1 O2 O3 O4 O5 O6 O7 O8 = {
+       CASE(
+         SET & TRN_LH, DELAY(2.5ns,6.5ns,14ns),
+         CLEAR & TRN_HL, DELAY(2.5ns,7.5ns,15.5ns),
+         GATE & TRN_LH, DELAY(2.5ns,5.5ns,9ns),
+         GATE & TRN_HL, DELAY(2.5ns,5.5ns,9ns),
+         TRN_LH, DELAY(2.5ns,5.5ns,9.5ns),
+         TRN_HL, DELAY(2.5ns,5.5ns,9.5ns),
+         TRN_ZH, DELAY(2.5ns,5.5ns,9.5ns),
+         TRN_ZL, DELAY(2.5ns,5.5ns,9.5ns),
+         TRN_HZ, DELAY(2.5ns,6ns,10.5ns),
+         TRN_LZ, DELAY(2.5ns,6ns,10.5ns),
+         DELAY(3.5ns,8.5ns,16.5ns))}

U3CON CONSTRAINT(12) DPWR DGND
+     PREBAR CLRBAR LE D0 D1 D2 D3 D4 D5 D6 D7 D8
+     IO_ACT IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=10ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=11ns
+
+  WIDTH:
+     NODE=LE
+     MIN_HI=3.5ns
+
+  SETUP_HOLD:
+     CLOCK HL=LE
+     DATA(9)=D0 D1 D2 D3 D4 D5 D6 D7 D8
+     SETUPTIME=1ns
+     HOLDTIME=2ns
+     WHEN={CLRBAR!='0 | PREBAR!='0}
+
+  SETUP_HOLD:
+     CLOCK HL=LE
+     DATA(1)=PREBAR
+     SETUPTIME_HI=2ns
+
+  SETUP_HOLD:
+     CLOCK HL=LE
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=1ns

.ENDS 74ACT843
*
*
* ----------------------------------------------------------- 74ALS843 ------
*  9-Bit Bus Interface D-Type Latches With 3-State Outputs
*
*  The ALS\AS Logic Data Book, 1986, TI Pages 2-663 to 2-669
*  bss    6/20/94
*
.SUBCKT 74ALS843 OCBAR PREBAR CLRBAR C 1D 2D 3D 4D 5D 6D 7D 8D 9D
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(9) DPWR DGND
+     PREBAR CLRBAR C
+     1D 2D 3D 4D 5D 6D 7D 8D 9D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(9,1,3) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 
+     OCBAR
+     PREBAR CLRBAR C
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SET = {CHANGED_HL(PREBAR,0)}
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     GATE = {CHANGED_LH(C,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q = {
+       CASE(
+         SET & TRN_LH, DELAY(5ns,-1,22ns),
+         CLEAR & TRN_HL, DELAY(6ns,-1,23ns),
+         GATE & TRN_LH, DELAY(5ns,-1,21ns),
+         GATE & TRN_HL, DELAY(8ns,-1,26ns),
+         TRN_LH, DELAY(2ns,-1,13ns),
+         TRN_HL, DELAY(4ns,-1,18ns),
+         TRN_ZH, DELAY(2ns,-1,12ns),
+         TRN_ZL, DELAY(4ns,-1,14ns),
+         TRN_HZ, DELAY(2ns,-1,10ns),
+         TRN_LZ, DELAY(2ns,-1,12ns),
+         DELAY(9ns,-1,27ns))}

U3CON CONSTRAINT(12) DPWR DGND
+     PREBAR CLRBAR C 1D 2D 3D 4D 5D 6D 7D 8D 9D
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=35ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=35ns
+
+  WIDTH:
+     NODE=C
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(9)=1D 2D 3D 4D 5D 6D 7D 8D 9D
+     SETUPTIME=10ns
+     HOLDTIME=5ns
+     WHEN={CLRBAR!='0 | PREBAR!='0}

.ENDS 74ALS843
*
*
* ----------------------------------------------------------- 74AS843 ------
*  9-Bit Bus Interface D-Type Latches With 3-State Outputs
*
*  The ALS\AS Logic Data Book, 1986, TI Pages 2-663 to 2-669
*  bss    6/20/94
*
.SUBCKT 74AS843 OCBAR PREBAR CLRBAR C 1D 2D 3D 4D 5D 6D 7D 8D 9D
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(9) DPWR DGND
+     PREBAR CLRBAR C
+     1D 2D 3D 4D 5D 6D 7D 8D 9D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(9,1,3) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 
+     OCBAR
+     PREBAR CLRBAR C
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SET = {CHANGED_HL(PREBAR,0)}
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     GATE = {CHANGED_LH(C,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q = {
+       CASE(
+         SET & TRN_LH, DELAY(2ns,-1,10ns),
+         CLEAR & TRN_HL, DELAY(2ns,-1,13ns),
+         GATE & TRN_LH, DELAY(2ns,-1,12ns),
+         GATE & TRN_HL, DELAY(2ns,-1,12ns),
+         TRN_LH, DELAY(1ns,-1,6.5ns),
+         TRN_HL, DELAY(1ns,-1,9ns),
+         TRN_ZH, DELAY(2ns,-1,10.5ns),
+         TRN_ZL, DELAY(2ns,-1,13.5ns),
+         TRN_HZ, DELAY(1ns,-1,8ns),
+         TRN_LZ, DELAY(1ns,-1,8ns),
+         DELAY(3ns,-1,14.5ns))}

U3CON CONSTRAINT(12) DPWR DGND
+     PREBAR CLRBAR C 1D 2D 3D 4D 5D 6D 7D 8D 9D
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=4ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=4ns
+
+  WIDTH:
+     NODE=C
+     MIN_HI=4ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(9)=1D 2D 3D 4D 5D 6D 7D 8D 9D
+     SETUPTIME=2.5ns
+     HOLDTIME=2.5ns
+     WHEN={CLRBAR!='0 | PREBAR!='0}
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(1)=PREBAR
+     SETUPTIME_HI=15ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=14ns

.ENDS 74AS843

*-----------------------------------------------------------74F843-----

* 9 Bit Transparent Latch
* National Advanced Bipolar Logic Databook, 1995, pages 7-517 to 7-520
* jat 7/30/96

.SUBCKT 74F843 OEBAR LE D0 D1 D2 D3 D4 D5 D6 D7 D8 O0 O1 O2 O3 O4 O5 O6 O7 O8
+ PREBAR CLRBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(9) DPWR DGND
+ PREBAR CLRBAR LE
+ D0 D1 D2 D3 D4 D5 D6 D7 D8
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(9,1,12) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+ OEBAR
+ PREBAR CLRBAR LE D0 D1 D2 D3 D4 D5 D6 D7 D8
+ O0 O1 O2 O3 O4 O5 O6 O7 O8
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLEAR = {CHANGED_HL(CLRBAR,0)}
+   SET = {CHANGED_HL(PREBAR,0)}
+   LATCH = {CHANGED_LH(LE,0)}
+   DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+           CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0) |
+           CHANGED(D8,0)}
+ TRISTATE:
+ ENABLE LO = OEBAR
+   O0 O1 O2 O3 O4 O5 O6 O7 O8 = {
+    CASE(
+       TRN_ZH, DELAY(2.5NS,5NS,8.5NS),
+       TRN_ZL, DELAY(2.5NS,6.1NS,9NS),
+       TRN_HZ, DELAY(1NS,3.6NS,6.5NS),
+       TRN_LZ, DELAY(1NS,3.4NS,6.5NS),
+       SET & TRN_LH, DELAY(3NS,7.3NS,10NS),
+       CLEAR & TRN_HL, DELAY(3NS,6.9NS,10NS),
+       LATCH & TRN_LH, DELAY(5NS,8.5NS,12NS),
+       LATCH & TRN_HL, DELAY(2NS,4.7NS,7.5NS),
+       DATA & TRN_LH, DELAY(2.5NS,5.4NS,8NS),
+       DATA & TRN_HL, DELAY(1.5NS,4.2NS,6.5NS),
+       DELAY(6NS,9.5NS,13NS))}

U3 CONSTRAINT(12) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 D8 LE PREBAR CLRBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ WIDTH:
+   NODE = LE
+   MIN_HI = 4NS
+ SETUP_HOLD:
+   CLOCK HL = LE
+   DATA(9) = D0 D1 D2 D3 D4 D5 D6 D7 D8
+   SETUPTIME = 2NS
+   HOLDTIME_HI = 2.5NS
+   HOLDTIME_LO = 3NS
+ SETUP_HOLD:
+   CLOCK HL = LE
+   DATA(1) = PREBAR
+   SETUPTIME_HI = 10NS
+ SETUP_HOLD:
+   CLOCK HL = LE
+   DATA(1) = CLRBAR
+   SETUPTIME_HI = 12NS
+ WIDTH:
+   NODE = CLRBAR
+   MIN_LO = 5NS
+ WIDTH:
+   NODE = PREBAR
+   MIN_LO = 5NS

.ENDS 74F843

* ----------------------------------------------------------- 74ALS844 ------
*  9-Bit Bus Interface D-Type Latches With 3-State Outputs
*
*  The ALS\AS Logic Data Book, 1986, TI Pages 2-663 to 2-669
*  bss    6/20/94
*
.SUBCKT 74ALS844 OCBAR PREBAR CLRBAR C 1D 2D 3D 4D 5D 6D 7D 8D 9D
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(9) DPWR DGND
+     CLRBAR PREBAR C
+     1D 2D 3D 4D 5D 6D 7D 8D 9D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 
+     D0_GFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(9,1,3) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 
+     OCBAR
+     PREBAR CLRBAR C
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SET = {CHANGED_HL(PREBAR,0)}
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     GATE = {CHANGED_LH(C,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q = {
+       CASE(
+         SET & TRN_LH, DELAY(5ns,-1,22ns),
+         CLEAR & TRN_HL, DELAY(8ns,-1,25ns),
+         GATE & TRN_LH, DELAY(8ns,-1,29ns),
+         GATE & TRN_HL, DELAY(6ns,-1,22ns),
+         TRN_LH, DELAY(4ns,-1,20ns),
+         TRN_HL, DELAY(3ns,-1,15ns),
+         TRN_ZH, DELAY(4ns,-1,17ns),
+         TRN_ZL, DELAY(5ns,-1,20ns),
+         TRN_HZ, DELAY(1ns,-1,11ns),
+         TRN_LZ, DELAY(1ns,-1,12ns),
+         DELAY(9ns,-1,30ns))}

U3CON CONSTRAINT(12) DPWR DGND
+     PREBAR CLRBAR C 1D 2D 3D 4D 5D 6D 7D 8D 9D
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=35ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=35ns
+
+  WIDTH:
+     NODE=C
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(9)=1D 2D 3D 4D 5D 6D 7D 8D 9D
+     SETUPTIME=10ns
+     HOLDTIME=5ns
+     WHEN={CLRBAR!='0 | PREBAR!='0}

.ENDS 74ALS844
*
*
* ----------------------------------------------------------- 74AS844 ------
*  9-Bit Bus Interface D-Type Latches With 3-State Outputs
*
*  The ALS\AS Logic Data Book, 1986, TI Pages 2-663 to 2-669
*  bss    6/20/94
*
.SUBCKT 74AS844 OCBAR PREBAR CLRBAR C 1D 2D 3D 4D 5D 6D 7D 8D 9D
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(9) DPWR DGND
+     CLRBAR PREBAR C
+     1D 2D 3D 4D 5D 6D 7D 8D 9D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 
+     D0_GFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(9,1,3) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O 9Q_O 
+     OCBAR
+     PREBAR CLRBAR C
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q 
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     SET = {CHANGED_HL(PREBAR,0)}
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     GATE = {CHANGED_LH(C,0)}
+
+  TRISTATE:
+     ENABLE LO=OCBAR
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q 9Q = {
+       CASE(
+         SET & TRN_LH, DELAY(2ns,-1,10ns),
+         CLEAR & TRN_HL, DELAY(2ns,-1,13.5ns),
+         GATE & TRN_LH, DELAY(2ns,-1,12.5ns),
+         GATE & TRN_HL, DELAY(2ns,-1,13ns),
+         TRN_LH, DELAY(1ns,-1,8.5ns),
+         TRN_HL, DELAY(1ns,-1,10ns),
+         TRN_ZH, DELAY(2ns,-1,12ns),
+         TRN_ZL, DELAY(2ns,-1,13.5ns),
+         TRN_HZ, DELAY(1ns,-1,8ns),
+         TRN_LZ, DELAY(1ns,-1,8ns),
+         DELAY(3ns,-1,14.5ns))}

U3CON CONSTRAINT(12) DPWR DGND
+     PREBAR CLRBAR C 1D 2D 3D 4D 5D 6D 7D 8D 9D
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=4ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=4ns
+
+  WIDTH:
+     NODE=C
+     MIN_HI=4ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(9)=1D 2D 3D 4D 5D 6D 7D 8D 9D
+     SETUPTIME=2.5ns
+     HOLDTIME=2.5ns
+     WHEN={CLRBAR!='0 | PREBAR!='0}
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(1)=PREBAR
+     SETUPTIME_HI=15ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=14ns

.ENDS 74AS844

*-----------------------------------------------------------74F844-----

* 9 Bit Bus Interface Latch
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 818 to 829
* jat 7/30/96

.SUBCKT 74F844 OEBAR LE D0 D1 D2 D3 D4 D5 D6 D7 D8 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+ PREBAR MRBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(9) DPWR DGND
+ PREBAR MRBAR LE
+ D0BAR D1BAR D2BAR D3BAR D4BAR D5BAR D6BAR D7BAR D8BAR
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O Q8O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U1A LOGICEXP(9,9) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 D8
+ D0BAR D1BAR D2BAR D3BAR D4BAR D5BAR D6BAR D7BAR D8BAR
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+     D0BAR = {~D0}
+     D1BAR = {~D1}
+     D2BAR = {~D2}
+     D3BAR = {~D3}
+     D4BAR = {~D4}
+     D5BAR = {~D5}
+     D6BAR = {~D6}
+     D7BAR = {~D7}
+     D8BAR = {~D8}

U2 PINDLY(9,1,12) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O Q8O
+ OEBAR
+ MRBAR LE PREBAR D0 D1 D2 D3 D4 D5 D6 D7 D8
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLEAR = {CHANGED_HL(MRBAR,0)}
+   SET = {CHANGED_HL(PREBAR,0)}
+   LATCH = {CHANGED_LH(LE,0)}
+   DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+           CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0) |
+           CHANGED(D8,0)}
+ TRISTATE:
+ ENABLE LO = OEBAR
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8 = {
+    CASE(
+       TRN_ZH, DELAY(2.5NS,5NS,7.5NS),
+       TRN_ZL, DELAY(4NS,6NS,9.5NS),
+       TRN_HZ, DELAY(1NS,4.5NS,8NS),
+       TRN_LZ, DELAY(1NS,5NS,8NS),
+       SET & TRN_LH, DELAY(3.5NS,5.5NS,8.5NS),
+       CLEAR & TRN_HL, DELAY(5NS,7NS,10NS),
+       LATCH & TRN_LH, DELAY(5NS,7NS,10NS),
+       LATCH & TRN_HL, DELAY(4.5NS,6.5NS,9NS),
+       DATA & TRN_LH, DELAY(3.5NS,5.5NS,8.5NS),
+       DATA & TRN_HL, DELAY(3NS,5NS,8NS),
+       DELAY(6NS,8NS,11NS))}

U3 CONSTRAINT(12) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 D8 LE PREBAR MRBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ WIDTH:
+   NODE = LE
+   MIN_HI = 3NS
+ SETUP_HOLD:
+   CLOCK HL = LE
+   DATA(9) = D0 D1 D2 D3 D4 D5 D6 D7 D8
+   HOLDTIME_HI = 3NS
+   HOLDTIME_LO = 4NS
+ SETUP_HOLD:
+   CLOCK HL = LE
+   DATA(1) = MRBAR
+   SETUPTIME_HI = 3.5NS
+ WIDTH:
+   NODE = MRBAR
+   MIN_LO = 4NS
+ WIDTH:
+   NODE = PREBAR
+   MIN_LO = 4NS

.ENDS 74F844

* ----------------------------------------------------------- 74ACT845 ------
*  8-Bit Transparent Latch With Tri-State Outputs
*
*  The FACT Advanced CMOS Logic Data Book, 1993, National Pages 4-331 to 4-335
*  bss    6/20/94
*
.SUBCKT 74ACT845 OE1BAR OE2BAR OE3BAR PREBAR CLRBAR LE D0 D1 D2 D3 
+     D4 D5 D6 D7 O0 O1 O2 O3 O4 O5 O6 O7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     PREBAR CLRBAR LE
+     D0 D1 D2 D3 D4 D5 D6 D7
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nor(3) DPWR DGND
+     OE1BAR OE2BAR OE3BAR OEIN
+     D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(8,1,3) DPWR DGND
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O
+     OEIN
+     PREBAR CLRBAR LE
+     O0 O1 O2 O3 O4 O5 O6 O7
+     IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     SET = {CHANGED_HL(PREBAR,0)}
+     GATE = {CHANGED_LH(LE,0)}
+
+  TRISTATE:
+     ENABLE HI=OEIN
+     O0 O1 O2 O3 O4 O5 O6 O7 = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(2ns,7.5ns,15.5ns),
+         SET & TRN_LH, DELAY(2ns,6.5ns,14ns),
+         GATE & TRN_LH, DELAY(2ns,5.5ns,9ns),
+         GATE & TRN_HL, DELAY(2ns,5.5ns,9ns),
+         TRN_LH, DELAY(2ns,5.5ns,9.5ns),
+         TRN_HL, DELAY(2ns,5.5ns,9.5ns),
+         TRN_ZH, DELAY(2ns,5.5ns,9.5ns),
+         TRN_ZL, DELAY(2ns,5.5ns,9.5ns),
+         TRN_HZ, DELAY(2ns,6ns,10.5ns),
+         TRN_LZ, DELAY(2ns,6ns,10.5ns),
+         DELAY(3ns,8.5ns,16.5ns))}

U4CON CONSTRAINT(11) DPWR DGND
+     D0 D1 D2 D3 D4 D5 D6 D7 CLRBAR PREBAR LE
+     IO_ACT IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=10ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=11ns
+
+  WIDTH:
+     NODE=LE
+     MIN_HI=3.5ns
+
+  SETUP_HOLD:
+     CLOCK HL=LE
+     DATA(8)=D0 D1 D2 D3 D4 D5 D6 D7
+     SETUPTIME=1ns
+     HOLDTIME=2ns
+
+  SETUP_HOLD:
+     CLOCK HL=LE
+     DATA(1)=PREBAR
+     SETUPTIME_HI=2ns
+
+  SETUP_HOLD:
+     CLOCK HL=LE
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=1ns

.ENDS 74ACT845
*
*
* ----------------------------------------------------------- 74ALS845 ------
*  8-Bit Bus Interface D-Type Latches With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-671 to 2-679
*  bss    6/20/94
*
.SUBCKT 74ALS845 OC1BAR OC2BAR OC3BAR PREBAR CLRBAR C 1D 2D 3D 4D 
+     5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     PREBAR CLRBAR C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nor(3) DPWR DGND
+     OC1BAR OC2BAR OC3BAR OEIN
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(8,1,3) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     OEIN
+     PREBAR CLRBAR C
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     SET = {CHANGED_HL(PREBAR,0)}
+     GATE = {CHANGED_LH(C,0)}
+
+  TRISTATE:
+     ENABLE HI=OEIN
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(6ns,-1,24ns),
+         SET & TRN_LH, DELAY(6ns,-1,22ns),
+         GATE & TRN_LH, DELAY(5ns,-1,21ns),
+         GATE & TRN_HL, DELAY(8ns,-1,26ns),
+         TRN_LH, DELAY(2ns,-1,13ns),
+         TRN_HL, DELAY(4ns,-1,18ns),
+         TRN_ZH, DELAY(3ns,-1,16ns),
+         TRN_ZL, DELAY(5ns,-1,18ns),
+         TRN_HZ, DELAY(1ns,-1,11ns),
+         TRN_LZ, DELAY(2ns,-1,12ns),
+         DELAY(9ns,-1,27ns))}

U4CON CONSTRAINT(11) DPWR DGND
+     1D 2D 3D 4D 5D 6D 7D 8D CLRBAR PREBAR C
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=35ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=35ns
+
+  WIDTH:
+     NODE=C
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=10ns
+     HOLDTIME=5ns

.ENDS 74ALS845
*
*
* ----------------------------------------------------------- 74AS845 ------
*  8-Bit Bus Interface D-Type Latches With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-671 to 2-679
*  bss    6/20/94
*
.SUBCKT 74AS845 OC1BAR OC2BAR OC3BAR PREBAR CLRBAR C 1D 2D 3D 4D 
+     5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     PREBAR CLRBAR C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     D0_GFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nor(3) DPWR DGND
+     OC1BAR OC2BAR OC3BAR OEIN
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(8,1,3) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     OEIN
+     PREBAR CLRBAR C
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     SET = {CHANGED_HL(PREBAR,0)}
+     GATE = {CHANGED_LH(C,0)}
+
+  TRISTATE:
+     ENABLE HI=OEIN
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(2ns,-1,13ns),
+         SET & TRN_LH, DELAY(2ns,-1,10ns),
+         GATE & TRN_LH, DELAY(2ns,-1,12ns),
+         GATE & TRN_HL, DELAY(2ns,-1,12ns),
+         TRN_LH, DELAY(1ns,-1,6.5ns),
+         TRN_HL, DELAY(1ns,-1,9ns),
+         TRN_ZH, DELAY(2ns,-1,10.5ns),
+         TRN_ZL, DELAY(2ns,-1,13.5ns),
+         TRN_HZ, DELAY(1ns,-1,8ns),
+         TRN_LZ, DELAY(1ns,-1,8ns),
+         DELAY(3ns,-1,14.5ns))}

U4CON CONSTRAINT(11) DPWR DGND
+     1D 2D 3D 4D 5D 6D 7D 8D CLRBAR PREBAR C
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=4ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=4ns
+
+  WIDTH:
+     NODE=C
+     MIN_HI=4ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=2.5ns
+     HOLDTIME=2.5ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(1)=PREBAR
+     SETUPTIME_HI=15ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=14ns

.ENDS 74AS845

*-----------------------------------------------------------74F845-----

* 8 Bit Transparent Latch
* National Advanced Bipolar Logic Databook, 1995, pages 7-521 to 7-525
* jat 7/30/96

.SUBCKT 74F845 OE1BAR LE D0 D1 D2 D3 D4 D5 D6 D7 O0 O1 O2 O3 O4 O5 O6 O7
+ PREBAR CLRBAR OE2BAR OE3BAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(8) DPWR DGND
+ PREBAR CLRBAR LE
+ D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U1A LOGICEXP(3,1) DPWR DGND
+ OE1BAR OE2BAR OE3BAR
+ OUTENAB
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+     OUTENAB = {~(OE1BAR | OE2BAR | OE3BAR)}

U2 PINDLY(8,1,11) DPWR DGND
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ OUTENAB
+ CLRBAR PREBAR LE D0 D1 D2 D3 D4 D5 D6 D7
+ O0 O1 O2 O3 O4 O5 O6 O7
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLEAR = {CHANGED_HL(CLRBAR,0)}
+   SET = {CHANGED_HL(PREBAR,0)}
+   LATCH = {CHANGED_LH(LE,0)}
+   DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+           CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+ TRISTATE:
+ ENABLE HI = OUTENAB
+   O0 O1 O2 O3 O4 O5 O6 O7 = {
+    CASE(
+       TRN_ZH, DELAY(2.5NS,5.8NS,9.5NS),
+       TRN_ZL, DELAY(2.5NS,7.6NS,12NS),
+       TRN_HZ, DELAY(1NS,3.1NS,7.5NS),
+       TRN_LZ, DELAY(1NS,2.8NS,6.5NS),
+       SET & TRN_LH, DELAY(3NS,5.9NS,10NS),
+       CLEAR & TRN_HL, DELAY(3NS,6.5NS,10NS),
+       LATCH & TRN_LH, DELAY(5NS,8.1NS,12NS),
+       LATCH & TRN_HL, DELAY(2NS,4.4NS,7.5NS),
+       DATA & TRN_LH, DELAY(2.5NS,4.8NS,8NS),
+       DATA & TRN_HL, DELAY(1.5NS,3.6NS,6.5NS),
+       DELAY(6NS,9.1NS,13NS))}

U3 CONSTRAINT(11) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 LE PREBAR CLRBAR
+ IO_F IO_LEVEL={IO_LEVEL}
+ WIDTH:
+   NODE = LE
+   MIN_HI = 4NS
+ SETUP_HOLD:
+   CLOCK HL = LE
+   DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+   SETUPTIME = 2NS
+   HOLDTIME_HI = 2.5NS
+   HOLDTIME_LO = 3NS
+ SETUP_HOLD:
+   CLOCK HL = LE
+   DATA(1) = PREBAR
+   SETUPTIME_HI = 10NS
+ SETUP_HOLD:
+   CLOCK HL = LE
+   DATA(1) = CLRBAR
+   SETUPTIME_HI = 12NS
+ WIDTH:
+   NODE = CLRBAR
+   MIN_LO = 5NS
+ WIDTH:
+   NODE = PREBAR
+   MIN_LO = 5NS

.ENDS 74F845

* ----------------------------------------------------------- 74ALS846 ------
*  8-Bit Bus Interface D-Type Latches With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-671 to 2-679
*  bss    6/20/94
*
.SUBCKT 74ALS846 OC1BAR OC2BAR OC3BAR PREBAR CLRBAR C 1D 2D 3D 4D 
+     5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     CLRBAR PREBAR C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     D0_GFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nor(3) DPWR DGND
+     OC1BAR OC2BAR OC3BAR OEIN
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(8,1,3) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     OEIN
+     PREBAR CLRBAR C
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     SET = {CHANGED_HL(PREBAR,0)}
+     GATE = {CHANGED_LH(C,0)}
+
+  TRISTATE:
+     ENABLE HI=OEIN
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(9ns,-1,23ns),
+         SET & TRN_LH, DELAY(5ns,-1,20ns),
+         GATE & TRN_LH, DELAY(8ns,-1,27ns),
+         GATE & TRN_HL, DELAY(6ns,-1,22ns),
+         TRN_LH, DELAY(4ns,-1,20ns),
+         TRN_HL, DELAY(3ns,-1,15ns),
+         TRN_ZH, DELAY(3ns,-1,15ns),
+         TRN_ZL, DELAY(5ns,-1,18ns),
+         TRN_HZ, DELAY(1ns,-1,11ns),
+         TRN_LZ, DELAY(2ns,-1,12ns),
+         DELAY(10ns,-1,28ns))}

U4CON CONSTRAINT(11) DPWR DGND
+     1D 2D 3D 4D 5D 6D 7D 8D CLRBAR PREBAR C
+     IO_ALS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=35ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=35ns
+
+  WIDTH:
+     NODE=C
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=10ns
+     HOLDTIME=5ns

.ENDS 74ALS846
*
*
* ----------------------------------------------------------- 74AS846 ------
*  8-Bit Bus Interface D-Type Latches With 3-State Outputs
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-671 to 2-679
*  bss    6/20/94
*
.SUBCKT 74AS846 OC1BAR OC2BAR OC3BAR PREBAR CLRBAR C 1D 2D 3D 4D 
+     5D 6D 7D 8D 1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 dltch(8) DPWR DGND
+     CLRBAR PREBAR C
+     1D 2D 3D 4D 5D 6D 7D 8D
+     $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     D0_GFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nor(3) DPWR DGND
+     OC1BAR OC2BAR OC3BAR OEIN
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(8,1,3) DPWR DGND
+     1Q_O 2Q_O 3Q_O 4Q_O 5Q_O 6Q_O 7Q_O 8Q_O
+     OEIN
+     PREBAR CLRBAR C
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CLEAR = {CHANGED_HL(CLRBAR,0)}
+     SET = {CHANGED_HL(PREBAR,0)}
+     GATE = {CHANGED_LH(C,0)}
+
+  TRISTATE:
+     ENABLE HI=OEIN
+     1Q 2Q 3Q 4Q 5Q 6Q 7Q 8Q = {
+       CASE(
+         CLEAR & TRN_HL, DELAY(2ns,-1,13.5ns),
+         SET & TRN_LH, DELAY(2ns,-1,10ns),
+         GATE & TRN_LH, DELAY(2ns,-1,12.5ns),
+         GATE & TRN_HL, DELAY(2ns,-1,13ns),
+         TRN_LH, DELAY(1ns,-1,8.5ns),
+         TRN_HL, DELAY(1ns,-1,10ns),
+         TRN_ZH, DELAY(2ns,-1,12ns),
+         TRN_ZL, DELAY(2ns,-1,13.5ns),
+         TRN_HZ, DELAY(1ns,-1,8ns),
+         TRN_LZ, DELAY(1ns,-1,8ns),
+         DELAY(3ns,-1,14.5ns))}

U4CON CONSTRAINT(11) DPWR DGND
+     1D 2D 3D 4D 5D 6D 7D 8D CLRBAR PREBAR C
+     IO_AS00 IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=4ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=4ns
+
+  WIDTH:
+     NODE=C
+     MIN_HI=4ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(8)=1D 2D 3D 4D 5D 6D 7D 8D
+     SETUPTIME=2.5ns
+     HOLDTIME=2.5ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(1)=PREBAR
+     SETUPTIME_HI=15ns
+
+  SETUP_HOLD:
+     CLOCK HL=C
+     DATA(1)=CLRBAR
+     SETUPTIME_HI=14ns

.ENDS 74AS846

*-----------------------------------------------------------74F846-----

* 8 Bit Bus Interface Latch
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 818 to 829
* jat 7/30/96

.SUBCKT 74F846 OE1BAR LE D0 D1 D2 D3 D4 D5 D6 D7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ PREBAR MRBAR OE2BAR OE0BAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(8) DPWR DGND
+ PREBAR MRBAR LE
+ D0BAR D1BAR D2BAR D3BAR D4BAR D5BAR D6BAR D7BAR
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U1A LOGICEXP(11,9) DPWR DGND
+ OE1BAR OE2BAR OE0BAR D0 D1 D2 D3 D4 D5 D6 D7
+ OUTENAB D0BAR D1BAR D2BAR D3BAR D4BAR D5BAR D6BAR D7BAR
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+     OUTENAB = {~(OE1BAR | OE2BAR | OE0BAR)}
+     D0BAR = {~D0}
+     D1BAR = {~D1}
+     D2BAR = {~D2}
+     D3BAR = {~D3}
+     D4BAR = {~D4}
+     D5BAR = {~D5}
+     D6BAR = {~D6}
+     D7BAR = {~D7}

U2 PINDLY(8,1,11) DPWR DGND
+ Q0O Q1O Q2O Q3O Q4O Q5O Q6O Q7O
+ OUTENAB
+ MRBAR LE PREBAR D0 D1 D2 D3 D4 D5 D6 D7
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLEAR = {CHANGED_HL(MRBAR,0)}
+   SET = {CHANGED_HL(PREBAR,0)}
+   LATCH = {CHANGED_LH(LE,0)}
+   DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+           CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+ TRISTATE:
+ ENABLE HI = OUTENAB
+   Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 = {
+    CASE(
+       TRN_ZH, DELAY(2.5NS,5NS,7.5NS),
+       TRN_ZL, DELAY(4NS,6NS,9.5NS),
+       TRN_HZ, DELAY(1NS,4.5NS,8NS),
+       TRN_LZ, DELAY(1NS,5NS,8NS),
+       SET & TRN_LH, DELAY(3.5NS,5.5NS,8.5NS),
+       CLEAR & TRN_HL, DELAY(5NS,7NS,10NS),
+       LATCH & TRN_LH, DELAY(5NS,7NS,10NS),
+       LATCH & TRN_HL, DELAY(4.5NS,6.5NS,9NS),
+       DATA & TRN_LH, DELAY(3.5NS,5.5NS,8.5NS),
+       DATA & TRN_HL, DELAY(3NS,5NS,8NS),
+       DELAY(6NS,8NS,11NS))}

U3 CONSTRAINT(11) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 PREBAR MRBAR LE
+ IO_F IO_LEVEL={IO_LEVEL}
+ WIDTH:
+   NODE = LE
+   MIN_HI = 3NS
+ SETUP_HOLD:
+   CLOCK HL = LE
+   DATA(8) = D0 D1 D2 D3 D4 D5 D6 D7
+   HOLDTIME_HI = 3NS
+   HOLDTIME_LO = 4NS
+ SETUP_HOLD:
+   CLOCK HL = LE
+   DATA(1) = MRBAR
+   SETUPTIME_HI = 3.5NS
+ WIDTH:
+   NODE = MRBAR
+   MIN_LO = 4NS
+ WIDTH:
+   NODE = PREBAR
+   MIN_LO = 4NS

.ENDS 74F846

*-----------------------------------------------------------74LS848------

* 8-Input Priority Encoders with 3-State Outputs
* Motorola FAST and LS TTL Logic Data Book, 1992, pages 5-311 to 5-314
* jat 8/15/96

.SUBCKT 74LS848 D0 D1 D2 D3 D4 D5 D6 D7 EI A0 A1 A2 GS EO
+ OPTIONAL:  DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS:  MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(9,6) DPWR DGND
+ D0 D1 D2 D3 D4 D5 D6 D7 EI
+ A0O A1O A2O GSO EOO OUTPUT
+ D0_GATE IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   A0O = {~((~D1 & D2 & D4 & D6 & ~EI) | (~D3 & D4 & D6 & ~EI) |
+           (~D5 & D6 & ~EI) | (~D7 & ~EI))}
+   A1O = {~((~D2 & D4 & D5 & ~EI) | (~D3 & D4 & D5 & ~EI) | (~D6 & ~EI) | (~D7 & ~EI))}
+   A2O = {~((~D4 & ~EI) | (~D5 & ~EI) | (~D6 & ~EI) | (~D7 & ~EI))}
+   EOO = {~(D0 & D1 & D2 & D3 & D4 & D5 & D6 & D7 & ~EI)}
+   GSO = {~(EOO & ~EI)}
+   OUTPUT = {EI | (D0 & D1 & D2 & D3 & D4 & D5 & D6 & D7)}

U2 PINDLY(5,1,9) DPWR DGND
+ A0O A1O A2O EOO GSO
+ OUTPUT
+ D0 D1 D2 D3 D4 D5 D6 D7 EI
+ A0 A1 A2 EO GS
+ IO_LS MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+  DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+          CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0)}
+  E = {CHANGED(EI,0)}
+ PINDLY:
+   EO = {
+     CASE(
+       E & TRN_LH, DELAY(-1,17NS,21NS),
+       E & TRN_HL, DELAY(-1,30NS,45NS),
+       DATA & TRN_LH, DELAY(-1,11NS,18NS),
+       DATA & TRN_HL, DELAY(-1,26NS,40NS),
+       DELAY(-1,31NS,46NS))}
+   GS = {
+     CASE(
+       E & TRN_LH, DELAY(-1,11NS,17NS),
+       E & TRN_HL, DELAY(-1,14NS,36NS),
+       DATA & TRN_LH, DELAY(-1,38NS,55NS),
+       DATA & TRN_HL, DELAY(-1,9NS,21NS),
+       DELAY(-1,39NS,56NS))}
+ TRISTATE:
+ ENABLE LO = OUTPUT
+   A0 A1 A2 = {
+     CASE(
+       TRN_ZH, DELAY(-1,25NS,39NS),
+       TRN_ZL, DELAY(-1,24NS,41NS),
+       TRN_HZ, DELAY(-1,18NS,27NS),
+       TRN_LZ, DELAY(-1,23NS,35NS),
+       DATA & TRN_LH, DELAY(-1,12NS,18NS),
+       DATA & TRN_HL, DELAY(-1,20NS,30NS),
+       DELAY(-1,26NS,40NS))}

.ENDS 74LS848

*-------------------------------------------------------------74AS850------

* 1 of 16 Data Selector/Multiplexer with 3-State Outputs
* TI ALS/AS Logic Data Book, 1986, pages 2-681 to 2-690
* jat 1/2/96

.SUBCKT 74AS850 GBAR GYBAR GW CLK S0 S1 S2 S3 D0 D1 D2 D3 D4 D5 D6 D7 D8
+ D9 D10 D11 D12 D13 D14 D15 Y W
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(27,4) DPWR DGND
+ GBAR GYBAR GW D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 D11 D12 D13 D14 D15
+ Q0 Q1 Q2 Q3 Q0BAR Q1BAR Q2BAR Q3BAR
+ YO WO ENABY ENABW
+ D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  ENABY = {(~GBAR) & (~GYBAR)}
+  ENABW = {(~GBAR) & GW}
+  Y0 = {D0 & Q3BAR & Q2BAR & Q1BAR & Q0BAR}
+  Y1 = {D1 & Q3BAR & Q2BAR & Q1BAR & Q0}
+  Y2 = {D2 & Q3BAR & Q2BAR & Q1 & Q0BAR}
+  Y3 = {D3 & Q3BAR & Q2BAR & Q1 & Q0}
+  Y4 = {D4 & Q3BAR & Q2 & Q1BAR & Q0BAR}
+  Y5 = {D5 & Q3BAR & Q2 & Q1BAR & Q0}
+  Y6 = {D6 & Q3BAR & Q2 & Q1 & Q0BAR}
+  Y7 = {D7 & Q3BAR & Q2 & Q1 & Q0}
+  Y8 = {D8 & Q3 & Q2BAR & Q1BAR & Q0BAR}
+  Y9 = {D9 & Q3 & Q2BAR & Q1BAR & Q0}
+  Y10 = {D10 & Q3 & Q2BAR & Q1 & Q0BAR}
+  Y11 = {D11 & Q3 & Q2BAR & Q1 & Q0}
+  Y12 = {D12 & Q3 & Q2 & Q1BAR & Q0BAR}
+  Y13 = {D13 & Q3 & Q2 & Q1BAR & Q0}
+  Y14 = {D14 & Q3 & Q2 & Q1 & Q0BAR}
+  Y15 = {D15 & Q3 & Q2 & Q1 & Q0}
+  YO = {Y0 | Y1 | Y2 | Y3 | Y4 | Y5 | Y6 | Y7 | Y8 | Y9 | Y10 | Y11 | Y12 | 
+        Y13 | Y14 | Y15}
+  WO = {~YO}

U2 DFF(4) DPWR DGND
+ $D_HI $D_HI CLK
+ S0 S1 S2 S3
+ Q0 Q1 Q2 Q3
+ Q0BAR Q1BAR Q2BAR Q3BAR
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(2,2,20) DPWR DGND
+ YO WO
+ ENABY ENABW
+ GBAR GYBAR GW CLK D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 D11 D12 D13 D14 D15
+ Y W
+ IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    GENAB = {CHANGED(GBAR,0)}
+    GYENAB = {CHANGED(GYBAR,0)}
+    GWENAB = {CHANGED(GW,0)}
+    EDGE = {CHANGED_LH(CLK,0)}
+    DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+            CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0) |
+            CHANGED(D8,0) | CHANGED(D9,0) | CHANGED(D10,0) | CHANGED(D11,0) |
+            CHANGED(D12,0) | CHANGED(D13,0) | CHANGED(D14,0) | CHANGED(D15,0)}
+ TRISTATE:
+    ENABLE HI = ENABY
+    Y = {
+      CASE(
+        (GENAB | GYENAB) & TRN_ZH, DELAY(2NS,-1,8NS),
+        (GENAB | GYENAB) & TRN_ZL, DELAY(3NS,-1,11NS),
+        (GENAB | GYENAB) & TRN_HZ, DELAY(1NS,-1,6NS),
+        (GENAB | GYENAB) & TRN_LZ, DELAY(2NS,-1,8NS),
+        EDGE & TRN_LH, DELAY(3NS,-1,14.5NS),
+        EDGE & TRN_HL, DELAY(3NS,-1,17.5NS),
+        DATA & TRN_LH, DELAY(3NS,-1,10.5NS),
+        DATA & TRN_HL, DELAY(3NS,-1,11NS),
+        DELAY(4NS,-1,18.5NS))}
+ TRISTATE:
+    ENABLE HI = ENABW
+    W = {
+      CASE(
+        GENAB & TRN_ZH, DELAY(2NS,-1,8NS),
+        GENAB & TRN_ZL, DELAY(3NS,-1,21NS),
+        GENAB & TRN_HZ, DELAY(1NS,-1,6NS),
+        GENAB & TRN_LZ, DELAY(2NS,-1,8NS),
+        GWENAB & TRN_ZH, DELAY(2NS,-1,10NS),
+        GWENAB & TRN_ZL, DELAY(3NS,-1,25NS),
+        GWENAB & TRN_HZ, DELAY(1NS,-1,6NS),
+        GWENAB & TRN_LZ, DELAY(2NS,-1,11NS),
+        EDGE & TRN_LH, DELAY(3NS,-1,15NS),
+        EDGE & TRN_HL, DELAY(3.5NS,-1,13NS),
+        DATA & TRN_LH, DELAY(3NS,-1,8NS),
+        DATA & TRN_HL, DELAY(1NS,-1,6NS),
+        DELAY(4.5NS,-1,26NS))}

U4 CONSTRAINT(5) DPWR DGND
+ CLK S0 S1 S2 S3
+ IO_AS00 IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLK
+   MAXFREQ = 60MEG
+ WIDTH:
+   NODE = CLK
+   MIN_LO = 8NS
+   MIN_HI = 8NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(4) = S0 S1 S2 S3
+   SETUPTIME = 10NS

.ENDS 74AS850

*-------------------------------------------------------------74AS851------

* 1 of 16 Data Selector/Multiplexer with 3-State Outputs
* TI ALS/AS Logic Data Book, 1986, pages 2-681 to 2-690
* jat 1/2/96

.SUBCKT 74AS851 GBAR GYBAR GW SCBAR S0 S1 S2 S3 D0 D1 D2 D3 D4 D5 D6 D7 D8
+ D9 D10 D11 D12 D13 D14 D15 Y W
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(28,5) DPWR DGND
+ GBAR GYBAR GW D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 D11 D12 D13 D14 D15
+ Q0 Q1 Q2 Q3 Q0BAR Q1BAR Q2BAR Q3BAR SCBAR
+ YO WO ENABY ENABW SC
+ D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  SC = {~SCBAR}
+  ENABY = {(~GBAR) & (~GYBAR)}
+  ENABW = {(~GBAR) & GW}
+  Y0 = {D0 & Q3BAR & Q2BAR & Q1BAR & Q0BAR}
+  Y1 = {D1 & Q3BAR & Q2BAR & Q1BAR & Q0}
+  Y2 = {D2 & Q3BAR & Q2BAR & Q1 & Q0BAR}
+  Y3 = {D3 & Q3BAR & Q2BAR & Q1 & Q0}
+  Y4 = {D4 & Q3BAR & Q2 & Q1BAR & Q0BAR}
+  Y5 = {D5 & Q3BAR & Q2 & Q1BAR & Q0}
+  Y6 = {D6 & Q3BAR & Q2 & Q1 & Q0BAR}
+  Y7 = {D7 & Q3BAR & Q2 & Q1 & Q0}
+  Y8 = {D8 & Q3 & Q2BAR & Q1BAR & Q0BAR}
+  Y9 = {D9 & Q3 & Q2BAR & Q1BAR & Q0}
+  Y10 = {D10 & Q3 & Q2BAR & Q1 & Q0BAR}
+  Y11 = {D11 & Q3 & Q2BAR & Q1 & Q0}
+  Y12 = {D12 & Q3 & Q2 & Q1BAR & Q0BAR}
+  Y13 = {D13 & Q3 & Q2 & Q1BAR & Q0}
+  Y14 = {D14 & Q3 & Q2 & Q1 & Q0BAR}
+  Y15 = {D15 & Q3 & Q2 & Q1 & Q0}
+  YO = {Y0 | Y1 | Y2 | Y3 | Y4 | Y5 | Y6 | Y7 | Y8 | Y9 | Y10 | Y11 | Y12 | 
+        Y13 | Y14 | Y15}
+  WO = {~YO}

U2 DLTCH(4) DPWR DGND
+ $D_HI $D_HI SC
+ S0 S1 S2 S3
+ Q0 Q1 Q2 Q3
+ Q0BAR Q1BAR Q2BAR Q3BAR
+ D0_GFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(2,2,24) DPWR DGND
+ YO WO
+ ENABY ENABW
+ GBAR GYBAR GW SCBAR D0 D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 D11 D12 D13 D14 D15
+ S0 S1 S2 S3
+ Y W
+ IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+    GENAB = {CHANGED(GBAR,0)}
+    GYENAB = {CHANGED(GYBAR,0)}
+    GWENAB = {CHANGED(GW,0)}
+    LATCH = {CHANGED_HL(SCBAR,0)}
+    SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0) | CHANGED(S3,0)}
+    DATA = {CHANGED(D0,0) | CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) |
+            CHANGED(D4,0) | CHANGED(D5,0) | CHANGED(D6,0) | CHANGED(D7,0) |
+            CHANGED(D8,0) | CHANGED(D9,0) | CHANGED(D10,0) | CHANGED(D11,0) |
+            CHANGED(D12,0) | CHANGED(D13,0) | CHANGED(D14,0) | CHANGED(D15,0)}
+ TRISTATE:
+    ENABLE HI = ENABY
+    Y = {
+      CASE(
+        (GENAB | GYENAB) & TRN_ZH, DELAY(2NS,-1,8NS),
+        (GENAB | GYENAB) & TRN_ZL, DELAY(3NS,-1,11NS),
+        (GENAB | GYENAB) & TRN_HZ, DELAY(1NS,-1,6NS),
+        (GENAB | GYENAB) & TRN_LZ, DELAY(2NS,-1,8NS),
+        LATCH & TRN_LH, DELAY(3NS,-1,18NS),
+        LATCH & TRN_HL, DELAY(3NS,-1,20NS),
+        SELECT & TRN_LH, DELAY(3NS,-1,18NS),
+        SELECT & TRN_HL, DELAY(3NS,-1,19NS),
+        DATA & TRN_LH, DELAY(3NS,-1,10.5NS),
+        DATA & TRN_HL, DELAY(3NS,-1,11NS),
+        DELAY(4NS,-1,20NS))}
+ TRISTATE:
+    ENABLE HI = ENABW
+    W = {
+      CASE(
+        GENAB & TRN_ZH, DELAY(2NS,-1,8NS),
+        GENAB & TRN_ZL, DELAY(3NS,-1,21NS),
+        GENAB & TRN_HZ, DELAY(1NS,-1,6NS),
+        GENAB & TRN_LZ, DELAY(2NS,-1,8NS),
+        GWENAB & TRN_ZH, DELAY(2NS,-1,10NS),
+        GWENAB & TRN_ZL, DELAY(3NS,-1,25NS),
+        GWENAB & TRN_HZ, DELAY(1NS,-1,6NS),
+        GWENAB & TRN_LZ, DELAY(2NS,-1,11NS),
+        LATCH & TRN_LH, DELAY(3NS,-1,16NS),
+        LATCH & TRN_HL, DELAY(3NS,-1,15NS),
+        SELECT & TRN_LH, DELAY(3NS,-1,16NS),
+        SELECT & TRN_HL, DELAY(3NS,-1,15NS),
+        DATA & TRN_LH, DELAY(3NS,-1,8NS),
+        DATA & TRN_HL, DELAY(1NS,-1,6NS),
+        DELAY(4NS,-1,26NS))}

U4 CONSTRAINT(5) DPWR DGND
+ SCBAR S0 S1 S2 S3
+ IO_AS00 IO_LEVEL={IO_LEVEL}
+ WIDTH:
+   NODE = SCBAR
+   MIN_LO = 10NS
+ SETUP_HOLD:
+   CLOCK LH = SCBAR
+   DATA(4) = S0 S1 S2 S3
+   SETUPTIME = 4.5NS

.ENDS 74AS851

*------------------------------------------------------------74AS852-----

* 8-Bit Universal Transceiver Port Controllers
* TI ALS/AS Logic Data Book, 1986, pages 2-691 to 2-696
* jat 1/2/96

.SUBCKT 74AS852 S0 S1 S2 A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+ Q8 SERIN CLK
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(28,26) DPWR DGND
+ S0 S1 S2 A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 SERIN Q1 Q2 Q3 Q4
+ Q5 Q6 Q7 Q8O
+ ENABBA ENABAB D1 D2 D3 D4 D5 D6 D7 D8 A1O A2O A3O A4O A5O A6O A7O A8O
+ B1O B2O B3O B4O B5O B6O B7O B8O
+ D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+ S0BAR= {~S0}
+ S1BAR = {~S1}
+ S2BAR = {~S2}
+ ENABBA = {~((S2 & S1) | (~S0))}
+ ENABAB = {~(S0 | (S2 & S1))}
+ D1 = {((A1 & S2BAR & S0BAR) | (B1 & S2BAR & S0) | (SERIN & S2))  & (~(S0 & S1 & S2))}
+ D2 = {((A2 & S2BAR & S0BAR) | (B2 & S2BAR & S0) | (Q1 & S2)) & (~(S0 & S1 & S2))}
+ D3 = {((A3 & S2BAR & S0BAR) | (B3 & S2BAR & S0) | (Q2 & S2)) & (~(S0 & S1 & S2))}
+ D4 = {((A4 & S2BAR & S0BAR) | (B4 & S2BAR & S0) | (Q3 & S2)) & (~(S0 & S1 & S2))}
+ D5 = {((A5 & S2BAR & S0BAR) | (B5 & S2BAR & S0) | (Q4 & S2)) & (~(S0 & S1 & S2))}
+ D6 = {((A6 & S2BAR & S0BAR) | (B6 & S2BAR & S0) | (Q5 & S2)) & (~(S0 & S1 & S2))}
+ D7 = {((A7 & S2BAR & S0BAR) | (B7 & S2BAR & S0) | (Q6 & S2)) & (~(S0 & S1 & S2))}
+ D8 = {((A8 & S2BAR & S0BAR) | (B8 & S2BAR & S0) | (Q7 & S2)) & (~(S0 & S1 & S2))}
+ A1O = {(B1 & S1BAR) | (Q1 & S1)}
+ A2O = {(B2 & S1BAR) | (Q2 & S1)}
+ A3O = {(B3 & S1BAR) | (Q3 & S1)}
+ A4O = {(B4 & S1BAR) | (Q4 & S1)}
+ A5O = {(B5 & S1BAR) | (Q5 & S1)}
+ A6O = {(B6 & S1BAR) | (Q6 & S1)}
+ A7O = {(B7 & S1BAR) | (Q7 & S1)}
+ A8O = {(B8 & S1BAR) | (Q8O & S1)}
+ B1O = {(A1 & S1BAR) | (Q1 & S1)}
+ B2O = {(A2 & S1BAR) | (Q2 & S1)}
+ B3O = {(A3 & S1BAR) | (Q3 & S1)}
+ B4O = {(A4 & S1BAR) | (Q4 & S1)}
+ B5O = {(A5 & S1BAR) | (Q5 & S1)}
+ B6O = {(A6 & S1BAR) | (Q6 & S1)}
+ B7O = {(A7 & S1BAR) | (Q7 & S1)}
+ B8O = {(A8 & S1BAR) | (Q8O & S1)}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CLK
+ D1 D2 D3 D4 D5 D6 D7 D8
+ Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8O
+ Q1BAR Q2BAR Q3BAR Q4BAR Q5BAR Q6BAR Q7BAR Q8BARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(17,2,20) DPWR DGND
+ A1O A2O A3O A4O A5O A6O A7O A8O B1O B2O B3O B4O B5O B6O B7O B8O Q8O
+ ENABAB ENABBA
+ CLK S0 S1 S2 A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+ A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 Q8
+ IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   EDGE = {CHANGED_LH(CLK,0)}
+   SELECT = {CHANGED(S0,0) | CHANGED(S1,0) | CHANGED(S2,0)}
+   DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+            CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0)}
+   DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+            CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B8,0)}
+ TRISTATE:
+ ENABLE HI = ENABBA
+    A1 A2 A3 A4 A5 A6 A7 A8 = {
+      CASE(
+       TRN_ZH, DELAY(2NS,-1,7NS),
+       TRN_ZL, DELAY(3NS,-1,10.5NS),
+       TRN_HZ, DELAY(2NS,-1,7NS),
+       TRN_LZ, DELAY(3NS,-1,10.5NS),
+       SELECT & TRN_LH, DELAY(3NS,-1,10NS),
+       SELECT & TRN_HL, DELAY(3NS,-1,10.5NS),
+       DATAB & TRN_LH, DELAY(2NS,-1,7.5NS),
+       DATAB & TRN_HL, DELAY(3NS,-1,11NS),
+       EDGE & TRN_LH, DELAY(2NS,-1,9NS),
+       EDGE & TRN_HL, DELAY(3NS,-1,12.5NS),
+       DELAY(4NS,-1,13.5NS))}
+ TRISTATE:
+ ENABLE HI = ENABAB
+    B1 B2 B3 B4 B5 B6 B7 B8 = {
+      CASE(
+       TRN_ZH, DELAY(2NS,-1,7NS),
+       TRN_ZL, DELAY(3NS,-1,10.5NS),
+       TRN_HZ, DELAY(2NS,-1,7NS),
+       TRN_LZ, DELAY(3NS,-1,10.5NS),
+       SELECT & TRN_LH, DELAY(3NS,-1,10NS),
+       SELECT & TRN_HL, DELAY(3NS,-1,10.5NS),
+       DATAA & TRN_LH, DELAY(2NS,-1,7.5NS),
+       DATAA & TRN_HL, DELAY(3NS,-1,11NS),
+       EDGE & TRN_LH, DELAY(2NS,-1,9NS),
+       EDGE & TRN_HL, DELAY(3NS,-1,12.5NS),
+       DELAY(4NS,-1,13.5NS))}
+ PINDLY:
+   Q8 = {
+     CASE(
+       EDGE & TRN_LH, DELAY(2NS,-1,8NS),
+       EDGE & TRN_HL, DELAY(3NS,-1,10NS),
+       DELAY(4NS,-1,11NS))}

U4 CONSTRAINT(21) DPWR DGND
+ CLK A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 SERIN S0 S1 S2
+ IO_AS00 IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLK
+   MAXFREQ = 50MEG
+ WIDTH:
+   NODE = CLK
+   MIN_LO = 10NS
+   MIN_HI = 10NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(20) = A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 SERIN S0 S1 S2
+   SETUPTIME =  5.5NS

.ENDS 74AS852

*------------------------------------------------------------74AS856-----

* 8-Bit Universal Transceiver Port Controllers
* TI ALS/AS Logic Data Book, 1986, pages 2-697 to 2-701
* jat 1/2/96

.SUBCKT 74AS856 OEBBAR OEABAR MODE A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+ Q8 SERIN CLK
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(26,16) DPWR DGND
+ MODE A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 SERIN Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8O
+ D1 D2 D3 D4 D5 D6 D7 D8 A1O A2O A3O A4O A5O A6O A7O A8O
+ D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+ D1 = {(A1 & (~MODE)) | (SERIN & MODE)}
+ D2 = {(A2 & (~MODE)) | (Q1 & MODE)}
+ D3 = {(A3 & (~MODE)) | (Q2 & MODE)}
+ D4 = {(A4 & (~MODE)) | (Q3 & MODE)}
+ D5 = {(A5 & (~MODE)) | (Q4 & MODE)}
+ D6 = {(A6 & (~MODE)) | (Q5 & MODE)}
+ D7 = {(A7 & (~MODE)) | (Q6 & MODE)}
+ D8 = {(A8 & (~MODE)) | (Q7 & MODE)}
+ A1O = {(B1 & (~MODE)) | (Q1 & MODE)}
+ A2O = {(B2 & (~MODE)) | (Q2 & MODE)}
+ A3O = {(B3 & (~MODE)) | (Q3 & MODE)}
+ A4O = {(B4 & (~MODE)) | (Q4 & MODE)}
+ A5O = {(B5 & (~MODE)) | (Q5 & MODE)}
+ A6O = {(B6 & (~MODE)) | (Q6 & MODE)}
+ A7O = {(B7 & (~MODE)) | (Q7 & MODE)}
+ A8O = {(B8 & (~MODE)) | (Q8O & MODE)}

U2 DFF(8) DPWR DGND
+ $D_HI $D_HI CLK
+ D1 D2 D3 D4 D5 D6 D7 D8
+ Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8O
+ $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC $D_NC
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 PINDLY(17,2,18) DPWR DGND
+ A1O A2O A3O A4O A5O A6O A7O A8O Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8O Q8O
+ OEABAR OEBBAR
+ CLK MODE A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8
+ A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 Q8
+ IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   EDGE = {CHANGED_LH(CLK,0)}
+   MODEUP = {CHANGED_LH(MODE,0)}
+   MODEDOWN = {CHANGED_HL(MODE,0)}
+   DATAA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+            CHANGED(A5,0) | CHANGED(A6,0) | CHANGED(A7,0) | CHANGED(A8,0)}
+   DATAB = {CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0) |
+            CHANGED(B5,0) | CHANGED(B6,0) | CHANGED(B7,0) | CHANGED(B8,0)}
+ TRISTATE:
+ ENABLE LO = OEABAR
+    A1 A2 A3 A4 A5 A6 A7 A8 = {
+      CASE(
+       TRN_ZH, DELAY(2NS,-1,7NS),
+       TRN_ZL, DELAY(2NS,-1,10NS),
+       TRN_HZ, DELAY(2NS,-1,7NS),
+       TRN_LZ, DELAY(2NS,-1,9.5NS),
+       MODEUP & TRN_LH, DELAY(2NS,-1,7.5NS),
+       MODEUP & TRN_HL, DELAY(5NS,-1,19NS),
+       MODEDOWN & TRN_LH, DELAY(2NS,-1,7.5NS),
+       MODEDOWN & TRN_HL, DELAY(2NS,-1,8NS),
+       DATAB & TRN_LH, DELAY(2NS,-1,7NS),
+       DATAB & TRN_HL, DELAY(2NS,-1,9.5NS),
+       EDGE & TRN_LH, DELAY(3NS,-1,9NS),
+       EDGE & TRN_HL, DELAY(3NS,-1,11NS),
+       DELAY(6NS,-1,20NS))}
+ TRISTATE:
+ ENABLE LO = OEBBAR
+    B1 B2 B3 B4 B5 B6 B7 B8 = {
+      CASE(
+       TRN_ZH, DELAY(2NS,-1,7NS),
+       TRN_ZL, DELAY(2NS,-1,10NS),
+       TRN_HZ, DELAY(2NS,-1,7NS),
+       TRN_LZ, DELAY(2NS,-1,9.5NS),
+       MODEUP & TRN_LH, DELAY(2NS,-1,7.5NS),
+       MODEUP & TRN_HL, DELAY(5NS,-1,19NS),
+       MODEDOWN & TRN_LH, DELAY(2NS,-1,7.5NS),
+       MODEDOWN & TRN_HL, DELAY(2NS,-1,8NS),
+       DATAA & TRN_LH, DELAY(2NS,-1,7NS),
+       DATAA & TRN_HL, DELAY(2NS,-1,9.5NS),
+       EDGE & TRN_LH, DELAY(3NS,-1,9NS),
+       EDGE & TRN_HL, DELAY(3NS,-1,11NS),
+       DELAY(6NS,-1,20NS))}
+ PINDLY:
+   Q8 = {
+     CASE(
+       EDGE & TRN_LH, DELAY(2NS,-1,7.5NS),
+       EDGE & TRN_HL, DELAY(2NS,-1,9NS),
+       DELAY(3NS,-1,10NS))}

U4 CONSTRAINT(21) DPWR DGND
+ CLK A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 SERIN OEABAR OEBBAR MODE
+ IO_AS00 IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLK
+   MAXFREQ = 50MEG
+ WIDTH:
+   NODE = CLK
+   MIN_LO = 10NS
+   MIN_HI = 10NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(20) = A1 A2 A3 A4 A5 A6 A7 A8 B1 B2 B3 B4 B5 B6 B7 B8 SERIN OEABAR OEBBAR MODE
+   SETUPTIME =  5.5NS

.ENDS 74AS856

* ----------------------------------------------------------- 74ALS857 ------
*  Hex 2-To-1 Universal Multiplexers
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-703 to 2-709
*  bss    6/21/94
*
.SUBCKT 74ALS857 S0 S1 COMP 1A 1B 2A 2B 3A 3B 4A 4B 5A 5B 6A 6B 
+     1Y 2Y 3Y 4Y 5Y 6Y OPER
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(15,9) DPWR DGND
+     S0 S1 COMP 1A 1B 2A 2B 3A 3B 4A 4B 5A 5B 6A 6B
+     1Y_O 2Y_O 3Y_O 4Y_O 5Y_O 6Y_O OPER_O ENY ENOP
+     D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     ENY = {~(S0 & S1 & COMP)}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     ENOP = {~((s0bar & S1) | (S1 & COMP))}
+     1yin = {((1A & s0bar & s1bar) | (S0 & s1bar & 1B) | (1A & 1B & s0bar))}
+     1Y_O = {COMP ^ 1yin}
+     2yin = {((2A & s0bar & s1bar) | (S0 & s1bar & 2B) | (2A & 2B & s0bar))}
+     2Y_O = {COMP ^ 2yin}
+     3yin = {((3A & s0bar & s1bar) | (S0 & s1bar & 3B) | (3A & 3B & s0bar))}
+     3Y_O = {COMP ^ 3yin}
+     4yin = {((4A & s0bar & s1bar) | (S0 & s1bar & 4B) | (4A & 4B & s0bar))}
+     4Y_O = {COMP ^ 4yin}
+     5yin = {((5A & s0bar & s1bar) | (S0 & s1bar & 5B) | (5A & 5B & s0bar))}
+     5Y_O = {COMP ^ 5yin}
+     6yin = {((6A & s0bar & s1bar) | (S0 & s1bar & 6B) | (6A & 6B & s0bar))}
+     6Y_O = {COMP ^ 6yin}
+     atot = {~(1A | 2A | 3A | 4A | 5A | 6A)}
+     btot = {~(1B | 2B | 3B | 4B | 5B | 6B)}
+     OPER_O = {((s0bar & s1bar & atot) | (S0 & s1bar & btot))}

U2DLY PINDLY(7,2,15) DPWR DGND
+     1Y_O 2Y_O 3Y_O 4Y_O 5Y_O 6Y_O OPER_O
+     ENY ENOP
+     1A 2A 3A 4A 5A 6A 1B 2B 3B 4B 5B 6B S0 S1 COMP
+     1Y 2Y 3Y 4Y 5Y 6Y OPER
+     IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1A,0) | CHANGED(1B,0) | CHANGED(2A,0) | CHANGED(2B,0) |
+             CHANGED(3A,0) | CHANGED(3B,0) | CHANGED(4A,0) | CHANGED(4B,0) |
+             CHANGED(5A,0) | CHANGED(5B,0) | CHANGED(6A,0) | CHANGED(6B,0)}
+     CHS0 = {CHANGED(S0,0)}
+     CHS1 = {CHANGED(S1,0)}
+     SELECT = {CHS0 | CHS1}
+     ANDIT = {CHANGED(COMP,0)}
+
+  TRISTATE:
+     ENABLE HI=ENY
+     1Y 2Y 3Y 4Y 5Y 6Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(7ns,-1,33ns),
+         SELECT & TRN_HL, DELAY(7ns,-1,33ns),
+         ANDIT & TRN_LH, DELAY(6ns,-1,18ns),
+         ANDIT & TRN_HL, DELAY(6ns,-1,18ns),
+         DATA & COMP=='1 & TRN_LH, DELAY(4ns,-1,25ns),
+         DATA & COMP=='1 & TRN_HL, DELAY(4ns,-1,25ns),
+         DATA & COMP!='1 & TRN_LH, DELAY(4ns,-1,18ns),
+         DATA & COMP!='1 & TRN_HL, DELAY(4ns,-1,18ns),
+         SELECT & TRN_Z$, DELAY(7ns,-1,35ns),
+         ANDIT & TRN_Z$, DELAY(8ns,-1,24ns),
+         ANDIT & TRN_$Z, DELAY(6ns,-1,21ns),
+         SELECT & TRN_$Z, DELAY(2ns,-1,23ns),
+         DELAY(9ns,-1,36ns))}
+
+  TRISTATE:
+     ENABLE HI=ENOP
+     OPER = {
+       CASE(
+         SELECT & TRN_LH, DELAY(5ns,-1,23ns),
+         SELECT & TRN_HL, DELAY(5ns,-1,23ns),
+         DATA & TRN_LH, DELAY(5ns,-1,37ns),
+         DATA & TRN_HL, DELAY(5ns,-1,37ns),
+         CHS0 & TRN_Z$, DELAY(6ns,-1,20ns),
+         CHS0 & TRN_$Z, DELAY(11ns,-1,27ns),
+         CHS1 & TRN_Z$, DELAY(6ns,-1,25ns),
+         CHS1 & TRN_$Z, DELAY(3ns,-1,19ns),
+         ANDIT & TRN_Z$, DELAY(9ns,-1,25ns),
+         ANDIT & TRN_$Z, DELAY(6ns,-1,20ns),
+         DELAY(12ns,-1,38ns))}

.ENDS 74ALS857
*
*
* ----------------------------------------------------------- 74AS857 ------
*  Hex 2-To-1 Universal Multiplexers
*
*  The ALS/AS Logic Data Book, 1986, TI Pages 2-703 to 2-709
*  bss    6/21/94
*
.SUBCKT 74AS857 S0 S1 COMP 1A 1B 2A 2B 3A 3B 4A 4B 5A 5B 6A 6B 
+     1Y 2Y 3Y 4Y 5Y 6Y OPER
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(15,9) DPWR DGND
+     S0 S1 COMP 1A 1B 2A 2B 3A 3B 4A 4B 5A 5B 6A 6B
+     1Y_O 2Y_O 3Y_O 4Y_O 5Y_O 6Y_O OPER_O ENY ENOP
+     D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     ENY = {~(S0 & S1 & COMP)}
+     s0bar = {~S0}
+     s1bar = {~S1}
+     compbar = {~COMP}
+     ENOP = {~((COMP & S1) | (s0bar & S1))}
+     1abar = {~1A}
+     1bbar = {~1B}
+     2abar = {~2A}
+     2bbar = {~2B}
+     3abar = {~3A}
+     3bbar = {~3B}
+     4abar = {~4A}
+     4bbar = {~4B}
+     5abar = {~5A}
+     5bbar = {~5B}
+     6abar = {~6A}
+     6bbar = {~6B}
+     ina = {~(1abar & 2abar & 3abar & 4abar & 5abar & 6abar & s1bar & s0bar)}
+     inb = {~(1bbar & 2bbar & 3bbar & 4bbar & 5bbar & 6bbar & s1bar & S0)}
+     OPER_O = {~(ina & inb)}
+     1Y_O = {(1A & s0bar & s1bar & compbar) | (1B & S0 & s1bar & compbar) | 
+            (1A & 1B & s0bar & compbar) | (1abar & s0bar & COMP) | (1bbar & S0 & COMP) |
+            (1bbar & S1 & COMP)}
+     2Y_O = {(2A & s0bar & s1bar & compbar) | (2B & S0 & s1bar & compbar) | 
+            (2A & 2B & s0bar & compbar) | (2abar & s0bar & COMP) | (2bbar & S0 & COMP) |
+            (2bbar & S1 & COMP)}
+     3Y_O = {(3A & s0bar & s1bar & compbar) | (3B & S0 & s1bar & compbar) | 
+            (3A & 3B & s0bar & compbar) | (3abar & s0bar & COMP) | (3bbar & S0 & COMP) |
+            (3bbar & S1 & COMP)}
+     4Y_O = {(4A & s0bar & s1bar & compbar) | (4B & S0 & s1bar & compbar) | 
+            (4A & 4B & s0bar & compbar) | (4abar & s0bar & COMP) | (4bbar & S0 & COMP) |
+            (4bbar & S1 & COMP)}
+     5Y_O = {(5A & s0bar & s1bar & compbar) | (5B & S0 & s1bar & compbar) | 
+            (5A & 5B & s0bar & compbar) | (5abar & s0bar & COMP) | (5bbar & S0 & COMP) |
+            (5bbar & S1 & COMP)}
+     6Y_O = {(6A & s0bar & s1bar & compbar) | (6B & S0 & s1bar & compbar) | 
+            (6A & 6B & s0bar & compbar) | (6abar & s0bar & COMP) | (6bbar & S0 & COMP) |
+            (6bbar & S1 & COMP)}

U2DLY PINDLY(7,2,15) DPWR DGND
+     1Y_O 2Y_O 3Y_O 4Y_O 5Y_O 6Y_O OPER_O
+     ENY ENOP
+     1A 2A 3A 4A 5A 6A 1B 2B 3B 4B 5B 6B S0 S1 COMP
+     1Y 2Y 3Y 4Y 5Y 6Y OPER
+     IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(1A,0) | CHANGED(1B,0) | CHANGED(2A,0) | CHANGED(2B,0) |
+             CHANGED(3A,0) | CHANGED(3B,0) | CHANGED(4A,0) | CHANGED(4B,0) |
+             CHANGED(5A,0) | CHANGED(5B,0) | CHANGED(6A,0) | CHANGED(6B,0)}
+     CHS0 = {CHANGED(S0,0)}
+     CHS1 = {CHANGED(S1,0)}
+     SELECT = {CHS0 | CHS1}
+     ANDIT = {CHANGED(COMP,0)}
+
+  TRISTATE:
+     ENABLE HI=ENY
+     1Y 2Y 3Y 4Y 5Y 6Y = {
+       CASE(
+         SELECT & TRN_LH, DELAY(2ns,-1,13ns),
+         SELECT & TRN_HL, DELAY(2ns,-1,13ns),
+         ANDIT & TRN_LH, DELAY(2ns,-1,13ns),
+         ANDIT & TRN_HL, DELAY(2ns,-1,13ns),
+         DATA & COMP=='1 & TRN_LH, DELAY(2ns,-1,12ns),
+         DATA & COMP=='1 & TRN_HL, DELAY(2ns,-1,12ns),
+         DATA & COMP!='1 & TRN_LH, DELAY(2ns,-1,10ns),
+         DATA & COMP!='1 & TRN_HL, DELAY(2ns,-1,10ns),
+         SELECT & TRN_Z$, DELAY(2ns,-1,12ns),
+         SELECT & TRN_$Z, DELAY(2ns,-1,11ns),
+         ANDIT & TRN_Z$, DELAY(2ns,-1,12ns),
+         ANDIT & TRN_$Z, DELAY(2ns,-1,9ns),
+         DELAY(3ns,-1,14ns))}
+
+  TRISTATE:
+     ENABLE HI=ENOP
+     OPER = {
+       CASE(
+         SELECT & TRN_LH, DELAY(2ns,-1,18ns),
+         SELECT & TRN_HL, DELAY(2ns,-1,18ns),
+         DATA & TRN_LH, DELAY(2ns,-1,14ns),
+         DATA & TRN_HL, DELAY(2ns,-1,14ns),
+         CHS0 & TRN_Z$, DELAY(2ns,-1,12ns),
+         CHS0 & TRN_$Z, DELAY(2ns,-1,9ns),
+         CHS1 & TRN_Z$, DELAY(2ns,-1,12ns),
+         CHS1 & TRN_$Z, DELAY(2ns,-1,9ns),
+         ANDIT & TRN_Z$, DELAY(2ns,-1,13ns),
+         ANDIT & TRN_$Z, DELAY(2ns,-1,9ns),
+         DELAY(3ns,-1,19ns))}

.ENDS 74AS857

*-----------------------------------------------------------74F861-----

* 10 Bit Bus Transceiver (NINV)
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 830 to 836
* jat 7/30/96

.SUBCKT 74F861 OEABBAR OEBABAR A0 A1 A2 A3 A4 A5 A6 A7 A8 A9
+ B0 B1 B2 B3 B4 B5 B6 B7 B8 B9
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 PINDLY(20,2,0) DPWR DGND
+ A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 B0 B1 B2 B3 B4 B5 B6 B7 B8 B9
+ OEABBAR OEBABAR
+ B0 B1 B2 B3 B4 B5 B6 B7 B8 B9 A0 A1 A2 A3 A4 A5 A6 A7 A8 A9
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE LO = OEABBAR
+    B0 B1 B2 B3 B4 B5 B6 B7 B8 B9 = {
+       CASE(
+          TRN_ZH, DELAY(6NS,8NS,11NS),
+          TRN_ZL, DELAY(5.5NS,7.5NS,11NS),
+          TRN_HZ, DELAY(3.5NS,5.5NS,8.5NS),
+          TRN_LZ, DELAY(2.5NS,4.5NS,8.5NS),
+          TRN_LH, DELAY(4NS,6NS,9NS),
+          TRN_HL, DELAY(3NS,5NS,8NS),
+          DELAY(7NS,9NS,12NS))}
+ TRISTATE:
+   ENABLE LO = OEBABAR
+    A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 = {
+       CASE(
+          TRN_ZH, DELAY(6NS,8NS,11.5NS),
+          TRN_ZL, DELAY(4.5NS,7NS,10.5NS),
+          TRN_HZ, DELAY(3.5NS,5.5NS,9NS),
+          TRN_LZ, DELAY(2.5NS,5NS,8.5NS),
+          TRN_LH, DELAY(4NS,6NS,9NS),
+          TRN_HL, DELAY(2.5NS,5NS,8NS),
+          DELAY(7NS,9NS,12.5NS))}

.ENDS 74F861

*-----------------------------------------------------------74F862-----

* 10 Bit Bus Transceiver (INV)
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 830 to 836
* jat 7/30/96

.SUBCKT 74F862 OEABBAR OEBABAR A0 A1 A2 A3 A4 A5 A6 A7 A8 A9
+ B0 B1 B2 B3 B4 B5 B6 B7 B8 B9
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

ULOG LOGICEXP(20,20) DPWR DGND
+ A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 B0 B1 B2 B3 B4 B5 B6 B7 B8 B9
+ A0BAR A1BAR A2BAR A3BAR A4BAR A5BAR A6BAR A7BAR A8BAR A9BAR
+ B0BAR B1BAR B2BAR B3BAR B4BAR B5BAR B6BAR B7BAR B8BAR B9BAR
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   A0BAR = {~A0}
+   A1BAR = {~A1}
+   A2BAR = {~A2}
+   A3BAR = {~A3}
+   A4BAR = {~A4}
+   A5BAR = {~A5}
+   A6BAR = {~A6}
+   A7BAR = {~A7}
+   A8BAR = {~A8}
+   A9BAR = {~A9}
+   B0BAR = {~B0}
+   B1BAR = {~B1}
+   B2BAR = {~B2}
+   B3BAR = {~B3}
+   B4BAR = {~B4}
+   B5BAR = {~B5}
+   B6BAR = {~B6}
+   B7BAR = {~B7}
+   B8BAR = {~B8}
+   B9BAR = {~B9}

U1 PINDLY(20,2,0) DPWR DGND
+ A0BAR A1BAR A2BAR A3BAR A4BAR A5BAR A6BAR A7BAR A8BAR A9BAR
+ B0BAR B1BAR B2BAR B3BAR B4BAR B5BAR B6BAR B7BAR B8BAR B9BAR
+ OEABBAR OEBABAR
+ B0 B1 B2 B3 B4 B5 B6 B7 B8 B9 A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE LO = OEABBAR
+    B0 B1 B2 B3 B4 B5 B6 B7 B8 B9 = {
+       CASE(
+          TRN_ZH, DELAY(6.5NS,8NS,11.5NS),
+          TRN_ZL, DELAY(7.5NS,9.5NS,13.5NS),
+          TRN_HZ, DELAY(3NS,5NS,8.5NS),
+          TRN_LZ, DELAY(2.5NS,4NS,8.5NS),
+          TRN_LH, DELAY(4NS,6NS,9NS),
+          TRN_HL, DELAY(1.5NS,3.5NS,6.5NS),
+          DELAY(8.5NS,10.5NS,14.5NS))}
+ TRISTATE:
+   ENABLE LO = OEBABAR
+    A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 = {
+       CASE(
+          TRN_ZH, DELAY(6.5NS,8.5NS,12NS),
+          TRN_ZL, DELAY(7NS,9.5NS,13.5NS),
+          TRN_HZ, DELAY(3NS,5NS,8.5NS),
+          TRN_LZ, DELAY(2.5NS,4NS,8.5NS),
+          TRN_LH, DELAY(4NS,6NS,9NS),
+          TRN_HL, DELAY(1.5NS,3.5NS,6.5NS),
+          DELAY(8NS,10.5NS,14.5NS))}

.ENDS 74F862

*-----------------------------------------------------------74F863-----

* 9 Bit Bus Transceiver (NINV)
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 830 to 836
* jat 7/30/96

.SUBCKT 74F863 OEAB0BAR OEAB1BAR OEBA0BAR OEBA1BAR A0 A1 A2 A3 A4 A5 A6 A7 A8
+ B0 B1 B2 B3 B4 B5 B6 B7 B8
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

UENAB LOGICEXP(4,2) DPWR DGND
+ OEAB0BAR OEAB1BAR OEBA0BAR OEBA1BAR
+ AB BA
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   AB = {~(OEAB0BAR | OEAB1BAR)}
+   BA = {~(OEBA0BAR | OEBA1BAR)}

U1 PINDLY(18,2,0) DPWR DGND
+ A0 A1 A2 A3 A4 A5 A6 A7 A8 B0 B1 B2 B3 B4 B5 B6 B7 B8
+ AB BA
+ B0 B1 B2 B3 B4 B5 B6 B7 B8 A0 A1 A2 A3 A4 A5 A6 A7 A8
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = AB
+    B0 B1 B2 B3 B4 B5 B6 B7 B8 = {
+       CASE(
+          TRN_ZH, DELAY(6NS,8NS,11NS),
+          TRN_ZL, DELAY(5.5NS,7.5NS,11NS),
+          TRN_HZ, DELAY(3.5NS,5.5NS,8.5NS),
+          TRN_LZ, DELAY(2.5NS,4.5NS,8.5NS),
+          TRN_LH, DELAY(4NS,6NS,9NS),
+          TRN_HL, DELAY(3NS,5NS,8NS),
+          DELAY(7NS,9NS,12NS))}
+ TRISTATE:
+   ENABLE HI = BA
+    A0 A1 A2 A3 A4 A5 A6 A7 A8 = {
+       CASE(
+          TRN_ZH, DELAY(6NS,8NS,11.5NS),
+          TRN_ZL, DELAY(4.5NS,7NS,10.5NS),
+          TRN_HZ, DELAY(3.5NS,5.5NS,9NS),
+          TRN_LZ, DELAY(2.5NS,5NS,8.5NS),
+          TRN_LH, DELAY(4NS,6NS,9NS),
+          TRN_HL, DELAY(2.5NS,5NS,8NS),
+          DELAY(7NS,9NS,12.5NS))}

.ENDS 74F863

*-----------------------------------------------------------74F864-----

* 9 Bit Bus Transceiver (INV)
* Philips FAST TTL Logic Series Data Handbook, 1992, pages 830 to 836
* jat 7/30/96

.SUBCKT 74F864 OEAB0BAR OEAB1BAR OEBA0BAR OEBA1BAR A0 A1 A2 A3 A4 A5 A6 A7 A8
+ B0 B1 B2 B3 B4 B5 B6 B7 B8
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

ULOG LOGICEXP(22,20) DPWR DGND
+ A0 A1 A2 A3 A4 A5 A6 A7 A8 B0 B1 B2 B3 B4 B5 B6 B7 B8 OEAB0BAR OEAB1BAR
+ OEBA0BAR OEBA1BAR
+ A0BAR A1BAR A2BAR A3BAR A4BAR A5BAR A6BAR A7BAR A8BAR
+ B0BAR B1BAR B2BAR B3BAR B4BAR B5BAR B6BAR B7BAR B8BAR AB BA
+ D0_GATE IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   AB = {~(OEAB0BAR | OEAB1BAR)}
+   BA = {~(OEBA0BAR | OEBA1BAR)}
+   A0BAR = {~A0}
+   A1BAR = {~A1}
+   A2BAR = {~A2}
+   A3BAR = {~A3}
+   A4BAR = {~A4}
+   A5BAR = {~A5}
+   A6BAR = {~A6}
+   A7BAR = {~A7}
+   A8BAR = {~A8}
+   B0BAR = {~B0}
+   B1BAR = {~B1}
+   B2BAR = {~B2}
+   B3BAR = {~B3}
+   B4BAR = {~B4}
+   B5BAR = {~B5}
+   B6BAR = {~B6}
+   B7BAR = {~B7}
+   B8BAR = {~B8}

U1 PINDLY(18,2,0) DPWR DGND
+ A0BAR A1BAR A2BAR A3BAR A4BAR A5BAR A6BAR A7BAR A8BAR
+ B0BAR B1BAR B2BAR B3BAR B4BAR B5BAR B6BAR B7BAR B8BAR
+ AB BA
+ B0 B1 B2 B3 B4 B5 B6 B7 B8 A0 A1 A2 A3 A4 A5 A6 A7 A8
+ IO_F MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ TRISTATE:
+   ENABLE HI = AB
+    B0 B1 B2 B3 B4 B5 B6 B7 B8 = {
+       CASE(
+          TRN_ZH, DELAY(6.5NS,8NS,11.5NS),
+          TRN_ZL, DELAY(7.5NS,9.5NS,13.5NS),
+          TRN_HZ, DELAY(3NS,5NS,8.5NS),
+          TRN_LZ, DELAY(2.5NS,4NS,8.5NS),
+          TRN_LH, DELAY(4NS,6NS,9NS),
+          TRN_HL, DELAY(1.5NS,3.5NS,6.5NS),
+          DELAY(8.5NS,10.5NS,14.5NS))}
+ TRISTATE:
+   ENABLE HI = BA
+    A0 A1 A2 A3 A4 A5 A6 A7 A8 = {
+       CASE(
+          TRN_ZH, DELAY(6.5NS,8.5NS,12NS),
+          TRN_ZL, DELAY(7NS,9.5NS,13.5NS),
+          TRN_HZ, DELAY(3NS,5NS,8.5NS),
+          TRN_LZ, DELAY(2.5NS,4NS,8.5NS),
+          TRN_LH, DELAY(4NS,6NS,9NS),
+          TRN_HL, DELAY(1.5NS,3.5NS,6.5NS),
+          DELAY(8NS,10.5NS,14.5NS))}

.ENDS 74F864

*-----------------------------------------------------------74AS866------

* 8 Bit Magnitude Comparitor
* TI ALS/AS Logic Data Book, 1986, pages 2-711 to 2-716
* jat 3/25/96

.SUBCKT 74AS866
+ P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7 PLSQIN PGRTQIN
+ PLSQOUT PGRTQOUT PEQQOUT OLE QLE PLE CLRQBAR L/ABAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(35,3) DPWR DGND
+ P0L P1L P2L P3L P4L P5L P6L P7L
+ P0LBAR P1LBAR P2LBAR P3LBAR P4LBAR P5LBAR P6LBAR P7LBAR
+ Q0L Q1L Q2L Q3L Q4L Q5L Q6L Q7L
+ Q0LBAR Q1LBAR Q2LBAR Q3LBAR Q4LBAR Q5LBAR Q6LBAR Q7LBAR
+ PGRTQIN PLSQIN L/ABAR
+ D1 D2 D3
+ D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+  EQ0 = {~((P0LBAR & Q0L) | (Q0LBAR & P0L))}
+  EQ1 = {~((P1LBAR & Q1L) | (Q1LBAR & P1L))}
+  EQ2 = {~((P2LBAR & Q2L) | (Q2LBAR & P2L))}
+  EQ3 = {~((P3LBAR & Q3L) | (Q3LBAR & P3L))}
+  EQ5 = {~((P5LBAR & Q5L) | (Q5LBAR & P5L))}
+  EQ6 = {~((P6LBAR & Q6L) | (Q6LBAR & P6L))}
+  EQ7 = {~((P7LBAR & Q7L) | (Q7LBAR & P7L))}
+  NEQ4A = {P4LBAR & Q4L}
+  NEQ4B = {Q4LBAR & P4L}
+  NEQ5A = {P5LBAR & Q5L}
+  NEQ5B = {Q5LBAR & P5L}
+  NEQ6A = {P6LBAR & Q6L}
+  NEQ6B = {Q6LBAR & P6L}
+  NEQ7A = {P7LBAR & Q7L}
+  NEQ7B = {Q7LBAR & P7L}
+  4MSB = {~(NEQ4A | NEQ4B | NEQ5A | NEQ5B | NEQ6A | NEQ6B | NEQ7A | NEQ7B)}
+  PQ = {~(PLSQIN | PGRTQIN)}
+  L/A = {~L/ABAR}
+  AND1 = {P7L & Q7LBAR & L/A}
+  AND2 = {P7LBAR & Q7L & L/ABAR}
+  AND3 = {P6LBAR & Q6L & EQ7}
+  AND4 = {P5LBAR & Q5L & EQ7 & EQ6}
+  AND5 = {P4LBAR & Q4L & EQ7 & EQ6 & EQ5}
+  AND6 = {P3LBAR & Q3L & 4MSB}
+  AND7 = {P2LBAR & Q2L & 4MSB & EQ3}
+  AND8 = {P1LBAR & Q1L & 4MSB & EQ3 & EQ2}
+  AND9 = {P0LBAR & Q0L & 4MSB & EQ3 & EQ2 & EQ1}
+  AND10 = {4MSB & EQ3 & EQ2 & EQ1 & EQ0 & PLSQIN}
+  AND11 = {P7L & Q7LBAR & L/ABAR}
+  AND12 = {P7LBAR & Q7L & L/A}
+  AND13 = {P6L & Q6LBAR & EQ7}
+  AND14 = {P5L & Q5LBAR & EQ7 & EQ6}
+  AND15 = {P4L & Q4LBAR & EQ7 & EQ6 & EQ5}
+  AND16 = {P3L & Q3LBAR & 4MSB}
+  AND17 = {P2L & Q2LBAR & EQ3 & 4MSB}
+  AND18 = {P1L & Q1LBAR & 4MSB & EQ3 & EQ2}
+  AND19 = {P0L & Q0LBAR & 4MSB & EQ3 & EQ2 & EQ1}
+  AND20 = {4MSB & EQ3 & EQ2 & EQ1 & EQ0 & PGRTQIN}
+  D1 = {AND1 | AND2 | AND3 | AND4 | AND5 | AND6 | AND7 | AND8 | AND9 | AND10}
+  D2 = {AND11 | AND12 | AND13 | AND14 | AND15 | AND16 | AND17 | AND18 | AND19 | AND20}
+  D3 = {4MSB & EQ3 & EQ2 & EQ1 & EQ0 & PQ}

U2 DLTCH(8) DPWR DGND
+ $D_HI $D_HI PLE
+ P0 P1 P2 P3 P4 P5 P6 P7
+ P0L P1L P2L P3L P4L P5L P6L P7L
+ P0LBAR P1LBAR P2LBAR P3LBAR P4LBAR P5LBAR P6LBAR P7LBAR
+ D0_GFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DLTCH(8) DPWR DGND
+ $D_HI CLRQBAR QLE
+ Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ Q0L Q1L Q2L Q3L Q4L Q5L Q6L Q7L
+ Q0LBAR Q1LBAR Q2LBAR Q3LBAR Q4LBAR Q5LBAR Q6LBAR Q7LBAR
+ D0_GFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DLTCH(3) DPWR DGND
+ $D_HI $D_HI OLE
+ D1 D2 D3
+ PLSQOUTO PGRTQOUTO PEQQOUTO
+ $D_NC $D_NC $D_NC
+ D0_GFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 PINDLY(3,0,20) DPWR DGND
+ PLSQOUTO PGRTQOUTO PEQQOUTO
+ L/ABAR CLRQBAR PLSQIN PGRTQIN P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ PLSQOUT PGRTQOUT PEQQOUT
+ IO_AS00_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   LOGIC = {CHANGED(L/ABAR,0)}
+   CLEAR = {CHANGED(CLRQBAR,0)}
+   LG = {CHANGED(PLSQIN,0) | CHANGED(PGRTQIN,0)}
+   DATA = {CHANGED(P0,0) | CHANGED(P1,0) | CHANGED(P2,0) | CHANGED(P3,0) |
+           CHANGED(P4,0) | CHANGED(P5,0) | CHANGED(P6,0) | CHANGED(P7,0) |
+           CHANGED(Q0,0) | CHANGED(Q1,0) | CHANGED(Q2,0) | CHANGED(Q3,0) |
+           CHANGED(Q4,0) | CHANGED(Q5,0) | CHANGED(Q6,0) | CHANGED(Q7,0)}
+ PINDLY:
+   PLSQOUT PGRTQOUT = {
+     CASE(
+       LOGIC & TRN_LH, DELAY(1NS,8.5NS,13NS),
+       LOGIC & TRN_HL, DELAY(1NS,7.5NS,13NS),
+       CLEAR & TRN_LH, DELAY(1NS,16NS,20NS),
+       CLEAR & TRN_HL, DELAY(1NS,12NS,16NS),
+       LG & TRN_LH, DELAY(1NS,5NS,8NS),
+       LG & TRN_HL, DELAY(1NS,5.5NS,8NS),
+       DATA & TRN_LH, DELAY(1NS,13.5NS,17.5NS),
+       DATA & TRN_HL, DELAY(1NS,10NS,15NS),
+       DELAY(2NS,14.5NS,18.5NS))}
+   PEQQOUT = {
+     CASE(
+       CLEAR & TRN_LH, DELAY(1NS,12NS,16NS),
+       CLEAR & TRN_HL, DELAY(1NS,13NS,17NS),
+       LG & TRN_LH, DELAY(1NS,6.5NS,11NS),
+       LG & TRN_HL, DELAY(1NS,8NS,13NS),
+       DATA & TRN_LH, DELAY(1NS,10NS,14NS),
+       DATA & TRN_HL, DELAY(1NS,9NS,13NS),
+       DELAY(2NS,14NS,18NS))}

U6 CONSTRAINT(19) DPWR DGND
+ PLE QLE OLE P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+ IO_AS00 IO_LEVEL={IO_LEVEL}
+ SETUP_HOLD:
+    CLOCK HL = PLE
+    DATA(8) = P0 P1 P2 P3 P4 P5 P6 P7
+    SETUPTIME = 2NS
+    HOLDTIME = 4NS
+ SETUP_HOLD:
+    CLOCK HL = QLE
+    DATA(8) = Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+    SETUPTIME = 2NS
+    HOLDTIME = 4NS
+ SETUP_HOLD:
+    CLOCK HL = OLE
+    DATA(16) = P0 P1 P2 P3 P4 P5 P6 P7 Q0 Q1 Q2 Q3 Q4 Q5 Q6 Q7
+    SETUPTIME = 2NS
+    HOLDTIME = 4NS

.ENDS 74AS866

*-----------------------------------------------------------74ACT867-----

* Synchronous 8 Bit Up/Down Binary Counter with Asynchronous Clear
* TI Advanced CMOS Logic Data Book, 1993, pages 2-597 to 2-603
* jat 12/21/95

.SUBCKT 74ACT867
+ S0 S1 ENTBAR ENPBAR CLK A B C D E F G H QA QB QC QD QE QF QG QH RCOBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(20,10) DPWR DGND
+ S0 S1 ENTBAR ENPBAR QAO QBO QCO QDO QEO QFO QGO QHO A B C D E F G H
+ R DA DB DC DD DE DF DG DH RCOBARO
+ D0_GATE IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   R = {S0 | S1}
+   ENAB = {~(ENTBAR | ENPBAR | (~S0))}
+   MODE = {S1 & (~S0)}
+   NORA = {~((S1 & (~QAO)) | ((~S1) & QAO))}
+   NORB = {~((S1 & (~QBO)) | ((~S1) & QBO))}
+   NORC = {~((S1 & (~QCO)) | ((~S1) & QCO))}
+   NORD = {~((S1 & (~QDO)) | ((~S1) & QDO))}
+   NORE = {~((S1 & (~QEO)) | ((~S1) & QEO))}
+   NORF = {~((S1 & (~QFO)) | ((~S1) & QFO))}
+   NORG = {~((S1 & (~QGO)) | ((~S1) & QGO))}
+   NORH = {~((S1 & (~QHO)) | ((~S1) & QHO))}
+   DA = {(A & MODE) | (ENAB ^ (S0 & QAO))}
+   DB = {(B & MODE) | ((ENAB & NORA) ^ (S0 & QBO))}
+   DC = {(C & MODE) | ((ENAB & NORA & NORB) ^ (S0 & QCO))}
+   DD = {(D & MODE) | ((ENAB & NORA & NORB & NORC) ^ (S0 & QDO))}
+   DE = {(E & MODE) | ((ENAB & NORA & NORB & NORC & NORD) ^ (S0 & QEO))}
+   DF = {(F & MODE) | ((ENAB & NORA & NORB & NORC & NORD & NORE) ^ (S0 & QFO))}
+   DG = {(G & MODE) | ((ENAB & NORA & NORB & NORC & NORD & NORE & NORF) ^ (S0 & QGO))}
+   DH = {(H & MODE) | ((ENAB & NORA & NORB & NORC & NORD & NORE & NORF & NORG) ^ (S0 & QHO))}
+   RCOBARO = {~(((~ENTBAR) & S0 & NORA & NORB & NORC & NORD & NORE & NORF & NORG & NORH & S1 & QAO) |
+    ((~ENTBAR) & S0 & NORA & NORB & NORC & NORD & NORE & NORF & NORG & NORH & (~S1) & (~QAO)))}

U2 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DA QAO QABARO
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DB QBO QBBARO
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DC QCO QCBARO
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DD QDO QDBARO
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DE QEO QEBARO
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DF QFO QFBARO
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DG QGO QGBARO
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DH QHO QHBARO
+ D0_EFF IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 PINDLY(9,0,4) DPWR DGND
+ QAO QBO QCO QDO QEO QFO QGO QHO RCOBARO
+ CLK ENTBAR S0 S1
+ QA QB QC QD QE QF QG QH RCOBAR
+ IO_ACT MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLOCK = {CHANGED_LH(CLK,0)}
+   ENABLE = {CHANGED(ENTBAR,0)}
+   CLEAR = {(CHANGED_HL(S0,0) & S1=='0) | (CHANGED_HL(S1,0) & S0=='0)}
+   UPDOWN = {(CHANGED_HL(S0,0) & S1=='1) | (CHANGED_LH(S1,0) & S0=='0) |
+             (CHANGED_HL(S1,0) & S0=='1) | (CHANGED_HL(S0,0) & S1=='1)}
+ PINDLY:
+   QA QB QC QD QE QF QG QH = {
+    CASE(
+     CLEAR & TRN_HL, DELAY(6.3NS,11.9NS,16.6NS),
+     CLOCK & TRN_LH, DELAY(5NS,8.9NS,11.9NS),
+     CLOCK & TRN_HL, DELAY(4.9NS,9NS,12.2NS),
+     DELAY(7.3NS,12.9NS,17.6NS))}
+   RCOBAR = {
+    CASE(
+     ENABLE & TRN_LH, DELAY(3.9NS,6.8NS,9.1NS),
+     ENABLE & TRN_HL, DELAY(3.1NS,7NS,10.2NS),
+     CLEAR & TRN_HL, DELAY(6.2NS,11.3NS,15.6NS),
+     UPDOWN & TRN_LH, DELAY(5.5NS,10.4NS,15.6NS),
+     UPDOWN & TRN_HL, DELAY(5.6NS,10.1NS,14.8NS),
+     CLOCK & TRN_LH, DELAY(6NS,9.9NS,12.7NS),
+     CLOCK & TRN_HL, DELAY(6.4NS,10.9NS,14.2NS),
+     DELAY(7.4NS,12.3NS,16.6NS))}

U11 CONSTRAINT(13) DPWR DGND
+ CLK S0 S1 A B C D E F G H ENPBAR ENTBAR
+ IO_ACT IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLK
+   MAXFREQ = 70MEG
+ WIDTH:
+   NODE = S0
+   MIN_LO = 12NS
+ WIDTH:
+   NODE = S1
+   MIN_LO = 12NS
+ WIDTH:
+   NODE = CLK
+   MIN_LO = 6.5NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(8) = A B C D E F G H
+   SETUPTIME = 8NS
+   HOLDTIME = 1NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(2) = ENPBAR ENTBAR
+   SETUPTIME = 4NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(2) = S0 S1
+   SETUPTIME = 11NS

.ENDS 74ACT867

*-----------------------------------------------------------74ALS867-----

* Synchronous 8 Bit Up/Down Binary Counter with Asynchronous Clear
* TI ALS/AS Logic Data Book, 1986, pages 2-717 to 2-726
* jat 3/25/96

.SUBCKT 74ALS867
+ S0 S1 ENTBAR ENPBAR CLK A B C D E F G H QA QB QC QD QE QF QG QH RCOBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(20,10) DPWR DGND
+ S0 S1 ENTBAR ENPBAR QAO QBO QCO QDO QEO QFO QGO QHO A B C D E F G H
+ R DA DB DC DD DE DF DG DH RCOBARO
+ D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   R = {S0 | S1}
+   ENAB = {~(ENTBAR | ENPBAR | (~S0))}
+   MODE = {S1 & (~S0)}
+   NORA = {~((S1 & (~QAO)) | ((~S1) & QAO))}
+   NORB = {~((S1 & (~QBO)) | ((~S1) & QBO))}
+   NORC = {~((S1 & (~QCO)) | ((~S1) & QCO))}
+   NORD = {~((S1 & (~QDO)) | ((~S1) & QDO))}
+   NORE = {~((S1 & (~QEO)) | ((~S1) & QEO))}
+   NORF = {~((S1 & (~QFO)) | ((~S1) & QFO))}
+   NORG = {~((S1 & (~QGO)) | ((~S1) & QGO))}
+   NORH = {~((S1 & (~QHO)) | ((~S1) & QHO))}
+   DA = {(A & MODE) | (ENAB ^ (S0 & QAO))}
+   DB = {(B & MODE) | ((ENAB & NORA) ^ (S0 & QBO))}
+   DC = {(C & MODE) | ((ENAB & NORA & NORB) ^ (S0 & QCO))}
+   DD = {(D & MODE) | ((ENAB & NORA & NORB & NORC) ^ (S0 & QDO))}
+   DE = {(E & MODE) | ((ENAB & NORA & NORB & NORC & NORD) ^ (S0 & QEO))}
+   DF = {(F & MODE) | ((ENAB & NORA & NORB & NORC & NORD & NORE) ^ (S0 & QFO))}
+   DG = {(G & MODE) | ((ENAB & NORA & NORB & NORC & NORD & NORE & NORF) ^ (S0 & QGO))}
+   DH = {(H & MODE) | ((ENAB & NORA & NORB & NORC & NORD & NORE & NORF & NORG) ^ (S0 & QHO))}
+   RCOBARO = {~(((~ENTBAR) & S0 & NORA & NORB & NORC & NORD & NORE & NORF & NORG & NORH & S1 & QAO) |
+    ((~ENTBAR) & S0 & NORA & NORB & NORC & NORD & NORE & NORF & NORG & NORH & (~S1) & (~QAO)))}

U2 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DA QAO QABARO
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DB QBO QBBARO
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DC QCO QCBARO
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DD QDO QDBARO
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DE QEO QEBARO
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DF QFO QFBARO
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DG QGO QGBARO
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DH QHO QHBARO
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 PINDLY(9,0,5) DPWR DGND
+ QAO QBO QCO QDO QEO QFO QGO QHO RCOBARO
+ CLK ENTBAR ENPBAR S0 S1
+ QA QB QC QD QE QF QG QH RCOBAR
+ IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLOCK = {CHANGED_LH(CLK,0)}
+   ENABLET = {CHANGED(ENTBAR,0)}
+   ENABLEP = {CHANGED(ENPBAR,0)}
+   CLEAR = {(CHANGED_HL(S0,0) & S1=='0) | (CHANGED_HL(S1,0) & S0=='0)}
+   UPDOWN = {(CHANGED_HL(S0,0) & S1=='1) | (CHANGED_LH(S1,0) & S0=='0) |
+             (CHANGED_HL(S1,0) & S0=='1) | (CHANGED_HL(S0,0) & S1=='1)}
+ PINDLY:
+   QA QB QC QD QE QF QG QH = {
+    CASE(
+     CLEAR & TRN_HL, DELAY(-1,17NS,-1),
+     CLOCK & TRN_LH, DELAY(-1,10NS,-1),
+     CLOCK & TRN_HL, DELAY(-1,12NS,-1),
+     DELAY(-1,18,-1))}
+   RCOBAR = {
+    CASE(
+     ENABLET & TRN_LH, DELAY(-1,7.5NS,-1),
+     ENABLET & TRN_HL, DELAY(-1,8.5NS,-1),
+     ENABLEP & TRN_LH, DELAY(-1,11.5NS,-1),
+     ENABLEP & TRN_HL, DELAY(-1,8.5NS,-1),
+     CLEAR & TRN_HL, DELAY(-1,22NS,-1),
+     UPDOWN & TRN_LH, DELAY(-1,12NS,-1),
+     UPDOWN & TRN_HL, DELAY(-1,13NS,-1),
+     CLOCK & TRN_LH, DELAY(-1,14NS,-1),
+     CLOCK & TRN_HL, DELAY(-1,13NS,-1),
+     DELAY(-1,23NS,-1))}

U11 CONSTRAINT(13) DPWR DGND
+ CLK S0 S1 A B C D E F G H ENPBAR ENTBAR
+ IO_ALS00 IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLK
+   MAXFREQ = 70MEG
+ WIDTH:
+   NODE = S0
+   MIN_LO = 12NS
+ WIDTH:
+   NODE = S1
+   MIN_LO = 12NS
+ WIDTH:
+   NODE = CLK
+   MIN_LO = 6.5NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(8) = A B C D E F G H
+   SETUPTIME = 8NS
+   HOLDTIME = 1NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(2) = ENPBAR ENTBAR
+   SETUPTIME = 4NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(2) = S0 S1
+   SETUPTIME = 11NS

.ENDS 74ALS867

*-----------------------------------------------------------74AS867-----

* Synchronous 8 Bit Up/Down Binary Counter with Asynchronous Clear
* TI ALS/AS Logic Data Book, 1986, pages 2-717 to 2-726
* jat 3/25/96

.SUBCKT 74AS867
+ S0 S1 ENTBAR ENPBAR CLK A B C D E F G H QA QB QC QD QE QF QG QH RCOBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(20,10) DPWR DGND
+ S0 S1 ENTBAR ENPBAR QAO QBO QCO QDO QEO QFO QGO QHO A B C D E F G H
+ R DA DB DC DD DE DF DG DH RCOBARO
+ D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   R = {S0 | S1}
+   ENAB = {~(ENTBAR | ENPBAR | (~S0))}
+   MODE = {S1 & (~S0)}
+   NORA = {~((S1 & (~QAO)) | ((~S1) & QAO))}
+   NORB = {~((S1 & (~QBO)) | ((~S1) & QBO))}
+   NORC = {~((S1 & (~QCO)) | ((~S1) & QCO))}
+   NORD = {~((S1 & (~QDO)) | ((~S1) & QDO))}
+   NORE = {~((S1 & (~QEO)) | ((~S1) & QEO))}
+   NORF = {~((S1 & (~QFO)) | ((~S1) & QFO))}
+   NORG = {~((S1 & (~QGO)) | ((~S1) & QGO))}
+   NORH = {~((S1 & (~QHO)) | ((~S1) & QHO))}
+   DA = {(A & MODE) | (ENAB ^ (S0 & QAO))}
+   DB = {(B & MODE) | ((ENAB & NORA) ^ (S0 & QBO))}
+   DC = {(C & MODE) | ((ENAB & NORA & NORB) ^ (S0 & QCO))}
+   DD = {(D & MODE) | ((ENAB & NORA & NORB & NORC) ^ (S0 & QDO))}
+   DE = {(E & MODE) | ((ENAB & NORA & NORB & NORC & NORD) ^ (S0 & QEO))}
+   DF = {(F & MODE) | ((ENAB & NORA & NORB & NORC & NORD & NORE) ^ (S0 & QFO))}
+   DG = {(G & MODE) | ((ENAB & NORA & NORB & NORC & NORD & NORE & NORF) ^ (S0 & QGO))}
+   DH = {(H & MODE) | ((ENAB & NORA & NORB & NORC & NORD & NORE & NORF & NORG) ^ (S0 & QHO))}
+   RCOBARO = {~(((~ENTBAR) & S0 & NORA & NORB & NORC & NORD & NORE & NORF & NORG & NORH & S1 & QAO) |
+    ((~ENTBAR) & S0 & NORA & NORB & NORC & NORD & NORE & NORF & NORG & NORH & (~S1) & (~QAO)))}

U2 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DA QAO QABARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DB QBO QBBARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DC QCO QCBARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DD QDO QDBARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DE QEO QEBARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DF QFO QFBARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DG QGO QGBARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 DFF(1) DPWR DGND
+ $D_HI R CLK
+ DH QHO QHBARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 PINDLY(9,0,5) DPWR DGND
+ QAO QBO QCO QDO QEO QFO QGO QHO RCOBARO
+ CLK ENTBAR ENPBAR S0 S1
+ QA QB QC QD QE QF QG QH RCOBAR
+ IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLOCK = {CHANGED_LH(CLK,0)}
+   ENABLET = {CHANGED(ENTBAR,0)}
+   ENABLEP = {CHANGED(ENPBAR,0)}
+   CLEAR = {(CHANGED_HL(S0,0) & S1=='0) | (CHANGED_HL(S1,0) & S0=='0)}
+ PINDLY:
+   QA QB QC QD QE QF QG QH = {
+    CASE(
+     CLEAR & TRN_HL, DELAY(7NS,-1,21NS),
+     CLOCK & TRN_LH, DELAY(3NS,-1,11NS),
+     CLOCK & TRN_HL, DELAY(4NS,-1,15NS),
+     DELAY(8NS,-1,22NS))}
+   RCOBAR = {
+    CASE(
+     ENABLET & TRN_LH, DELAY(3NS,-1,10NS),
+     ENABLET & TRN_HL, DELAY(5NS,-1,17NS),
+     ENABLEP & TRN_LH, DELAY(5NS,-1,14NS),
+     ENABLEP & TRN_HL, DELAY(5NS,-1,17NS),
+     CLOCK & TRN_LH, DELAY(5NS,-1,22NS),
+     CLOCK & TRN_HL, DELAY(6NS,-1,16NS),
+     DELAY(7NS,-1,23NS))}

U11 CONSTRAINT(13) DPWR DGND
+ CLK S0 S1 A B C D E F G H ENPBAR ENTBAR
+ IO_AS00 IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLK
+   MAXFREQ = 50MEG
+ WIDTH:
+   NODE = S0
+   MIN_LO = 10NS
+ WIDTH:
+   NODE = S1
+   MIN_LO = 10NS
+ WIDTH:
+   NODE = CLK
+   MIN_LO = 10NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(8) = A B C D E F G H
+   SETUPTIME = 4NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(2) = ENPBAR ENTBAR
+   SETUPTIME = 8NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(2) = S0 S1
+   SETUPTIME = 10NS
+   WHEN = {(S0 == '0)}
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(2) = S0 S1
+   SETUPTIME = 40NS
+   WHEN = {(S0 == '1)}

.ENDS 74AS867

*-----------------------------------------------------------74ALS869-----

* Synchronous 8 Bit Up/Down Binary Counter
* TI ALS/AS Logic Data Book, 1986, pages 2-717 to 2-726
* jat 3/25/96

.SUBCKT 74ALS869
+ S0 S1 ENTBAR ENPBAR CLK A B C D E F G H QA QB QC QD QE QF QG QH RCOBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(20,9) DPWR DGND
+ S0 S1 ENTBAR ENPBAR QAO QBO QCO QDO QEO QFO QGO QHO A B C D E F G H
+ DA DB DC DD DE DF DG DH RCOBARO
+ D0_GATE IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(ENTBAR | ENPBAR | (~S0))}
+   MODE = {S1 & (~S0)}
+   NORA = {~((S1 & (~QAO)) | ((~S1) & QAO))}
+   NORB = {~((S1 & (~QBO)) | ((~S1) & QBO))}
+   NORC = {~((S1 & (~QCO)) | ((~S1) & QCO))}
+   NORD = {~((S1 & (~QDO)) | ((~S1) & QDO))}
+   NORE = {~((S1 & (~QEO)) | ((~S1) & QEO))}
+   NORF = {~((S1 & (~QFO)) | ((~S1) & QFO))}
+   NORG = {~((S1 & (~QGO)) | ((~S1) & QGO))}
+   NORH = {~((S1 & (~QHO)) | ((~S1) & QHO))}
+   DA = {(A & MODE) | (ENAB ^ (S0 & QAO))}
+   DB = {(B & MODE) | ((ENAB & NORA) ^ (S0 & QBO))}
+   DC = {(C & MODE) | ((ENAB & NORA & NORB) ^ (S0 & QCO))}
+   DD = {(D & MODE) | ((ENAB & NORA & NORB & NORC) ^ (S0 & QDO))}
+   DE = {(E & MODE) | ((ENAB & NORA & NORB & NORC & NORD) ^ (S0 & QEO))}
+   DF = {(F & MODE) | ((ENAB & NORA & NORB & NORC & NORD & NORE) ^ (S0 & QFO))}
+   DG = {(G & MODE) | ((ENAB & NORA & NORB & NORC & NORD & NORE & NORF) ^ (S0 & QGO))}
+   DH = {(H & MODE) | ((ENAB & NORA & NORB & NORC & NORD & NORE & NORF & NORG) ^ (S0 & QHO))}
+   RCOBARO = {~(((~ENTBAR) & S0 & NORA & NORB & NORC & NORD & NORE & NORF & NORG & NORH & S1 & QAO) |
+    ((~ENTBAR) & S0 & NORA & NORB & NORC & NORD & NORE & NORF & NORG & NORH & (~S1) & (~QAO)))}

U2 DFF(1) DPWR DGND
+ $D_HI $D_HI CLK
+ DA QAO QABARO
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(1) DPWR DGND
+ $D_HI $D_HI CLK
+ DB QBO QBBARO
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(1) DPWR DGND
+ $D_HI $D_HI CLK
+ DC QCO QCBARO
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 DFF(1) DPWR DGND
+ $D_HI $D_HI CLK
+ DD QDO QDBARO
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 DFF(1) DPWR DGND
+ $D_HI $D_HI CLK
+ DE QEO QEBARO
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 DFF(1) DPWR DGND
+ $D_HI $D_HI CLK
+ DF QFO QFBARO
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 DFF(1) DPWR DGND
+ $D_HI $D_HI CLK
+ DG QGO QGBARO
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 DFF(1) DPWR DGND
+ $D_HI $D_HI CLK
+ DH QHO QHBARO
+ D0_EFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 PINDLY(9,0,5) DPWR DGND
+ QAO QBO QCO QDO QEO QFO QGO QHO RCOBARO
+ CLK ENTBAR ENPBAR S0 S1
+ QA QB QC QD QE QF QG QH RCOBAR
+ IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLOCK = {CHANGED_LH(CLK,0)}
+   ENABLET = {CHANGED(ENTBAR,0)}
+   ENABLEP = {CHANGED(ENPBAR,0)}
+   CLEAR = {(CHANGED_HL(S0,0) & S1=='0) | (CHANGED_HL(S1,0) & S0=='0)}
+   UPDOWN = {(CHANGED_HL(S0,0) & S1=='1) | (CHANGED_LH(S1,0) & S0=='0) |
+             (CHANGED_HL(S1,0) & S0=='1) | (CHANGED_HL(S0,0) & S1=='1)}
+ PINDLY:
+   QA QB QC QD QE QF QG QH = {
+    CASE(
+     CLEAR & TRN_HL, DELAY(-1,17NS,-1),
+     CLOCK & TRN_LH, DELAY(-1,10NS,-1),
+     CLOCK & TRN_HL, DELAY(-1,12NS,-1),
+     DELAY(-1,18,-1))}
+   RCOBAR = {
+    CASE(
+     ENABLET & TRN_LH, DELAY(-1,7.5NS,-1),
+     ENABLET & TRN_HL, DELAY(-1,8.5NS,-1),
+     ENABLEP & TRN_LH, DELAY(-1,11.5NS,-1),
+     ENABLEP & TRN_HL, DELAY(-1,8.5NS,-1),
+     CLEAR & TRN_HL, DELAY(-1,22NS,-1),
+     UPDOWN & TRN_LH, DELAY(-1,12NS,-1),
+     UPDOWN & TRN_HL, DELAY(-1,13NS,-1),
+     CLOCK & TRN_LH, DELAY(-1,14NS,-1),
+     CLOCK & TRN_HL, DELAY(-1,13NS,-1),
+     DELAY(-1,23NS,-1))}

U11 CONSTRAINT(13) DPWR DGND
+ CLK S0 S1 A B C D E F G H ENPBAR ENTBAR
+ IO_ALS00 IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLK
+   MAXFREQ = 45MEG
+ WIDTH:
+   NODE = S0
+   MIN_LO = 12NS
+ WIDTH:
+   NODE = S1
+   MIN_LO = 12NS
+ WIDTH:
+   NODE = CLK
+   MIN_LO = 6.5NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(8) = A B C D E F G H
+   SETUPTIME = 8NS
+   HOLDTIME = 1NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(2) = ENPBAR ENTBAR
+   SETUPTIME = 4NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(2) = S0 S1
+   SETUPTIME = 11NS

.ENDS 74ALS869

*-----------------------------------------------------------74AS869-----

* Synchronous 8 Bit Up/Down Binary Counter
* TI ALS/AS Logic Data Book, 1986, pages 2-717 to 2-726
* jat 3/25/96

.SUBCKT 74AS869
+ S0 S1 ENTBAR ENPBAR CLK A B C D E F G H QA QB QC QD QE QF QG QH RCOBAR
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP(20,9) DPWR DGND
+ S0 S1 ENTBAR ENPBAR QAO QBO QCO QDO QEO QFO QGO QHO A B C D E F G H
+ DA DB DC DD DE DF DG DH RCOBARO
+ D0_GATE IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ LOGIC:
+   ENAB = {~(ENTBAR | ENPBAR | (~S0))}
+   MODE = {S1 & (~S0)}
+   NORA = {~((S1 & (~QAO)) | ((~S1) & QAO))}
+   NORB = {~((S1 & (~QBO)) | ((~S1) & QBO))}
+   NORC = {~((S1 & (~QCO)) | ((~S1) & QCO))}
+   NORD = {~((S1 & (~QDO)) | ((~S1) & QDO))}
+   NORE = {~((S1 & (~QEO)) | ((~S1) & QEO))}
+   NORF = {~((S1 & (~QFO)) | ((~S1) & QFO))}
+   NORG = {~((S1 & (~QGO)) | ((~S1) & QGO))}
+   NORH = {~((S1 & (~QHO)) | ((~S1) & QHO))}
+   DA = {(A & MODE) | (ENAB ^ (S0 & QAO))}
+   DB = {(B & MODE) | ((ENAB & NORA) ^ (S0 & QBO))}
+   DC = {(C & MODE) | ((ENAB & NORA & NORB) ^ (S0 & QCO))}
+   DD = {(D & MODE) | ((ENAB & NORA & NORB & NORC) ^ (S0 & QDO))}
+   DE = {(E & MODE) | ((ENAB & NORA & NORB & NORC & NORD) ^ (S0 & QEO))}
+   DF = {(F & MODE) | ((ENAB & NORA & NORB & NORC & NORD & NORE) ^ (S0 & QFO))}
+   DG = {(G & MODE) | ((ENAB & NORA & NORB & NORC & NORD & NORE & NORF) ^ (S0 & QGO))}
+   DH = {(H & MODE) | ((ENAB & NORA & NORB & NORC & NORD & NORE & NORF & NORG) ^ (S0 & QHO))}
+   RCOBARO = {~(((~ENTBAR) & S0 & NORA & NORB & NORC & NORD & NORE & NORF & NORG & NORH & S1 & QAO) |
+    ((~ENTBAR) & S0 & NORA & NORB & NORC & NORD & NORE & NORF & NORG & NORH & (~S1) & (~QAO)))}

U2 DFF(1) DPWR DGND
+ $D_HI $D_HI CLK
+ DA QAO QABARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 DFF(1) DPWR DGND
+ $D_HI $D_HI CLK
+ DB QBO QBBARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 DFF(1) DPWR DGND
+ $D_HI $D_HI CLK
+ DC QCO QCBARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 DFF(1) DPWR DGND
+ $D_HI $D_HI CLK
+ DD QDO QDBARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6 DFF(1) DPWR DGND
+ $D_HI $D_HI CLK
+ DE QEO QEBARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U7 DFF(1) DPWR DGND
+ $D_HI $D_HI CLK
+ DF QFO QFBARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U8 DFF(1) DPWR DGND
+ $D_HI $D_HI CLK
+ DG QGO QGBARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U9 DFF(1) DPWR DGND
+ $D_HI $D_HI CLK
+ DH QHO QHBARO
+ D0_EFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U10 PINDLY(9,0,3) DPWR DGND
+ QAO QBO QCO QDO QEO QFO QGO QHO RCOBARO
+ CLK ENTBAR ENPBAR
+ QA QB QC QD QE QF QG QH RCOBAR
+ IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+ BOOLEAN:
+   CLOCK = {CHANGED_LH(CLK,0)}
+   ENABLET = {CHANGED(ENTBAR,0)}
+   ENABLEP = {CHANGED(ENPBAR,0)}
+ PINDLY:
+   QA QB QC QD QE QF QG QH = {
+    CASE(
+     CLOCK & TRN_LH, DELAY(3NS,-1,11NS),
+     CLOCK & TRN_HL, DELAY(4NS,-1,15NS),
+     DELAY(8NS,-1,22NS))}
+   RCOBAR = {
+    CASE(
+     ENABLET & TRN_LH, DELAY(3NS,-1,15NS),
+     ENABLET & TRN_HL, DELAY(6NS,-1,17NS),
+     ENABLEP & TRN_LH, DELAY(5NS,-1,19NS),
+     ENABLEP & TRN_HL, DELAY(6NS,-1,18NS),
+     CLOCK & TRN_LH, DELAY(6NS,-1,35NS),
+     CLOCK & TRN_HL, DELAY(6NS,-1,18NS),
+     DELAY(7NS,-1,36NS))}

U11 CONSTRAINT(13) DPWR DGND
+ CLK S0 S1 A B C D E F G H ENPBAR ENTBAR
+ IO_AS00 IO_LEVEL={IO_LEVEL}
+ FREQ:
+   NODE = CLK
+   MAXFREQ = 45MEG
+ WIDTH:
+   NODE = CLK
+   MIN_LO = 11NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(8) = A B C D E F G H
+   SETUPTIME = 5NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(2) = ENPBAR ENTBAR
+   SETUPTIME = 9NS
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(2) = S0 S1
+   SETUPTIME = 11NS
+   WHEN = {(S0 == '0)}
+ SETUP_HOLD:
+   CLOCK LH = CLK
+   DATA(2) = S0 S1
+   SETUPTIME = 50NS
+   WHEN = {(S0 == '1)}

.ENDS 74AS869

*-------------------------------------------------------------74AC873----

* Dual 4 Bit D-Type Latch with Tri-State Outputs
* TI Advanced CMOS Logic Data Book, 1993, pages 2-605 to 2-610
* jat 12/21/95

.SUBCKT 74AC873
+ OCBAR LE CLRBAR D1 D2 D3 D4 Q1 Q2 Q3 Q4
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(4) DPWR DGND
+ $D_HI CLRBAR LE
+ D1 D2 D3 D4 Q1O Q2O Q3O Q4O $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(4,1,6) DPWR DGND
+ Q1O Q2O Q3O Q4O
+ OCBAR
+ D1 D2 D3 D4 LE CLRBAR
+ Q1 Q2 Q3 Q4
+ IO_AC MNTYMXDLY={MNTYMXDLY} IO_LEVEL = {IO_LEVEL}
+ BOOLEAN:
+   CLEAR = {CHANGED_HL(CLRBAR,0)}
+   LATCH = {CHANGED(LE,0)}
+   DATA =  {CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) | CHANGED(D4,0)}
+ TRISTATE:
+   ENABLE LO = OCBAR
+   Q1 Q2 Q3 Q4 = {
+     CASE(
+       TRN_ZH, DELAY(1.2NS,4.1NS,5.6NS),
+       TRN_ZL, DELAY(1.9NS,5.5NS,7.3NS),
+       TRN_HZ, DELAY(3.5NS,5.9NS,7.4NS),
+       TRN_LZ, DELAY(3.3NS,5.5NS,7NS),
+       CLEAR & TRN_HL, DELAY(1.7NS,5.1NS,6.8NS),
+       LATCH & TRN_LH, DELAY(2.4NS,5.9NS,7.8NS),
+       LATCH & TRN_HL, DELAY(2.2NS,5.8NS,7.6NS),
+       DATA & TRN_LH, DELAY(2.2NS,5.5NS,7.3NS),
+       DATA & TRN_HL, DELAY(2.1NS,5.5NS,7.2NS),
+       DELAY(3.4NS,6.9NS,8.8NS))}

U3 CONSTRAINT(6) DPWR DGND
+ CLRBAR LE D1 D2 D3 D4
+ IO_AC IO_LEVEL = {IO_LEVEL}
+ WIDTH:
+  NODE = CLRBAR
+  MIN_LO = 5NS
+ WIDTH:
+  NODE = LE
+  MIN_HI = 5NS
+ SETUP_HOLD:
+  CLOCK HL = LE
+  DATA(4) = D1 D2 D3 D4
+  SETUPTIME_LO = 3NS
+  SETUPTIME_HI = 2NS
+  HOLDTIME = 1NS

.ENDS 74AC873

*-------------------------------------------------------------74ALS873B----

* Dual 4 Bit D-Type Latch with Tri-State Outputs
* TI ALS/AS Logic Data Book, 1986, pages 2-737 to 2-742
* jat 3/25/96

.SUBCKT 74ALS873B
+ OCBAR C CLRBAR D1 D2 D3 D4 Q1 Q2 Q3 Q4
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(4) DPWR DGND
+ $D_HI CLRBAR C
+ D1 D2 D3 D4 Q1O Q2O Q3O Q4O $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(4,1,6) DPWR DGND
+ Q1O Q2O Q3O Q4O
+ OCBAR
+ D1 D2 D3 D4 C CLRBAR
+ Q1 Q2 Q3 Q4
+ IO_ALS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL = {IO_LEVEL}
+ BOOLEAN:
+   CLEAR = {CHANGED_HL(CLRBAR,0)}
+   LATCH = {CHANGED(C,0)}
+   DATA =  {CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) | CHANGED(D4,0)}
+ TRISTATE:
+   ENABLE LO = OCBAR
+   Q1 Q2 Q3 Q4 = {
+     CASE(
+       TRN_ZH, DELAY(-1,11NS,14NS),
+       TRN_ZL, DELAY(-1,11NS,15NS),
+       TRN_HZ, DELAY(-1,7NS,9NS),
+       TRN_LZ, DELAY(-1,7NS,11NS),
+       CLEAR & TRN_HL, DELAY(-1,12NS,16NS),
+       LATCH & TRN_LH, DELAY(-1,13NS,17NS),
+       LATCH & TRN_HL, DELAY(-1,14NS,18NS),
+       DATA & TRN_LH, DELAY(-1,7NS,11NS),
+       DATA & TRN_HL, DELAY(-1,7NS,10NS),
+       DELAY(-1,15NS,19NS))}

U3 CONSTRAINT(6) DPWR DGND
+ CLRBAR C D1 D2 D3 D4
+ IO_ALS00 IO_LEVEL = {IO_LEVEL}
+ WIDTH:
+  NODE = CLRBAR
+  MIN_LO = 15NS
+ WIDTH:
+  NODE = C
+  MIN_HI = 10NS
+ SETUP_HOLD:
+  CLOCK HL = C
+  DATA(4) = D1 D2 D3 D4
+  SETUPTIME_LO = 10NS
+  HOLDTIME = 7NS

.ENDS 74ALS873B

*-------------------------------------------------------------74AS873----

* Dual 4 Bit D-Type Latch with Tri-State Outputs
* TI ALS/AS Logic Data Book, 1986, pages 2-737 to 2-742
* jat 3/25/96

.SUBCKT 74AS873
+ OCBAR C CLRBAR D1 D2 D3 D4 Q1 Q2 Q3 Q4
+ OPTIONAL: DPWR=$G_DPWR DGND=$G_DGND
+ PARAMS: MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(4) DPWR DGND
+ $D_HI CLRBAR C
+ D1 D2 D3 D4 Q1O Q2O Q3O Q4O $D_NC $D_NC $D_NC $D_NC
+ D0_GFF IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 PINDLY(4,1,6) DPWR DGND
+ Q1O Q2O Q3O Q4O
+ OCBAR
+ D1 D2 D3 D4 C CLRBAR
+ Q1 Q2 Q3 Q4
+ IO_AS00 MNTYMXDLY={MNTYMXDLY} IO_LEVEL = {IO_LEVEL}
+ BOOLEAN:
+   CLEAR = {CHANGED_HL(CLRBAR,0)}
+   LATCH = {CHANGED(C,0)}
+   DATA =  {CHANGED(D1,0) | CHANGED(D2,0) | CHANGED(D3,0) | CHANGED(D4,0)}
+ TRISTATE:
+   ENABLE LO = OCBAR
+   Q1 Q2 Q3 Q4 = {
+     CASE(
+       TRN_ZH, DELAY(2NS,-1,6.5NS),
+       TRN_ZL, DELAY(4NS,-1,9.5NS),
+       TRN_HZ, DELAY(2NS,-1,6.5NS),
+       TRN_LZ, DELAY(2NS,-1,7.5NS),
+       CLEAR & TRN_HL, DELAY(3NS,-1,7.5NS),
+       LATCH & TRN_LH, DELAY(6NS,-1,11.5NS),
+       LATCH & TRN_HL, DELAY(4NS,-1,7.5NS),
+       DATA & TRN_LH, DELAY(3NS,-1,6NS),
+       DATA & TRN_HL, DELAY(3NS,-1,6NS),
+       DELAY(7NS,-1,12.5NS))}

U3 CONSTRAINT(6) DPWR DGND
+ CLRBAR C D1 D2 D3 D4
+ IO_AS00 IO_LEVEL = {IO_LEVEL}
+ WIDTH:
+  NODE = CLRBAR
+  MIN_LO = 3.5NS
+ WIDTH:
+  NODE = C
+  MIN_HI = 4.5NS
+ SETUP_HOLD:
+  CLOCK HL = C
+  DATA(4) = D1 D2 D3 D4
+  SETUPTIME_LO = 2NS
+  HOLDTIME = 3NS

.ENDS 74AS873
