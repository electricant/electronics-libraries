*********************************************************
*  	 ADVANCED FAST TTL (F) DIGITAL LIBRARY BASED        *
*            ON THE MOTOROLA DATA HANDBOOK		        *
*									                    *
*DEVELOPPED FOR INTUSOFT BY JEAN-CLAUDE MBOLI		    *
*Phone:(33) 4 76 44 43 30	    Fax:(33) 4 76 44 43 52  * 
*e-mail:101736.631@compuserve.com				        *
*						  							    *
*				February 1997						    *
*					  								    *
*********************************************************
**********************
*SRC=MC74F00;MC74F00;TTL;74Fxx;2 input NAND gate
*SYM=NAND2
*MC74F00 QUAD 2-INPUT NAND GATE
***
.subckt MC74F00 in1 in2 out
*FAMILY TTLin TTLin TTLout
*pinout J 1 2 3;4 5 6;13 12 11;10 9 8:VCC=14 GND=7
*pinout N 1 2 3;4 5 6;13 12 11;10 9 8:VCC=14 GND=7
*pinout D 1 2 3;4 5 6;13 12 11;10 9 8:VCC=14 GND=7

anand [in1 in2] out ls_nand 
.model ls_nand d_nand(rise_delay=4.2n fall_delay=3.4n)
.ends
*
*
**********************
*SRC=MC74F02;MC74F02;TTL;74Fxx;2 input NOR gate
*SYM=NOR2
*MC74F02 QUAD 2-INPUT NOR GATE
***
.subckt MC74F02 in1 in2 out
*FAMILY TTLin TTLin TTLout
*pinout J 2 3 1;5 6 4;8 9 10;11 12 13:VCC=14 GND=7
*pinout N 2 3 1;5 6 4;8 9 10;11 12 13:VCC=14 GND=7
*pinout D 2 3 1;5 6 4;8 9 10;11 12 13:VCC=14 GND=7

anor [in1 in2] out ls_nor 
.model ls_nor d_nor(rise_delay=4.2n fall_delay=3.4n)
.ends
*
*
**********************
*SRC=MC74F04;MC74F04;TTL;74Fxx;inverter
*SYM=INV
*MC74F04 HEX INVERTER
***
.subckt MC74F04 in out
*FAMILY TTLin TTLout
*pinout J 1 2;3 4;5 6;9 8;11 10;13 12:VCC=14 GND=7
*pinout N 1 2;3 4;5 6;9 8;11 10;13 12:VCC=14 GND=7
*pinout D 1 2;3 4;5 6;9 8;11 10;13 12:VCC=14 GND=7

ainv in out ls_inv 
.model ls_inv d_inverter(rise_delay=4.2n fall_delay=3.4n)
.ends
*
*
**********************
*SRC=MC74F08;MC74F08;TTL;74Fxx;2 input AND gate
*SYM=AND2
*MC74F08 QUAD 2-INPUT AND GATE
***
.subckt MC74F08 in1 in2 out
*FAMILY TTLin TTLin TTLout
*pinout J 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7
*pinout N 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7
*pinout D 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7

aand [in1 in2] out ls_and 
.model ls_and d_and(rise_delay=4.8n fall_delay=4.4n)
.ends
*
*
**********************
*SRC=MC74F10;MC74F10;TTL;74Fxx;3 input NAND gate
*SYM=NAND3
*MC74F10 TRIPLE 3-INPUT NAND GATE
***
.subckt MC74F10 in1 in2 in3 out
*FAMILY TTLin TTLin TTLin TTLout
*pinout J 1 2 13 12;3 4 5 6;9 10 11 8:VCC=14 GND=7
*pinout N 1 2 13 12;3 4 5 6;9 10 11 8:VCC=14 GND=7
*pinout D 1 2 13 12;3 4 5 6;9 10 11 8:VCC=14 GND=7

anand [in1 in2 in3] out ls_nand 
.model ls_nand d_nand(rise_delay=4.2n fall_delay=3.4n)
.ends
*
*
**********************
*SRC=MC74F11;MC74F11;TTL;74Fxx;3 input AND gate
*SYM=AND3
*MC74F11 TRIPLE 3-INPUT AND GATE
***
.subckt MC74F11 in1 in2 in3 out
*FAMILY TTLin TTLin TTLin TTLout
*pinout J 1 2 13 12;3 4 5 6;9 10 11 8:VCC=14 GND=7
*pinout N 1 2 13 12;3 4 5 6;9 10 11 8:VCC=14 GND=7
*pinout D 1 2 13 12;3 4 5 6;9 10 11 8:VCC=14 GND=7

aand [in1 in2 in3] out ls_and 
.model ls_and d_and(rise_delay=4.8n fall_delay=4.5n)
.ends
*
*
**********************
*SRC=MC74F20;MC74F20;TTL;74Fxx;4 input NAND gate
*SYM=NAND4
*MC74F20 DUAL 4-INPUT NAND GATE
***
.subckt MC74F20 in1 in2 in3 in4 out
*FAMILY TTLin TTLin TTLin TTLin TTLout
*pinout J 1 2 4 5 6;9 10 12 13 8:VCC=14 GND=7
*pinout N 1 2 4 5 6;9 10 12 13 8:VCC=14 GND=7
*pinout D 1 2 4 5 6;9 10 12 13 8:VCC=14 GND=7

anand [in1 in2 in3 in4] out ls_nand
.model ls_nand d_nand(rise_delay=4.2n fall_delay=3.4n)
.ends
*
*
**********************
*SRC=MC74F32;MC74F32;TTL;74Fxx;2 input OR gate
*SYM=OR2
*MC74F32 QUAD 2-INPUT OR GATE
***
.subckt MC74F32 in1 in2 out
*FAMILY TTLin TTLin TTLout
*pinout J 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7
*pinout N 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7
*pinout D 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7

aor [in1 in2] out ls_or 
.model ls_or d_or(rise_delay=4.8n fall_delay=4.7n)
.ends
*
*
**********************
*SRC=MC74F74;MC74F74;TTL;74Fxx;D Flip-Flop
*SYM=T7474
*MC74F74 DUAL D-TYPE EDGE-TRIGGERED 
*FLIP-FLOPS WITH PRESET & CLEAR 
***
.subckt MC74F74 clrbar d clk prebar q qbar
*FAMILY  TTLin TTLin TTLin TTLin TTLout TTLout
*pinout J 1 2 3 4 5 6;13 12 11 10 9 8:VCC=14 GND=7
*pinout N 1 2 3 4 5 6;13 12 11 10 9 8:VCC=14 GND=7
*pinout D 1 2 3 4 5 6;13 12 11 10 9 8:VCC=14 GND=7

adff d clk prebar clrbar q qbar ls_dff

.model ls_dff d_dff(clk_delay=1p rise_delay=5.8n 
+ fall_delay=6.8n ic=1)
.ends
*
*
**********************
*SRC=MC74F86;MC74F86;TTL;74Fxx;2 input XOR
*SYM=XOR
*MC74F86 QUAD 2-INPUT EXCLUSIVE-OR GATE
***
.subckt MC74F86 in1 in2 out
*FAMILY TTLin TTLin TTLout
*pinout J 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7
*pinout N 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7
*pinout D 1 2 3;4 5 6;9 10 8;12 13 11:VCC=14 GND=7

axor [in1 in2] out ls_xor 
.model ls_xor d_xor(rise_delay=4.8n fall_delay=4.8n)
.ends
*
*
**********************
*SRC=MC74F109;MC74F109;TTL;74Fxx;J-K Flip-Flop
*SYM=T74109
*MC74F109 DUAL J-KBAR EDGE-TRIGGERED FLIP-FLOPS
*WITH PRESET AND CLEAR
***
.subckt MC74F109 clk prebar clrbar j kbar q qbar
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLout TTLout
*pinout J 4 5 1 2 3 6 7;12 11 15 14 13 10 9:VCC=16 GND=8
*pinout N 4 5 1 2 3 6 7;12 11 15 14 13 10 9:VCC=16 GND=8
*pinout D 4 5 1 2 3 6 7;12 11 15 14 13 10 9:VCC=16 GND=8

ajk j k clk pre clr q qbar ls_jkff
ainv1 prebar pre ls_inv
ainv2 clrbar clr ls_inv
ainv3 kbar k ls_inv

.model ls_jkff d_jkff(clk_delay=1p set_delay=1p
+ reset_delay=0.2n rise_delay=5.9n fall_delay=6.8n)
.model ls_inv d_inverter
.ends
*
*
**********************
*SRC=MC74F138;MC74F138;TTL;74Fxx;3-to-8 Decoders
*SYM=T74138
*MC74F138 3-LINE TO 8-LINE DECODERS/DEMULTIPLEXERS
***
.subckt MC74F138 a b c g1 g2ab g2bb y0 y1 y2 y3
+ y4 y5 y6 y7
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLout TTLout TTLout
+ TTLout TTLout TTLout TTLout TTLout
*pinout J 1 2 3 6 4 5 15 14 13 12 11 10 9 7:VCC=16 GND=8
*pinout N 1 2 3 6 4 5 15 14 13 12 11 10 9 7:VCC=16 GND=8
*pinout D 1 2 3 6 4 5 15 14 13 12 11 10 9 7:VCC=16 GND=8

ainv1 a ab inv
ainv2 b bb inv
ainv3 c cb inv
ainv4 g1 g1b inv

anor [g2ab g2bb g1b] en nor

anand0 [ab bb cb en] iy0 nand
anand1 [a bb cb en] iy1 nand
anand2 [ab b cb en] iy2 nand
anand3 [a b cb en] iy3 nand
anand4 [ab bb c en] iy4 nand
anand5 [a bb c en] iy5 nand
anand6 [ab b c en] iy6 nand
anand7 [a b c en] iy7 nand

abuf0 iy0 y0 buf
abuf1 iy1 y1 buf
abuf2 iy2 y2 buf
abuf3 iy3 y3 buf
abuf4 iy4 y4 buf
abuf5 iy5 y5 buf
abuf6 iy6 y6 buf
abuf7 iy7 y7 buf

.model inv d_inverter
.model buf d_buffer
.model nor d_nor(rise_delay=6n fall_delay=6n)
.model nand d_nand(rise_delay=6n fall_delay=6n)

.ends
*
*
**********************
*SRC=MC74F139;MC74F139;TTL;74Fxx;2-to-4 Decoders
*SYM=T74139
*MC74F139 DUAL 2-LINE TO 4-LINE DECODERS/DEMULTIPLEXERS
***
.subckt MC74F139 a b gb y0 y1 y2 y3
*FAMILY TTLin TTLin TTLin TTLout TTLout TTLout TTLout
*pinout J 2 3 1 4 5 6 7;14 13 15 12 11 10 9:VCC=16 GND=8
*pinout N 2 3 1 4 5 6 7;14 13 15 12 11 10 9:VCC=16 GND=8
*pinout D 2 3 1 4 5 6 7;14 13 15 12 11 10 9:VCC=16 GND=8

ainv1 a ab inv
ainv2 b bb inv
ainv3 gb en invmod

anand0 [ab bb en] iy0 nand
anand1 [a bb en] iy1 nand
anand2 [ab b en] iy2 nand
anand3 [a b en] iy3 nand

abuf0 iy0 y0 buf
abuf1 iy1 y1 buf
abuf2 iy2 y2 buf
abuf3 iy3 y3 buf

.model inv d_inverter
.model buf d_buffer
.model invmod d_inverter(rise_delay=5.8n fall_delay=5.3n)
.model nand d_nand(rise_delay=5.8n fall_delay=6.5n)

.ends
*
*
**********************
*SRC=MC74F148;MC74F148;TTL;74Fxx;Priority encoder
*SYM=T74148
*MC74F148 PRIORITY ENCODER 8-3 LINE 
***
.subckt MC74F148 ei in0 in1 in2 in3 in4 in5 in6 in7
+ a0 a1 a2 gs eo
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin
+ TTLin TTLout TTLout TTLout TTLout TTLout
*pinout J 5 10 11 12 13 1 2 3 4 9 7 6 14 15:VCC=16 GND=8
*pinout N 5 10 11 12 13 1 2 3 4 9 7 6 14 15:VCC=16 GND=8
*pinout D 5 10 11 12 13 1 2 3 4 9 7 6 14 15:VCC=16 GND=8

ainv1 in0 i0 inv
ainv2 in1 i1 inv
ainv3 in2 i2 inv
ainv4 in3 i3 inv
ainv5 in4 i4 inv
ainv6 in5 i5 inv
ainv7 in6 i6 inv
ainv8 in7 i7 inv
ainv9 ei iei inv 
anand1 [in0 in1 in2 in3 in4 in5 in6 in7] eo ls_nand1
anand2 [eo iei] gs ls_nand2

aand1 [i1 in2 in4 in6 iei] 1a and
aand2 [i3 in4 in6 iei] 1b and
aand3 [i5 in6 iei] 1c and
aand4 [i7 iei] 1d and
aand5 [i2 in4 in5 iei] 2a and
aand6 [i3 in4 in5 iei] 2b and
aand7 [i6 iei] 2c and
aand8 [i7 iei] 2d and
aand9 [i4 iei] 3a and
aanda [i5 iei] 3b and
aandb [i6 iei] 3c and
aandc [i7 iei] 3d and

anor1 [1a 1b 1c 1d] a0 ls_nor
anor2 [2a 2b 2c 2d] a1 ls_nor
anor3 [3a 3b 3c 3d] a2 ls_nor

.model ls_nor d_nor(rise_delay=5.5n fall_delay=5.5n)
.model ls_nand1 d_nand(rise_delay=5.5n fall_delay=5.5n)
.model ls_nand2 d_nand
.model and d_and
.model inv d_inverter

.ends
*
*
**********************
*SRC=MC74F151;MC74F151;TTL;74Fxx;Multiplexer
*SYM=T74151A
*MC74F151 MULTIPLEXER/DATA SELECTOR 8-1 LINE 
***
.subckt MC74F151 ebar s0 s1 s2 i0 i1 i2 i3 i4
+ i5 i6 i7 z zbar
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin
+ TTLin TTLin TTLin TTLout TTLout
*pinout J 7 11 10 9 4 3 2 1 15 14 13 12 5 6:VCC=16 GND=8
*pinout N 7 11 10 9 4 3 2 1 15 14 13 12 5 6:VCC=16 GND=8
*pinout D 7 11 10 9 4 3 2 1 15 14 13 12 5 6:VCC=16 GND=8

x1 i0 i1 s0 a1 mux2-1
x2 i2 i3 s0 a2 mux2-1
x3 i4 i5 s0 a3 mux2-1
x4 i6 i7 s0 a4 mux2-1
x5 a1 a2 s1 b1 mux2-1
x6 a3 a4 s1 b2 mux2-1
x7 b1 b2 s2 y mux2-1

ainv1 ebar e ls_inva
ainv2 y yb ls_inv
atri1 y e z ls_tri
atri2 yb e zbar ls_tri

.subckt mux2-1 a b c y
ainv c cb inv
aand1 [a cb] p1 and
aand2 [b c] p2 and
aor [p1 p2] y or
.model and d_and
.model or d_or
.model inv d_inverter
.ends mux2-1

.model ls_inva d_inverter(rise_delay=1n fall_delay=1n)
.model ls_inv d_inverter
.model ls_tri d_tristate(delay=5n)

.ends
*
*
**********************
*SRC=MC74F153;MC74F153;TTL;74Fxx;Multiplexer
*SYM=T74153
*MC74F153 DUAL 4-LINE TO 1-LINE DATA SELECTORS/MULTIPLEXERS 
***
.subckt MC74F153 eabar ebbar s0 s1 i0a i1a i2a i3a
+ i0b i1b i2b i3b za zb
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin 
+ TTLin TTLin TTLin TTLin TTLout TTLout
*pinout N 1 15 14 2 6 5 4 3 10 11 12 13 7 9:VCC=16 GND=8
*pinout J 1 15 14 2 6 5 4 3 10 11 12 13 7 9:VCC=16 GND=8
*pinout D 1 15 14 2 6 5 4 3 10 11 12 13 7 9:VCC=16 GND=8

x1 i0a i1a s0 a1 mux2-1
x2 i2a i3a s0 a2 mux2-1
x3 a1 a2 s1 ya mux2-1

x4 i0b i1b s0 b1 mux2-1
x5 i2b i3b s0 b2 mux2-1
x6 b1 b2 s1 yb mux2-1

ainv1 eabar ea ls_inva
ainv2 ebbar eb ls_inva
atri1 ya ea z ls_tri
atri2 yb eb zb ls_tri

.subckt mux2-1 a b c y
ainv c cb inv
aand1 [a cb] p1 and
aand2 [b c] p2 and
aor [p1 p2] y or
.model and d_and
.model or d_or
.model inv d_inverter
.ends mux2-1

.model ls_inva d_inverter(rise_delay=1n fall_delay=1n)

.model ls_tri d_tristate(delay=6n)

.ends
*
*
**********************
*SRC=MC74F157;MC74F157;TTL;74Fxx;Multiplexer
*SYM=T74157
*MC74F157 QUAD 2-LINE TO 1-LINE DATA
*SELECTORS/MULTIPLEXERS 
***
.subckt MC74F157 strb selectab 1a 1b 1y
+ 2a 2b 2y 3a 3b 3y 4a 4b 4y
*FAMILY TTLin TTLin TTLin TTLin TTLout
+ TTLin TTLin TTLout TTLin TTLin TTLout TTLin TTLin TTLout
*pinout J 15 1 2 3 4 5 6 7 11 10 9 14 13 12:VCC=16 GND=8
*pinout N 15 1 2 3 4 5 6 7 11 10 9 14 13 12:VCC=16 GND=8
*pinout D 15 1 2 3 4 5 6 7 11 10 9 14 13 12:VCC=16 GND=8

abuf1 strb gb buf1
abuf2 selectab abb buf2
ainv1 gb g inv
ainv2 abb s inv

aand1 [1a s g] a1 and
aand2 [1b abb g] a2 and
aora [a1 a2] 1y ls_or

aand3 [2a s g] b1 and
aand4 [2b abb g] b2 and
aorb [b1 b2] 2y ls_or

aand5 [3a s g] c1 and
aand6 [3b abb g] c2 and
aorc [c1 c2] 3y ls_or

aand7 [4a s g] d1 and
aand8 [4b abb g] d2 and
aord [d1 d2] 1y ls_or

.model inv d_inverter
.model buf1 d_buffer
.model buf2 d_buffer
.model and d_and
.model ls_or d_or(rise_delay=6n fall_delay=6n)
.ends
*
*
**********************
*SRC=MC74F158;MC74F158;TTL;74Fxx;Multiplexer
*SYM=T74158
*MC74F158 QUADRUPLE 2-LINE TO 1-LINE DATA
*SELECTORS/MULTIPLEXERS 
***
.subckt MC74F158 strb selectab 1a 1b 1y
+ 2a 2b 2y 3a 3b 3y 4a 4b 4y
*FAMILY TTLin TTLin TTLin TTLin TTLout
+ TTLin TTLin TTLout TTLin TTLin TTLout TTLin TTLin TTLout
*pinout J 15 1 2 3 4 5 6 7 11 10 9 14 13 12:VCC=16 GND=8
*pinout N 15 1 2 3 4 5 6 7 11 10 9 14 13 12:VCC=16 GND=8
*pinout D 15 1 2 3 4 5 6 7 11 10 9 14 13 12:VCC=16 GND=8

abuf1 strb gb buf1
abuf2 selectab abb buf2
ainv1 gb g inv
ainv2 abb s inv

aand1 [1a s g] a1 and
aand2 [1b abb g] a2 and
anora [a1 a2] 1y ls_nor

aand3 [2a s g] b1 and
aand4 [2b abb g] b2 and
anorb [b1 b2] 2y ls_nor

aand5 [3a s g] c1 and
aand6 [3b abb g] c2 and
anorc [c1 c2] 3y ls_nor

aand7 [4a s g] d1 and
aand8 [4b abb g] d2 and
anord [d1 d2] 4y ls_nor

.model inv d_inverter
.model buf1 d_buffer(rise_delay=1p fall_delay=1p)
.model buf2 d_buffer(rise_delay=1p fall_delay=1p)
.model and d_and
.model ls_nor d_nor(rise_delay=5n fall_delay=5n)
.ends
*
*
**********************                                                                                                 
*SRC=MC74F160A;MC74F160A;TTL;74Fxx;Decade Counter 
*SYM=T74160
*MC74F160A SYNCHRONOUS 4-BIT DECADE COUNTERS 
*WITH ASYNCHRONOUS CLEAR 
*** 
.subckt MC74F160A clk enp ent clrb loadb a b c d 
+ qa qb qc qd rco
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin 
+ TTLout TTLout TTLout TTLout TTLout
*pinout J 2 7 10 1 9 3 4 5 6 14 13 12 11 15:VCC=16 GND=8
*pinout D 2 7 10 1 9 3 4 5 6 14 13 12 11 15:VCC=16 GND=8
*pinout N 2 7 10 1 9 3 4 5 6 14 13 12 11 15:VCC=16 GND=8

ainv1 loadb load inv
ainv2 clrb clr inv

aand1 [enp ent] en and
aorja1 [load en] ija1 or
anandja [load a] ija2 nand
aorja2 [loadb a] ija or
aandja [ija1 ija] ja and
aandka [ija1 ija2] ka and 

aandb [qa en qdb] enb and
aorjb1 [load enb] ijb1 or
anandjb [load b] ijb2 nand
aorjb2 [loadb b] ijb or
aandjb [ijb1 ijb] jb and
aandkb [ijb1 ijb2] kb and

aandc [qa en qb] enc and
aorjc1 [load enc] ijc1 or
anandjc [load c] ijc2 nand
aorjc2 [loadb c] ijc or
aandjc [ijc1 ijc] jc and
aandkc [ijc1 ijc2] kc and

aanddx [qa qb qc en] enx and
aanddy [qa qd en] eny and
aordi [enx eny] end or
aorjd1 [load end] ijd1 or
anandjd [load d] ijd2 nand
aorjd2 [loadb d] ijd or
aandjd [ijd1 ijd] jd and
aandkd [ijd1 ijd2] kd and

ajka ja ka clk l clr qa qab jkff
ajkb jb kb clk l clr qb qbb jkff
ajkc jc kc clk l clr qc qcb jkff
ajkd jd kd clk l clr qd qdb jkff

aandrc [qd qa ent] rco andmod

al l low

.model low d_pulldown
.model and d_and
.model nand d_nand
.model or d_or
.model andmod d_and(rise_delay=1n fall_delay=1n)
.model jkff d_jkff(reset_delay=2n
+ rise_delay=6n fall_delay=7.3n) 
.model inv d_inverter
.ends 
*
*
**********************
*SRC=MC74F161A;MC74F161A;TTL;74Fxx;Binary Counter
*SYM=T74161
*MC74F161A SYNCHRONOUS 4-BIT BINARY COUNTER
*WITH DIRECT CLEAR
***
.subckt MC74F161A clk enp ent clrb loadb a b c d
+ qa qb qc qd rco
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin 
+ TTLout TTLout TTLout TTLout TTLout
*pinout J 2 7 10 1 9 3 4 5 6 14 13 12 11 15:VCC=16 GND=8
*pinout N 2 7 10 1 9 3 4 5 6 14 13 12 11 15:VCC=16 GND=8
*pinout D 2 7 10 1 9 3 4 5 6 14 13 12 11 15:VCC=16 GND=8

ainv1 loadb ld inv
ainv2 clrb clr inv

aand1 [enp ent] en and
aand2 [en qa] 1 and
aand3 [en qa qb] 2 and
aand4 [en qa qb qc] 3 and
aand5 [ent qa qb qc qd] rco ls_and

x1 ld en a clk clr qa jk_bloc 
x2 ld 1 b clk clr qb jk_bloc 
x3 ld 2 c clk clr qc jk_bloc 
x4 ld 3 d clk clr qd jk_bloc 

.subckt jk_bloc ld en d clk clr q
anand1 [ld 2] 1 nand
anand2 [ld d] 2 nand
aor [en ld] 3 or
aand1 [1 3] j and
aand2 [2 3] k and
ajk j k clk l clr q qb ls_jkff
al l low
.model low d_pulldown
.model nand d_nand
.model or d_or
.model and d_and
.model ls_jkff d_jkff(reset_delay=2n
+ rise_delay=6n fall_delay=7.3n) 

.ends jk_bloc

.model and d_and
.model inv d_inverter
.model or d_or
.model ls_and d_and(rise_delay=7n fall_delay=7n)

.ends

*
*
**********************
*SRC=MC74F163A;MC74F163;TTL;74Fxx;4-bit counter
*SYM=T74163
*MC74F163A SYNCHRONOUS 4-BIT BINARY COUNTER
***
.subckt MC74F163A clk enp ent clrb loadb a b c d
+ qa qb qc qd rco
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin 
+ TTLout TTLout TTLout TTLout TTLout
*pinout J 2 7 10 1 9 3 4 5 6 14 13 12 11 15:VCC=16 GND=8
*pinout N 2 7 10 1 9 3 4 5 6 14 13 12 11 15:VCC=16 GND=8
*pinout D 2 7 10 1 9 3 4 5 6 14 13 12 11 15:VCC=16 GND=8

ainv1 clrb clr inva
anor1 [loadb clr] lc nor
anor2 [clr lc] u1 nor
aand1 [enp ent] en and

xa clk lc u1 a en en qa qab d_bloc
xb clk lc u1 b en qa qb qbb d_bloc
xc clk lc u1 c en rc qc qcb d_bloc
xd clk lc u1 d en rd qd qdb d_bloc

anorc [qab qbb] rc nor
anord [qab abb qcb] rd nor

aandrco [qa qb qc qd ent] rco andmod

.subckt d_bloc clk ld u1 a en r1 q qb
aand1 [a ld] a1 and
aand2 [ox u1] a2 and
axnor [ix qb] ox xnor
aand3 [en r1] ix and
aor [a1 a2] d or
ad d clk h h q qb ls_dff
al h high
.model high d_pullup
.model xnor d_xnor
.model or d_or
.model ls_dff d_dff(rise_delay=6n fall_delay=7.3n) 
.ends d_bloc

.model and d_and
.model nand d_nand
.model nor d_nor
.model inv d_inverter
.model or d_or
.model andmod d_and(rise_delay=7n fall_delay=7n)
.model inva d_inverter

.ends
*
*
**********************
*SRC=MC74F174;MC74F174;TTL;74Fxx;D-type Flip-Flop
*SYM=T74174
*MC74F174 HEX D-TYPE FLIP-FLOPS WITH CLEAR
***
.subckt MC74F174 clrb clk d1 d2 d3 d4 d5
+ d6 q1 q2 q3 q4 q5 q6
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin
+ TTLin TTLin TTLout TTLout TTLout TTLout TTLout TTLout
*pinout J 1 9 3 4 6 11 13 14 2 5 7 10 12 15:VCC=16 GND=8
*pinout N 1 9 3 4 6 11 13 14 2 5 7 10 12 15:VCC=16 GND=8
*pinout D 1 9 3 4 6 11 13 14 2 5 7 10 12 15:VCC=16 GND=8

adff1 d1 clk pre clrb q1 q1b ls_dff 
adff2 d2 clk pre clrb q2 q2b ls_dff
adff3 d3 clk pre clrb q3 q3b ls_dff
adff4 d4 clk pre clrb q4 q4b ls_dff
adff5 d5 clk pre clrb q5 q5b ls_dff
adff6 d6 clk pre clrb q6 q6b ls_dff


aone pre plup

.model ls_dff d_dff(rise_delay=6.3n fall_delay=7.8n)
.model plup d_pullup

.ends
*
*
**********************
*SRC=MC74F175;MC74F175;TTL;74Fxx;D-type Flip-Flop
*SYM=T74175
*MC74F175 QUAD D-TYPE FLIP-FLOPS WITH CLEAR
***
.subckt MC74F175 clrb clk d1 d2 d3 d4
+ q1 q2 q3 q4 q1b q2b q3b q4b
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLout
+ TTLout TTLout TTLout TTLout TTLout TTLout TTLout
*pinout J 1 9 4 5 12 13 2 7 10 15 3 6 11 14:VCC=16 GND=8
*pinout N 1 9 4 5 12 13 2 7 10 15 3 6 11 14:VCC=16 GND=8
*pinout D 1 9 4 5 12 13 2 7 10 15 3 6 11 14:VCC=16 GND=8

adff1 d1 clk pre clrb q1 q1b ls_dff 
adff2 d2 clk pre clrb q2 q2b ls_dff
adff3 d3 clk pre clrb q3 q3b ls_dff
adff4 d4 clk pre clrb q4 q4b ls_dff

aone pre plup

.model ls_dff d_dff(nreset_delay=2n
+ rise_delay=5.5n fall_delay=6.8n)
.model plup d_pullup

.ends
*
*
**********************
*SRC=MC74F181;MC74F181;TTL;74Fxx;Function generator
*SYM=T74181
*MC74F181 ARITHMETIC LOGIC UNITS/FUNCTION GENERATORS
***
.subckt MC74F181 a0 a1 a2 a3 b0 b1 b2 b3 s0 s1
+ s2 s3 cnb m f0 f1 f2 f3 aeqb cn4b x y
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin
+  TTLin TTLin TTLin TTLin TTLout TTLout TTLout TTLout TTLout TTLout TTLout TTLout
*pinout N 2 23 21 19 1 22 20 18 6 5 4 3 7 8 9 10 11 13 14 16 15 17:VCC=24 GND=12

ainv1 a0 a0b inv
ainv2 a1 a1b inv
ainv3 a2 a2b inv
ainv4 a3 a3b inv
ainv5 b0 b0b inv
ainv6 b1 b1b inv
ainv7 b2 b2b inv
ainv8 b3 b3b inv
ainv9 m mb inv

aand1d [b3 s3 a3] p3 and
aand2d [b3b s2 a3] q3 and
aand3d [b3b s1] r3 and
aand4d [b3 s0] t3 and
anor1d [p3 q3] 1d nor
anor2d [r3 t3 a3] 2d nor

aand1c [b2 s3 a2] p2 and
aand2c [b2b s2 a2] q2 and
aand3c [b2b s1] r2 and
aand4c [b2 s0] t2 and
anor1c [p2 q2] 1c nor
anor2c [r2 t2 a2] 2c nor

aand1b [b1 s3 a1] p1 and
aand2b [b1b s2 a1] q1 and
aand3b [b1b s1] r1 and
aand4b [b1 s0] t1 and
anor1b [p1 q1] 1b nor
anor2b [r1 t1 a1] 2b nor

aand1a [b0 s3 a0] p0 and
aand2a [b0b s2 a0] q0 and
aand3a [b0b s1] r0 and
aand4a [b0 s0] t0 and
anor1a [p0 q0] 1a nor
anor2a [r0 t0 a0] 2a nor

aandf1 [1d 2c] y1 and
aandf2 [1d 1c 2b] y2 and
aandf3 [1d 1c 1b 2a] y3 and
anorf1 [2d y1 y2 y3] y ls_nor

anandf1 [1d 1c 1b 1a cnb] x1 ls_nand
anandf2 [1d 1c 1b 1a] x ls_nand

anandout [y x1] cn4b nand

axor1 [1d 2d] u1 xor
aandf4 [cnb 1a 1b 1c mb] u2 and
aandf5 [1b 1c 2a mb] u3 and
aandf6 [1c 2b mb] u4 and
aandf7 [2c mb] u5 and
anorf2 [u2 u3 u4 u5] u6 nor
axor2 [u1 u6] f3 ls_xor

axor3 [1c 2c] v1 xor
aandf8 [cnb 1a 1b mb] v2 and
aandf9 [1b 2a mb] v3 and
aandfa [2b mb] v4 and
anorf3 [v2 v3 v4] v5 nor
axor4 [v1 v5] f2 ls_xor

axor5 [1b 2b] w1 xor
aandfb [cnb 1a mb] w2 and
aandfc [2a mb] w3 and
anorf4 [w2 w3] w4 nor
axor6 [w1 w4] f1 ls_xor

axor7 [1a 2a] z1 xor
anandfx [cnb mb] z2 nand
axor8 [z1 z2] f0 ls_xor

aandab [f0 f1 f2 f3] aeqb ls_and

.model xor d_xor
.model and d_and
.model nand d_nand
.model nor d_nor
.model ls_nor d_nor(rise_delay=7n fall_delay=7n)
.model ls_xor d_xor(rise_delay=7n fall_delay=7n)
.model ls_nand d_nand(rise_delay=7n fall_delay=7n)
.model ls_and d_and(rise_delay=7n fall_delay=7n)
.model inv d_inverter

.ends
*
*****************
*SRC=MC74F182;MC74F182;TTL;74Fxx;Carry generator
*SYM=T74182
*MC74F182 LOOK-AHEAD CARRY GENERATORS
***
.subckt MC74F182 x0 x1 x2 x3 y0 y1 y2 y3
+ cnb cnxb cnyb cnzb x y
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin
+ TTLin TTLin TTLin TTLout TTLout TTLout TTLout TTLout
*pinout J 4 2 15 6 3 1 14 5 13 12 11 9 7 10:VCC=16 GND=8
*pinout N 4 2 15 6 3 1 14 5 13 12 11 9 7 10:VCC=16 GND=8
*pinout D 4 2 15 6 3 1 14 5 13 12 11 9 7 10:VCC=16 GND=8

ainv1 cnb cn inv
aor1 [x0 x1 x2 x3] x ls_or

aand1a [y0 y1 y2 y3] 1a and
aand2a [x1 y1 y2 y3] 2a and
aand3a [x2 y2 y3] 3a and
aand4a [x3 y3] 4a and
aor2 [1a 2a 3a 4a] y ls_or

aand1b [y0 y1 y2 cn] 1b and
aand2b [y0 y1 y2 x0] 2b and
aand3b [x1 y1 y2] 3b and
aand4b [x2 y2] 4b and
anor1 [1b 2b 3b 4b] cnzb ls_nor

aand1c [y0 y1 cn] 1c and
aand2c [y0 y1 x0] 2c and
aand3c [x1 y1] 3c and
anor2 [1c 2c 3c] cnyb ls_nor

aand1d [y0 cn] 1d and
aand2d [x0 y0] 2d and
anor3 [1d 2d] cnxb ls_nor

.model and d_and
.model ls_nor d_nor(rise_delay=5.5n fall_delay=5.5n)
.model ls_or d_or(rise_delay=5.5n fall_delay=5.5n)
.model inv d_inverter

.ends
*
*
**********************
*SRC=MC74F194;MC74F194;TTL;74Fxx;4-bit shift register
*SYM=T74194
*MC74F194 4-BIT BIDIRECTIONAL UNIVERSAL
*SHIFT REGISTERS
***
.subckt MC74F194 clk clrb s1 s0 sl sr 
+ a b c d qa qb qc qd
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin
+ TTLin TTLin TTLin TTLin TTLout TTLout TTLout TTLout
*pinout J 11 1 10 9 7 2 3 4 5 6 15 14 13 12:VCC=16 GND=8
*pinout N 11 1 10 9 7 2 3 4 5 6 15 14 13 12:VCC=16 GND=8
*pinout D 11 1 10 9 7 2 3 4 5 6 15 14 13 12:VCC=16 GND=8

ainv1 s0 s0b inv
ainv2 s1 s1b inv
ainva clrb clr inv
x1 qd s1b s0b sl s1 s0b
+ d s1 s0 s0 s1b qc kd andnor
ainv3 kd jd inv
ajkd jd kd clk l clr qd qdb ls_jk

x2 qc s1b s0b qd s1 s0b
+ c s1 s0 s0 s1b qb kc andnor
ainv4 kc jc inv
ajkc jc kc clk l clr qc qcb ls_jk

x3 qb s1b s0b qc s1 s0b
+ b s1 s0 s0 s1b qa kb andnor
ainv5 kb jb inv
ajkb jb kb clk l clr qb qbb ls_jk

x4 qa s1b s0b qb s1 s0b
+ a s1 s0 s0 s1b sr ka andnor 
ainv6 ka ja inv
ajka ja ka clk l clr qa qab ls_jk

az l low

.subckt andnor 1a 2a 3a 1b 2b 3b 1c 2c 3c
+ 1d 2d 3d out
aand1a [1a 2a 3a] 1 and
aand2a [1b 2b 3b] 2 and
aand3a [1c 2c 3c] 3 and
aand4a [1d 2d 3d] 4 and
anor [1 2 3 4] out nor
.model and d_and
.model nor d_nor
.ends andnor

.model low d_pulldown
.model inv d_inverter
.model ls_jk d_jkff(reset_delay=3.5n
+ rise_delay=5.8n fall_delay=5.8n)

.ends
*
*
**********************
*SRC=MC74F251;MC74F251;TTL;74Fxx;Multiplexer
*SYM=T74251
*MC74F251 MULTIPLEXER/DATA SELECTOR 8-1 LINE 
*WITH 3-STATE OUTPUTS
***
.subckt MC74F251 gb a b c d0 d1 d2 d3 d4
+ d5 d6 d7 y w
*FAMILY TTLin TTLin TTLin TTLin TTLin TTLin TTLin TTLin
+ TTLin TTLin TTLin TTLin TTLout TTLout
*pinout J 7 11 10 9 4 3 2 1 15 14 13 12 5 6:VCC=16 GND=8
*pinout N 7 11 10 9 4 3 2 1 15 14 13 12 5 6:VCC=16 GND=8
*pinout D 7 11 10 9 4 3 2 1 15 14 13 12 5 6:VCC=16 GND=8

xmux gb a b c d0 d1 d2 d3 d4 d5 d6 d7 y w MC74F151

.ends
*
**************
