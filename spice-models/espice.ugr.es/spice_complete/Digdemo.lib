* Digital Demo Library
* ----------------------------------------------------------- 7400 ------
*  Quad 2-Input Nand Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-3 to 2-7
*  bss    2/2/94
*
.SUBCKT 7400  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     1A 1B 1Y
+     DLY_00 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_00 ugate (tplhTY=11ns tplhMX=22ns tphlTY=7ns tphlMX=15ns)

.ENDS  7400
*
*
* ----------------------------------------------------------- 7401 ------
*  Quad 2-Input Nand Gates With Open-Collector Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-9 to 2-12
*  bss    2/3/94
*
.SUBCKT 7401  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     1A 1B 1Y
+     DLY_01 IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_01 ugate (tplhTY=35ns tplhMX=55ns tphlTY=8ns tphlMX=15ns)

.ENDS  7401
*
*
* ----------------------------------------------------------- 7402 ------
*  Quad 2-Input Nor Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-13 to 2-17
*  bss    2/3/94
*
.SUBCKT 7402  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     1A 1B 1Y
+     DLY_02 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_02 ugate (tplhTY=12ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS  7402
*
*
* ----------------------------------------------------------- 7403 ------
*  Quad 2-Input Nand Gates With Open-Collector Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-19 to 2-23
*  bss    2/3/94
*
.SUBCKT 7403  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     1A 1B 1Y
+     DLY_03 IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_03 ugate (tplhTY=35ns tplhMX=45ns tphlTY=8ns tphlMX=15ns)

.ENDS  7403
*
*
* ----------------------------------------------------------- 7404 ------
*  Hex Inverters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-25 to 2-29
*  bss    2/3/94
*
.SUBCKT 7404  1A  1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1A 1Y
+     DLY_04 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_04 ugate (tplhTY=12ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS  7404
*
*
* ----------------------------------------------------------- 7405 ------
*  Hex Inverters With Open-Collector Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-31 to 2-35
*  bss    2/3/94
*
.SUBCKT 7405  1A  1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1A 1Y
+     DLY_05 IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_05 ugate (tplhTY=40ns tplhMX=55ns tphlTY=8ns tphlMX=15ns)

.ENDS  7405
*
*
* ----------------------------------------------------------- 7406 ------
*  Hex Inverter Buffers/Drivers With Open-Collector High-Voltage Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-37 to 2-38
*  bss    2/3/94
*
.SUBCKT 7406  1A  1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1A 1Y
+     DLY_06 IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_06 ugate (tplhTY=10ns tplhMX=15ns tphlTY=15ns tphlMX=23ns)

.ENDS  7406
*
*
* ----------------------------------------------------------- 7407 ------
*  Hex Buffers/Drivers With Open-Collector High-Voltage Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-39 to 2-40
*  bss    2/3/94
*
.SUBCKT 7407  1A  1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 buf DPWR DGND
+     1A 1Y
+     DLY_07 IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_07 ugate (tplhTY=6ns tplhMX=15ns tphlTY=20ns tphlMX=26ns)

.ENDS  7407
*
*
* ----------------------------------------------------------- 7408 ------
*  Quad 2-Input And Gates   
*
*  The TTL Logic Data Book, 1988, TI Pages 2-41 to 2-45
*  bss    2/3/94
*
.SUBCKT 7408  1A 1B  1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 and(2) DPWR DGND
+     1A 1B 1Y
+     DLY_08 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_08 ugate (tplhTY=17.5ns tplhMX=27ns tphlTY=12ns tphlMX=19ns)

.ENDS  7408
*
*
* ----------------------------------------------------------- 7409 ------
*  Quad 2-Input And Gates With Open-Collector Outputs   
*
*  The TTL Logic Data Book, 1988, TI Pages 2-47 to 2-51
*  bss    2/4/94
*
.SUBCKT 7409  1A 1B  1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 and(2) DPWR DGND
+     1A 1B 1Y
+     DLY_09 IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_09 ugate (tplhTY=21ns tplhMX=32ns tphlTY=16ns tphlMX=24ns)

.ENDS  7409
*
*
* ----------------------------------------------------------- 7410 ------
*  Triple 3-Input Nand Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-53 to 2-57
*  bss    2/4/94
*
.SUBCKT 7410  1A 1B 1C 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(3) DPWR DGND
+     1A 1B 1C 1Y
+     DLY_10 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_10 ugate (tplhTY=11ns tplhMX=22ns tphlTY=7ns tphlMX=15ns)

.ENDS  7410
*
*
* ----------------------------------------------------------- 7412 ------
*  Triple 3-Input Nand Gates With Open-Collector Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-63 to 2-66
*  bss    2/4/94
*
.SUBCKT 7412  1A 1B 1C 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(3) DPWR DGND
+     1A 1B 1C 1Y
+     DLY_12 IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_12 ugate (tplhTY=35ns tplhMX=45ns tphlTY=8ns tphlMX=15ns)

.ENDS  7412
*
*
* ----------------------------------------------------------- 7413 ------
*  Dual 4-Input Nand Schmitt Triggers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-67 to 2-75
*  bss    2/4/94
*
.SUBCKT 7413  1A 1B 1C 1D 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(4) DPWR DGND
+     1A 1B 1C 1D 1Y
+     DLY_13 IO_STD_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_13 ugate (tplhTY=18ns tplhMX=27ns tphlTY=15ns tphlMX=22ns)

.ENDS  7413
*
*
* ----------------------------------------------------------- 7414 ------
*  Hex Schmitt-Trigger Inverters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-77 to 2-85
*  bss    2/4/94
*
.SUBCKT 7414  1A  1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1A  1Y
+     DLY_14 IO_STD_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_14 ugate (tplhTY=15ns tplhMX=22ns tphlTY=15ns tphlMX=22ns)

.ENDS  7414
*
*
* ----------------------------------------------------------- 7416 ------
*  Hex Inverter Buffers/Drivers With Open-Collector High-Voltage Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-37 to 2-38
*  bss    2/3/94
*
.SUBCKT 7416  1A  1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1A 1Y
+     DLY_16 IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_16 ugate (tplhTY=10ns tplhMX=15ns tphlTY=15ns tphlMX=23ns)

.ENDS  7416
*
*
* ----------------------------------------------------------- 7417 ------
*  Hex Buffers/Drivers With Open-Collector High-Voltage Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-39 to 2-40
*  bss    2/3/94
*
.SUBCKT 7417  1A  1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 buf DPWR DGND
+     1A 1Y
+     DLY_17 IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_17 ugate (tplhTY=6ns tplhMX=15ns tphlTY=20ns tphlMX=26ns)

.ENDS  7417
*
*
* ----------------------------------------------------------- 7420 ------
*  Dual 4-Input Nand Gates 
*
*  The TTL Logic Data Book, 1988, TI Pages 2-95 to 2-99
*  bss    2/4/94
*
.SUBCKT 7420  1A 1B 1C 1D 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(4) DPWR DGND
+     1A 1B 1C 1D 1Y
+     DLY_20 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_20 ugate (tplhTY=12ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS  7420
*
*
* ----------------------------------------------------------- 7422 ------
*  Dual 4-Input Nand Gates With Open-Collector Outputs 
*
*  The TTL Logic Data Book, 1988, TI Pages 2-105 to 2-109
*  bss    2/4/94
*
.SUBCKT 7422  1A 1B 1C 1D 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(4) DPWR DGND
+     1A 1B 1C 1D 1Y
+     DLY_22 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_22 ugate (tplhTY=35ns tplhMX=45ns tphlTY=8ns tphlMX=15ns)

.ENDS  7422
*
*
* ----------------------------------------------------------- 7423 ------
*  Dual 4-Input Nor Gates With Strobe (One Gate Expandable)
*
*  The TTL Logic Data Book, 1988, TI Pages 2-111 to 2-113
*  bss    2/14/94
*  The X inputs must come from a 60 gate
*
.SUBCKT 7423  1G 1A 1B 1C 1D 1X 1XBAR 2G 2A 2B 2C 2D 1Y 2Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1XBAR 1XB
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 aoi(2,5) DPWR DGND
+     1A 1G
+     1B 1G
+     1C 1G
+     1D 1G
+     1X 1XB
+     1Y
+     DLY_23 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 aoi(2,4) DPWR DGND
+     2A 2G
+     2B 2G
+     2C 2G
+     2D 2G
+     2Y
+     DLY_23 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_23 ugate (tplhTY=13ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS  7423
*
*
* ----------------------------------------------------------- 7425 ------
*  Dual 4-Input Nor Gates With Strobe
*
*  The TTL Logic Data Book, 1988, TI Pages 2-111 to 2-113
*  bss    2/14/94
*
.SUBCKT 7425  1G 1A 1B 1C 1D 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 aoi(2,4) DPWR DGND
+     1A 1G
+     1B 1G
+     1C 1G
+     1D 1G
+     1Y
+     DLY_25 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_25 ugate (tplhTY=13ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS  7425
*
*
* ----------------------------------------------------------- 7426 ------
*  Quad 2-Input High-Voltage Interface Nand Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-115 to 2-118
*  bss    2/7/94
*
.SUBCKT 7426  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     1A 1B 1Y
+     DLY_26 IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_26 ugate (tplhTY=16ns tplhMX=24ns tphlTY=11ns tphlMX=17ns)

.ENDS  7426
*
*
* ----------------------------------------------------------- 7427 ------
*  Triple 3-Input Nor Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-119 to 2-122
*  bss    2/7/94
*
.SUBCKT 7427  1A 1B 1C 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nor(3) DPWR DGND
+     1A 1B 1C 1Y
+     DLY_27 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_27 ugate (tplhTY=10ns tplhMX=15ns tphlTY=7ns tphlMX=11ns)

.ENDS  7427
*
*
* ----------------------------------------------------------- 7428 ------
*  Quad 2-Input Nor Buffers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-123 to 2-126
*  bss    2/7/94
*
.SUBCKT 7428  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     1A 1B 1Y
+     DLY_28 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_28 ugate (tplhTY=6ns tplhMX=9ns tphlTY=8ns tphlMX=12ns)

.ENDS  7428
*
*
* ----------------------------------------------------------- 7430 ------
*  8-Input Nand Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-127 to 2-131
*  bss    2/8/94
*
.SUBCKT 7430  A B C D E F G H Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(8) DPWR DGND
+     A B C D E F G H Y
+     DLY_30 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_30 ugate (tplhTY=13ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS  7430
*
*
* ----------------------------------------------------------- 7432 ------
*  Quad 2-Input Or Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-137 to 2-141
*  bss    2/9/94
*
.SUBCKT 7432  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 or(2) DPWR DGND
+     1A 1B 1Y
+     DLY_32 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_32 ugate (tplhTY=10ns tplhMX=15ns tphlTY=14ns tphlMX=22ns)

.ENDS  7432
*
*
* ----------------------------------------------------------- 7433 ------
*  Quad 2-Input Nor Buffers With Open-Collector Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-143 to 2-146
*  bss    2/9/94
*
.SUBCKT 7433  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     1A 1B 1Y
+     DLY_33 IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_33 ugate (tplhTY=10ns tplhMX=15ns tphlTY=12ns tphlMX=18ns)

.ENDS  7433
*
*
* ----------------------------------------------------------- 7437 ------
*  Quad 2-Input Nand Buffers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-147 to 2-151
*  bss    2/9/94
*
.SUBCKT 7437  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     1A 1B 1Y
+     DLY_37 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_37 ugate (tplhTY=13ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS  7437
*
*
* ----------------------------------------------------------- 7438 ------
*  Quad 2-Input Nand Buffers With Open-Collector Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-153 to 2-157
*  bss    2/9/94
*
.SUBCKT 7438  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     1A 1B 1Y
+     DLY_38 IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_38 ugate (tplhTY=14ns tplhMX=22ns tphlTY=11ns tphlMX=18ns)

.ENDS  7438
*
*
* ----------------------------------------------------------- 7439 ------
*  Quad 2-Input Nand Buffers With Open-Collector Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-159 to 2-160
*  bss    2/9/94
*
.SUBCKT 7439  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     1A 1B 1Y
+     DLY_39 IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_39 ugate (tplhMX=22ns tphlMX=18ns)

.ENDS  7439
*
*
* ----------------------------------------------------------- 7440 ------
*  Dual 4-Input Nand Buffers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-161 to 2-165
*  bss    2/9/94
*
.SUBCKT 7440  1A 1B 1C 1D 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(4) DPWR DGND
+     1A 1B 1C 1D 1Y
+     DLY_40 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_40 ugate (tplhTY=13ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS  7440
*
*
* ----------------------------------------------------------- 7442A ------
*  4-Line BCD to 10-Line Decimal Decoder
*
*  The TTL Logic Data Book, 1988, TI Pages 2-167 to 2-172
*  bss    2/10/94
*
.SUBCKT 7442A  A B C D
+      O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+      optional: DPWR=$G_DPWR DGND=$G_DGND
+      params: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP (4,10) DPWR DGND
+      A B C D
+      O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O O9_O
+      D0_GATE IO_STD IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     dbar = {~D}
+
+     O0_O = {~(abar & bbar & cbar & dbar)}
+     O1_O = {~(A & bbar & cbar & dbar)}
+     O2_O = {~(abar & B & cbar & dbar)}
+     O3_O = {~(A & B & cbar & dbar)}
+     O4_O = {~(abar & bbar & C & dbar)}
+     O5_O = {~(A & bbar & C & dbar)}
+     O6_O = {~(abar & B & C & dbar)}
+     O7_O = {~(A & B & C & dbar)}
+     O8_O = {~(abar & bbar & cbar & D)}
+     O9_O = {~(A & bbar & cbar & D)}

U2 PINDLY (10,0,4) DPWR DGND
+      O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O O9_O
+      A B C D
+      O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+      IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+      ATRAN = {CHANGED(A,0)}
+      BTRAN = {CHANGED(B,0)}
+      CTRAN = {CHANGED(C,0)}
+      DTRAN = {CHANGED(D,0)}
+
+  PINDLY:
+      O0 = {
+        CASE(
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,14ns,25ns))}
+
+      O1 = {
+        CASE(
+           ATRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O2 = {
+        CASE(
+           BTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O3 = {
+        CASE(
+           ATRAN | BTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O4 = {
+        CASE(
+           CTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O5 = {
+        CASE(
+           ATRAN | CTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O6 = {
+        CASE(
+           BTRAN | CTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O7 = {
+        CASE(
+           ATRAN | BTRAN | CTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O8 = {
+        CASE(
+           DTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O9 = {
+        CASE(
+           ATRAN | DTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}

.ENDS 7442A
*
*
* ----------------------------------------------------------- 7443A ------
*  4-Line BCD to 10-Line Decimal Decoder
*
*  The TTL Data Book, Vol. 2, 1985, TI Pages 3-181 to 3-189
*  bss    2/10/94
*
.SUBCKT 7443A  A B C D
+      O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+      optional: DPWR=$G_DPWR DGND=$G_DGND
+      params: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP (4,10) DPWR DGND
+      A B C D
+      O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O O9_O
+      D0_GATE IO_STD IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     dbar = {~D}
+
+     O0_O = {~(A & B & cbar & dbar)}
+     O1_O = {~(abar & bbar & C & dbar)}
+     O2_O = {~(A & bbar & C & dbar)}
+     O3_O = {~(abar & B & C & dbar)}
+     O4_O = {~(A & B & C & dbar)}
+     O5_O = {~(abar & bbar & cbar & D)}
+     O6_O = {~(A & bbar & cbar & D)}
+     O7_O = {~(abar & B & cbar & D)}
+     O8_O = {~(A & B & cbar & D)}
+     O9_O = {~(abar & bbar & C & D)}

U2 PINDLY (10,0,4) DPWR DGND
+      O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O O9_O
+      A B C D
+      O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+      IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+      ATRAN = {CHANGED(A,0)}
+      BTRAN = {CHANGED(B,0)}
+      CTRAN = {CHANGED(C,0)}
+      DTRAN = {CHANGED(D,0)}
+
+  PINDLY:
+      O0 = {
+        CASE(
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,14ns,25ns))}
+
+      O1 = {
+        CASE(
+           ATRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O2 = {
+        CASE(
+           BTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O3 = {
+        CASE(
+           ATRAN | BTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O4 = {
+        CASE(
+           CTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O5 = {
+        CASE(
+           ATRAN | CTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O6 = {
+        CASE(
+           BTRAN | CTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O7 = {
+        CASE(
+           ATRAN | BTRAN | CTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O8 = {
+        CASE(
+           DTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O9 = {
+        CASE(
+           ATRAN | DTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}

.ENDS 7443A
*
*
* ----------------------------------------------------------- 7444A ------
*  4-Line BCD to 10-Line Decimal Decoder
*
*  The TTL Data Book, Vol. 2, 1985, TI Pages 3-181 to 3-189
*  bss    2/10/94
*
.SUBCKT 7444A  A B C D
+      O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+      optional: DPWR=$G_DPWR DGND=$G_DGND
+      params: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP (4,10) DPWR DGND
+      A B C D
+      O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O O9_O
+      D0_GATE IO_STD IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     dbar = {~D}
+
+     O0_O = {~(abar & B & cbar & dbar)}
+     O1_O = {~(abar & B & C & dbar)}
+     O2_O = {~(A & B & C & dbar)}
+     O3_O = {~(A & bbar & C & dbar)}
+     O4_O = {~(abar & bbar & C & dbar)}
+     O5_O = {~(abar & bbar & C & D)}
+     O6_O = {~(A & bbar & C & D)}
+     O7_O = {~(A & B & C & D)}
+     O8_O = {~(abar & B & C & D)}
+     O9_O = {~(abar & B & cbar & D)}

U2 PINDLY (10,0,4) DPWR DGND
+      O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O O9_O
+      A B C D
+      O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+      IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+      ATRAN = {CHANGED(A,0)}
+      BTRAN = {CHANGED(B,0)}
+      CTRAN = {CHANGED(C,0)}
+      DTRAN = {CHANGED(D,0)}
+
+  PINDLY:
+      O0 = {
+        CASE(
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,14ns,25ns))}
+
+      O1 = {
+        CASE(
+           ATRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O2 = {
+        CASE(
+           BTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O3 = {
+        CASE(
+           ATRAN | BTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O4 = {
+        CASE(
+           CTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O5 = {
+        CASE(
+           ATRAN | CTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O6 = {
+        CASE(
+           BTRAN | CTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O7 = {
+        CASE(
+           ATRAN | BTRAN | CTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O8 = {
+        CASE(
+           DTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}
+
+      O9 = {
+        CASE(
+           ATRAN | DTRAN, DELAY(-1,17ns,30ns),
+           TRN_LH, DELAY(-1,10ns,25ns),
+           TRN_HL, DELAY(-1,14ns,25ns),
+          DELAY(-1,17ns,30ns))}

.ENDS 7444A
*
*
* ----------------------------------------------------------- 7445 ------
*  BCD to Decimal Decoder/Driver
*
*  The TTL Logic Data Book, 1988, TI Pages 2-173 to 2-174
*  bss    2/10/94
*
.SUBCKT 7445  A B C D
+      O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+      optional: DPWR=$G_DPWR DGND=$G_DGND
+      params: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP (4,10) DPWR DGND
+      A B C D
+      O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O O9_O
+      D0_GATE IO_STD IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     dbar = {~D}
+
+     O0_O = {~(abar & bbar & cbar & dbar)}
+     O1_O = {~(A & bbar & cbar & dbar)}
+     O2_O = {~(abar & B & cbar & dbar)}
+     O3_O = {~(A & B & cbar & dbar)}
+     O4_O = {~(abar & bbar & C & dbar)}
+     O5_O = {~(A & bbar & C & dbar)}
+     O6_O = {~(abar & B & C & dbar)}
+     O7_O = {~(A & B & C & dbar)}
+     O8_O = {~(abar & bbar & cbar & D)}
+     O9_O = {~(A & bbar & cbar & D)}

U2 PINDLY (10,0,4) DPWR DGND
+      O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O O9_O
+      A B C D
+      O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+      IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+      O0 O1 O2 O3 O4 O5 O6 O7 O8 O9 = {
+           DELAY(-1,-1,50ns)}

.ENDS 7445
*
*
* ----------------------------------------------------------- 7446A ------
*  BCD To Seven Segment Decoder/Driver
*
*  The TTL Logic Data Book, 1988, TI Pages 2-175 to 2-187
*  bss    2/11/94
*
.SUBCKT 7446A  A B C D BI/RBO RBIBAR LTBAR
+      OA OB OC OD OE OF OG
+      optional: DPWR=$G_DPWR DGND=$G_DGND
+      params: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP (7,8) DPWR DGND
+      A B C D BI/RBO RBIBAR LTBAR
+      O_A O_B O_C O_D O_E O_F O_G BI/RBO
+      D0_GATE IO_STD IO_LEVEL={IO_LEVEL}
+
+    LOGIC:
+      alt = {~(A & LTBAR)}
+      blt = {~(B & LTBAR)}
+      clt = {~(C & LTBAR)}
+      dbar = {~D}
+      abi = {~(alt & BI/RBO)}
+      bbi = {~(blt & BI/RBO)}
+      cbi = {~(clt & BI/RBO)}
+      dbi = {~(dbar & BI/RBO)}
+      rbi = {~RBIBAR}
+
+      O_A = {(bbi & dbi) | (alt & cbi) | (abi & blt & clt & dbar)}
+      O_B = {(bbi & dbi) | (abi & blt & cbi) | (alt & bbi & cbi)}
+      O_C = {(cbi & dbi) | (alt & bbi & clt)}
+      O_D = {(abi & blt & clt) | (alt & blt & cbi) | (abi & bbi & cbi)}
+      O_E = {abi | (blt & cbi)}
+      O_F  = {(abi & bbi) | (bbi & clt) | (abi & clt & dbar)}
+      O_G = {(abi & bbi & cbi) | (blt & clt & dbar & LTBAR)}
+      BI/RBO = {~(LTBAR & rbi & dbar & clt & blt & alt)}

U2 PINDLY (7,0,0) DPWR DGND
+    O_A O_B O_C O_D O_E O_F O_G
+    OA OB OC OD OE OF OG
+    IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     OA OB OC OD OE OF OG = {
+         DELAY(-1,-1,100ns)}

.ENDS 7446A
*
*
* ----------------------------------------------------------- 7447A ------
*  BCD To Seven Segment Decoder/Driver
*
*  The TTL Logic Data Book, 1988, TI Pages 2-175 to 2-187
*  bss    2/14/94
*
.SUBCKT 7447A  A B C D BI/RBO RBIBAR LTBAR
+      OA OB OC OD OE OF OG
+      optional: DPWR=$G_DPWR DGND=$G_DGND
+      params: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP (7,8) DPWR DGND
+      A B C D BI/RBO RBIBAR LTBAR
+      O_A O_B O_C O_D O_E O_F O_G BI/RBO
+      D0_GATE IO_STD IO_LEVEL={IO_LEVEL}
+
+    LOGIC:
+      alt = {~(A & LTBAR)}
+      blt = {~(B & LTBAR)}
+      clt = {~(C & LTBAR)}
+      dbar = {~D}
+      abi = {~(alt & BI/RBO)}
+      bbi = {~(blt & BI/RBO)}
+      cbi = {~(clt & BI/RBO)}
+      dbi = {~(dbar & BI/RBO)}
+      rbi = {~RBIBAR}
+
+      O_A = {(bbi & dbi) | (alt & cbi) | (abi & blt & clt & dbar)}
+      O_B = {(bbi & dbi) | (abi & blt & cbi) | (alt & bbi & cbi)}
+      O_C = {(cbi & dbi) | (alt & bbi & clt)}
+      O_D = {(abi & blt & clt) | (alt & blt & cbi) | (abi & bbi & cbi)}
+      O_E = {abi | (blt & cbi)}
+      O_F  = {(abi & bbi) | (bbi & clt) | (abi & clt & dbar)}
+      O_G = {(abi & bbi & cbi) | (blt & clt & dbar & LTBAR)}
+      BI/RBO = {~(LTBAR & rbi & dbar & clt & blt & alt)}

U2 PINDLY (7,0,0) DPWR DGND
+    O_A O_B O_C O_D O_E O_F O_G
+    OA OB OC OD OE OF OG
+    IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     OA OB OC OD OE OF OG = {
+         DELAY(-1,-1,100ns)}

.ENDS 7447A
*
*
* ----------------------------------------------------------- 7448 ------
*  BCD To Seven Segment Decoder/Driver
*
*  The TTL Logic Data Book, 1988, TI Pages 2-175 to 2-187
*  bss    2/14/94
*
.SUBCKT 7448  A B C D BI/RBO RBIBAR LTBAR
+      OA OB OC OD OE OF OG
+      optional: DPWR=$G_DPWR DGND=$G_DGND
+      params: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP (7,8) DPWR DGND
+      A B C D BI/RBO RBIBAR LTBAR
+      O_A O_B O_C O_D O_E O_F O_G BI/RBO
+      D0_GATE IO_STD IO_LEVEL={IO_LEVEL}
+
+    LOGIC:
+      alt = {~(A & LTBAR)}
+      blt = {~(B & LTBAR)}
+      clt = {~(C & LTBAR)}
+      dbar = {~D}
+      abi = {~(alt & BI/RBO)}
+      bbi = {~(blt & BI/RBO)}
+      cbi = {~(clt & BI/RBO)}
+      dbi = {~(dbar & BI/RBO)}
+      rbi = {~RBIBAR}
+
+      O_A = {~((bbi & dbi) | (alt & cbi) | (abi & blt & clt & dbar))}
+      O_B = {~((bbi & dbi) | (abi & blt & cbi) | (alt & bbi & cbi))}
+      O_C = {~((cbi & dbi) | (alt & bbi & clt))}
+      O_D = {~((abi & blt & clt) | (alt & blt & cbi) | (abi & bbi & cbi))}
+      O_E = {~(abi | (blt & cbi))}
+      O_F  = {~((abi & bbi) | (bbi & clt) | (abi & clt & dbar))}
+      O_G = {~((abi & bbi & cbi) | (blt & clt & dbar & LTBAR))}
+      BI/RBO = {~(LTBAR & rbi & dbar & clt & blt & alt)}

U2 PINDLY (7,0,0) DPWR DGND
+    O_A O_B O_C O_D O_E O_F O_G
+    OA OB OC OD OE OF OG
+    IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     OA OB OC OD OE OF OG = {
+         DELAY(-1,-1,100ns)}

.ENDS 7448
*
*
* ----------------------------------------------------------- 7450 ------
*  Dual 2-Wide 2-Input And-Or-Invert Gates (One Gate Expandable)
*
*  The TTL Logic Data Book, 1988, TI Pages 2-189 to 2-191
*  bss    2/14/94
*  The X inputs can only come from a 60 gate
*
.SUBCKT 7450 1A 1B 1C 1D 1X 1XBAR 2A 2B 2C 2D 1Y 2Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+    1XBAR 1XB
+    D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 aoi(2,3) DPWR DGND
+    1A 1B
+    1C 1D
+    1X 1XB
+    1Y
+    DLY_50 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 aoi(2,2) DPWR DGND
+    2A 2B
+    2C 2D
+    2Y
+    DLY_50 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_50 ugate (tplhTY=13ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS 7450
*
*
* ----------------------------------------------------------- 7451 ------
*  And-Or-Invert Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-193 to 2-198
*  bss    2/14/94
*
.SUBCKT 7451 1A 1B 1C 1D 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 aoi(2,2) DPWR DGND
+    1A 1B
+    1C 1D
+    1Y
+    DLY_51 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_51 ugate (tplhTY=13ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS 7451
*
*
* ----------------------------------------------------------- 7453 ------
*  Expandable 4-Wide And-Or-Invert Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-199 to 2-200
*  bss    2/14/94
*  The X input can only come from a 60 gate
*
.SUBCKT 7453 A B C D E F G H X XBAR Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+    XBAR XB
+    D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 aoi(2,5) DPWR DGND
+    A B
+    C D
+    E F
+    G H
+    X XB
+    Y
+    DLY_53 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_53 ugate (tplhTY=13ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS 7453
*
*
* ----------------------------------------------------------- 7454 ------
*  4-Wide And-Or-Invert Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-201 to 2-204
*  bss    2/14/94
*
.SUBCKT 7454 A B C D E F G H Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 aoi(2,4) DPWR DGND
+    A B
+    C D
+    E F
+    G H
+    Y
+    DLY_54 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_54 ugate (tplhTY=13ns tplhMX=22ns tphlTY=8ns tphlMX=15ns)

.ENDS 7454
*
*
* ----------------------------------------------------------- 7460 ------
*  Dual 4-Input Expanders
*
*  The TTL Data Book, Vol. 2, 1985, TI Pages 3-245 to 3-248
*  bss    2/16/94
*  This gate is used in conjunction with an expanded gate
*
.SUBCKT 7460 A B C D X XBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 and(4) DPWR DGND
+    A B C D
+    X
+    D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+    X XBAR
+    D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.ENDS 7460
*
*
* ----------------------------------------------------------- 7470 ------
*  And-Gated J-K Positive Edge-Triggered Flip-Flops With Preset And Clear
*
*  The TTL Logic Data Book, 1988, TI Pages 2-221 to 2-224
*  bss    2/21/94
*
.SUBCKT 7470 PREBAR CLRBAR CLK J1 J2 JBAR
+     K1 K2 KBAR Q QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 anda(3,2) DPWR DGND
+     J1 J2 JB K1 K2 KB J K
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inva(3) DPWR DGND
+     CLK JBAR KBAR CLKBAR JB KB
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+     PREBAR CLRBAR CLKBAR J K Q QBAR
+     DLY_70 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_70 ueff(tppcqlhMX=50ns tppcqhlMX=50ns twpclMN=25ns tpclkqlhTY=27ns
+                 tpclkqlhMX=50ns tpclkqhlTY=18ns tpclkqhlMX=50ns twclklMN=30ns
+                 twclkhMN=20ns tsudclkMN=20ns thdclkMN=5ns)

.ENDS 7470
*
*
* ----------------------------------------------------------- 7472 ------
*  And Gated J-K Master-Slave Flip-Flops With Preset And Clear
*
*  The TTL Logic Data Book, 1988, TI Pages 2-225 to 2-227
*  bss    2/22/94
*
.SUBCKT 7472 PREBAR CLRBAR CLK J1 J2 J3 K1 K2 K3 Q QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 SRFF(1) DPWR DGND
+     PREBAR CLRBAR CLK MJ MK SJ SK
+     D0_GFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 SRFF(1) DPWR DGND
+     PREBAR CLRBAR CLKBAR SJ SK Q_O QBAR_O
+     D0_GFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(9,3) DPWR DGND
+     CLK J1 J2 J3 K1 K2 K3 Q_O QBAR_O
+     MJ MK CLKBAR
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+   LOGIC:
+     CLKBAR={~CLK}
+     j={(J1 & J2 & J3)}
+     k={(K1 & K2 & K3)}
+     jbar={~j}
+     kbar={~k}
+     MJ={(j & k & QBAR_O) | (j & kbar)}
+     MK={(j & k & Q_O) | (jbar & k)}

U4DLY PINDLY(2,0,0) DPWR DGND
+     Q_O QBAR_O
+     Q QBAR
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+   PINDLY:
+     Q={
+        CASE(
+           TRN_LH, DELAY(-1,16ns,25ns),
+           TRN_HL, DELAY(-1,25ns,40ns),
+           DELAY(-1,26ns,41ns))}
+     QBAR={
+         CASE(
+           TRN_LH, DELAY(-1,16ns,25ns),
+           TRN_HL, DELAY(-1,25ns,40ns),
+           DELAY(-1,26ns,41ns))}

U5CON CONSTRAINT(3) DPWR DGND
+     CLK PREBAR CLRBAR
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=20ns
+     MIN_LO=47ns
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=25ns

.ENDS 7472
*
*
* ----------------------------------------------------------- 7473 ------
*  Dual J-K Flip-Flops With Clear
*
*  The TTL Logic Data Book, 1988, TI Pages 2-229 to 2-233
*  bss    2/22/94
*
.SUBCKT 7473 1CLRBAR 1CLK 1J 1K 1Q 1QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 SRFF(1) DPWR DGND
+     $D_HI 1CLRBAR 1CLK MJ MK SJ SK
+     D0_GFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 SRFF(1) DPWR DGND
+     $D_HI 1CLRBAR CLKBAR SJ SK 1Q_O 1QBAR_O
+     D0_GFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(5,3) DPWR DGND
+     1CLK 1J 1K 1Q_O 1QBAR_O
+     MJ MK CLKBAR
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+   LOGIC:
+     CLKBAR={~1CLK}
+     jbar={~1J}
+     kbar={~1K}
+     MJ={(1J & 1K & 1QBAR_O) | (1J & kbar)}
+     MK={(1J & 1K & 1Q_O) | (jbar & 1K)}

U4DLY PINDLY(2,0,0) DPWR DGND
+     1Q_O 1QBAR_O
+     1Q 1QBAR
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+   PINDLY:
+     1Q={
+        CASE(
+           TRN_LH, DELAY(-1,16ns,25ns),
+           TRN_HL, DELAY(-1,25ns,40ns),
+           DELAY(-1,26ns,41ns))}
+     1QBAR={
+         CASE(
+           TRN_LH, DELAY(-1,16ns,25ns),
+           TRN_HL, DELAY(-1,25ns,40ns),
+           DELAY(-1,26ns,41ns))}

U5CON CONSTRAINT(2) DPWR DGND
+     1CLK 1CLRBAR
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=1CLK
+     MIN_HI=20ns
+     MIN_LO=47ns
+
+  WIDTH:
+     NODE=1CLRBAR
+     MIN_LO=25ns

.ENDS 7473
*
*
* ----------------------------------------------------------- 7474 ------
*  Dual D-Type Positive Edge Triggered Flip-Flops With  Preset And Clear
*
*  The TTL Logic Data Book, 1988, TI Pages 2-235 to 2-240
*  bss    2/23/94
*
.SUBCKT 7474 1PREBAR 1CLRBAR 1CLK 1D 1Q 1QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(1) DPWR DGND
+     1PREBAR 1CLRBAR 1CLK 1D 1Q 1QBAR
+     DLY_74 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_74 ueff(tppcqlhMX=25ns tppcqhlMX=40ns twpclMN=30ns
+                 tpclkqlhTY=14ns tpclkqlhMX=25ns tpclkqhlTY=20ns
+                 tpclkqhlMX=40ns twclkhMN=30ns twclklMN=37ns
+                 tsudclkMN=20ns thdclkMN=5ns)

.ENDS 7474
*
*
* ----------------------------------------------------------- 7475 ------
*  4 Bit Bistable Latches
*
*  The TTL Logic Data Book, 1988, TI Pages 2-241 to 2-245
*  bss    2/24/94
*
.SUBCKT 7475 C 1D 2D 1Q 1QBAR 2Q 2QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(2) DPWR DGND
+     $D_HI $D_HI C 1D 2D 1Q_O 2Q_O 1QBAR_O 2QBAR_O
+     DLY_75 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(4,0,3) DPWR DGND
+     1Q_O 1QBAR_O 2Q_O 2QBAR_O
+     C 1D 2D
+     1Q 1QBAR 2Q 2QBAR
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA={CHANGED(1D,0) | CHANGED(2D,0)}
+     CLK = {CHANGED_LH(C,0)}
+
+  PINDLY:
+     1Q 2Q = {
+        CASE(
+           DATA & TRN_LH, DELAY(-1,16ns,30ns),
+           DATA & TRN_HL, DELAY(-1,14ns,25ns),
+           CLK & TRN_LH, DELAY(-1,16ns,30ns),
+           CLK & TRN_HL, DELAY(-1,7ns,15ns),
+           DELAY(-1,17ns,31ns))}
+
+     1QBAR 2QBAR = {
+        CASE(
+           DATA & TRN_LH, DELAY(-1,24ns,40ns),
+           DATA & TRN_HL, DELAY(-1,7ns,15ns),
+           CLK & TRN_LH, DELAY(-1,16ns,30ns),
+           CLK & TRN_HL, DELAY(-1,7ns,15ns),
+           DELAY(-1,25ns,41ns))}

.model DLY_75 ugff (twghMN=20ns tsudgMN=20ns thdgMN=5ns)

.ENDS 7475
*
*
* ----------------------------------------------------------- 7476 ------
*  Dual J-K Flip-Flops With Preset And Clear
*
*  The TTL Logic Data Book, 1988, TI Pages 2-247 to 2-252
*  bss    2/24/94
*
.SUBCKT 7476 1PREBAR 1CLRBAR 1CLK 1J 1K 1Q 1QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 SRFF(1) DPWR DGND
+     1PREBAR 1CLRBAR 1CLK MJ MK SJ SK
+     D0_GFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 SRFF(1) DPWR DGND
+     1PREBAR 1CLRBAR CLKBAR SJ SK 1Q_O 1QBAR_O
+     D0_GFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(5,3) DPWR DGND
+     1CLK 1J 1K 1Q_O 1QBAR_O
+     MJ MK CLKBAR
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+   LOGIC:
+     CLKBAR={~1CLK}
+     jbar={~1J}
+     kbar={~1K}
+     MJ={(1J & 1K & 1QBAR_O) | (1J & kbar)}
+     MK={(1J & 1K & 1Q_O) | (jbar & 1K)}

U4DLY PINDLY(2,0,0) DPWR DGND
+     1Q_O 1QBAR_O
+     1Q 1QBAR
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+   PINDLY:
+     1Q={
+        CASE(
+           TRN_LH, DELAY(-1,16ns,25ns),
+           TRN_HL, DELAY(-1,25ns,40ns),
+           DELAY(-1,26ns,41ns))}
+     1QBAR={
+         CASE(
+           TRN_LH, DELAY(-1,16ns,25ns),
+           TRN_HL, DELAY(-1,25ns,40ns),
+           DELAY(-1,26ns,41ns))}

U5CON CONSTRAINT(3) DPWR DGND
+     1CLK 1CLRBAR 1PREBAR
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=1CLK
+     MIN_HI=20ns
+     MIN_LO=47ns
+
+  WIDTH:
+     NODE=1CLRBAR
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=1PREBAR
+     MIN_LO=25ns


.ENDS 7476
*
*
* ----------------------------------------------------------- 7482 ------
*  2-Bit Binary Full Adders
*
*  The TTL Data Book, Vol. 2, 1985, TI Pages 3-330 to 3-332
*  bss    2/25/94
*
.SUBCKT 7482 C0 A1 A2 B1 B2 S1 S2 C2
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(5,3) DPWR DGND
+     C0 A1 A2 B1 B2
+     S1_O S2_O C2_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     a2bar = {~A2}
+     b2bar = {~B2}
+     look = {~((C0 & A1) | (C0 & B1) | (A1 & B1))}
+     S1_O = {(C0 & look) | (A1 & look) | (B1 & look) | (C0 & A1 & B1)}
+     C2_O = {~((look & a2bar) | (look & b2bar) | (a2bar & b2bar))}
+     S2_O = {~((look & C2_O) | (a2bar & C2_O) | (b2bar & C2_O) | (look & a2bar & b2bar))}

U2DLY PINDLY(3,0,5) DPWR DGND
+     S1_O S2_O C2_O
+     C0 A1 A2 B1 B2
+     S1 S2 C2
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(B1,0) | CHANGED(B2,0)}
+
+  PINDLY:
+     S1 = {
+       CASE(
+          DATA & TRN_LH, DELAY(-1,-1,40ns),
+          CHANGED(C0,0) & TRN_LH, DELAY(-1,-1,34ns),
+          CHANGED(C0,0) & TRN_HL, DELAY(-1,-1,40ns),
+          DATA & TRN_HL, DELAY(-1,-1,35ns),
+          DELAY(-1,-1,41ns))}
+
+     S2 = {
+       CASE(
+          DATA & TRN_LH, DELAY(-1,-1,40ns),
+          CHANGED(C0,0) & TRN_LH, DELAY(-1,-1,38ns),
+          CHANGED(C0,0) & TRN_HL, DELAY(-1,-1,42ns),
+          DATA & TRN_HL, DELAY(-1,-1,35ns),
+          DELAY(-1,-1,43ns))}
+
+     C2 = {
+       CASE(
+          DATA & TRN_LH, DELAY(-1,-1,40ns),
+          DATA & TRN_HL, DELAY(-1,-1,35ns),
+          CHANGED(C0,0) & TRN_LH, DELAY(-1,12ns,19ns),
+          CHANGED(C0,0) & TRN_HL, DELAY(-1,17ns,27ns),
+          DELAY(-1,26ns,41ns))}

.ENDS 7482
*
*
* ----------------------------------------------------------- 7483A ------
*  4-Bit Binary Full Adders With Fast Carry
*
*  The TTL Logic Data Book, 1988, TI Pages 2-257 to 2-261
*  bss    2/25/94
*
.SUBCKT 7483A C0 A1 A2 A3 A4 B1 B2 B3 B4 S1 S2 S3 S4 C4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,5) DPWR DGND
+     C0 A1 A2 A3 A4 B1 B2 B3 B4
+     S1_O S2_O S3_O S4_O C4_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     c0bar = {~C0}
+     nor1 = {~(A1 | B1)}
+     nand1 = {~(A1 & B1)}
+     nor2 = {~(A2 | B2)}
+     nand2 = {~(A2 & B2)}
+     nor3 = {~(A3 | B3)}
+     nand3 = {~(A3 & B3)}
+     nor4 = {~(A4 | B4)}
+     nand4 = {~(A4 & B4)}
+     C4_O = {~(nor4 | (nor3 & nand4) | (nor2 & nand4 & nand3) | (nor1 & nand4 & nand3 & 
+             nand2) | (nand4 & nand3 & nand2 & nand1 & c0bar))}
+     S4_O = {(nand4 & (~nor4)) ^ (~(nor3 | (nor2 & nand3) | (nor1 & nand3 & nand2) |
+             (nand3 & nand2 & nand1 & c0bar)))}
+     S3_O = {(nand3 & (~nor3)) ^ (~(nor2 | (nor1 & nand2) | (nand2 & nand1 & c0bar)))}
+     S2_O = {(nand2 & (~nor2)) ^ (~(nor1 | (nand1 & c0bar)))}
+     S1_O = {(nand1 & (~nor1)) ^ C0}

U2DLY PINDLY(5,0,9) DPWR DGND
+     S1_O S2_O S3_O S4_O C4_O
+     C0 A1 A2 A3 A4 B1 B2 B3 B4
+     S1 S2 S3 S4 C4
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) | CHANGED(A4,0) |
+                  CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) | CHANGED(B4,0)}
+     CARRY = {CHANGED(C0,0)}
+
+  PINDLY:
+     S1 S2 S3 S4 = {
+        CASE(
+           DATA & TRN_LH, DELAY(-1,16ns,24ns),
+           DATA & TRN_HL, DELAY(-1,16ns,24ns),
+           CARRY & TRN_LH, DELAY(-1,14ns,21ns),
+           CARRY & TRN_HL, DELAY(-1,12ns,21ns),
+           DELAY(-1,17ns,25ns))}
+
+     C4 = {
+        CASE(
+           TRN_LH, DELAY(-1,9ns,14ns),
+           TRN_HL, DELAY(-1,11ns,16ns),
+           DELAY(-1,12ns,17ns))}

.ENDS 7483A
*
*
* ----------------------------------------------------------- 7485 ------
*  4-Bit Magnitude Comparators
*
*  The TTL Logic Data Book, 1988, TI Pages 2-263 to 2-269
*  bss    2/25/94
*
.SUBCKT 7485 A0 A1 A2 A3 ALTBI AEQBI AGTBI B0 B1 B2 B3 ALTBO AEQBO AGTBO
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(11,3) DPWR DGND
+     A0 A1 A2 A3 ALTBI AEQBI AGTBI B0 B1 B2 B3
+     ALTBO_O AEQBO_O AGTBO_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     nand3 = {~(A3 & B3)}
+     nand2 = {~(A2 & B2)}
+     nand1 = {~(A1 & B1)}
+     nand0 = {~(A0 & B0)}
+     nor3 = {~((A3 & nand3) | (B3 & nand3))}
+     nor2 = {~((A2 & nand2) | (B2 & nand2))}
+     nor1 = {~((A1 & nand1) | (B1 & nand1))}
+     nor0 = {~((A0 & nand0) | (B0 & nand0))}
+     AGTBO_O = {~((B3 & nand3) | (B2 & nand2 & nor3) | (B1 & nand1 & nor3 & nor2) |
+          (B0 & nand0 & nor3 & nor2 & nor1) | (nor3 & nor2 & nor1 & nor0 & ALTBI) |
+          (nor3 & nor2 & nor1 & nor0 & AEQBI))}
+     AEQBO_O = {nor3 & nor2 & AEQBI & nor1 & nor0}
+     ALTBO_O = {~((A3 & nand3) | (A2 & nand2 & nor3) | (A1 & nand1 & nor3 & nor2) |
+          (A0 & nand0 & nor3 & nor2 & nor1) | (nor3 & nor2 & nor1 & nor0 & AGTBI) |
+          (nor3 & nor2 & nor1 & nor0 & AEQBI))}

U2DLY PINDLY(3,0,11) DPWR DGND
+     ALTBO_O AEQBO_O AGTBO_O
+     A0 A1 A2 A3 ALTBI AEQBI AGTBI B0 B1 B2 B3
+     ALTBO AEQBO AGTBO
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) |
+                 CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0)}
+     LTHAN = {CHANGED(ALTBI,0)}
+     GTHAN = {CHANGED(AGTBI,0)}
+     EQUAL = {CHANGED(AEQBI,0)}
+
+  PINDLY:
+     AEQBO = {
+        CASE(
+           DATA & TRN_LH, DELAY(-1,23ns,35ns),
+           DATA & TRN_HL, DELAY(-1,20ns,30ns),
+           EQUAL & TRN_LH, DELAY(-1,13ns,20ns),
+           EQUAL & TRN_HL, DELAY(-1,11ns,17ns),
+           DELAY(-1,24ns,36ns))}
+
+     ALTBO AGTBO = {
+        CASE(
+           DATA & TRN_LH, DELAY(-1,17ns,26ns),
+           DATA & TRN_HL, DELAY(-1,20ns,30ns),
+           (LTHAN | EQUAL | GTHAN) & TRN_LH, DELAY(-1,7ns,11ns),
+           (LTHAN | EQUAL | GTHAN) & TRN_HL, DELAY(-1,11ns,17ns),
+           DELAY(-1,21ns,31ns))}

.ENDS 7485
*
*
* ----------------------------------------------------------- 7486 ------
*  Quad 2-Input Exclusive-Or Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-271 to 2-275
*  bss    2/25/94
*
.SUBCKT 7486 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 xor DPWR DGND
+     1A 1B 1Y_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(1,0,2) DPWR DGND
+     1Y_O
+     1A 1B
+     1Y
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     1Y = {
+        CASE(
+           CHANGED(1A,0) & 1B=='1 & TRN_LH, DELAY(-1,18ns,30ns),
+           CHANGED(1B,0) & 1A=='1 & TRN_LH, DELAY(-1,18ns,30ns),
+           CHANGED(1A,0) & 1B=='1 & TRN_HL, DELAY(-1,13ns,22ns),
+           CHANGED(1B,0) & 1A=='1 & TRN_HL, DELAY(-1,13ns,22ns),
+           CHANGED(1A,0) & 1B=='0 & TRN_LH, DELAY(-1,15ns,23ns),
+           CHANGED(1B,0) & 1A=='0 & TRN_LH, DELAY(-1,15ns,23ns),
+           CHANGED(1A,0) & 1B=='0 & TRN_HL, DELAY(-1,11ns,17ns),
+           CHANGED(1B,0) & 1A=='0 & TRN_HL, DELAY(-1,11ns,17ns),
+           DELAY(-1,19ns,31ns))}

.ENDS 7486
*
*
* ----------------------------------------------------------- 7490A ------
*  Decade Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-277 to 2-287
*  bss    2/25/94
*
.SUBCKT 7490A R01 R02 R91 R92 CKA CKB QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     NAND9 NAND0 CKA $D_HI $D_HI QA_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     $D_HI NANDC CKB QDBAR $D_HI QB_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+     $D_HI NANDC QB_O $D_HI $D_HI QC_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+     NAND9 NAND0 CKB ANDQ QD_O QD_O QDBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(6,4) DPWR DGND
+     R01 R02 R91 R92 QB_O QC_O
+     NAND9 NAND0 NANDC ANDQ
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     NAND0 = {~(R01 & R02)}
+     NAND9 = {~(R91 & R92)}
+     NANDC = {NAND0 & NAND9}
+     ANDQ = {QB_O & QC_O}

U6DLY PINDLY(4,0,4) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     CKA CKB NAND9 NAND0
+     QA QB QC QD
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CHA = {CHANGED_HL(CKA,0)}
+     CHB = {CHANGED_HL(CKB,0)}
+     SETTO9 = {CHANGED_HL(NAND9,0)}
+     SETTO0 = {CHANGED_HL(NAND0,0)}
+     SET = {SETTO0 | SETTO9}
+
+  PINDLY:
+     QA = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         SETTO9 & TRN_LH, DELAY(-1,20ns,30ns),
+         CHA & TRN_LH, DELAY(-1,10ns,16ns),
+         CHA & TRN_HL, DELAY(-1,12ns,18ns),
+         DELAY(-1,27ns,41ns))}
+
+     QB = {
+       CASE(
+         SET & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,10ns,16ns),
+         CHB & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,27ns,41ns))}
+
+     QC = {
+       CASE(
+         SET & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,21ns,32ns),
+         CHB & TRN_HL, DELAY(-1,23ns,35ns),
+         DELAY(-1,27ns,41ns))}
+
+     QD = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         SETTO9 & TRN_LH, DELAY(-1,20ns,30ns),
+         CHB & TRN_LH, DELAY(-1,21ns,32ns),
+         CHB & TRN_HL, DELAY(-1,23ns,35ns),
+         CHA & TRN_LH, DELAY(-1,32ns,48ns),
+         CHA & TRN_HL, DELAY(-1,34ns,50ns),
+         DELAY(-1,35ns,51ns))}

U7CON CONSTRAINT(8) DPWR DGND
+     R01 R02 R91 R92 CKA CKB NAND9 NAND0
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CKA
+     MAXFREQ=32MEG
+
+  FREQ:
+     NODE=CKB
+     MAXFREQ=16MEG
+
+  WIDTH:
+     NODE=CKA
+     MIN_HI=15ns
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=CKB
+     MIN_HI=30ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=R01
+     MIN_HI=15ns
+     WHEN = {NAND9!='0}
+
+  WIDTH:
+     NODE=R02
+     MIN_HI=15ns
+     WHEN = {NAND9!='0}
+
+  WIDTH:
+     NODE=R91
+     MIN_HI=15ns
+     WHEN = {NAND0!='0}
+
+  WIDTH:
+     NODE=R92
+     MIN_HI=15ns
+     WHEN = {NAND0!='0}
+
+  SETUP_HOLD:
+  CLOCK HL = CKA
+  DATA(1) = NAND9
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R91 R92 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = CKB
+  DATA(1) = NAND9
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R91 R92 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = CKA
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  WHEN = {NAND9!='0}
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = CKB
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  WHEN = {NAND9!='0}
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"

.ENDS 7490A
*
*
* ----------------------------------------------------------- 7491A ------
*  8-Bit Shift Registers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-289 to 2-292
*  bss    2/28/94
*
.SUBCKT 7491A A B CLK QH QHBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     A B RIN
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inva(2) DPWR DGND
+     CLK RIN CLKBAR SIN
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(8) DPWR DGND
+     $D_HI $D_HI CLKBAR SIN S1 S2 S3 S4 S5 S6 S7 RIN R1 R2 R3
+     R4 R5 R6 R7 S1 S2 S3 S4 S5 S6 S7 QH_O R1 R2 R3 R4 R5 R6
+     R7 QHBAR_O
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4DLY PINDLY(2,0,0) DPWR DGND
+     QH_O QHBAR_O
+     QH QHBAR
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+     PINDLY:
+       QH QHBAR = {
+         CASE(
+          TRN_LH, DELAY(-1,24ns,40ns),
+          TRN_HL, DELAY(-1,27ns,40ns),
+          DELAY(-1,28ns,41ns))}

U5CON CONSTRAINT(3) DPWR DGND
+     A B CLK
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=A B
+     SETUPTIME=25ns

.ENDS 7491A
*
*
* ----------------------------------------------------------- 7492A ------
*  Divide By Twelve Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-277 to 2-287
*  bss    2/28/94
*
.SUBCKT 7492A R01 R02 CKA CKB QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     $D_HI NAND0 CKA $D_HI $D_HI QA_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     $D_HI NAND0 CKB QCBAR $D_HI QB_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+     $D_HI NAND0 CKB QB_O $D_HI QC_O QCBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+     $D_HI NAND0 QC_O $D_HI $D_HI QD_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 nand(2) DPWR DGND
+     R01 R02 NAND0
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6DLY PINDLY(4,0,3) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     CKA CKB NAND0
+     QA QB QC QD
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CHA = {CHANGED_HL(CKA,0)}
+     CHB = {CHANGED_HL(CKB,0)}
+     SETTO0 = {CHANGED_HL(NAND0,0)}
+
+  PINDLY:
+     QA = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHA & TRN_LH, DELAY(-1,10ns,16ns),
+         CHA & TRN_HL, DELAY(-1,12ns,18ns),
+         DELAY(-1,27ns,41ns))}
+
+     QB = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,10ns,16ns),
+         CHB & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,27ns,41ns))}
+
+     QC = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,10ns,16ns),
+         CHB & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,27ns,41ns))}
+
+     QD = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,21ns,32ns),
+         CHB & TRN_HL, DELAY(-1,23ns,35ns),
+         CHA & TRN_LH, DELAY(-1,32ns,48ns),
+         CHA & TRN_HL, DELAY(-1,34ns,50ns),
+         DELAY(-1,35ns,51ns))}

U7CON CONSTRAINT(5) DPWR DGND
+     R01 R02 CKA CKB NAND0
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CKA
+     MAXFREQ=32MEG
+
+  FREQ:
+     NODE=CKB
+     MAXFREQ=16MEG
+
+  WIDTH:
+     NODE=CKA
+     MIN_HI=15ns
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=CKB
+     MIN_HI=30ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=R01
+     MIN_HI=15ns
+
+  WIDTH:
+     NODE=R02
+     MIN_HI=15ns
+
+  SETUP_HOLD:
+  CLOCK HL = CKA
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = CKB
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"

.ENDS 7492A
*
*
* ----------------------------------------------------------- 7493A ------
*  Binary Counters
*
*  The TTL Logic Data Book, 1988, TI Pages 2-277 to 2-287
*  bss    2/28/94
*
.SUBCKT 7493A R01 R02 CKA CKB QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     $D_HI NAND0 CKA $D_HI $D_HI QA_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     $D_HI NAND0 CKB $D_HI $D_HI QB_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+     $D_HI NAND0 QB_O $D_HI $D_HI QC_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+     $D_HI NAND0 QC_O $D_HI $D_HI QD_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 nand(2) DPWR DGND
+     R01 R02 NAND0
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6DLY PINDLY(4,0,3) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     CKA CKB NAND0
+     QA QB QC QD
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CHA = {CHANGED_HL(CKA,0)}
+     CHB = {CHANGED_HL(CKB,0)}
+     SETTO0 = {CHANGED_HL(NAND0,0)}
+
+  PINDLY:
+     QA = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHA & TRN_LH, DELAY(-1,10ns,16ns),
+         CHA & TRN_HL, DELAY(-1,12ns,18ns),
+         DELAY(-1,27ns,41ns))}
+
+     QB = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,10ns,16ns),
+         CHB & TRN_HL, DELAY(-1,14ns,21ns),
+         DELAY(-1,27ns,41ns))}
+
+     QC = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,21ns,32ns),
+         CHB & TRN_HL, DELAY(-1,23ns,35ns),
+         DELAY(-1,27ns,41ns))}
+
+     QD = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,26ns,40ns),
+         CHB & TRN_LH, DELAY(-1,34ns,51ns),
+         CHB & TRN_HL, DELAY(-1,34ns,51ns),
+         CHA & TRN_LH, DELAY(-1,46ns,70ns),
+         CHA & TRN_HL, DELAY(-1,46ns,70ns),
+         DELAY(-1,47ns,71ns))}

U7CON CONSTRAINT(5) DPWR DGND
+     R01 R02 CKA CKB NAND0
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CKA
+     MAXFREQ=32MEG
+
+  FREQ:
+     NODE=CKB
+     MAXFREQ=16MEG
+
+  WIDTH:
+     NODE=CKA
+     MIN_HI=15ns
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=CKB
+     MIN_HI=30ns
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=R01
+     MIN_HI=15ns
+
+  WIDTH:
+     NODE=R02
+     MIN_HI=15ns
+
+  SETUP_HOLD:
+  CLOCK HL = CKA
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"
+
+  SETUP_HOLD:
+  CLOCK HL = CKB
+  DATA(1) = NAND0
+  SETUPTIME_HI = 25ns
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 25ns"

.ENDS 7493A
*
*
* ----------------------------------------------------------- 7494 ------
*  4-Bit Shift Registers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-293 to 2-295
*  bss    2/28/94
*
.SUBCKT 7494 PE1 PE2 CLR CLK SER P1A P1B P1C P1D P2A P2B P2C P2D QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     PA CLRBAR CLKBAR SER SERBAR QA QABAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     PB CLRBAR CLKBAR QA QABAR QB QBBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+     PC CLRBAR CLKBAR QB QBBAR QC QCBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+     PD CLRBAR CLKBAR QC QCBAR QD_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5LOG LOGICEXP(13,7) DPWR DGND
+     PE1 PE2 CLR CLK SER P1A P1B P1C P1D P2A P2B P2C P2D
+     CLRBAR CLKBAR SERBAR PA PB PC PD
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     CLRBAR = {~CLR}
+     CLKBAR = {~CLK}
+     SERBAR = {~SER}
+
+     PA = {~((P1A & PE1) | (P2A & PE2))}
+     PB = {~((P1B & PE1) | (P2B & PE2))}
+     PC = {~((P1C & PE1) | (P2C & PE2))}
+     PD = {~((P1D & PE1) | (P2D & PE2))}

U6DLY PINDLY(1,0,3) DPWR DGND
+     QD_O
+     CLK CLR PD
+     QD
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     QD = {
+        CASE(
+           CHANGED_HL(PD,0) & TRN_LH, DELAY(-1,-1,35ns),
+           CHANGED_LH(CLR,0) & TRN_HL, DELAY(-1,-1,40ns),
+           CHANGED_LH(CLK,0), DELAY(-1,25ns,40ns),
+           DELAY(-1,26ns,41ns))}

U7CON CONSTRAINT(7) DPWR DGND
+     SER CLK CLR PA PB PC PD
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=35ns
+     MIN_LO=35ns
+
+  WIDTH:
+     NODE=CLR
+     MIN_HI=30ns
+
+  WIDTH:
+     NODE=PA
+     MIN_LO=30ns
+     MESSAGE="(PRESET ENABLE & PA INPUT) PULSE WIDTH IS LESS THAN 30ns"
+
+  WIDTH:
+     NODE=PB
+     MIN_LO=30ns
+     MESSAGE="(PRESET ENABLE & PB INPUT) PULSE WIDTH IS LESS THAN 30ns"
+
+  WIDTH:
+     NODE=PC
+     MIN_LO=30ns
+     MESSAGE="(PRESET ENABLE & PC INPUT) PULSE WIDTH IS LESS THAN 30ns"
+
+  WIDTH:
+     NODE=PD
+     MIN_LO=30ns
+     MESSAGE="(PRESET ENABLE & PD INPUT) PULSE WIDTH IS LESS THAN 30ns"
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=SER
+     SETUPTIME_LO=25ns
+     SETUPTIME_HI=35ns
+     WHEN={CLR!='1 | PA!='0}

.ENDS 7494
*
*
* ----------------------------------------------------------- 7495A ------
*  4-Bit Parallel-Access Shift Registers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-297 to 2-303
*  bss    2/28/94
*
.SUBCKT 7495A MODE CLK1 CLK2 SER A B C D QA QB QC QD
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(4) DPWR DGND
+     $D_HI $D_HI CLKLR JA JB JC JD KA KB KC KD
+     QA_O QB_O QC_O QD_O $D_NC $D_NC $D_NC $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(12,9) DPWR DGND
+     MODE SER CLK1 CLK2 A B C D QA_O QB_O QC_O QD_O
+     CLKLR JA JB JC JD KA KB KC KD
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     modebar = {~MODE}
+     CLKLR = {(CLK1 & modebar) | (CLK2 & MODE)}
+     JA = {((SER & modebar) | (A & MODE))}
+     JB = {((QA_O & modebar) | (B & MODE))}
+     JC = {((QB_O & modebar) | (C & MODE))}
+     JD = {((QC_O & modebar) | (D & MODE))}
+     KA = {~JA}
+     KB = {~JB}
+     KC = {~JC}
+     KD = {~JD}

U3DLY PINDLY(4,0,0) DPWR DGND
+     QA_O QB_O QC_O QD_O
+     QA QB QC QD
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     QA QB QC QD = {
+        CASE(
+           TRN_LH, DELAY(-1,18ns,27ns),
+           TRN_HL, DELAY(-1,21ns,32ns),
+           DELAY(-1,22ns,33ns))}

U4CON CONSTRAINT(8) DPWR DGND
+     CLK1 CLK2 SER A B C D MODE
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK1
+     MAXFREQ=25MEG
+
+  FREQ:
+     NODE=CLK2
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=CLK1
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=CLK2
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     DATA(1)=SER
+     CLOCK HL=CLK1
+     SETUPTIME=15ns
+     WHEN = {MODE!='1}
+
+  SETUP_HOLD:
+     DATA(4)=A B C D
+     CLOCK HL=CLK2
+     SETUPTIME=15ns
+     WHEN = {MODE!='0}
+
+  SETUP_HOLD:
+     DATA(1)=MODE
+     CLOCK HL=CLK1
+     SETUPTIME_LO=15ns
+     MESSAGE="CLOCK ENABLE > 15ns"
+
+  SETUP_HOLD:
+     DATA(1)=MODE
+     CLOCK LH=CLK1
+     SETUPTIME_HI=5ns
+     MESSAGE="CLOCK INHIBIT > 5ns"
+
+  SETUP_HOLD:
+     DATA(1)=MODE
+     CLOCK HL=CLK2
+     SETUPTIME_HI=15ns
+     MESSAGE="CLOCK ENABLE > 15ns"
+
+  SETUP_HOLD:
+     DATA(1)=MODE
+     CLOCK LH=CLK2
+     SETUPTIME_LO=5ns
+     MESSAGE="CLOCK INHIBIT > 5ns"

.ENDS 7495A
*
*
* ----------------------------------------------------------- 7496 ------
*  5-Bit Shift Registers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-305 to 2-310
*  bss    2/28/94
*
.SUBCKT 7496 CLRBAR CLK PE SER A B C D E QA QB QC QD QE
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     PA CLRBAR CLKBAR SER SERBAR QA_O QABAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     PB CLRBAR CLKBAR QA_O QABAR QB_O QBBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+     PC CLRBAR CLKBAR QB_O QBBAR QC_O QCBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+     PD CLRBAR CLKBAR QC_O QCBAR QD_O QDBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 JKFF(1) DPWR DGND
+     PE1 CLRBAR CLKBAR QD_O QDBAR QE_O $D_NC
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6LOG LOGICEXP(8,7) DPWR DGND
+     CLK SER PE A B C D E
+     CLKBAR SERBAR PA PB PC PD PE1
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     CLKBAR = {~CLK}
+     SERBAR = {~SER}
+     PA = {~(PE & A)}
+     PB = {~(PE & B)}
+     PC = {~(PE & C)}
+     PD = {~(PE & D)}
+     PE1 = {~(PE & E)}

U7DLY PINDLY(5,0,7) DPWR DGND
+     QA_O QB_O QC_O QD_O QE_O
+     CLRBAR CLK PA PB PC PD PE1
+     QA QB QC QD QE
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     PRE = {CHANGED_HL(PA,0) | CHANGED_HL(PB,0) | CHANGED_HL(PC,0) |
+           CHANGED_HL(PD,0) | CHANGED_HL(PE1,0)}
+
+  PINDLY:
+     QA QB QC QD QE = {
+       CASE(
+          PRE & TRN_LH, DELAY(-1,28ns,35ns),
+          CHANGED_HL(CLRBAR,0) & TRN_HL, DELAY(-1,-1,55ns),
+          CHANGED_LH(CLK,0), DELAY(-1,25ns,40ns),
+          DELAY(-1,29ns,56ns))}

U8CON CONSTRAINT(8) DPWR DGND
+     CLK CLRBAR SER PA PB PC PD PE1
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=35ns
+     MIN_LO=35ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=30ns
+
+  WIDTH:
+     NODE=PA
+     MIN_LO=30ns
+     MESSAGE = "(PE & A) PULSE < 30ns"
+
+  WIDTH:
+     NODE=PB
+     MIN_LO=30ns
+     MESSAGE = "(PE & B) PULSE < 30ns"
+
+  WIDTH:
+     NODE=PC
+     MIN_LO=30ns
+     MESSAGE = "(PE & C) PULSE < 30ns"
+
+  WIDTH:
+     NODE=PD
+     MIN_LO=30ns
+     MESSAGE = "(PE & D) PULSE < 30ns"
+
+  WIDTH:
+     NODE=PE1
+     MIN_LO=30ns
+     MESSAGE = "(PE & E) PULSE < 30ns"
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1) = SER
+     SETUPTIME=30ns
+     WHEN={CLRBAR!='0 | PA!='0}

.ENDS 7496
*
*
* ----------------------------------------------------------- 7497 ------
*  Synchronous 6-Bit Binary Rate Multipliers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-311 to 2-317
*  bss    3/1/94
*
.SUBCKT 7497 CLK STROBE ENI UNI/CAS CLR B0 B1 B2 B3 B4 B5 Z Y ENO
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(6) DPWR DGND
+     $D_HI CLRBAR CLKBAR ENIBAR J2 J3 J4 J5 J6 ENIBAR J2 J3 J4 J5 J6
+     QA QB QC QD QE QF QABAR QBBAR QCBAR QDBAR QEBAR QFBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(23,11) DPWR DGND
+     CLK STROBE ENI UNI/CAS CLR B0 B1 B2 B3 B4 B5 QA QB QC QD QE QF
+     QABAR QBBAR QCBAR QDBAR QEBAR QFBAR
+     CLKBAR CLRBAR ENIBAR J2 J3 J4 J5 J6 Z_O Y_O ENO_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     CLKBAR = {~CLK}
+     CLRBAR = {~CLR}
+     ENIBAR = {~ENI}
+     rateclk = {~(CLK | STROBE)}
+     J2 = {QA & ENIBAR}
+     J3 = {QA & QB & ENIBAR}
+     J4 = {QA & QB & QC & ENIBAR}
+     J5 = {QA & QB & QC & QD & ENIBAR}
+     J6 = {QA & QB & QC & QD & QE & ENIBAR}
+     ENO_O = {~(QA & QB & QC & QD & QE & QF & ENIBAR)}
+     rate5 = {B5 & rateclk & QABAR}
+     rate4 = {B4 & rateclk & QA & QBBAR}
+     rate3 = {B3 & rateclk & QA & QB & QCBAR}
+     rate2 = {B2 & rateclk & QA & QB & QC & QDBAR}
+     rate1 = {B1 & rateclk & QA & QB & QC & QD & QEBAR}
+     rate0 = {B0 & rateclk & QA & QB & QC & QD & QE & QFBAR}
+     Z_O = {~(rate5 | rate4 | rate3 | rate2 | rate1 | rate0)}
+     Y_O = {~(UNI/CAS & Z_O)}

U3DLY PINDLY(3,0,11) DPWR DGND
+     ENO_O Z_O Y_O
+     ENI STROBE CLK CLR UNI/CAS B0 B1 B2 B3 B4 B5
+     ENO Z Y
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     RATE = {CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0) |
+                CHANGED(B4,0) | CHANGED(B5,0)}
+     CLOCK = {CHANGED(CLK,0)}
+     CLEAR = {CHANGED_LH(CLR,0)}
+     UNI = {CHANGED(UNI/CAS,0)}
+     STR = {CHANGED(STROBE,0)}
+     ENABLE = {CHANGED(ENI,0)}
+
+  PINDLY:
+     ENO = {
+       CASE(
+          CLOCK & TRN_LH, DELAY(-1,19ns,30ns),
+          CLOCK & TRN_HL, DELAY(-1,22ns,33ns),
+          ENABLE & TRN_LH, DELAY(-1,13ns,20ns),
+          ENABLE & TRN_HL, DELAY(-1,14ns,21ns),
+          DELAY(-1,23ns,34ns))}
+
+     Z = {
+       CASE(
+          CLOCK & TRN_LH, DELAY(-1,12ns,18ns),
+          CLOCK & TRN_HL, DELAY(-1,17ns,26ns),
+          STR & TRN_LH, DELAY(-1,12ns,18ns),
+          STR & TRN_HL, DELAY(-1,15ns,23ns),
+          CLEAR & TRN_HL, DELAY(-1,15ns,23ns),
+          RATE & TRN_LH, DELAY(-1,6ns,10ns),
+          RATE & TRN_HL, DELAY(-1,9ns,14ns),
+          DELAY(-1,18ns,27ns))}
+
+     Y = {
+        CASE(
+           CLOCK & TRN_LH, DELAY(-1,26ns,39ns),
+           CLOCK & TRN_HL, DELAY(-1,20ns,30ns),
+           CLEAR & TRN_LH, DELAY(-1,24ns,36ns),
+           STR & TRN_LH, DELAY(-1,19ns,30ns),
+           STR & TRN_HL, DELAY(-1,22ns,33ns),
+           RATE, DELAY(-1,15ns,23ns),
+           UNI & TRN_LH, DELAY(-1,9ns,14ns),
+           UNI & TRN_HL, DELAY(-1,6ns,10ns),
+           DELAY(-1,27ns,40ns))}

U4CON CONSTRAINT(3) DPWR DGND
+     CLK CLR ENI
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CLK
+     MAXFREQ=25MEG
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=CLR
+     MIN_HI=15ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(1)=ENI
+     SETUPTIME=25ns
+     WHEN={CLR!='1}
+
+  SETUP_HOLD:
+     CLOCK HL=CLK
+     DATA(1)=ENI
+     HOLDTIME=20ns
+     WHEN={CLR!='1}

.ENDS 7497
*
*
* ----------------------------------------------------------- 74100 ------
*  8-Bit Bistable Latches
*
*  The TTL Data Book, 1985, Vol. 2, TI Pages 3-407 to 3-409
*  bss    3/2/94
*
.SUBCKT 74100 1D1 1D2 1D3 1D4 1C 1Q1 1Q2 1Q3 1Q4
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(4) DPWR DGND
+     $D_HI $D_HI 1C 1D1 1D2 1D3 1D4
+     1Q1 1Q2 1Q3 1Q4 $D_NC $D_NC $D_NC $D_NC
+     DLY_100 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_100 ugff (tpgqlhTY=16ns tpgqlhMX=30ns tpgqhlTY=7ns
+                          tpgqhlMX=15ns tpdqlhTY=16ns tpdqlhMX=30ns
+                          tpdqhlTY=14ns tpdqhlMX=25ns twghMN=20ns
+                          tsudgMN=20ns thdgMN=5ns)

.ENDS 74100
*
*
* ----------------------------------------------------------- 74104 ------
*  Gated J-K Master-Slave Flip-Flops
*
*  The TTL Data Book, 1985, Vol. 2, TI Pages 3-419 to 3-421
*  bss    3/2/94
*
.SUBCKT 74104 PREBAR CLRBAR CLK JK J1 J2 J3 K1 K2 K3 Q QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     PREBAR CLRBAR CLK J K SJ SK
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     PREBAR CLRBAR CLKBAR SJ SK Q_O QBAR_O
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(8,3) DPWR DGND
+     JK J1 J2 J3 K1 K2 K3 CLK
+     J K CLKBAR
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     J = {JK & J1 & J2 & J3}
+     K = {JK & K1 & K2 & K3}
+     CLKBAR = {~CLK}

U4DLY PINDLY(2,0,1) DPWR DGND
+     Q_O QBAR_O
+     CLK
+     Q QBAR
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     Q QBAR = {
+       CASE(
+          TRN_LH, DELAY(-1,9ns,15ns),
+          TRN_HL, DELAY(-1,16ns,25ns),
+          DELAY(-1,17ns,26ns))}
 
U5CON CONSTRAINT(5) DPWR DGND
+     PREBAR CLRBAR CLK J K
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2) = J K
+     SETUPTIME_LO=10ns
+     SETUPTIME_HI=35ns

.ENDS 74104
*
*
* ----------------------------------------------------------- 74105 ------
*  Gated J-K Master-Slave Flip-Flops
*
*  The TTL Data Book, 1985, Vol. 2, TI Pages 3-419 to 3-421
*  bss    3/2/94
*
.SUBCKT 74105 PREBAR CLRBAR CLK JK J1 J2BAR J3 K1 K2BAR K3 Q QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     PREBAR CLRBAR CLK J K SJ SK
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     PREBAR CLRBAR CLKBAR SJ SK Q_O QBAR_O
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(8,3) DPWR DGND
+     JK J1 J2BAR J3 K1 K2BAR K3 CLK
+     J K CLKBAR
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     j2 = {~J2BAR}
+     k2 = {~K2BAR}
+     J = {JK & J1 & j2 & J3}
+     K = {JK & K1 & k2 & K3}
+     CLKBAR = {~CLK}

U4DLY PINDLY(2,0,1) DPWR DGND
+     Q_O QBAR_O
+     CLK
+     Q QBAR
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     Q QBAR = {
+       CASE(
+          TRN_LH, DELAY(-1,9ns,15ns),
+          TRN_HL, DELAY(-1,16ns,25ns),
+          DELAY(-1,17ns,26ns))}
 
U5CON CONSTRAINT(5) DPWR DGND
+     PREBAR CLRBAR CLK J K
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_LO=15ns
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2) = J K
+     SETUPTIME_LO=10ns
+     SETUPTIME_HI=35ns

.ENDS 74105
*
*
* ----------------------------------------------------------- 74107 ------
*  Dual J-K Flip-Flop With Clear
*
*  The TTL Logic Data Book, 1988, TI Pages 2-319 to 2-323
*  bss    3/4/94
*
.SUBCKT 74107 1CLRBAR 1CLK 1J 1K 1Q 1QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 SRFF(1) DPWR DGND
+     $D_HI 1CLRBAR 1CLK MJ MK SJ SK
+     D0_GFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 SRFF(1) DPWR DGND
+     $D_HI 1CLRBAR CLKBAR SJ SK 1Q_O 1QBAR_O
+     D0_GFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3LOG LOGICEXP(5,3) DPWR DGND
+     1CLK 1J 1K 1Q_O 1QBAR_O
+     MJ MK CLKBAR
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+   LOGIC:
+     CLKBAR={~1CLK}
+     jbar={~1J}
+     kbar={~1K}
+     MJ={(1J & 1K & 1QBAR_O) | (1J & kbar)}
+     MK={(1J & 1K & 1Q_O) | (jbar & 1K)}

U4DLY PINDLY(2,0,0) DPWR DGND
+     1Q_O 1QBAR_O
+     1Q 1QBAR
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+   PINDLY:
+     1Q 1QBAR={
+        CASE(
+           TRN_LH, DELAY(-1,16ns,25ns),
+           TRN_HL, DELAY(-1,25ns,40ns),
+           DELAY(-1,26ns,41ns))}

U5CON CONSTRAINT(2) DPWR DGND
+     1CLK 1CLRBAR
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=1CLK
+     MIN_HI=20ns
+     MIN_LO=47ns
+
+  WIDTH:
+     NODE=1CLRBAR
+     MIN_LO=25ns

.ENDS 74107
*
*
* ----------------------------------------------------------- 74109 ------
*  Dual J-K Positive Edge-Triggered Flip-Flops With Preset And Clear
*
*  The TTL Logic Data Book, 1988, TI Pages 2-325 to 2-329
*  bss    3/7/94
*
.SUBCKT 74109 1PREBAR 1CLRBAR 1CLK 1J 1KBAR 1Q 1QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(2) DPWR DGND
+     1CLK 1KBAR 1CLKBAR 1K
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     1PREBAR 1CLRBAR 1CLKBAR 1J 1K 1Q_O 1QBAR_O
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3DLY PINDLY(2,0,3) DPWR DGND
+     1Q_O 1QBAR_O
+     1PREBAR 1CLRBAR 1CLK
+     1Q 1QBAR
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     PRE = {CHANGED_HL(1PREBAR,0)}
+     CLR = {CHANGED_HL(1CLRBAR,0)}
+     CLOCK = {CHANGED_LH(1CLK,0)}
+
+  PINDLY:
+     1Q 1QBAR = {
+       CASE(
+          CLOCK & TRN_LH, DELAY(-1,10ns,16ns),
+          (PRE | CLR) & TRN_LH, DELAY(-1,10ns,15ns),
+          PRE & TRN_HL, DELAY(-1,23ns,35ns),
+          CLOCK & TRN_HL, DELAY(-1,18ns,28ns),
+          CLR & TRN_HL, DELAY(-1,17ns,25ns),
+          DELAY(-1,24ns,36ns))}

U4CON CONSTRAINT(5) DWPR DGND
+     1PREBAR 1CLRBAR 1CLK 1J 1KBAR
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=1CLK
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1PREBAR
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=1CLRBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=1CLK
+     DATA(2)=1J 1KBAR
+     SETUPTIME=10ns
+     HOLDTIME=6ns

.ENDS 74109
*
*
* ----------------------------------------------------------- 74110 ------
*  And-Gated J-K Master-Slave Flip-Flop With Data Lockout
*
*  The TTL Data Book, Vol. 2, 1985, TI Pages 3-438 to 3-440
*  bss    3/8/94
*
.SUBCKT 74110 PREBAR CLRBAR CLK J1 J2 J3 K1 K2 K3 Q QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 anda(3,2) DPWR DGND
+     J1 J2 J3 K1 K2 K3 J K
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 inv DPWR DGND
+     CLK CLKBAR
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+     PREBAR CLRBAR CLKBAR J K MQ MQBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+     PREBAR CLRBAR CLK MQ MQBAR Q_O QBAR_O
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(2,0,3) DPWR DGND
+     Q_O QBAR_O
+     PREBAR CLRBAR CLK
+     Q QBAR
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     PCL = {CHANGED_HL(PREBAR,0) | CHANGED_HL(CLRBAR,0)}
+     CLOCK = {CHANGED(CLK,0)}
+
+  PINDLY:
+     Q QBAR = {
+       CASE(
+          PCL & TRN_LH, DELAY(-1,12ns,20ns),
+          PCL & TRN_HL, DELAY(-1,18ns,25ns),
+          CLOCK & TRN_LH, DELAY(-1,20ns,30ns),
+          CLOCK & TRN_HL, DELAY(-1,13ns,20ns),
+          DELAY(-1,21ns,31ns))}

U6CON CONSTRAINT(5) DPWR DGND
+     PREBAR CLRBAR CLK J K
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=CLK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=PREBAR
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=CLRBAR
+     MIN_LO=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=CLK
+     DATA(2)=J K
+     SETUPTIME=20ns
+     HOLDTIME=5ns
+     WHEN= {PREBAR!='0 & CLRBAR!='0}

.ENDS 74110
*
*
* ----------------------------------------------------------- 74111 ------
*  Flip-Flops With Data Lockout
*
*  The TTL Logic Data Book, 1988, TI Pages 2-331 to 2-333
*  bss    3/9/94
*
.SUBCKT 74111 1PREBAR 1CLRBAR 1CLK 1J 1K 1Q 1QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1CLK CLKBAR
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     1PREBAR 1CLRBAR CLKBAR 1J 1K MQ MQBAR
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+     1PREBAR 1CLRBAR 1CLK MQ MQBAR 1Q_O 1QBAR_O
+     D0_EFF IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4DLY PINDLY(2,0,3) DPWR DGND
+     1Q_O 1QBAR_O
+     1PREBAR 1CLRBAR 1CLK
+     1Q 1QBAR
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     PCL = {CHANGED_HL(1PREBAR,0) | CHANGED_HL(1CLRBAR,0)}
+     CLOCK = {CHANGED(1CLK,0)}
+
+  PINDLY:
+     1Q 1QBAR = {
+       CASE(
+          PCL & TRN_LH, DELAY(-1,12ns,18ns),
+          PCL & TRN_HL, DELAY(-1,21ns,30ns),
+          CLOCK & TRN_LH, DELAY(-1,12ns,17ns),
+          CLOCK & TRN_HL, DELAY(-1,20ns,30ns),
+          DELAY(-1,22ns,31ns))}

U6CON CONSTRAINT(5) DPWR DGND
+     1PREBAR 1CLRBAR 1CLK 1J 1K
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=1CLK
+     MIN_HI=25ns
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=1PREBAR
+     MIN_LO=25ns
+
+  WIDTH:
+     NODE=1CLRBAR
+     MIN_LO=25ns
+
+  SETUP_HOLD:
+     CLOCK LH=1CLK
+     DATA(2)=1J 1K
+     HOLDTIME=30ns
+     WHEN= {1PREBAR!='0 & 1CLRBAR!='0}

.ENDS 74111
*
*
* ----------------------------------------------------------- 74120 ------
*  Dual Pulse Synchronizers/Drivers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-361 to 2-365
*  bss    3/10/94
*
.SUBCKT 74120 1RBAR 1S1BAR 1S2BAR 1C 1MBAR 1Y 1YBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1C 1CBAR
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 nanda(3,5) DPWR DGND
+     1S1BAR 1S2BAR RNAND 1CBAR SNAND MNAND
+     SNAND MNAND FB3 CBNAND FBNAND 1YBAR_O
+     SNAND 1MBAR FB2
+     SNAND CBNAND FBNAND FB3 MNAND
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 nanda(2,3) DPWR DGND
+     1RBAR SNAND FB3 1C 1YBAR_O MNAND
+     RNAND 1YBAR_O FB2
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 inv DPWR DGND
+     1YBAR_O 1Y_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5DLY PINDLY(2,0,1) DPWR DGND
+     1Y_O 1YBAR_O
+     1C
+     1Y 1YBAR
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     1Y = {
+       CASE(
+          CHANGED(1C,0) & TRN_LH, DELAY(-1,14ns,22ns),
+          CHANGED(1C,0) & TRN_HL, DELAY(-1,17ns,25ns),
+          DELAY(-1,18ns,26ns))}
+
+     1YBAR = {
+       CASE(
+          CHANGED(1C,0) & TRN_LH, DELAY(-1,10ns,16ns),
+          CHANGED(1C,0) & TRN_HL, DELAY(-1,8ns, 13ns),
+          DELAY(-1,11ns,17ns))}

U6CON CONSTRAINT(5) DPWR DGND
+     1RBAR 1S1BAR 1S2BAR 1C 1MBAR
+     IO_STD IO_LEVEL={IO_LEVEL}
+
+  SETUP_HOLD:
+     CLOCK LH=1C
+     DATA(3)=1RBAR 1S1BAR 1S2BAR
+     SETUPTIME=12ns
+     HOLDTIME=3ns
+
+  SETUP_HOLD:
+     CLOCK LH=1C
+     DATA(1)=1MBAR
+     SETUPTIME_LO=12ns
+     HOLDTIME=20ns

.ENDS 74120
*
*
* ----------------------------------------------------------- 74125 ------
*  Quad Bus Buffers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-387 to 2-391
*  bss    3/11/94
*
.SUBCKT 74125 1A 1GBAR 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1GBAR 1G
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3 DPWR DGND
+     1A 1G 1Y
+     DLY_125 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_125 utgate (tplhTY=8ns tplhMX=13ns tphlTY=12ns tphlMX=18ns
+                               tplzTY=7ns tplzMX=12ns tphzTY=5ns tphzMX=8ns
+                               tpzlTY=16ns tpzlMX=25ns tpzhTY=11ns tpzhMX=17ns)

.ENDS 74125
*
*
* ----------------------------------------------------------- 74126 ------
*  Quad Bus Buffers With 3-State Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-387 to 2-391
*  bss    3/11/94
*
.SUBCKT 74126 1A 1G 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 buf3 DPWR DGND
+     1A 1G 1Y
+     DLY_126 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_126 utgate (tplhTY=8ns tplhMX=13ns tphlTY=12ns tphlMX=18ns
+                               tplzTY=12ns tplzMX=18ns tphzTY=10ns tphzMX=16ns
+                               tpzlTY=16ns tpzlMX=25ns tpzhTY=11ns tpzhMX=18ns)

.ENDS 74126
*
*
* ----------------------------------------------------------- 74128 ------
*  Line Drivers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-393 to 2-394
*  bss    3/15/94
*
.SUBCKT 74128 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     1A 1B 1Y
+     DLY_128 IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_128 ugate (tplhTY=6ns tplhMX=9ns tphlTY=8ns tphlMX=12ns)

.ENDS 74128
*
*
* ----------------------------------------------------------- 74132 ------
*  Quad 2-Input Nand Schmitt Triggers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-395 to 2-405
*  bss    3/15/94
*
.SUBCKT 74132 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     1A 1B 1Y
+     DLY_132 IO_STD_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_132 ugate (tplhTY=15ns tplhMX=22ns tphlTY=15ns tphlMX=22ns)

.ENDS 74132
*
*
* ----------------------------------------------------------- 74136 ------
*  Quad  2-Input Exclusive-Or Gates With Open-Collector Outputs
*
*  The TTL Logic Data Book, 1988, TI Pages 2-417 to 2-419
*  bss    3/15/94
*
.SUBCKT 74136 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 xor DPWR DGND
+     1A 1B 1Y_O
+     D0_GATE IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2DLY PINDLY(1,0,2) DPWR DGND
+     1Y_O
+     1A 1B
+     1Y
+     IO_STD_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     1Y = {
+       CASE(
+          CHANGED(1A,0) & 1B=='0 & TRN_LH, DELAY(-1,12ns,18ns),
+          CHANGED(1B,0) & 1A=='0 & TRN_LH, DELAY(-1,12ns,18ns),
+          CHANGED(1A,0) & 1B=='0 & TRN_HL, DELAY(-1,39ns,50ns),
+          CHANGED(1B,0) & 1A=='0 & TRN_HL, DELAY(-1,39ns,50ns),
+          CHANGED(1A,0) & 1B=='1 & TRN_LH, DELAY(-1,14ns,22ns),
+          CHANGED(1B,0) & 1A=='1 & TRN_LH, DELAY(-1,14ns,22ns),
+          CHANGED(1A,0) & 1B=='1 & TRN_HL, DELAY(-1,42ns,55ns),
+          CHANGED(1B,0) & 1A=='1 & TRN_HL, DELAY(-1,42ns,55ns),
+          DELAY(-1,43ns,56ns))}

.ENDS 74136
*
*
* ----------------------------------------------------------- 74145 ------
*  BCD-To-Decimal Decoders/Drivers
*
*  The TTL Logic Data Book, 1988, TI Pages 2-447 to 2-449
*  bss    3/17/94
*
.SUBCKT 74145 A B C D O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(4,10) DPWR DGND
+     A B C D
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O O9_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     dbar = {~D}
+     O0_O = {~(abar & bbar & cbar & dbar)}
+     O1_O = {~(A & bbar & cbar & dbar)}
+     O2_O = {~(abar & B & cbar & dbar)}
+     O3_O = {~(A & B & cbar & dbar)}
+     O4_O = {~(abar & bbar & C & dbar)}
+     O5_O = {~(A & bbar & C & dbar)}
+     O6_O = {~(abar & B & C & dbar)}
+     O7_O = {~(A & B & C & dbar)}
+     O8_O = {~(abar & bbar & cbar & D)}
+     O9_O = {~(A & bbar & cbar & D)}

U2DLY PINDLY(10,0,0) DPWR DGND
+     O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O O9_O
+     O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     O0 O1 O2 O3 O4 O5 O6 O7 O8 O9 = {
+        CASE(
+          DELAY(-1,-1,50ns))}

.ENDS 74145
*
*
* ----------------------------------------------------------- 74147 ------
*  10-Line To 4-Line Priority Encoders
*
*  The TTL Logic Data Book, 1988, TI Pages 2-451 to 2-456
*  bss    3/18/94
*
.SUBCKT 74147 I1 I2 I3 I4 I5 I6 I7 I8 I9 A B C D
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DWPR DGND
+     I1 I2 I3 I4 I5 I6 I7 I8 I9
+     A_O B_O C_O D_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     i1bar = {~I1}
+     i2bar = {~I2}
+     i3bar = {~I3}
+     i4bar = {~I4}
+     i5bar = {~I5}
+     i6bar = {~I6}
+     i7bar = {~I7}
+     i8bar = {~I8}
+     i9bar = {~I9}
+     nor89 = {~(i8bar | i9bar)}
+     A_O = {~((i1bar & I2 & I4 & I6 & nor89) | (i3bar & I4 & I6 & nor89) | (i5bar & I6 & nor89) |
+                (i7bar & nor89) | i9bar)}
+     B_O = {~((i2bar & I4 & I5 & nor89) | (i3bar & I4 & I5 & nor89) | (i6bar & nor89) | 
+                (i7bar & nor89))}
+     C_O = {~((i4bar & nor89) | (i5bar & nor89) | (i6bar & nor89) | (i7bar & nor89))}
+     D_O = {~(i8bar | i9bar)}

U2DLY PINDLY(4,0,9) DPWR DGND
+     A_O B_O C_O D_O
+     I1 I2 I3 I4 I5 I6 I7 I8 I9
+     A B C D
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     IN1 = {CHANGED(I1,0) & I2=='1 & I3=='1 & I4=='1 & I5=='1 & I6=='1 & I7=='1 & I8=='1 & 
+               I9=='1}
+     IN2 = {CHANGED(I2,0) & I1=='1 & I3=='1 & I4=='1 & I5=='1 & I6=='1 & I7=='1 & I8=='1 & 
+               I9=='1}
+     IN3 = {CHANGED(I3,0) & I1=='1 & I2=='1 & I4=='1 & I5=='1 & I6=='1 & I7=='1 & I8=='1 & 
+               I9=='1}
+     IN4 = {CHANGED(I4,0) & I1=='1 & I2=='1 & I3=='1 & I5=='1 & I6=='1 & I7=='1 & I8=='1 & 
+               I9=='1}
+     IN5 = {CHANGED(I5,0) & I1=='1 & I2=='1 & I3=='1 & I4=='1 & I6=='1 & I7=='1 & I8=='1 & 
+               I9=='1}
+     IN6 = {CHANGED(I6,0) & I1=='1 & I2=='1 & I3=='1 & I4=='1 & I5=='1 & I7=='1 & I8=='1 & 
+               I9=='1}
+     IN7 = {CHANGED(I7,0) & I1=='1 & I2=='1 & I3=='1 & I4=='1 & I5=='1 & I6=='1 & I8=='1 & 
+               I9=='1}
+     IN8 = {CHANGED(I8,0) & I1=='1 & I2=='1 & I3=='1 & I4=='1 & I5=='1 & I6=='1 & I7=='1 & 
+               I9=='1}
+     IN9 = {CHANGED(I9,0) & I1=='1 & I2=='1 & I3=='1 & I4=='1 & I5=='1 & I6=='1 & I7=='1 & 
+               I8=='1}   
+     IN = {IN1 | IN2 | IN3 | IN4 | IN5 | IN6 | IN7 | IN8 | IN9}
+
+  PINDLY:
+     A B C = {
+       CASE(
+         IN & TRN_LH, DELAY(-1,9ns,14ns),
+         IN & TRN_HL, DELAY(-1,7ns,11ns),
+         TRN_LH, DELAY(-1,13ns,19ns),
+         TRN_HL, DELAY(-1,12ns,19ns),
+         DELAY(-1,14ns,20ns))}
+
+     D = {
+       CASE(
+         (IN8 | IN9) & TRN_LH, DELAY(-1,9ns,14ns),
+         (IN8 | IN9) & TRN_HL, DELAY(-1,7ns,11ns),
+         TRN_LH, DELAY(-1,13ns,19ns),
+         TRN_HL, DELAY(-1,12ns,19ns),
+         DELAY(-1,14ns,20ns))}

.ENDS 74147
*
*
* ----------------------------------------------------------- 74148 ------
*  8-Line To 3-Line Priority Encoders
*
*  The TTL Logic Data Book, 1988, TI Pages 2-451 to 2-456
*  bss    3/21/94
*
.SUBCKT 74148 I0 I1 I2 I3 I4 I5 I6 I7 EI A0 A1 A2 EO GS
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,5) DPWR DGND
+     I0 I1 I2 I3 I4 I5 I6 I7 EI
+     A0_O A1_O A2_O EO_O GS_O
+     D0_GATE IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     i1bar = {~I1}
+     i2bar = {~I2}
+     i3bar = {~I3}
+     i4bar = {~I4}
+     i5bar = {~I5}
+     i6bar = {~I6}
+     i7bar = {~I7}
+     eibar = {~EI}
+     EO_O = {~(I0 & I1 & I2 & I3 & I4 & I5 & I6 & I7 & eibar)}
+     GS_O = {~(EO_O & eibar)}
+     A0_O = {~((i1bar & I2 & I4 & I6 & eibar) | (i3bar & I4 & I6 & eibar) | (i5bar & I6 & eibar) |
+                  (i7bar & eibar))}
+     A1_O = {~((i2bar & I4 & I5 & eibar) | (i3bar & I4 & I5 & eibar) | (i6bar & eibar) |
+                  (i7bar & eibar))}
+     A2_O = {~((i4bar & eibar) | (i5bar & eibar) | (i6bar & eibar) | (i7bar & eibar))}

U2DLY PINDLY(5,0,9) DWPR DGND
+     A0_O A1_O A2_O EO_O GS_O
+     I0 I1 I2 I3 I4 I5 I6 I7 EI
+     A0 A1 A2 EO GS
+     IO_STD MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENABLE = {CHANGED(EI,0)}
+     DATA = {CHANGED(I0,0) | CHANGED(I1,0) | CHANGED(I2,0) | CHANGED(I3,0) |
+                 CHANGED(I4,0) | CHANGED(I5,0) | CHANGED(I6,0) | CHANGED(I7,0)}
+     IN1 = {CHANGED(I1,0) & I2=='1 & I3=='1 & I4=='1 & I5=='1 & I6=='1 & I7=='1}
+     IN2 = {CHANGED(I2,0) & I1=='1 & I3=='1 & I4=='1 & I5=='1 & I6=='1 & I7=='1}
+     IN3 = {CHANGED(I3,0) & I1=='1 & I2=='1 & I4=='1 & I5=='1 & I6=='1 & I7=='1}
+     IN4 = {CHANGED(I4,0) & I1=='1 & I2=='1 & I3=='1 & I5=='1 & I6=='1 & I7=='1}
+     IN5 = {CHANGED(I5,0) & I1=='1 & I2=='1 & I3=='1 & I4=='1 & I6=='1 & I7=='1}
+     IN6 = {CHANGED(I6,0) & I1=='1 & I2=='1 & I3=='1 & I4=='1 & I5=='1 & I7=='1}
+     IN7 = {CHANGED(I7,0) & I1=='1 & I2=='1 & I3=='1 & I4=='1 & I5=='1 & I6=='1}
+     IN = {IN1 | IN2 | IN3 | IN4 | IN5 | IN6 | IN7}
+
+  PINDLY:
+     A0 A1 A2 = {
+       CASE(
+         ENABLE, DELAY(-1,10ns,15ns),
+         IN & TRN_LH, DELAY(-1,10ns,15ns),
+         IN & TRN_HL, DELAY(-1,9ns,14ns),
+         TRN_LH, DELAY(-1,13ns,19ns),
+         TRN_HL, DELAY(-1,12ns,19ns),
+         DELAY(-1,14ns,20ns))}
+
+     GS = {
+       CASE(
+         ENABLE & TRN_LH, DELAY(-1,8ns,12ns),
+         ENABLE & TRN_HL, DELAY(-1,10ns,15ns),
+         DATA & TRN_LH, DELAY(-1,18ns,30ns),
+         DATA & TRN_HL, DELAY(-1,14ns,25ns),
+         DELAY(-1,19ns,31ns))}
+
+     EO = {
+       CASE(
+         ENABLE & TRN_LH, DELAY(-1,10ns,15ns),
+         ENABLE & TRN_HL, DELAY(-1,17ns,30ns),
+         DATA & TRN_LH, DELAY(-1,6ns,10ns),
+         DATA & TRN_HL, DELAY(-1,14ns,25ns),
+         DELAY(-1,18ns,31ns))}

.ENDS 74148
*
*
* ----------------------------------------------------------- 74HC00 ------
*  Quad 2-Input Nand Gates
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-3 to 2-5
*  bss    2/3/94
*
.SUBCKT 74HC00  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     1A 1B 1Y
+     DLY_HC00 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC00 ugate (tplhTY=9ns tplhMX=18ns tphlTY=9ns tphlMX=18ns)

.ENDS  74HC00
*
*
* ----------------------------------------------------------- 74HC01 ------
*  Quad 2-Input Nand Gates With Open-Drain Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-9 to 2-11
*  bss    2/3/94
*
.SUBCKT 74HC01  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     1A 1B 1Y
+     DLY_HC01 IO_HC_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC01 ugate (tplhTY=13ns tplhMX=25ns tphlTY=10ns tphlMX=20ns)

.ENDS  74HC01
*
*
* ----------------------------------------------------------- 74HC02 ------
*  Quad 2-Input Nor Gates
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-13 to 2-15
*  bss    2/3/94
*
.SUBCKT 74HC02  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     1A 1B 1Y
+     DLY_HC02 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC02 ugate (tplhTY=9ns tplhMX=18ns tphlTY=9ns tphlMX=18ns)

.ENDS  74HC02
*
*
* ----------------------------------------------------------- 74HC03 ------
*  Quad 2-Input Nand Gates With Open-Drain Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-19 to 2-21
*  bss    2/3/94
*
.SUBCKT 74HC03  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     1A 1B 1Y
+     DLY_HC03 IO_HC_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC03 ugate (tplhTY=13ns tplhMX=25ns tphlTY=10ns tphlMX=20ns)

.ENDS  74HC03
*
*
* ----------------------------------------------------------- 74HC04 ------
*  Hex Inverters
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-23 to 2-25
*  bss    2/3/94
*
.SUBCKT 74HC04  1A  1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1A 1Y
+     DLY_HC04 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC04 ugate (tplhTY=9ns tplhMX=19ns tphlTY=9ns tphlMX=19ns)

.ENDS  74HC04
*
*
* ----------------------------------------------------------- 74HC05 ------
*  Hex Inverters With Open-Drain Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-33 to 2-35
*  bss    2/3/94
*
.SUBCKT 74HC05  1A  1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1A 1Y
+     DLY_HC05 IO_HC_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC05 ugate (tplhTY=13ns tplhMX=23ns tphlTY=9ns tphlMX=17ns)

.ENDS  74HC05
*
*
* ----------------------------------------------------------- 74HC08 ------
*  Quad 2-Input And Gates
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-37 to 2-39
*  bss    2/3/94
*
.SUBCKT 74HC08  1A 1B  1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 and(2) DPWR DGND
+     1A 1B 1Y
+     DLY_HC08 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC08 ugate (tplhTY=10ns tplhMX=20ns tphlTY=10ns tphlMX=20ns)

.ENDS  74HC08
*
*
* ----------------------------------------------------------- 74HC09 ------
*  Quad 2-Input And Gates With Open-Drain Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-45 to 2-47
*  bss    2/4/94
*
.SUBCKT 74HC09  1A 1B  1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 and(2) DPWR DGND
+     1A 1B 1Y
+     DLY_HC09 IO_HC_OC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC09 ugate (tplhTY=13ns tplhMX=25ns tphlTY=10ns tphlMX=20ns)

.ENDS  74HC09
*
*
* ----------------------------------------------------------- 74HC10 ------
*  Triple 3-Input Nand Gates
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-49 to 2-51
*  bss    2/4/94
*
.SUBCKT 74HC10  1A 1B 1C 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(3) DPWR DGND
+     1A 1B 1C 1Y
+     DLY_HC10 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC10 ugate (tplhTY=10ns tplhMX=19ns tphlTY=10ns tphlMX=19ns)

.ENDS  74HC10
*
*
* ----------------------------------------------------------- 74HC11 ------
*  Triple 3-Input And Gates
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-53 to 2-55
*  bss    2/4/94
*
.SUBCKT 74HC11  1A 1B 1C 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 and(3) DPWR DGND
+     1A 1B 1C 1Y
+     DLY_HC11 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC11 ugate (tplhTY=10ns tplhMX=20ns tphlTY=10ns tphlMX=20ns)

.ENDS  74HC11
*
*
* ----------------------------------------------------------- 74HC14 ------
*  Hex Schmitt-Trigger Inverters
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-57 to 2-59
*  bss    2/4/94
*
.SUBCKT 74HC14  1A  1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1A  1Y
+     DLY_HC14 IO_HC_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC14 ugate (tplhTY=12ns tplhMX=25ns tphlTY=12ns tphlMX=25ns)

.ENDS  74HC14
*
*
* ----------------------------------------------------------- 74HC20 ------
*  Dual 4-Input Nand Gates
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-61 to 2-63
*  bss    2/4/94
*
.SUBCKT 74HC20  1A 1B 1C 1D 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(4) DPWR DGND
+     1A 1B 1C 1D 1Y
+     DLY_HC20 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC20 ugate (tplhTY=14ns tplhMX=22ns tphlTY=14ns tphlMX=22ns)

.ENDS  74HC20
*
*
* ----------------------------------------------------------- 74HC21 ------
*  Dual 4-Input And Gates
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-65 to 2-67
*  bss    2/4/94
*
.SUBCKT 74HC21  1A 1B 1C 1D 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 and(4) DPWR DGND
+     1A 1B 1C 1D 1Y
+     DLY_HC21 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC21 ugate (tplhTY=14ns tplhMX=22ns tphlTY=14ns tphlMX=22ns)

.ENDS  74HC21
*
*
* ----------------------------------------------------------- 74HC27 ------
*  Triple 3-Input Nor Gates
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-69 to 2-71
*  bss    2/7/94
*
.SUBCKT 74HC27  1A 1B 1C 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nor(3) DPWR DGND
+     1A 1B 1C 1Y
+     DLY_HC27 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC27 ugate (tplhTY=10ns tplhMX=18ns tphlTY=10ns tphlMX=18ns)

.ENDS  74HC27
*
*
* ----------------------------------------------------------- 74HC30 ------
*  8-Input Nand Gates
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-73 to 2-75
*  bss    2/8/94
*
.SUBCKT 74HC30  A B C D E F G H Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nand(8) DPWR DGND
+     A B C D E F G H Y
+     DLY_HC30 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC30 ugate (tplhTY=15ns tplhMX=26ns tphlTY=15ns tphlMX=26ns)

.ENDS  74HC30
*
*
* ----------------------------------------------------------- 74HC32 ------
*  Quad 2-Input Or Gates
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-77 to 2-79
*  bss    2/9/94
*
.SUBCKT 74HC32  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 or(2) DPWR DGND
+     1A 1B 1Y
+     DLY_HC32 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC32 ugate (tplhTY=10ns tplhMX=20ns tphlTY=10ns tphlMX=20ns)

.ENDS  74HC32
*
*
* ----------------------------------------------------------- 74HC36 ------
*  Quad 2-Input Nor Gates
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-85 to 2-87
*  bss    2/9/94
*
.SUBCKT 74HC36  1A 1B 1Y
+     optional: DPWR=$G_DPWR DGND=$G_DGND
+     params: MNTYMXDLY=0 IO_LEVEL=0

U1 nor(2) DPWR DGND
+     1A 1B 1Y
+     DLY_HC36 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC36 ugate (tplhTY=10ns tplhMX=20ns tphlTY=10ns tphlMX=20ns)

.ENDS  74HC36
*
*
* ----------------------------------------------------------- 74HC42 ------
*  4-Line BCD to 10-Line Decimal Decoder
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-89 to 2-92
*  bss    2/10/94
*
.SUBCKT 74HC42  A B C D
+      O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+      optional: DPWR=$G_DPWR DGND=$G_DGND
+      params: MNTYMXDLY=0 IO_LEVEL=0

U1 LOGICEXP (4,10) DPWR DGND
+      A B C D
+      O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O O9_O
+      D0_GATE IO_HC IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     dbar = {~D}
+
+     O0_O = {~(abar & bbar & cbar & dbar)}
+     O1_O = {~(A & bbar & cbar & dbar)}
+     O2_O = {~(abar & B & cbar & dbar)}
+     O3_O = {~(A & B & cbar & dbar)}
+     O4_O = {~(abar & bbar & C & dbar)}
+     O5_O = {~(A & bbar & C & dbar)}
+     O6_O = {~(abar & B & C & dbar)}
+     O7_O = {~(A & B & C & dbar)}
+     O8_O = {~(abar & bbar & cbar & D)}
+     O9_O = {~(A & bbar & cbar & D)}

U2 PINDLY (10,0,0) DPWR DGND
+      O0_O O1_O O2_O O3_O O4_O O5_O O6_O O7_O O8_O O9_O
+      O0 O1 O2 O3 O4 O5 O6 O7 O8 O9
+      IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+      O0 O1 O2 O3 O4 O5 O6 O7 O8 O9 = {
+            DELAY(-1,18ns,30ns)}

.ENDS 74HC42
*
*
* ----------------------------------------------------------- 74HC51 ------
*  And-Or-Invert Gates
*
*  The TTL Logic Data Book, 1988, TI Pages 2-93 to 2-95
*  bss    2/14/94
*
.SUBCKT 74HC51 1A 1B 1C 1D 1E 1F 2A 2B 2C 2D 1Y 2Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 aoi(3,2) DPWR DGND
+    1A 1B 1C
+    1D 1E 1F
+    1Y
+    DLY_HC51 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 aoi(2,2) DPWR DGND
+    2A 2B
+    2C 2D
+    2Y
+    DLY_HC51 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC51 ugate (tplhTY=15ns tplhMX=28ns tphlTY=15ns tphlMX=28ns)

.ENDS 74HC51
*
*
* ----------------------------------------------------------- 74HC73 ------
*  Dual J-K Flip-Flops With Clear
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-97 to 2-99
*  bss    2/23/94
*
.SUBCKT 74HC73 1CLRBAR 1CLK 1J 1K 1Q 1QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     $D_HI 1CLRBAR 1CLK 1J 1K 1Q 1QBAR
+     DLY_HC73 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC73 ueff(tppcqlhTY=16ns tppcqlhMX=31ns tppcqhlTY=16ns
+                   tppcqhlMX=31ns twpclMN=20ns tpclkqlhTY=13ns
+                   tpclkqlhMX=25ns tpclkqhlTY=13ns tpclkqhlMX=25ns
+                   twclklMN=20ns twclkhMN=20ns tsudclkMN=30ns
+                   tsupcclkhMN=30ns)

.ENDS 74HC73
*
*
* ----------------------------------------------------------- 74HC74 ------
*  Dual D-Type Positive Edge Triggered Flip-Flops With  Preset And Clear
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-101 to 2-103
*  bss    2/23/94
*
.SUBCKT 74HC74 1PREBAR 1CLRBAR 1CLK 1D 1Q 1QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 DFF(1) DPWR DGND
+     1PREBAR 1CLRBAR 1CLK 1D 1Q 1QBAR
+     DLY_HC74 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC74 ueff(tppcqlhTY=20ns tppcqlhMX=46ns tppcqhlTY=20ns
+                 tppcqhlMX=46ns twpclMN=25ns
+                 tpclkqlhTY=20ns tpclkqlhMX=35ns tpclkqhlTY=20ns
+                 tpclkqhlMX=35ns twclkhMN=20ns twclklMN=20ns
+                 tsudclkMN=25ns tsupcclkhMN=6ns)

.ENDS 74HC74
*
*
* ----------------------------------------------------------- 74HC75 ------
*  4 Bit Bistable Latches
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-109 to 2-111
*  bss    2/24/94
*
.SUBCKT 74HC75 C 1D 2D 1Q 1QBAR 2Q 2QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 DLTCH(2) DPWR DGND
+     $D_HI $D_HI C 1D 2D 1Q 2Q 1QBAR 2QBAR
+     DLY_HC75 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC75 ugff (twghMN=20ns tsudgMN=25ns thdgMN=5ns
+                             tpgqlhTY=15ns tpgqlhMX=26ns tpgqhlTY=15ns
+                             tpgqhlMX=26ns tpdqlhTY=14ns tpdqlhMX=24ns
+                             tpdqhlTY=14ns tpdqhlMX=24ns)

.ENDS 74HC75
*
*
* ----------------------------------------------------------- 74HC76 ------
*  Dual J-K Flip-Flops With Clear
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-113 to 2-116
*  bss    2/24/94
*
.SUBCKT 74HC76 1PREBAR 1CLRBAR 1CLK 1J 1K 1Q 1QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     1PREBAR 1CLRBAR 1CLK 1J 1K 1Q 1QBAR
+     DLY_HC76 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC76 ueff(tppcqlhTY=16ns tppcqlhMX=31ns tppcqhlTY=16ns
+                   tppcqhlMX=31ns twpclMN=25ns tpclkqlhTY=19ns
+                   tpclkqlhMX=29ns tpclkqhlTY=19ns tpclkqhlMX=29ns
+                   twclklMN=20ns twclkhMN=20ns tsudclkMN=38ns
+                   tsupcclkhMN=25ns)

.ENDS 74HC76
*
*
* ----------------------------------------------------------- 74HC78 ------
*  Dual J-K Flip-Flops With Clear With Preset, Common Clock, And Common Clear
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-121 to 2-123
*  bss    2/24/94
*
.SUBCKT 74HC78 CLRBAR CLK 1PREBAR 1J 1K 2PREBAR 2J 2K 1Q 1QBAR 2Q 2QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     1PREBAR CLRBAR CLK 1J 1K 1Q 1QBAR
+     DLY_HC78 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     2PREBAR CLRBAR CLK 2J 2K 2Q 2QBAR
+     DLY_HC78 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC78 ueff(tppcqlhTY=16ns tppcqlhMX=31ns tppcqhlTY=16ns
+                   tppcqhlMX=31ns twpclMN=20ns tpclkqlhTY=13ns
+                   tpclkqlhMX=25ns tpclkqhlTY=13ns tpclkqhlMX=25ns
+                   twclklMN=20ns twclkhMN=20ns tsudclkMN=30ns
+                   tsupcclkhMN=30ns)

.ENDS 74HC78
*
*
* ----------------------------------------------------------- 74HC85A ------
*  4-Bit Magnitude Comparators
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-125 to 2-128
*  bss    2/25/94
*
.SUBCKT 74HC85A A0 A1 A2 A3 ALTBI AEQBI AGTBI B0 B1 B2 B3 ALTBO AEQBO AGTBO
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(11,3) DPWR DGND
+     A0 A1 A2 A3 ALTBI AEQBI AGTBI B0 B1 B2 B3
+     ALTBO_O AEQBO_O AGTBO_O
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     nand3 = {~(A3 & B3)}
+     nand2 = {~(A2 & B2)}
+     nand1 = {~(A1 & B1)}
+     nand0 = {~(A0 & B0)}
+     nor3 = {~((A3 & nand3) | (B3 & nand3))}
+     nor2 = {~((A2 & nand2) | (B2 & nand2))}
+     nor1 = {~((A1 & nand1) | (B1 & nand1))}
+     nor0 = {~((A0 & nand0) | (B0 & nand0))}
+     AGTBO_O = {~((B3 & nand3) | (B2 & nand2 & nor3) | (B1 & nand1 & nor3 & nor2) |
+          (B0 & nand0 & nor3 & nor2 & nor1) | (nor3 & nor2 & nor1 & nor0 & ALTBI) |
+          (nor3 & nor2 & nor1 & nor0 & AEQBI))}
+     AEQBO_O = {nor3 & nor2 & AEQBI & nor1 & nor0}
+     ALTBO_O = {~((A3 & nand3) | (A2 & nand2 & nor3) | (A1 & nand1 & nor3 & nor2) |
+          (A0 & nand0 & nor3 & nor2 & nor1) | (nor3 & nor2 & nor1 & nor0 & AGTBI) |
+          (nor3 & nor2 & nor1 & nor0 & AEQBI))}

U2DLY PINDLY(3,0,11) DPWR DGND
+     ALTBO_O AEQBO_O AGTBO_O
+     A0 A1 A2 A3 ALTBI AEQBI AGTBI B0 B1 B2 B3
+     ALTBO AEQBO AGTBO
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     DATA = {CHANGED(A0,0) | CHANGED(A1,0) | CHANGED(A2,0) | CHANGED(A3,0) |
+                 CHANGED(B0,0) | CHANGED(B1,0) | CHANGED(B2,0) | CHANGED(B3,0)}
+     LTHAN = {CHANGED(ALTBI,0)}
+     GTHAN = {CHANGED(AGTBI,0)}
+     EQUAL = {CHANGED(AEQBI,0)}
+
+  PINDLY:
+     AEQBO = {
+        CASE(
+           DATA, DELAY(-1,22ns,40ns),
+           EQUAL, DELAY(-1,17ns,29ns),
+           DELAY(-1,23ns,41ns))}
+
+     ALTBO = {
+        CASE(
+           DATA, DELAY(-1,26ns,46ns),
+           (GTHAN | EQUAL), DELAY(-1,24ns,41ns),
+           DELAY(-1,27ns,47ns))}
+
+     AGTBO = {
+        CASE(
+           DATA, DELAY(-1,26ns,46ns),
+           (LTHAN | EQUAL), DELAY(-1,21ns,41ns),
+           DELAY(-1,27ns,47ns))}

.ENDS 74HC85A
*
*
* ----------------------------------------------------------- 74HC86 ------
*  Quad 2-Input Exclusive-Or Gates
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-129 to 2-131
*  bss    2/25/94
*
.SUBCKT 74HC86 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 xor DPWR DGND
+     1A 1B 1Y
+     DLY_HC86 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC86 ugate (tplhTY=12ns tplhMX=20ns tphlTY=12ns tphlMX=20ns)

.ENDS 74HC86
*
*
* ----------------------------------------------------------- 74HC93 ------
*  4-Bit Binary Ripple Counter
*
*  The High-speed CMOS Logic Family Data Book, 1994, Philips Pages 211 - 215
*  bss    2/28/94
*
.SUBCKT 74HC93 MR1 MR2 CP0BAR CP1BAR Q0 Q1 Q2 Q3
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     $D_HI NAND0 CP0BAR $D_HI $D_HI Q0_O $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     $D_HI NAND0 CP1BAR $D_HI $D_HI Q1_O $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U3 JKFF(1) DPWR DGND
+     $D_HI NAND0 Q1_O $D_HI $D_HI Q2_O $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U4 JKFF(1) DPWR DGND
+     $D_HI NAND0 Q2_O $D_HI $D_HI Q3_O $D_NC
+     D0_EFF IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U5 nand(2) DPWR DGND
+     MR1 MR2 NAND0
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U6DLY PINDLY(4,0,3) DPWR DGND
+     Q0_O Q1_O Q2_O Q3_O
+     CP0BAR CP1BAR NAND0
+     Q0 Q1 Q2 Q3
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     CHA = {CHANGED_HL(CP0BAR,0)}
+     CHB = {CHANGED_HL(CP1BAR,0)}
+     SETTO0 = {CHANGED_HL(NAND0,0)}
+
+  PINDLY:
+     Q0 = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,18ns,31ns),
+         CHA, DELAY(-1,15ns,25ns),
+         DELAY(-1,19ns,32ns))}
+
+     Q1 = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,18ns,31ns),
+         CHB, DELAY(-1,16ns,27ns),
+         DELAY(-1,19ns,32ns))}
+
+     Q2 = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,18ns,31ns),
+         CHB, DELAY(-1,22ns,37ns),
+         DELAY(-1,23ns,38ns))}
+
+     Q3 = {
+       CASE(
+         SETTO0 & TRN_HL, DELAY(-1,18ns,31ns),
+         CHB, DELAY(-1,29ns,49ns),
+         DELAY(-1,30ns,50ns))}

U7CON CONSTRAINT(5) DPWR DGND
+     MR1 MR2 CP0BAR CP1BAR NAND0
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  FREQ:
+     NODE=CP0BAR
+     MAXFREQ=24MEG
+
+  FREQ:
+     NODE=CP1BAR
+     MAXFREQ=24MEG
+
+  WIDTH:
+     NODE=CP0BAR
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=CP1BAR
+     MIN_HI=20ns
+     MIN_LO=20ns
+
+  WIDTH:
+     NODE=MR1
+     MIN_HI=20ns
+
+  WIDTH:
+     NODE=MR2
+     MIN_HI=20ns
+
+  SETUP_HOLD:
+  CLOCK HL = CP0BAR
+  DATA(1) = NAND0
+  SETUPTIME_HI = 13ns
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 13ns"
+
+  SETUP_HOLD:
+  CLOCK HL = CP1BAR
+  DATA(1) = NAND0
+  SETUPTIME_HI = 13ns
+  MESSAGE = "SETUP ERROR - R01 R02 SETUP < 13ns"

.ENDS 74HC93
*
*
* ----------------------------------------------------------- 74HC107 ------
*  Dual J-K Negative Edge-Triggered Flip-Flops With Clear
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-133 to 2-136
*  bss    3/4/94
*
.SUBCKT 74HC107 1CLRBAR 1CLK 1J 1K 1Q 1QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     $D_HI 1CLRBAR 1CLK 1J 1K 1Q 1QBAR
+     DLY_HC107 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC107 ueff(tppcqlhTY=25ns tppcqlhMX=31ns tppcqhlTY=25ns
+                   tppcqhlMX=31ns twpclMN=25ns tpclkqlhTY=20ns
+                   tpclkqlhMX=25ns tpclkqhlTY=20ns tpclkqhlMX=25ns
+                   twclklMN=20ns twclkhMN=20ns tsudclkMN=25ns
+                   tsupcclkhMN=25ns)

.ENDS 74HC107
*
*
* ----------------------------------------------------------- 74HC109 ------
*  Dual J-K Positive Edge-Triggered Flip-Flops With Clear And Preset
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-137 to 2-140
*  bss    3/7/94
*
.SUBCKT 74HC109 1PREBAR 1CLRBAR 1CLK 1J 1KBAR 1Q 1QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inva(2) DPWR DGND
+     1CLK 1KBAR CLKBAR 1K
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     1PREBAR 1CLRBAR CLKBAR 1J 1K 1Q 1QBAR
+     DLY_HC109 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC109 ueff (tppcqlhTY=15ns tppcqlhMX=46ns tppcqhlTY=15ns
+                                tppcqhlMX=46ns tpclkqlhTY=15ns tpclkqlhMX=35ns
+                                tpclkqhlTY=15ns tpclkqhlMX=35ns twclklMN=20ns twclkhMN=20ns
+                                twpclMN=25ns tsudclkMN=25ns tsupcclkhMN=6ns)

.ENDS 74HC109
*
*
* ----------------------------------------------------------- 74HC112 ------
*  Dual Negative Edge-Triggered J-K Flip-Flop With Clear And Preset
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-141 to 2-144
*  bss    3/9/94
*
.SUBCKT 74HC112 1PREBAR 1CLRBAR 1CLK 1J 1K 1Q 1QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     1PREBAR 1CLRBAR 1CLK 1J 1K 1Q 1QBAR
+     DLY_HC112 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC112 ueff (tppcqlhTY=16ns tppcqlhMX=33ns
+                              tppcqhlTY=16ns tppcqhlMX=33ns
+                              tpclkqlhTY=16ns tpclkqlhMX=25ns
+                              tpclkqhlTY=16ns tpclkqhlMX=25ns
+                              twpclMN=25ns twclklMN=25ns twclkhMN=25ns
+                              tsudclkMN=25ns tsupcclkhMN=25ns)

.ENDS 74HC112
*
*
* ----------------------------------------------------------- 74HC113 ------
*  Dual Negative Edge-Triggered J-K Flip-Flop With Preset
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-145 to 2-148
*  bss    3/9/94
*
.SUBCKT 74HC113 1PREBAR 1CLK 1J 1K 1Q 1QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     1PREBAR $D_HI 1CLK 1J 1K 1Q 1QBAR
+     DLY_HC113 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC113 ueff (tppcqlhTY=18ns tppcqlhMX=33ns
+                              tppcqhlTY=18ns tppcqhlMX=33ns
+                              tpclkqlhTY=19ns tpclkqlhMX=28ns
+                              tpclkqhlTY=19ns tpclkqhlMX=28ns
+                              twpclMN=25ns twclklMN=20ns twclkhMN=20ns
+                              tsudclkMN=25ns tsupcclkhMN=6ns)

.ENDS 74HC113
*
*
* ----------------------------------------------------------- 74HC114 ------
*  Dual Negative Edge-Triggered J-K Flip-Flops With Preset, Common Clear And Clock
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-149 to 2-152
*  bss    3/10/94
*
.SUBCKT 74HC114 CLRBAR CLK 1PREBAR 1J 1K 2PREBAR 2J 2K 1Q 1QBAR 2Q 2QBAR
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 JKFF(1) DPWR DGND
+     1PREBAR CLRBAR CLK 1J 1K 1Q 1QBAR
+     DLY_HC114 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 JKFF(1) DPWR DGND
+     2PREBAR CLRBAR CLK 2J 2K 2Q 2QBAR
+     DLY_HC114 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC114 ueff (tppcqlhTY=20ns tppcqlhMX=35ns tppcqhlTY=20ns
+                               tppcqhlMX=35ns tpclkqlhTY=19ns tpclkqlhMX=35ns
+                               tpclkqhlTY=19ns tpclkqhlMX=35ns twpclMN=25ns
+                               twclklMN=25ns twclkhMN=25ns tsudclkMN=25ns tsupcclkhMN=25ns)

.ENDS 74HC114
*
*
* ----------------------------------------------------------- 74HC125 ------
*  Quad Bus Buffers With 3-State Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-153 to 2-157
*  bss    3/11/94
*
.SUBCKT 74HC125 1A 1GBAR 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 inv DPWR DGND
+     1GBAR 1G
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2 buf3 DPWR DGND
+     1A 1G 1Y
+     DLY_HC125 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC125 utgate (tplhTY=14ns tplhMX=24ns tphlTY=14ns tphlMX=24ns
+                               tplzTY=15ns tplzMX=24ns tphzTY=15ns tphzMX=24ns
+                               tpzlTY=14ns tpzlMX=24ns tpzhTY=14ns tpzhMX=24ns)

.ENDS 74HC125
*
*
* ----------------------------------------------------------- 74HC126 ------
*  Quad Bus Buffers With 3-State Outputs
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-153 to 2-157
*  bss    3/11/94
*
.SUBCKT 74HC126 1A 1G 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 buf3 DPWR DGND
+     1A 1G 1Y
+     DLY_HC126 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC126 utgate (tplhTY=14ns tplhMX=24ns tphlTY=14ns tphlMX=24ns
+                               tplzTY=17ns tplzMX=24ns tphzTY=17ns tphzMX=24ns
+                               tpzlTY=16ns tpzlMX=24ns tpzhTY=16ns tpzhMX=24ns)

.ENDS 74HC126
*
*
* ----------------------------------------------------------- 74HC132 ------
*  Quad 2-Input Nand Schmitt Triggers
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-159 to 2-161
*  bss    3/15/94
*
.SUBCKT 74HC132 1A 1B 1Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nand(2) DPWR DGND
+     1A 1B 1Y
+     DLY_HC132 IO_HC_ST MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC132 ugate (tplhTY=18ns tplhMX=25ns tphlTY=18ns tphlMX=25ns)

.ENDS 74HC132
*
*
* ----------------------------------------------------------- 74HC133 ------
*  13-Input Nand Gates
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-163 to 2-165
*  bss    3/15/94
*
.SUBCKT 74HC133 A B C D E F G H I J K L M Y
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nand(13) DPWR DGND
+     A B C D E F G H I J K L M Y
+     DLY_HC133 IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

.model DLY_HC133 ugate (tplhTY=16ns tplhMX=30ns tphlTY=16ns tphlMX=30ns)

.ENDS 74HC133
*
*
* ----------------------------------------------------------- 74HC137 ------
*  3-Line To 8-Line Decoders/Demultiplexers With Address Latches
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-167 to 2-170
*  bss    3/16/94
*
.SUBCKT 74HC137 GLBAR A B C G1 G2BAR Y0 Y1 Y2 Y3 Y4 Y5 Y6 Y7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1 nora(2,6) DPWR DGND
+     ANDA1 NORA2 ANDA2 NORA1 ANDB1 NORB2 ANDB2 NORB1
+     ANDC1 NORC2 ANDC2 NORC1
+     NORA1 NORA2 NORB1 NORB2 NORC1 NORC2
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}

U2LOG LOGICEXP(12,14) DPWR DGND
+     GLBAR A B C G1 G2BAR NORA1 NORA2 NORB1 NORB2 NORC1 NORC2
+     Y0_O Y1_O Y2_O Y3_O Y4_O Y5_O Y6_O Y7_O ANDA1 ANDA2 ANDB1 ANDB2
+     ANDC1 ANDC2
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     gl = {~GLBAR}
+     enout = {~(G2BAR | (~G1))}
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     ANDA1 = {abar & gl}
+     ANDA2 = {A & gl}
+     ANDB1 = {bbar & gl}
+     ANDB2 = {B & gl}
+     ANDC1 = {cbar & gl}
+     ANDC2 = {C & gl}
+     Y0_O = {~(NORA2 & NORB2 & NORC2 & enout)}
+     Y1_O = {~(NORA1 & NORB2 & NORC2 & enout)}
+     Y2_O = {~(NORA2 & NORB1 & NORC2 & enout)}
+     Y3_O = {~(NORA1 & NORB1 & NORC2 & enout)}
+     Y4_O = {~(NORA2 & NORB2 & NORC1 & enout)}
+     Y5_O = {~(NORA1 & NORB2 & NORC1 & enout)}
+     Y6_O = {~(NORA2 & NORB1 & NORC1 & enout)}
+     Y7_O = {~(NORA1 & NORB1 & NORC1 & enout)}

U3DLY PINDLY(8,0,6) DPWR DGND
+     Y0_O Y1_O Y2_O Y3_O Y4_O Y5_O Y6_O Y7_O
+     GLBAR A B C G1 G2BAR
+     Y0 Y1 Y2 Y3 Y4 Y5 Y6 Y7
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     IN = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0)}
+     GLEN = {CHANGED(GLBAR,0)}
+     G1EN = {CHANGED(G1,0)}
+     G2EN = {CHANGED(G2BAR,0)}
+
+  PINDLY:
+     Y0 Y1 Y2 Y3 Y4 Y5 Y6 Y7 = {
+        CASE(
+          GLEN, DELAY(-1,22ns,38ns),
+          IN, DELAY(-1,23ns,38ns),
+          G1EN, DELAY(-1,17ns,29ns),
+          G2EN, DELAY(-1,17ns,29ns),
+          DELAY(-1,24ns,39ns))}

U4CON CONSTRAINT(4) DPWR DGND
+     GLBAR A B C
+     IO_HC IO_LEVEL={IO_LEVEL}
+
+  WIDTH:
+     NODE=GLBAR
+     MIN_LO=20ns
+
+  SETUP_HOLD:
+     CLOCK LH=GLBAR
+     DATA(3)=A B C
+     SETUPTIME=19ns
+     HOLDTIME=5ns

.ENDS 74HC137
*
*
* ----------------------------------------------------------- 74HC138 ------
*  3-Line To 8-Line Decoder/Demultiplexer
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-175 to 2-178
*  bss    3/16/94
*
.SUBCKT 74HC138 A B C G1 G2ABAR G2BBAR Y0 Y1 Y2 Y3 Y4 Y5 Y6 Y7
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(6,8) DPWR DGND
+     A B C G1 G2ABAR G2BBAR
+     Y0_O Y1_O Y2_O Y3_O Y4_O Y5_O Y6_O Y7_O
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     abar = {~A}
+     bbar = {~B}
+     cbar = {~C}
+     enable = {(~G2ABAR) & (~G2BBAR) & G1}
+     Y0_O = {~(abar & bbar & cbar & enable)}
+     Y1_O = {~(A & bbar & cbar & enable)}
+     Y2_O = {~(abar & B & cbar & enable)}
+     Y3_O = {~(A & B & cbar & enable)}
+     Y4_O = {~(abar & bbar & C & enable)}
+     Y5_O = {~(A & bbar & C & enable)}
+     Y6_O = {~(abar & B & C & enable)}
+     Y7_O = {~(A & B & C & enable)}

U2DLY PINDLY(8,0,6) DPWR DGND
+     Y0_O Y1_O Y2_O Y3_O Y4_O Y5_O Y6_O Y7_O
+     A B C G1 G2ABAR G2BBAR
+     Y0 Y1 Y2 Y3 Y4 Y5 Y6 Y7
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     IN = {CHANGED(A,0) | CHANGED(B,0) | CHANGED(C,0)}
+     EN = {CHANGED(G2ABAR,0) | CHANGED(G2BBAR,0) | CHANGED(G1,0)}
+
+  PINDLY:
+     Y0 Y1 Y2 Y3 Y4 Y5 Y6 Y7 = {
+       CASE(
+          EN, DELAY(-1,18ns,31ns),
+          IN, DELAY(-1,18ns,36ns),
+          DELAY(-1,19ns,37ns))}

.ENDS 74HC138
*
*
* ----------------------------------------------------------- 74HC139 ------
*  Dual 2-Line To 4-Line Decoder/Demultiplexer
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-183 to 2-186
*  bss    3/17/94
*
.SUBCKT 74HC139 1A 1B 1GB 1Y0 1Y1 1Y2 1Y3
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(3,4) DPWR DGND
+     1A 1B 1GB
+     1Y0_O 1Y1_O 1Y2_O 1Y3_O
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     1g = {~1GB}
+     abar = {~1A}
+     bbar = {~1B}
+     1Y0_O = {~(abar & bbar & 1g)}
+     1Y1_O = {~(1A & bbar & 1g)}
+     1Y2_O = {~(abar & 1B & 1g)}
+     1Y3_O = {~(1A & 1B & 1g)}

U2DLY PINDLY(4,0,3) DPWR DGND
+     1Y0_O 1Y1_O 1Y2_O 1Y3_O
+     1A 1B 1GB
+     1Y0 1Y1 1Y2 1Y3
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     IN = {CHANGED(1A,0) | CHANGED(1B,0)}
+     ENABLE = {CHANGED(1GB,0)}
+
+  PINDLY:
+     1Y0 1Y1 1Y2 1Y3 = {
+       CASE(
+          ENABLE, DELAY(-1,11ns,35ns),
+          IN, DELAY(-1,14ns,35ns),
+          DELAY(-1,15ns,36ns))}

.ENDS 74HC139
*
*
* ----------------------------------------------------------- 74HC147 ------
*  10-Line To 4-Line Priority Encoders
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-191 to 2-196
*  bss    3/18/94
*
.SUBCKT 74HC147 I1 I2 I3 I4 I5 I6 I7 I8 I9 A B C D
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,4) DPWR DGND
+     I1 I2 I3 I4 I5 I6 I7 I8 I9
+     A_O B_O C_O D_O
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     i1bar = {~I1}
+     i2bar = {~I2}
+     i3bar = {~I3}
+     i4bar = {~I4}
+     i5bar = {~I5}
+     i6bar = {~I6}
+     i7bar = {~I7}
+     i8bar = {~I8}
+     i9bar = {~I9}
+     nor89 = {~(i8bar | i9bar)}
+     A_O = {~((i1bar & I2 & I4 & I6 & nor89) | (i3bar & I4 & I6 & nor89) | (i5bar & I6 & nor89) |
+                (i7bar & nor89) | i9bar)}
+     B_O = {~((i2bar & I4 & I5 & nor89) | (i3bar & I4 & I5 & nor89) | (i6bar & nor89) |
+                (i7bar & nor89))}
+     C_O = {~((i4bar & nor89) | (i5bar & nor89) | (i6bar & nor89) | (i7bar & nor89))}
+     D_O = {~(i8bar | i9bar)}

U2DLY PINDLY(4,0,9) DPWR DGND
+     A_O B_O C_O D_O
+     I1 I2 I3 I4 I5 I6 I7 I8 I9
+     A B C D
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  PINDLY:
+     A B C D = {
+       CASE(
+         DELAY(-1,25ns,38ns))}

.ENDS 74HC147
*
*
* ----------------------------------------------------------- 74HC148 ------
*  8-Line To 3-Line Priority Encoder
*
*  The High-Speed CMOS Logic Data Book, 1989, TI Pages 2-191 to 2-196
*  bss    3/22/94
*
.SUBCKT 74HC148 I0 I1 I2 I3 I4 I5 I6 I7 EI A0 A1 A2 EO GS
+     optional:  DPWR=$G_DPWR DGND=$G_DGND
+     params:  MNTYMXDLY=0 IO_LEVEL=0

U1LOG LOGICEXP(9,5) DPWR DGND
+     I0 I1 I2 I3 I4 I5 I6 I7 EI
+     A0_O A1_O A2_O EO_O GS_O
+     D0_GATE IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  LOGIC:
+     i1bar = {~I1}
+     i2bar = {~I2}
+     i3bar = {~I3}
+     i4bar = {~I4}
+     i5bar = {~I5}
+     i6bar = {~I6}
+     i7bar = {~I7}
+     eibar = {~EI}
+     EO_O = {~(I0 & I1 & I2 & I3 & I4 & I5 & I6 & I7 & eibar)}
+     GS_O = {~(EO_O & eibar)}
+     A0_O = {~((i1bar & I2 & I4 & I6 & eibar) | (i3bar & I4 & I6 & eibar) | (i5bar & I6 & eibar) |
+                  (i7bar & eibar))}
+     A1_O = {~((i2bar & I4 & I5 & eibar) | (i3bar & I4 & I5 & eibar) | (i6bar & eibar) |
+                  (i7bar & eibar))}
+     A2_O = {~((i4bar & eibar) | (i5bar & eibar) | (i6bar & eibar) | (i7bar & eibar))}

U2DLY PINDLY(5,0,9) DPWR DGND
+     A0_O A1_O A2_O EO_O GS_O
+     I0 I1 I2 I3 I4 I5 I6 I7 EI
+     A0 A1 A2 EO GS
+     IO_HC MNTYMXDLY={MNTYMXDLY} IO_LEVEL={IO_LEVEL}
+
+  BOOLEAN:
+     ENABLE = {CHANGED(EI,0)}
+     DATA = {CHANGED(I0,0) | CHANGED(I1,0) | CHANGED(I2,0) | CHANGED(I3,0) |
+                 CHANGED(I4,0) | CHANGED(I5,0) | CHANGED(I6,0) | CHANGED(I7,0)}
+
+  PINDLY:
+     A0 A1 A2 = {
+       CASE(
+         ENABLE, DELAY(-1,26ns,39ns),
+         DATA, DELAY(-1,23ns,36ns),
+         DELAY(-1,27ns,40ns))}
+
+     GS = {
+       CASE(
+         ENABLE, DELAY(-1,19ns,29ns),
+         DATA, DELAY(-1,25ns,38ns),
+         DELAY(-1,26ns,39ns))}
+
+     EO = {
+       CASE(
+         ENABLE, DELAY(-1,22ns,33ns),
+         DATA, DELAY(-1,20ns,30ns),
+         DELAY(-1,23ns,34ns))}

.ENDS 74HC148
*
*
